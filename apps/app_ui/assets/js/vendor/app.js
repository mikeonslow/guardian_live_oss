
(function() {
'use strict';

function F2(fun)
{
  function wrapper(a) { return function(b) { return fun(a,b); }; }
  wrapper.arity = 2;
  wrapper.func = fun;
  return wrapper;
}

function F3(fun)
{
  function wrapper(a) {
    return function(b) { return function(c) { return fun(a, b, c); }; };
  }
  wrapper.arity = 3;
  wrapper.func = fun;
  return wrapper;
}

function F4(fun)
{
  function wrapper(a) { return function(b) { return function(c) {
    return function(d) { return fun(a, b, c, d); }; }; };
  }
  wrapper.arity = 4;
  wrapper.func = fun;
  return wrapper;
}

function F5(fun)
{
  function wrapper(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };
  }
  wrapper.arity = 5;
  wrapper.func = fun;
  return wrapper;
}

function F6(fun)
{
  function wrapper(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return fun(a, b, c, d, e, f); }; }; }; }; };
  }
  wrapper.arity = 6;
  wrapper.func = fun;
  return wrapper;
}

function F7(fun)
{
  function wrapper(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };
  }
  wrapper.arity = 7;
  wrapper.func = fun;
  return wrapper;
}

function F8(fun)
{
  function wrapper(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) {
    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };
  }
  wrapper.arity = 8;
  wrapper.func = fun;
  return wrapper;
}

function F9(fun)
{
  function wrapper(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) { return function(i) {
    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };
  }
  wrapper.arity = 9;
  wrapper.func = fun;
  return wrapper;
}

function A2(fun, a, b)
{
  return fun.arity === 2
    ? fun.func(a, b)
    : fun(a)(b);
}
function A3(fun, a, b, c)
{
  return fun.arity === 3
    ? fun.func(a, b, c)
    : fun(a)(b)(c);
}
function A4(fun, a, b, c, d)
{
  return fun.arity === 4
    ? fun.func(a, b, c, d)
    : fun(a)(b)(c)(d);
}
function A5(fun, a, b, c, d, e)
{
  return fun.arity === 5
    ? fun.func(a, b, c, d, e)
    : fun(a)(b)(c)(d)(e);
}
function A6(fun, a, b, c, d, e, f)
{
  return fun.arity === 6
    ? fun.func(a, b, c, d, e, f)
    : fun(a)(b)(c)(d)(e)(f);
}
function A7(fun, a, b, c, d, e, f, g)
{
  return fun.arity === 7
    ? fun.func(a, b, c, d, e, f, g)
    : fun(a)(b)(c)(d)(e)(f)(g);
}
function A8(fun, a, b, c, d, e, f, g, h)
{
  return fun.arity === 8
    ? fun.func(a, b, c, d, e, f, g, h)
    : fun(a)(b)(c)(d)(e)(f)(g)(h);
}
function A9(fun, a, b, c, d, e, f, g, h, i)
{
  return fun.arity === 9
    ? fun.func(a, b, c, d, e, f, g, h, i)
    : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);
}

//import Native.Utils //

var _elm_lang$core$Native_Basics = function() {

function div(a, b)
{
	return (a / b) | 0;
}
function rem(a, b)
{
	return a % b;
}
function mod(a, b)
{
	if (b === 0)
	{
		throw new Error('Cannot perform mod 0. Division by zero error.');
	}
	var r = a % b;
	var m = a === 0 ? 0 : (b > 0 ? (a >= 0 ? r : r + b) : -mod(-a, -b));

	return m === b ? 0 : m;
}
function logBase(base, n)
{
	return Math.log(n) / Math.log(base);
}
function negate(n)
{
	return -n;
}
function abs(n)
{
	return n < 0 ? -n : n;
}

function min(a, b)
{
	return _elm_lang$core$Native_Utils.cmp(a, b) < 0 ? a : b;
}
function max(a, b)
{
	return _elm_lang$core$Native_Utils.cmp(a, b) > 0 ? a : b;
}
function clamp(lo, hi, n)
{
	return _elm_lang$core$Native_Utils.cmp(n, lo) < 0
		? lo
		: _elm_lang$core$Native_Utils.cmp(n, hi) > 0
			? hi
			: n;
}

var ord = ['LT', 'EQ', 'GT'];

function compare(x, y)
{
	return { ctor: ord[_elm_lang$core$Native_Utils.cmp(x, y) + 1] };
}

function xor(a, b)
{
	return a !== b;
}
function not(b)
{
	return !b;
}
function isInfinite(n)
{
	return n === Infinity || n === -Infinity;
}

function truncate(n)
{
	return n | 0;
}

function degrees(d)
{
	return d * Math.PI / 180;
}
function turns(t)
{
	return 2 * Math.PI * t;
}
function fromPolar(point)
{
	var r = point._0;
	var t = point._1;
	return _elm_lang$core$Native_Utils.Tuple2(r * Math.cos(t), r * Math.sin(t));
}
function toPolar(point)
{
	var x = point._0;
	var y = point._1;
	return _elm_lang$core$Native_Utils.Tuple2(Math.sqrt(x * x + y * y), Math.atan2(y, x));
}

return {
	div: F2(div),
	rem: F2(rem),
	mod: F2(mod),

	pi: Math.PI,
	e: Math.E,
	cos: Math.cos,
	sin: Math.sin,
	tan: Math.tan,
	acos: Math.acos,
	asin: Math.asin,
	atan: Math.atan,
	atan2: F2(Math.atan2),

	degrees: degrees,
	turns: turns,
	fromPolar: fromPolar,
	toPolar: toPolar,

	sqrt: Math.sqrt,
	logBase: F2(logBase),
	negate: negate,
	abs: abs,
	min: F2(min),
	max: F2(max),
	clamp: F3(clamp),
	compare: F2(compare),

	xor: F2(xor),
	not: not,

	truncate: truncate,
	ceiling: Math.ceil,
	floor: Math.floor,
	round: Math.round,
	toFloat: function(x) { return x; },
	isNaN: isNaN,
	isInfinite: isInfinite
};

}();
//import //

var _elm_lang$core$Native_Utils = function() {

// COMPARISONS

function eq(x, y)
{
	var stack = [];
	var isEqual = eqHelp(x, y, 0, stack);
	var pair;
	while (isEqual && (pair = stack.pop()))
	{
		isEqual = eqHelp(pair.x, pair.y, 0, stack);
	}
	return isEqual;
}


function eqHelp(x, y, depth, stack)
{
	if (depth > 100)
	{
		stack.push({ x: x, y: y });
		return true;
	}

	if (x === y)
	{
		return true;
	}

	if (typeof x !== 'object')
	{
		if (typeof x === 'function')
		{
			throw new Error(
				'Trying to use `(==)` on functions. There is no way to know if functions are "the same" in the Elm sense.'
				+ ' Read more about this at http://package.elm-lang.org/packages/elm-lang/core/latest/Basics#=='
				+ ' which describes why it is this way and what the better version will look like.'
			);
		}
		return false;
	}

	if (x === null || y === null)
	{
		return false
	}

	if (x instanceof Date)
	{
		return x.getTime() === y.getTime();
	}

	if (!('ctor' in x))
	{
		for (var key in x)
		{
			if (!eqHelp(x[key], y[key], depth + 1, stack))
			{
				return false;
			}
		}
		return true;
	}

	// convert Dicts and Sets to lists
	if (x.ctor === 'RBNode_elm_builtin' || x.ctor === 'RBEmpty_elm_builtin')
	{
		x = _elm_lang$core$Dict$toList(x);
		y = _elm_lang$core$Dict$toList(y);
	}
	if (x.ctor === 'Set_elm_builtin')
	{
		x = _elm_lang$core$Set$toList(x);
		y = _elm_lang$core$Set$toList(y);
	}

	// check if lists are equal without recursion
	if (x.ctor === '::')
	{
		var a = x;
		var b = y;
		while (a.ctor === '::' && b.ctor === '::')
		{
			if (!eqHelp(a._0, b._0, depth + 1, stack))
			{
				return false;
			}
			a = a._1;
			b = b._1;
		}
		return a.ctor === b.ctor;
	}

	// check if Arrays are equal
	if (x.ctor === '_Array')
	{
		var xs = _elm_lang$core$Native_Array.toJSArray(x);
		var ys = _elm_lang$core$Native_Array.toJSArray(y);
		if (xs.length !== ys.length)
		{
			return false;
		}
		for (var i = 0; i < xs.length; i++)
		{
			if (!eqHelp(xs[i], ys[i], depth + 1, stack))
			{
				return false;
			}
		}
		return true;
	}

	if (!eqHelp(x.ctor, y.ctor, depth + 1, stack))
	{
		return false;
	}

	for (var key in x)
	{
		if (!eqHelp(x[key], y[key], depth + 1, stack))
		{
			return false;
		}
	}
	return true;
}

// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on
// the particular integer values assigned to LT, EQ, and GT.

var LT = -1, EQ = 0, GT = 1;

function cmp(x, y)
{
	if (typeof x !== 'object')
	{
		return x === y ? EQ : x < y ? LT : GT;
	}

	if (x instanceof String)
	{
		var a = x.valueOf();
		var b = y.valueOf();
		return a === b ? EQ : a < b ? LT : GT;
	}

	if (x.ctor === '::' || x.ctor === '[]')
	{
		while (x.ctor === '::' && y.ctor === '::')
		{
			var ord = cmp(x._0, y._0);
			if (ord !== EQ)
			{
				return ord;
			}
			x = x._1;
			y = y._1;
		}
		return x.ctor === y.ctor ? EQ : x.ctor === '[]' ? LT : GT;
	}

	if (x.ctor.slice(0, 6) === '_Tuple')
	{
		var ord;
		var n = x.ctor.slice(6) - 0;
		var err = 'cannot compare tuples with more than 6 elements.';
		if (n === 0) return EQ;
		if (n >= 1) { ord = cmp(x._0, y._0); if (ord !== EQ) return ord;
		if (n >= 2) { ord = cmp(x._1, y._1); if (ord !== EQ) return ord;
		if (n >= 3) { ord = cmp(x._2, y._2); if (ord !== EQ) return ord;
		if (n >= 4) { ord = cmp(x._3, y._3); if (ord !== EQ) return ord;
		if (n >= 5) { ord = cmp(x._4, y._4); if (ord !== EQ) return ord;
		if (n >= 6) { ord = cmp(x._5, y._5); if (ord !== EQ) return ord;
		if (n >= 7) throw new Error('Comparison error: ' + err); } } } } } }
		return EQ;
	}

	throw new Error(
		'Comparison error: comparison is only defined on ints, '
		+ 'floats, times, chars, strings, lists of comparable values, '
		+ 'and tuples of comparable values.'
	);
}


// COMMON VALUES

var Tuple0 = {
	ctor: '_Tuple0'
};

function Tuple2(x, y)
{
	return {
		ctor: '_Tuple2',
		_0: x,
		_1: y
	};
}

function chr(c)
{
	return new String(c);
}


// GUID

var count = 0;
function guid(_)
{
	return count++;
}


// RECORDS

function update(oldRecord, updatedFields)
{
	var newRecord = {};

	for (var key in oldRecord)
	{
		newRecord[key] = oldRecord[key];
	}

	for (var key in updatedFields)
	{
		newRecord[key] = updatedFields[key];
	}

	return newRecord;
}


//// LIST STUFF ////

var Nil = { ctor: '[]' };

function Cons(hd, tl)
{
	return {
		ctor: '::',
		_0: hd,
		_1: tl
	};
}

function append(xs, ys)
{
	// append Strings
	if (typeof xs === 'string')
	{
		return xs + ys;
	}

	// append Lists
	if (xs.ctor === '[]')
	{
		return ys;
	}
	var root = Cons(xs._0, Nil);
	var curr = root;
	xs = xs._1;
	while (xs.ctor !== '[]')
	{
		curr._1 = Cons(xs._0, Nil);
		xs = xs._1;
		curr = curr._1;
	}
	curr._1 = ys;
	return root;
}


// CRASHES

function crash(moduleName, region)
{
	return function(message) {
		throw new Error(
			'Ran into a `Debug.crash` in module `' + moduleName + '` ' + regionToString(region) + '\n'
			+ 'The message provided by the code author is:\n\n    '
			+ message
		);
	};
}

function crashCase(moduleName, region, value)
{
	return function(message) {
		throw new Error(
			'Ran into a `Debug.crash` in module `' + moduleName + '`\n\n'
			+ 'This was caused by the `case` expression ' + regionToString(region) + '.\n'
			+ 'One of the branches ended with a crash and the following value got through:\n\n    ' + toString(value) + '\n\n'
			+ 'The message provided by the code author is:\n\n    '
			+ message
		);
	};
}

function regionToString(region)
{
	if (region.start.line == region.end.line)
	{
		return 'on line ' + region.start.line;
	}
	return 'between lines ' + region.start.line + ' and ' + region.end.line;
}


// TO STRING

function toString(v)
{
	var type = typeof v;
	if (type === 'function')
	{
		return '<function>';
	}

	if (type === 'boolean')
	{
		return v ? 'True' : 'False';
	}

	if (type === 'number')
	{
		return v + '';
	}

	if (v instanceof String)
	{
		return '\'' + addSlashes(v, true) + '\'';
	}

	if (type === 'string')
	{
		return '"' + addSlashes(v, false) + '"';
	}

	if (v === null)
	{
		return 'null';
	}

	if (type === 'object' && 'ctor' in v)
	{
		var ctorStarter = v.ctor.substring(0, 5);

		if (ctorStarter === '_Tupl')
		{
			var output = [];
			for (var k in v)
			{
				if (k === 'ctor') continue;
				output.push(toString(v[k]));
			}
			return '(' + output.join(',') + ')';
		}

		if (ctorStarter === '_Task')
		{
			return '<task>'
		}

		if (v.ctor === '_Array')
		{
			var list = _elm_lang$core$Array$toList(v);
			return 'Array.fromList ' + toString(list);
		}

		if (v.ctor === '<decoder>')
		{
			return '<decoder>';
		}

		if (v.ctor === '_Process')
		{
			return '<process:' + v.id + '>';
		}

		if (v.ctor === '::')
		{
			var output = '[' + toString(v._0);
			v = v._1;
			while (v.ctor === '::')
			{
				output += ',' + toString(v._0);
				v = v._1;
			}
			return output + ']';
		}

		if (v.ctor === '[]')
		{
			return '[]';
		}

		if (v.ctor === 'Set_elm_builtin')
		{
			return 'Set.fromList ' + toString(_elm_lang$core$Set$toList(v));
		}

		if (v.ctor === 'RBNode_elm_builtin' || v.ctor === 'RBEmpty_elm_builtin')
		{
			return 'Dict.fromList ' + toString(_elm_lang$core$Dict$toList(v));
		}

		var output = '';
		for (var i in v)
		{
			if (i === 'ctor') continue;
			var str = toString(v[i]);
			var c0 = str[0];
			var parenless = c0 === '{' || c0 === '(' || c0 === '<' || c0 === '"' || str.indexOf(' ') < 0;
			output += ' ' + (parenless ? str : '(' + str + ')');
		}
		return v.ctor + output;
	}

	if (type === 'object')
	{
		if (v instanceof Date)
		{
			return '<' + v.toString() + '>';
		}

		if (v.elm_web_socket)
		{
			return '<websocket>';
		}

		var output = [];
		for (var k in v)
		{
			output.push(k + ' = ' + toString(v[k]));
		}
		if (output.length === 0)
		{
			return '{}';
		}
		return '{ ' + output.join(', ') + ' }';
	}

	return '<internal structure>';
}

function addSlashes(str, isChar)
{
	var s = str.replace(/\\/g, '\\\\')
			  .replace(/\n/g, '\\n')
			  .replace(/\t/g, '\\t')
			  .replace(/\r/g, '\\r')
			  .replace(/\v/g, '\\v')
			  .replace(/\0/g, '\\0');
	if (isChar)
	{
		return s.replace(/\'/g, '\\\'');
	}
	else
	{
		return s.replace(/\"/g, '\\"');
	}
}


return {
	eq: eq,
	cmp: cmp,
	Tuple0: Tuple0,
	Tuple2: Tuple2,
	chr: chr,
	update: update,
	guid: guid,

	append: F2(append),

	crash: crash,
	crashCase: crashCase,

	toString: toString
};

}();
var _elm_lang$core$Basics$never = function (_p0) {
	never:
	while (true) {
		var _p1 = _p0;
		var _v1 = _p1._0;
		_p0 = _v1;
		continue never;
	}
};
var _elm_lang$core$Basics$uncurry = F2(
	function (f, _p2) {
		var _p3 = _p2;
		return A2(f, _p3._0, _p3._1);
	});
var _elm_lang$core$Basics$curry = F3(
	function (f, a, b) {
		return f(
			{ctor: '_Tuple2', _0: a, _1: b});
	});
var _elm_lang$core$Basics$flip = F3(
	function (f, b, a) {
		return A2(f, a, b);
	});
var _elm_lang$core$Basics$always = F2(
	function (a, _p4) {
		return a;
	});
var _elm_lang$core$Basics$identity = function (x) {
	return x;
};
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['<|'] = F2(
	function (f, x) {
		return f(x);
	});
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['|>'] = F2(
	function (x, f) {
		return f(x);
	});
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['>>'] = F3(
	function (f, g, x) {
		return g(
			f(x));
	});
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['<<'] = F3(
	function (g, f, x) {
		return g(
			f(x));
	});
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['++'] = _elm_lang$core$Native_Utils.append;
var _elm_lang$core$Basics$toString = _elm_lang$core$Native_Utils.toString;
var _elm_lang$core$Basics$isInfinite = _elm_lang$core$Native_Basics.isInfinite;
var _elm_lang$core$Basics$isNaN = _elm_lang$core$Native_Basics.isNaN;
var _elm_lang$core$Basics$toFloat = _elm_lang$core$Native_Basics.toFloat;
var _elm_lang$core$Basics$ceiling = _elm_lang$core$Native_Basics.ceiling;
var _elm_lang$core$Basics$floor = _elm_lang$core$Native_Basics.floor;
var _elm_lang$core$Basics$truncate = _elm_lang$core$Native_Basics.truncate;
var _elm_lang$core$Basics$round = _elm_lang$core$Native_Basics.round;
var _elm_lang$core$Basics$not = _elm_lang$core$Native_Basics.not;
var _elm_lang$core$Basics$xor = _elm_lang$core$Native_Basics.xor;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['||'] = _elm_lang$core$Native_Basics.or;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['&&'] = _elm_lang$core$Native_Basics.and;
var _elm_lang$core$Basics$max = _elm_lang$core$Native_Basics.max;
var _elm_lang$core$Basics$min = _elm_lang$core$Native_Basics.min;
var _elm_lang$core$Basics$compare = _elm_lang$core$Native_Basics.compare;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['>='] = _elm_lang$core$Native_Basics.ge;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['<='] = _elm_lang$core$Native_Basics.le;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['>'] = _elm_lang$core$Native_Basics.gt;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['<'] = _elm_lang$core$Native_Basics.lt;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['/='] = _elm_lang$core$Native_Basics.neq;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['=='] = _elm_lang$core$Native_Basics.eq;
var _elm_lang$core$Basics$e = _elm_lang$core$Native_Basics.e;
var _elm_lang$core$Basics$pi = _elm_lang$core$Native_Basics.pi;
var _elm_lang$core$Basics$clamp = _elm_lang$core$Native_Basics.clamp;
var _elm_lang$core$Basics$logBase = _elm_lang$core$Native_Basics.logBase;
var _elm_lang$core$Basics$abs = _elm_lang$core$Native_Basics.abs;
var _elm_lang$core$Basics$negate = _elm_lang$core$Native_Basics.negate;
var _elm_lang$core$Basics$sqrt = _elm_lang$core$Native_Basics.sqrt;
var _elm_lang$core$Basics$atan2 = _elm_lang$core$Native_Basics.atan2;
var _elm_lang$core$Basics$atan = _elm_lang$core$Native_Basics.atan;
var _elm_lang$core$Basics$asin = _elm_lang$core$Native_Basics.asin;
var _elm_lang$core$Basics$acos = _elm_lang$core$Native_Basics.acos;
var _elm_lang$core$Basics$tan = _elm_lang$core$Native_Basics.tan;
var _elm_lang$core$Basics$sin = _elm_lang$core$Native_Basics.sin;
var _elm_lang$core$Basics$cos = _elm_lang$core$Native_Basics.cos;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['^'] = _elm_lang$core$Native_Basics.exp;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['%'] = _elm_lang$core$Native_Basics.mod;
var _elm_lang$core$Basics$rem = _elm_lang$core$Native_Basics.rem;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['//'] = _elm_lang$core$Native_Basics.div;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['/'] = _elm_lang$core$Native_Basics.floatDiv;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['*'] = _elm_lang$core$Native_Basics.mul;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['-'] = _elm_lang$core$Native_Basics.sub;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['+'] = _elm_lang$core$Native_Basics.add;
var _elm_lang$core$Basics$toPolar = _elm_lang$core$Native_Basics.toPolar;
var _elm_lang$core$Basics$fromPolar = _elm_lang$core$Native_Basics.fromPolar;
var _elm_lang$core$Basics$turns = _elm_lang$core$Native_Basics.turns;
var _elm_lang$core$Basics$degrees = _elm_lang$core$Native_Basics.degrees;
var _elm_lang$core$Basics$radians = function (t) {
	return t;
};
var _elm_lang$core$Basics$GT = {ctor: 'GT'};
var _elm_lang$core$Basics$EQ = {ctor: 'EQ'};
var _elm_lang$core$Basics$LT = {ctor: 'LT'};
var _elm_lang$core$Basics$JustOneMore = function (a) {
	return {ctor: 'JustOneMore', _0: a};
};

//import Native.Utils //

var _elm_lang$core$Native_Debug = function() {

function log(tag, value)
{
	var msg = tag + ': ' + _elm_lang$core$Native_Utils.toString(value);
	var process = process || {};
	if (process.stdout)
	{
		process.stdout.write(msg);
	}
	else
	{
		console.log(msg);
	}
	return value;
}

function crash(message)
{
	throw new Error(message);
}

return {
	crash: crash,
	log: F2(log)
};

}();
var _elm_lang$core$Debug$crash = _elm_lang$core$Native_Debug.crash;
var _elm_lang$core$Debug$log = _elm_lang$core$Native_Debug.log;

var _elm_lang$core$Maybe$withDefault = F2(
	function ($default, maybe) {
		var _p0 = maybe;
		if (_p0.ctor === 'Just') {
			return _p0._0;
		} else {
			return $default;
		}
	});
var _elm_lang$core$Maybe$Nothing = {ctor: 'Nothing'};
var _elm_lang$core$Maybe$andThen = F2(
	function (callback, maybeValue) {
		var _p1 = maybeValue;
		if (_p1.ctor === 'Just') {
			return callback(_p1._0);
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _elm_lang$core$Maybe$Just = function (a) {
	return {ctor: 'Just', _0: a};
};
var _elm_lang$core$Maybe$map = F2(
	function (f, maybe) {
		var _p2 = maybe;
		if (_p2.ctor === 'Just') {
			return _elm_lang$core$Maybe$Just(
				f(_p2._0));
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _elm_lang$core$Maybe$map2 = F3(
	function (func, ma, mb) {
		var _p3 = {ctor: '_Tuple2', _0: ma, _1: mb};
		if (((_p3.ctor === '_Tuple2') && (_p3._0.ctor === 'Just')) && (_p3._1.ctor === 'Just')) {
			return _elm_lang$core$Maybe$Just(
				A2(func, _p3._0._0, _p3._1._0));
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _elm_lang$core$Maybe$map3 = F4(
	function (func, ma, mb, mc) {
		var _p4 = {ctor: '_Tuple3', _0: ma, _1: mb, _2: mc};
		if ((((_p4.ctor === '_Tuple3') && (_p4._0.ctor === 'Just')) && (_p4._1.ctor === 'Just')) && (_p4._2.ctor === 'Just')) {
			return _elm_lang$core$Maybe$Just(
				A3(func, _p4._0._0, _p4._1._0, _p4._2._0));
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _elm_lang$core$Maybe$map4 = F5(
	function (func, ma, mb, mc, md) {
		var _p5 = {ctor: '_Tuple4', _0: ma, _1: mb, _2: mc, _3: md};
		if (((((_p5.ctor === '_Tuple4') && (_p5._0.ctor === 'Just')) && (_p5._1.ctor === 'Just')) && (_p5._2.ctor === 'Just')) && (_p5._3.ctor === 'Just')) {
			return _elm_lang$core$Maybe$Just(
				A4(func, _p5._0._0, _p5._1._0, _p5._2._0, _p5._3._0));
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _elm_lang$core$Maybe$map5 = F6(
	function (func, ma, mb, mc, md, me) {
		var _p6 = {ctor: '_Tuple5', _0: ma, _1: mb, _2: mc, _3: md, _4: me};
		if ((((((_p6.ctor === '_Tuple5') && (_p6._0.ctor === 'Just')) && (_p6._1.ctor === 'Just')) && (_p6._2.ctor === 'Just')) && (_p6._3.ctor === 'Just')) && (_p6._4.ctor === 'Just')) {
			return _elm_lang$core$Maybe$Just(
				A5(func, _p6._0._0, _p6._1._0, _p6._2._0, _p6._3._0, _p6._4._0));
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});

//import Native.Utils //

var _elm_lang$core$Native_List = function() {

var Nil = { ctor: '[]' };

function Cons(hd, tl)
{
	return { ctor: '::', _0: hd, _1: tl };
}

function fromArray(arr)
{
	var out = Nil;
	for (var i = arr.length; i--; )
	{
		out = Cons(arr[i], out);
	}
	return out;
}

function toArray(xs)
{
	var out = [];
	while (xs.ctor !== '[]')
	{
		out.push(xs._0);
		xs = xs._1;
	}
	return out;
}

function foldr(f, b, xs)
{
	var arr = toArray(xs);
	var acc = b;
	for (var i = arr.length; i--; )
	{
		acc = A2(f, arr[i], acc);
	}
	return acc;
}

function map2(f, xs, ys)
{
	var arr = [];
	while (xs.ctor !== '[]' && ys.ctor !== '[]')
	{
		arr.push(A2(f, xs._0, ys._0));
		xs = xs._1;
		ys = ys._1;
	}
	return fromArray(arr);
}

function map3(f, xs, ys, zs)
{
	var arr = [];
	while (xs.ctor !== '[]' && ys.ctor !== '[]' && zs.ctor !== '[]')
	{
		arr.push(A3(f, xs._0, ys._0, zs._0));
		xs = xs._1;
		ys = ys._1;
		zs = zs._1;
	}
	return fromArray(arr);
}

function map4(f, ws, xs, ys, zs)
{
	var arr = [];
	while (   ws.ctor !== '[]'
		   && xs.ctor !== '[]'
		   && ys.ctor !== '[]'
		   && zs.ctor !== '[]')
	{
		arr.push(A4(f, ws._0, xs._0, ys._0, zs._0));
		ws = ws._1;
		xs = xs._1;
		ys = ys._1;
		zs = zs._1;
	}
	return fromArray(arr);
}

function map5(f, vs, ws, xs, ys, zs)
{
	var arr = [];
	while (   vs.ctor !== '[]'
		   && ws.ctor !== '[]'
		   && xs.ctor !== '[]'
		   && ys.ctor !== '[]'
		   && zs.ctor !== '[]')
	{
		arr.push(A5(f, vs._0, ws._0, xs._0, ys._0, zs._0));
		vs = vs._1;
		ws = ws._1;
		xs = xs._1;
		ys = ys._1;
		zs = zs._1;
	}
	return fromArray(arr);
}

function sortBy(f, xs)
{
	return fromArray(toArray(xs).sort(function(a, b) {
		return _elm_lang$core$Native_Utils.cmp(f(a), f(b));
	}));
}

function sortWith(f, xs)
{
	return fromArray(toArray(xs).sort(function(a, b) {
		var ord = f(a)(b).ctor;
		return ord === 'EQ' ? 0 : ord === 'LT' ? -1 : 1;
	}));
}

return {
	Nil: Nil,
	Cons: Cons,
	cons: F2(Cons),
	toArray: toArray,
	fromArray: fromArray,

	foldr: F3(foldr),

	map2: F3(map2),
	map3: F4(map3),
	map4: F5(map4),
	map5: F6(map5),
	sortBy: F2(sortBy),
	sortWith: F2(sortWith)
};

}();
var _elm_lang$core$List$sortWith = _elm_lang$core$Native_List.sortWith;
var _elm_lang$core$List$sortBy = _elm_lang$core$Native_List.sortBy;
var _elm_lang$core$List$sort = function (xs) {
	return A2(_elm_lang$core$List$sortBy, _elm_lang$core$Basics$identity, xs);
};
var _elm_lang$core$List$singleton = function (value) {
	return {
		ctor: '::',
		_0: value,
		_1: {ctor: '[]'}
	};
};
var _elm_lang$core$List$drop = F2(
	function (n, list) {
		drop:
		while (true) {
			if (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {
				return list;
			} else {
				var _p0 = list;
				if (_p0.ctor === '[]') {
					return list;
				} else {
					var _v1 = n - 1,
						_v2 = _p0._1;
					n = _v1;
					list = _v2;
					continue drop;
				}
			}
		}
	});
var _elm_lang$core$List$map5 = _elm_lang$core$Native_List.map5;
var _elm_lang$core$List$map4 = _elm_lang$core$Native_List.map4;
var _elm_lang$core$List$map3 = _elm_lang$core$Native_List.map3;
var _elm_lang$core$List$map2 = _elm_lang$core$Native_List.map2;
var _elm_lang$core$List$any = F2(
	function (isOkay, list) {
		any:
		while (true) {
			var _p1 = list;
			if (_p1.ctor === '[]') {
				return false;
			} else {
				if (isOkay(_p1._0)) {
					return true;
				} else {
					var _v4 = isOkay,
						_v5 = _p1._1;
					isOkay = _v4;
					list = _v5;
					continue any;
				}
			}
		}
	});
var _elm_lang$core$List$all = F2(
	function (isOkay, list) {
		return !A2(
			_elm_lang$core$List$any,
			function (_p2) {
				return !isOkay(_p2);
			},
			list);
	});
var _elm_lang$core$List$foldr = _elm_lang$core$Native_List.foldr;
var _elm_lang$core$List$foldl = F3(
	function (func, acc, list) {
		foldl:
		while (true) {
			var _p3 = list;
			if (_p3.ctor === '[]') {
				return acc;
			} else {
				var _v7 = func,
					_v8 = A2(func, _p3._0, acc),
					_v9 = _p3._1;
				func = _v7;
				acc = _v8;
				list = _v9;
				continue foldl;
			}
		}
	});
var _elm_lang$core$List$length = function (xs) {
	return A3(
		_elm_lang$core$List$foldl,
		F2(
			function (_p4, i) {
				return i + 1;
			}),
		0,
		xs);
};
var _elm_lang$core$List$sum = function (numbers) {
	return A3(
		_elm_lang$core$List$foldl,
		F2(
			function (x, y) {
				return x + y;
			}),
		0,
		numbers);
};
var _elm_lang$core$List$product = function (numbers) {
	return A3(
		_elm_lang$core$List$foldl,
		F2(
			function (x, y) {
				return x * y;
			}),
		1,
		numbers);
};
var _elm_lang$core$List$maximum = function (list) {
	var _p5 = list;
	if (_p5.ctor === '::') {
		return _elm_lang$core$Maybe$Just(
			A3(_elm_lang$core$List$foldl, _elm_lang$core$Basics$max, _p5._0, _p5._1));
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _elm_lang$core$List$minimum = function (list) {
	var _p6 = list;
	if (_p6.ctor === '::') {
		return _elm_lang$core$Maybe$Just(
			A3(_elm_lang$core$List$foldl, _elm_lang$core$Basics$min, _p6._0, _p6._1));
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _elm_lang$core$List$member = F2(
	function (x, xs) {
		return A2(
			_elm_lang$core$List$any,
			function (a) {
				return _elm_lang$core$Native_Utils.eq(a, x);
			},
			xs);
	});
var _elm_lang$core$List$isEmpty = function (xs) {
	var _p7 = xs;
	if (_p7.ctor === '[]') {
		return true;
	} else {
		return false;
	}
};
var _elm_lang$core$List$tail = function (list) {
	var _p8 = list;
	if (_p8.ctor === '::') {
		return _elm_lang$core$Maybe$Just(_p8._1);
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _elm_lang$core$List$head = function (list) {
	var _p9 = list;
	if (_p9.ctor === '::') {
		return _elm_lang$core$Maybe$Just(_p9._0);
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _elm_lang$core$List_ops = _elm_lang$core$List_ops || {};
_elm_lang$core$List_ops['::'] = _elm_lang$core$Native_List.cons;
var _elm_lang$core$List$map = F2(
	function (f, xs) {
		return A3(
			_elm_lang$core$List$foldr,
			F2(
				function (x, acc) {
					return {
						ctor: '::',
						_0: f(x),
						_1: acc
					};
				}),
			{ctor: '[]'},
			xs);
	});
var _elm_lang$core$List$filter = F2(
	function (pred, xs) {
		var conditionalCons = F2(
			function (front, back) {
				return pred(front) ? {ctor: '::', _0: front, _1: back} : back;
			});
		return A3(
			_elm_lang$core$List$foldr,
			conditionalCons,
			{ctor: '[]'},
			xs);
	});
var _elm_lang$core$List$maybeCons = F3(
	function (f, mx, xs) {
		var _p10 = f(mx);
		if (_p10.ctor === 'Just') {
			return {ctor: '::', _0: _p10._0, _1: xs};
		} else {
			return xs;
		}
	});
var _elm_lang$core$List$filterMap = F2(
	function (f, xs) {
		return A3(
			_elm_lang$core$List$foldr,
			_elm_lang$core$List$maybeCons(f),
			{ctor: '[]'},
			xs);
	});
var _elm_lang$core$List$reverse = function (list) {
	return A3(
		_elm_lang$core$List$foldl,
		F2(
			function (x, y) {
				return {ctor: '::', _0: x, _1: y};
			}),
		{ctor: '[]'},
		list);
};
var _elm_lang$core$List$scanl = F3(
	function (f, b, xs) {
		var scan1 = F2(
			function (x, accAcc) {
				var _p11 = accAcc;
				if (_p11.ctor === '::') {
					return {
						ctor: '::',
						_0: A2(f, x, _p11._0),
						_1: accAcc
					};
				} else {
					return {ctor: '[]'};
				}
			});
		return _elm_lang$core$List$reverse(
			A3(
				_elm_lang$core$List$foldl,
				scan1,
				{
					ctor: '::',
					_0: b,
					_1: {ctor: '[]'}
				},
				xs));
	});
var _elm_lang$core$List$append = F2(
	function (xs, ys) {
		var _p12 = ys;
		if (_p12.ctor === '[]') {
			return xs;
		} else {
			return A3(
				_elm_lang$core$List$foldr,
				F2(
					function (x, y) {
						return {ctor: '::', _0: x, _1: y};
					}),
				ys,
				xs);
		}
	});
var _elm_lang$core$List$concat = function (lists) {
	return A3(
		_elm_lang$core$List$foldr,
		_elm_lang$core$List$append,
		{ctor: '[]'},
		lists);
};
var _elm_lang$core$List$concatMap = F2(
	function (f, list) {
		return _elm_lang$core$List$concat(
			A2(_elm_lang$core$List$map, f, list));
	});
var _elm_lang$core$List$partition = F2(
	function (pred, list) {
		var step = F2(
			function (x, _p13) {
				var _p14 = _p13;
				var _p16 = _p14._0;
				var _p15 = _p14._1;
				return pred(x) ? {
					ctor: '_Tuple2',
					_0: {ctor: '::', _0: x, _1: _p16},
					_1: _p15
				} : {
					ctor: '_Tuple2',
					_0: _p16,
					_1: {ctor: '::', _0: x, _1: _p15}
				};
			});
		return A3(
			_elm_lang$core$List$foldr,
			step,
			{
				ctor: '_Tuple2',
				_0: {ctor: '[]'},
				_1: {ctor: '[]'}
			},
			list);
	});
var _elm_lang$core$List$unzip = function (pairs) {
	var step = F2(
		function (_p18, _p17) {
			var _p19 = _p18;
			var _p20 = _p17;
			return {
				ctor: '_Tuple2',
				_0: {ctor: '::', _0: _p19._0, _1: _p20._0},
				_1: {ctor: '::', _0: _p19._1, _1: _p20._1}
			};
		});
	return A3(
		_elm_lang$core$List$foldr,
		step,
		{
			ctor: '_Tuple2',
			_0: {ctor: '[]'},
			_1: {ctor: '[]'}
		},
		pairs);
};
var _elm_lang$core$List$intersperse = F2(
	function (sep, xs) {
		var _p21 = xs;
		if (_p21.ctor === '[]') {
			return {ctor: '[]'};
		} else {
			var step = F2(
				function (x, rest) {
					return {
						ctor: '::',
						_0: sep,
						_1: {ctor: '::', _0: x, _1: rest}
					};
				});
			var spersed = A3(
				_elm_lang$core$List$foldr,
				step,
				{ctor: '[]'},
				_p21._1);
			return {ctor: '::', _0: _p21._0, _1: spersed};
		}
	});
var _elm_lang$core$List$takeReverse = F3(
	function (n, list, taken) {
		takeReverse:
		while (true) {
			if (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {
				return taken;
			} else {
				var _p22 = list;
				if (_p22.ctor === '[]') {
					return taken;
				} else {
					var _v23 = n - 1,
						_v24 = _p22._1,
						_v25 = {ctor: '::', _0: _p22._0, _1: taken};
					n = _v23;
					list = _v24;
					taken = _v25;
					continue takeReverse;
				}
			}
		}
	});
var _elm_lang$core$List$takeTailRec = F2(
	function (n, list) {
		return _elm_lang$core$List$reverse(
			A3(
				_elm_lang$core$List$takeReverse,
				n,
				list,
				{ctor: '[]'}));
	});
var _elm_lang$core$List$takeFast = F3(
	function (ctr, n, list) {
		if (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {
			return {ctor: '[]'};
		} else {
			var _p23 = {ctor: '_Tuple2', _0: n, _1: list};
			_v26_5:
			do {
				_v26_1:
				do {
					if (_p23.ctor === '_Tuple2') {
						if (_p23._1.ctor === '[]') {
							return list;
						} else {
							if (_p23._1._1.ctor === '::') {
								switch (_p23._0) {
									case 1:
										break _v26_1;
									case 2:
										return {
											ctor: '::',
											_0: _p23._1._0,
											_1: {
												ctor: '::',
												_0: _p23._1._1._0,
												_1: {ctor: '[]'}
											}
										};
									case 3:
										if (_p23._1._1._1.ctor === '::') {
											return {
												ctor: '::',
												_0: _p23._1._0,
												_1: {
													ctor: '::',
													_0: _p23._1._1._0,
													_1: {
														ctor: '::',
														_0: _p23._1._1._1._0,
														_1: {ctor: '[]'}
													}
												}
											};
										} else {
											break _v26_5;
										}
									default:
										if ((_p23._1._1._1.ctor === '::') && (_p23._1._1._1._1.ctor === '::')) {
											var _p28 = _p23._1._1._1._0;
											var _p27 = _p23._1._1._0;
											var _p26 = _p23._1._0;
											var _p25 = _p23._1._1._1._1._0;
											var _p24 = _p23._1._1._1._1._1;
											return (_elm_lang$core$Native_Utils.cmp(ctr, 1000) > 0) ? {
												ctor: '::',
												_0: _p26,
												_1: {
													ctor: '::',
													_0: _p27,
													_1: {
														ctor: '::',
														_0: _p28,
														_1: {
															ctor: '::',
															_0: _p25,
															_1: A2(_elm_lang$core$List$takeTailRec, n - 4, _p24)
														}
													}
												}
											} : {
												ctor: '::',
												_0: _p26,
												_1: {
													ctor: '::',
													_0: _p27,
													_1: {
														ctor: '::',
														_0: _p28,
														_1: {
															ctor: '::',
															_0: _p25,
															_1: A3(_elm_lang$core$List$takeFast, ctr + 1, n - 4, _p24)
														}
													}
												}
											};
										} else {
											break _v26_5;
										}
								}
							} else {
								if (_p23._0 === 1) {
									break _v26_1;
								} else {
									break _v26_5;
								}
							}
						}
					} else {
						break _v26_5;
					}
				} while(false);
				return {
					ctor: '::',
					_0: _p23._1._0,
					_1: {ctor: '[]'}
				};
			} while(false);
			return list;
		}
	});
var _elm_lang$core$List$take = F2(
	function (n, list) {
		return A3(_elm_lang$core$List$takeFast, 0, n, list);
	});
var _elm_lang$core$List$repeatHelp = F3(
	function (result, n, value) {
		repeatHelp:
		while (true) {
			if (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {
				return result;
			} else {
				var _v27 = {ctor: '::', _0: value, _1: result},
					_v28 = n - 1,
					_v29 = value;
				result = _v27;
				n = _v28;
				value = _v29;
				continue repeatHelp;
			}
		}
	});
var _elm_lang$core$List$repeat = F2(
	function (n, value) {
		return A3(
			_elm_lang$core$List$repeatHelp,
			{ctor: '[]'},
			n,
			value);
	});
var _elm_lang$core$List$rangeHelp = F3(
	function (lo, hi, list) {
		rangeHelp:
		while (true) {
			if (_elm_lang$core$Native_Utils.cmp(lo, hi) < 1) {
				var _v30 = lo,
					_v31 = hi - 1,
					_v32 = {ctor: '::', _0: hi, _1: list};
				lo = _v30;
				hi = _v31;
				list = _v32;
				continue rangeHelp;
			} else {
				return list;
			}
		}
	});
var _elm_lang$core$List$range = F2(
	function (lo, hi) {
		return A3(
			_elm_lang$core$List$rangeHelp,
			lo,
			hi,
			{ctor: '[]'});
	});
var _elm_lang$core$List$indexedMap = F2(
	function (f, xs) {
		return A3(
			_elm_lang$core$List$map2,
			f,
			A2(
				_elm_lang$core$List$range,
				0,
				_elm_lang$core$List$length(xs) - 1),
			xs);
	});

var _elm_lang$core$Result$toMaybe = function (result) {
	var _p0 = result;
	if (_p0.ctor === 'Ok') {
		return _elm_lang$core$Maybe$Just(_p0._0);
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _elm_lang$core$Result$withDefault = F2(
	function (def, result) {
		var _p1 = result;
		if (_p1.ctor === 'Ok') {
			return _p1._0;
		} else {
			return def;
		}
	});
var _elm_lang$core$Result$Err = function (a) {
	return {ctor: 'Err', _0: a};
};
var _elm_lang$core$Result$andThen = F2(
	function (callback, result) {
		var _p2 = result;
		if (_p2.ctor === 'Ok') {
			return callback(_p2._0);
		} else {
			return _elm_lang$core$Result$Err(_p2._0);
		}
	});
var _elm_lang$core$Result$Ok = function (a) {
	return {ctor: 'Ok', _0: a};
};
var _elm_lang$core$Result$map = F2(
	function (func, ra) {
		var _p3 = ra;
		if (_p3.ctor === 'Ok') {
			return _elm_lang$core$Result$Ok(
				func(_p3._0));
		} else {
			return _elm_lang$core$Result$Err(_p3._0);
		}
	});
var _elm_lang$core$Result$map2 = F3(
	function (func, ra, rb) {
		var _p4 = {ctor: '_Tuple2', _0: ra, _1: rb};
		if (_p4._0.ctor === 'Ok') {
			if (_p4._1.ctor === 'Ok') {
				return _elm_lang$core$Result$Ok(
					A2(func, _p4._0._0, _p4._1._0));
			} else {
				return _elm_lang$core$Result$Err(_p4._1._0);
			}
		} else {
			return _elm_lang$core$Result$Err(_p4._0._0);
		}
	});
var _elm_lang$core$Result$map3 = F4(
	function (func, ra, rb, rc) {
		var _p5 = {ctor: '_Tuple3', _0: ra, _1: rb, _2: rc};
		if (_p5._0.ctor === 'Ok') {
			if (_p5._1.ctor === 'Ok') {
				if (_p5._2.ctor === 'Ok') {
					return _elm_lang$core$Result$Ok(
						A3(func, _p5._0._0, _p5._1._0, _p5._2._0));
				} else {
					return _elm_lang$core$Result$Err(_p5._2._0);
				}
			} else {
				return _elm_lang$core$Result$Err(_p5._1._0);
			}
		} else {
			return _elm_lang$core$Result$Err(_p5._0._0);
		}
	});
var _elm_lang$core$Result$map4 = F5(
	function (func, ra, rb, rc, rd) {
		var _p6 = {ctor: '_Tuple4', _0: ra, _1: rb, _2: rc, _3: rd};
		if (_p6._0.ctor === 'Ok') {
			if (_p6._1.ctor === 'Ok') {
				if (_p6._2.ctor === 'Ok') {
					if (_p6._3.ctor === 'Ok') {
						return _elm_lang$core$Result$Ok(
							A4(func, _p6._0._0, _p6._1._0, _p6._2._0, _p6._3._0));
					} else {
						return _elm_lang$core$Result$Err(_p6._3._0);
					}
				} else {
					return _elm_lang$core$Result$Err(_p6._2._0);
				}
			} else {
				return _elm_lang$core$Result$Err(_p6._1._0);
			}
		} else {
			return _elm_lang$core$Result$Err(_p6._0._0);
		}
	});
var _elm_lang$core$Result$map5 = F6(
	function (func, ra, rb, rc, rd, re) {
		var _p7 = {ctor: '_Tuple5', _0: ra, _1: rb, _2: rc, _3: rd, _4: re};
		if (_p7._0.ctor === 'Ok') {
			if (_p7._1.ctor === 'Ok') {
				if (_p7._2.ctor === 'Ok') {
					if (_p7._3.ctor === 'Ok') {
						if (_p7._4.ctor === 'Ok') {
							return _elm_lang$core$Result$Ok(
								A5(func, _p7._0._0, _p7._1._0, _p7._2._0, _p7._3._0, _p7._4._0));
						} else {
							return _elm_lang$core$Result$Err(_p7._4._0);
						}
					} else {
						return _elm_lang$core$Result$Err(_p7._3._0);
					}
				} else {
					return _elm_lang$core$Result$Err(_p7._2._0);
				}
			} else {
				return _elm_lang$core$Result$Err(_p7._1._0);
			}
		} else {
			return _elm_lang$core$Result$Err(_p7._0._0);
		}
	});
var _elm_lang$core$Result$mapError = F2(
	function (f, result) {
		var _p8 = result;
		if (_p8.ctor === 'Ok') {
			return _elm_lang$core$Result$Ok(_p8._0);
		} else {
			return _elm_lang$core$Result$Err(
				f(_p8._0));
		}
	});
var _elm_lang$core$Result$fromMaybe = F2(
	function (err, maybe) {
		var _p9 = maybe;
		if (_p9.ctor === 'Just') {
			return _elm_lang$core$Result$Ok(_p9._0);
		} else {
			return _elm_lang$core$Result$Err(err);
		}
	});

//import Maybe, Native.List, Native.Utils, Result //

var _elm_lang$core$Native_String = function() {

function isEmpty(str)
{
	return str.length === 0;
}
function cons(chr, str)
{
	return chr + str;
}
function uncons(str)
{
	var hd = str[0];
	if (hd)
	{
		return _elm_lang$core$Maybe$Just(_elm_lang$core$Native_Utils.Tuple2(_elm_lang$core$Native_Utils.chr(hd), str.slice(1)));
	}
	return _elm_lang$core$Maybe$Nothing;
}
function append(a, b)
{
	return a + b;
}
function concat(strs)
{
	return _elm_lang$core$Native_List.toArray(strs).join('');
}
function length(str)
{
	return str.length;
}
function map(f, str)
{
	var out = str.split('');
	for (var i = out.length; i--; )
	{
		out[i] = f(_elm_lang$core$Native_Utils.chr(out[i]));
	}
	return out.join('');
}
function filter(pred, str)
{
	return str.split('').map(_elm_lang$core$Native_Utils.chr).filter(pred).join('');
}
function reverse(str)
{
	return str.split('').reverse().join('');
}
function foldl(f, b, str)
{
	var len = str.length;
	for (var i = 0; i < len; ++i)
	{
		b = A2(f, _elm_lang$core$Native_Utils.chr(str[i]), b);
	}
	return b;
}
function foldr(f, b, str)
{
	for (var i = str.length; i--; )
	{
		b = A2(f, _elm_lang$core$Native_Utils.chr(str[i]), b);
	}
	return b;
}
function split(sep, str)
{
	return _elm_lang$core$Native_List.fromArray(str.split(sep));
}
function join(sep, strs)
{
	return _elm_lang$core$Native_List.toArray(strs).join(sep);
}
function repeat(n, str)
{
	var result = '';
	while (n > 0)
	{
		if (n & 1)
		{
			result += str;
		}
		n >>= 1, str += str;
	}
	return result;
}
function slice(start, end, str)
{
	return str.slice(start, end);
}
function left(n, str)
{
	return n < 1 ? '' : str.slice(0, n);
}
function right(n, str)
{
	return n < 1 ? '' : str.slice(-n);
}
function dropLeft(n, str)
{
	return n < 1 ? str : str.slice(n);
}
function dropRight(n, str)
{
	return n < 1 ? str : str.slice(0, -n);
}
function pad(n, chr, str)
{
	var half = (n - str.length) / 2;
	return repeat(Math.ceil(half), chr) + str + repeat(half | 0, chr);
}
function padRight(n, chr, str)
{
	return str + repeat(n - str.length, chr);
}
function padLeft(n, chr, str)
{
	return repeat(n - str.length, chr) + str;
}

function trim(str)
{
	return str.trim();
}
function trimLeft(str)
{
	return str.replace(/^\s+/, '');
}
function trimRight(str)
{
	return str.replace(/\s+$/, '');
}

function words(str)
{
	return _elm_lang$core$Native_List.fromArray(str.trim().split(/\s+/g));
}
function lines(str)
{
	return _elm_lang$core$Native_List.fromArray(str.split(/\r\n|\r|\n/g));
}

function toUpper(str)
{
	return str.toUpperCase();
}
function toLower(str)
{
	return str.toLowerCase();
}

function any(pred, str)
{
	for (var i = str.length; i--; )
	{
		if (pred(_elm_lang$core$Native_Utils.chr(str[i])))
		{
			return true;
		}
	}
	return false;
}
function all(pred, str)
{
	for (var i = str.length; i--; )
	{
		if (!pred(_elm_lang$core$Native_Utils.chr(str[i])))
		{
			return false;
		}
	}
	return true;
}

function contains(sub, str)
{
	return str.indexOf(sub) > -1;
}
function startsWith(sub, str)
{
	return str.indexOf(sub) === 0;
}
function endsWith(sub, str)
{
	return str.length >= sub.length &&
		str.lastIndexOf(sub) === str.length - sub.length;
}
function indexes(sub, str)
{
	var subLen = sub.length;

	if (subLen < 1)
	{
		return _elm_lang$core$Native_List.Nil;
	}

	var i = 0;
	var is = [];

	while ((i = str.indexOf(sub, i)) > -1)
	{
		is.push(i);
		i = i + subLen;
	}

	return _elm_lang$core$Native_List.fromArray(is);
}


function toInt(s)
{
	var len = s.length;

	// if empty
	if (len === 0)
	{
		return intErr(s);
	}

	// if hex
	var c = s[0];
	if (c === '0' && s[1] === 'x')
	{
		for (var i = 2; i < len; ++i)
		{
			var c = s[i];
			if (('0' <= c && c <= '9') || ('A' <= c && c <= 'F') || ('a' <= c && c <= 'f'))
			{
				continue;
			}
			return intErr(s);
		}
		return _elm_lang$core$Result$Ok(parseInt(s, 16));
	}

	// is decimal
	if (c > '9' || (c < '0' && c !== '-' && c !== '+'))
	{
		return intErr(s);
	}
	for (var i = 1; i < len; ++i)
	{
		var c = s[i];
		if (c < '0' || '9' < c)
		{
			return intErr(s);
		}
	}

	return _elm_lang$core$Result$Ok(parseInt(s, 10));
}

function intErr(s)
{
	return _elm_lang$core$Result$Err("could not convert string '" + s + "' to an Int");
}


function toFloat(s)
{
	// check if it is a hex, octal, or binary number
	if (s.length === 0 || /[\sxbo]/.test(s))
	{
		return floatErr(s);
	}
	var n = +s;
	// faster isNaN check
	return n === n ? _elm_lang$core$Result$Ok(n) : floatErr(s);
}

function floatErr(s)
{
	return _elm_lang$core$Result$Err("could not convert string '" + s + "' to a Float");
}


function toList(str)
{
	return _elm_lang$core$Native_List.fromArray(str.split('').map(_elm_lang$core$Native_Utils.chr));
}
function fromList(chars)
{
	return _elm_lang$core$Native_List.toArray(chars).join('');
}

return {
	isEmpty: isEmpty,
	cons: F2(cons),
	uncons: uncons,
	append: F2(append),
	concat: concat,
	length: length,
	map: F2(map),
	filter: F2(filter),
	reverse: reverse,
	foldl: F3(foldl),
	foldr: F3(foldr),

	split: F2(split),
	join: F2(join),
	repeat: F2(repeat),

	slice: F3(slice),
	left: F2(left),
	right: F2(right),
	dropLeft: F2(dropLeft),
	dropRight: F2(dropRight),

	pad: F3(pad),
	padLeft: F3(padLeft),
	padRight: F3(padRight),

	trim: trim,
	trimLeft: trimLeft,
	trimRight: trimRight,

	words: words,
	lines: lines,

	toUpper: toUpper,
	toLower: toLower,

	any: F2(any),
	all: F2(all),

	contains: F2(contains),
	startsWith: F2(startsWith),
	endsWith: F2(endsWith),
	indexes: F2(indexes),

	toInt: toInt,
	toFloat: toFloat,
	toList: toList,
	fromList: fromList
};

}();

//import Native.Utils //

var _elm_lang$core$Native_Char = function() {

return {
	fromCode: function(c) { return _elm_lang$core$Native_Utils.chr(String.fromCharCode(c)); },
	toCode: function(c) { return c.charCodeAt(0); },
	toUpper: function(c) { return _elm_lang$core$Native_Utils.chr(c.toUpperCase()); },
	toLower: function(c) { return _elm_lang$core$Native_Utils.chr(c.toLowerCase()); },
	toLocaleUpper: function(c) { return _elm_lang$core$Native_Utils.chr(c.toLocaleUpperCase()); },
	toLocaleLower: function(c) { return _elm_lang$core$Native_Utils.chr(c.toLocaleLowerCase()); }
};

}();
var _elm_lang$core$Char$fromCode = _elm_lang$core$Native_Char.fromCode;
var _elm_lang$core$Char$toCode = _elm_lang$core$Native_Char.toCode;
var _elm_lang$core$Char$toLocaleLower = _elm_lang$core$Native_Char.toLocaleLower;
var _elm_lang$core$Char$toLocaleUpper = _elm_lang$core$Native_Char.toLocaleUpper;
var _elm_lang$core$Char$toLower = _elm_lang$core$Native_Char.toLower;
var _elm_lang$core$Char$toUpper = _elm_lang$core$Native_Char.toUpper;
var _elm_lang$core$Char$isBetween = F3(
	function (low, high, $char) {
		var code = _elm_lang$core$Char$toCode($char);
		return (_elm_lang$core$Native_Utils.cmp(
			code,
			_elm_lang$core$Char$toCode(low)) > -1) && (_elm_lang$core$Native_Utils.cmp(
			code,
			_elm_lang$core$Char$toCode(high)) < 1);
	});
var _elm_lang$core$Char$isUpper = A2(
	_elm_lang$core$Char$isBetween,
	_elm_lang$core$Native_Utils.chr('A'),
	_elm_lang$core$Native_Utils.chr('Z'));
var _elm_lang$core$Char$isLower = A2(
	_elm_lang$core$Char$isBetween,
	_elm_lang$core$Native_Utils.chr('a'),
	_elm_lang$core$Native_Utils.chr('z'));
var _elm_lang$core$Char$isDigit = A2(
	_elm_lang$core$Char$isBetween,
	_elm_lang$core$Native_Utils.chr('0'),
	_elm_lang$core$Native_Utils.chr('9'));
var _elm_lang$core$Char$isOctDigit = A2(
	_elm_lang$core$Char$isBetween,
	_elm_lang$core$Native_Utils.chr('0'),
	_elm_lang$core$Native_Utils.chr('7'));
var _elm_lang$core$Char$isHexDigit = function ($char) {
	return _elm_lang$core$Char$isDigit($char) || (A3(
		_elm_lang$core$Char$isBetween,
		_elm_lang$core$Native_Utils.chr('a'),
		_elm_lang$core$Native_Utils.chr('f'),
		$char) || A3(
		_elm_lang$core$Char$isBetween,
		_elm_lang$core$Native_Utils.chr('A'),
		_elm_lang$core$Native_Utils.chr('F'),
		$char));
};

var _elm_lang$core$String$fromList = _elm_lang$core$Native_String.fromList;
var _elm_lang$core$String$toList = _elm_lang$core$Native_String.toList;
var _elm_lang$core$String$toFloat = _elm_lang$core$Native_String.toFloat;
var _elm_lang$core$String$toInt = _elm_lang$core$Native_String.toInt;
var _elm_lang$core$String$indices = _elm_lang$core$Native_String.indexes;
var _elm_lang$core$String$indexes = _elm_lang$core$Native_String.indexes;
var _elm_lang$core$String$endsWith = _elm_lang$core$Native_String.endsWith;
var _elm_lang$core$String$startsWith = _elm_lang$core$Native_String.startsWith;
var _elm_lang$core$String$contains = _elm_lang$core$Native_String.contains;
var _elm_lang$core$String$all = _elm_lang$core$Native_String.all;
var _elm_lang$core$String$any = _elm_lang$core$Native_String.any;
var _elm_lang$core$String$toLower = _elm_lang$core$Native_String.toLower;
var _elm_lang$core$String$toUpper = _elm_lang$core$Native_String.toUpper;
var _elm_lang$core$String$lines = _elm_lang$core$Native_String.lines;
var _elm_lang$core$String$words = _elm_lang$core$Native_String.words;
var _elm_lang$core$String$trimRight = _elm_lang$core$Native_String.trimRight;
var _elm_lang$core$String$trimLeft = _elm_lang$core$Native_String.trimLeft;
var _elm_lang$core$String$trim = _elm_lang$core$Native_String.trim;
var _elm_lang$core$String$padRight = _elm_lang$core$Native_String.padRight;
var _elm_lang$core$String$padLeft = _elm_lang$core$Native_String.padLeft;
var _elm_lang$core$String$pad = _elm_lang$core$Native_String.pad;
var _elm_lang$core$String$dropRight = _elm_lang$core$Native_String.dropRight;
var _elm_lang$core$String$dropLeft = _elm_lang$core$Native_String.dropLeft;
var _elm_lang$core$String$right = _elm_lang$core$Native_String.right;
var _elm_lang$core$String$left = _elm_lang$core$Native_String.left;
var _elm_lang$core$String$slice = _elm_lang$core$Native_String.slice;
var _elm_lang$core$String$repeat = _elm_lang$core$Native_String.repeat;
var _elm_lang$core$String$join = _elm_lang$core$Native_String.join;
var _elm_lang$core$String$split = _elm_lang$core$Native_String.split;
var _elm_lang$core$String$foldr = _elm_lang$core$Native_String.foldr;
var _elm_lang$core$String$foldl = _elm_lang$core$Native_String.foldl;
var _elm_lang$core$String$reverse = _elm_lang$core$Native_String.reverse;
var _elm_lang$core$String$filter = _elm_lang$core$Native_String.filter;
var _elm_lang$core$String$map = _elm_lang$core$Native_String.map;
var _elm_lang$core$String$length = _elm_lang$core$Native_String.length;
var _elm_lang$core$String$concat = _elm_lang$core$Native_String.concat;
var _elm_lang$core$String$append = _elm_lang$core$Native_String.append;
var _elm_lang$core$String$uncons = _elm_lang$core$Native_String.uncons;
var _elm_lang$core$String$cons = _elm_lang$core$Native_String.cons;
var _elm_lang$core$String$fromChar = function ($char) {
	return A2(_elm_lang$core$String$cons, $char, '');
};
var _elm_lang$core$String$isEmpty = _elm_lang$core$Native_String.isEmpty;

var _elm_lang$core$Tuple$mapSecond = F2(
	function (func, _p0) {
		var _p1 = _p0;
		return {
			ctor: '_Tuple2',
			_0: _p1._0,
			_1: func(_p1._1)
		};
	});
var _elm_lang$core$Tuple$mapFirst = F2(
	function (func, _p2) {
		var _p3 = _p2;
		return {
			ctor: '_Tuple2',
			_0: func(_p3._0),
			_1: _p3._1
		};
	});
var _elm_lang$core$Tuple$second = function (_p4) {
	var _p5 = _p4;
	return _p5._1;
};
var _elm_lang$core$Tuple$first = function (_p6) {
	var _p7 = _p6;
	return _p7._0;
};

//import //

var _elm_lang$core$Native_Platform = function() {


// PROGRAMS

function program(impl)
{
	return function(flagDecoder)
	{
		return function(object, moduleName)
		{
			object['worker'] = function worker(flags)
			{
				if (typeof flags !== 'undefined')
				{
					throw new Error(
						'The `' + moduleName + '` module does not need flags.\n'
						+ 'Call ' + moduleName + '.worker() with no arguments and you should be all set!'
					);
				}

				return initialize(
					impl.init,
					impl.update,
					impl.subscriptions,
					renderer
				);
			};
		};
	};
}

function programWithFlags(impl)
{
	return function(flagDecoder)
	{
		return function(object, moduleName)
		{
			object['worker'] = function worker(flags)
			{
				if (typeof flagDecoder === 'undefined')
				{
					throw new Error(
						'Are you trying to sneak a Never value into Elm? Trickster!\n'
						+ 'It looks like ' + moduleName + '.main is defined with `programWithFlags` but has type `Program Never`.\n'
						+ 'Use `program` instead if you do not want flags.'
					);
				}

				var result = A2(_elm_lang$core$Native_Json.run, flagDecoder, flags);
				if (result.ctor === 'Err')
				{
					throw new Error(
						moduleName + '.worker(...) was called with an unexpected argument.\n'
						+ 'I tried to convert it to an Elm value, but ran into this problem:\n\n'
						+ result._0
					);
				}

				return initialize(
					impl.init(result._0),
					impl.update,
					impl.subscriptions,
					renderer
				);
			};
		};
	};
}

function renderer(enqueue, _)
{
	return function(_) {};
}


// HTML TO PROGRAM

function htmlToProgram(vnode)
{
	var emptyBag = batch(_elm_lang$core$Native_List.Nil);
	var noChange = _elm_lang$core$Native_Utils.Tuple2(
		_elm_lang$core$Native_Utils.Tuple0,
		emptyBag
	);

	return _elm_lang$virtual_dom$VirtualDom$program({
		init: noChange,
		view: function(model) { return main; },
		update: F2(function(msg, model) { return noChange; }),
		subscriptions: function (model) { return emptyBag; }
	});
}


// INITIALIZE A PROGRAM

function initialize(init, update, subscriptions, renderer)
{
	// ambient state
	var managers = {};
	var updateView;

	// init and update state in main process
	var initApp = _elm_lang$core$Native_Scheduler.nativeBinding(function(callback) {
		var model = init._0;
		updateView = renderer(enqueue, model);
		var cmds = init._1;
		var subs = subscriptions(model);
		dispatchEffects(managers, cmds, subs);
		callback(_elm_lang$core$Native_Scheduler.succeed(model));
	});

	function onMessage(msg, model)
	{
		return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback) {
			var results = A2(update, msg, model);
			model = results._0;
			updateView(model);
			var cmds = results._1;
			var subs = subscriptions(model);
			dispatchEffects(managers, cmds, subs);
			callback(_elm_lang$core$Native_Scheduler.succeed(model));
		});
	}

	var mainProcess = spawnLoop(initApp, onMessage);

	function enqueue(msg)
	{
		_elm_lang$core$Native_Scheduler.rawSend(mainProcess, msg);
	}

	var ports = setupEffects(managers, enqueue);

	return ports ? { ports: ports } : {};
}


// EFFECT MANAGERS

var effectManagers = {};

function setupEffects(managers, callback)
{
	var ports;

	// setup all necessary effect managers
	for (var key in effectManagers)
	{
		var manager = effectManagers[key];

		if (manager.isForeign)
		{
			ports = ports || {};
			ports[key] = manager.tag === 'cmd'
				? setupOutgoingPort(key)
				: setupIncomingPort(key, callback);
		}

		managers[key] = makeManager(manager, callback);
	}

	return ports;
}

function makeManager(info, callback)
{
	var router = {
		main: callback,
		self: undefined
	};

	var tag = info.tag;
	var onEffects = info.onEffects;
	var onSelfMsg = info.onSelfMsg;

	function onMessage(msg, state)
	{
		if (msg.ctor === 'self')
		{
			return A3(onSelfMsg, router, msg._0, state);
		}

		var fx = msg._0;
		switch (tag)
		{
			case 'cmd':
				return A3(onEffects, router, fx.cmds, state);

			case 'sub':
				return A3(onEffects, router, fx.subs, state);

			case 'fx':
				return A4(onEffects, router, fx.cmds, fx.subs, state);
		}
	}

	var process = spawnLoop(info.init, onMessage);
	router.self = process;
	return process;
}

function sendToApp(router, msg)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		router.main(msg);
		callback(_elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Native_Utils.Tuple0));
	});
}

function sendToSelf(router, msg)
{
	return A2(_elm_lang$core$Native_Scheduler.send, router.self, {
		ctor: 'self',
		_0: msg
	});
}


// HELPER for STATEFUL LOOPS

function spawnLoop(init, onMessage)
{
	var andThen = _elm_lang$core$Native_Scheduler.andThen;

	function loop(state)
	{
		var handleMsg = _elm_lang$core$Native_Scheduler.receive(function(msg) {
			return onMessage(msg, state);
		});
		return A2(andThen, loop, handleMsg);
	}

	var task = A2(andThen, loop, init);

	return _elm_lang$core$Native_Scheduler.rawSpawn(task);
}


// BAGS

function leaf(home)
{
	return function(value)
	{
		return {
			type: 'leaf',
			home: home,
			value: value
		};
	};
}

function batch(list)
{
	return {
		type: 'node',
		branches: list
	};
}

function map(tagger, bag)
{
	return {
		type: 'map',
		tagger: tagger,
		tree: bag
	}
}


// PIPE BAGS INTO EFFECT MANAGERS

function dispatchEffects(managers, cmdBag, subBag)
{
	var effectsDict = {};
	gatherEffects(true, cmdBag, effectsDict, null);
	gatherEffects(false, subBag, effectsDict, null);

	for (var home in managers)
	{
		var fx = home in effectsDict
			? effectsDict[home]
			: {
				cmds: _elm_lang$core$Native_List.Nil,
				subs: _elm_lang$core$Native_List.Nil
			};

		_elm_lang$core$Native_Scheduler.rawSend(managers[home], { ctor: 'fx', _0: fx });
	}
}

function gatherEffects(isCmd, bag, effectsDict, taggers)
{
	switch (bag.type)
	{
		case 'leaf':
			var home = bag.home;
			var effect = toEffect(isCmd, home, taggers, bag.value);
			effectsDict[home] = insert(isCmd, effect, effectsDict[home]);
			return;

		case 'node':
			var list = bag.branches;
			while (list.ctor !== '[]')
			{
				gatherEffects(isCmd, list._0, effectsDict, taggers);
				list = list._1;
			}
			return;

		case 'map':
			gatherEffects(isCmd, bag.tree, effectsDict, {
				tagger: bag.tagger,
				rest: taggers
			});
			return;
	}
}

function toEffect(isCmd, home, taggers, value)
{
	function applyTaggers(x)
	{
		var temp = taggers;
		while (temp)
		{
			x = temp.tagger(x);
			temp = temp.rest;
		}
		return x;
	}

	var map = isCmd
		? effectManagers[home].cmdMap
		: effectManagers[home].subMap;

	return A2(map, applyTaggers, value)
}

function insert(isCmd, newEffect, effects)
{
	effects = effects || {
		cmds: _elm_lang$core$Native_List.Nil,
		subs: _elm_lang$core$Native_List.Nil
	};
	if (isCmd)
	{
		effects.cmds = _elm_lang$core$Native_List.Cons(newEffect, effects.cmds);
		return effects;
	}
	effects.subs = _elm_lang$core$Native_List.Cons(newEffect, effects.subs);
	return effects;
}


// PORTS

function checkPortName(name)
{
	if (name in effectManagers)
	{
		throw new Error('There can only be one port named `' + name + '`, but your program has multiple.');
	}
}


// OUTGOING PORTS

function outgoingPort(name, converter)
{
	checkPortName(name);
	effectManagers[name] = {
		tag: 'cmd',
		cmdMap: outgoingPortMap,
		converter: converter,
		isForeign: true
	};
	return leaf(name);
}

var outgoingPortMap = F2(function cmdMap(tagger, value) {
	return value;
});

function setupOutgoingPort(name)
{
	var subs = [];
	var converter = effectManagers[name].converter;

	// CREATE MANAGER

	var init = _elm_lang$core$Native_Scheduler.succeed(null);

	function onEffects(router, cmdList, state)
	{
		while (cmdList.ctor !== '[]')
		{
			// grab a separate reference to subs in case unsubscribe is called
			var currentSubs = subs;
			var value = converter(cmdList._0);
			for (var i = 0; i < currentSubs.length; i++)
			{
				currentSubs[i](value);
			}
			cmdList = cmdList._1;
		}
		return init;
	}

	effectManagers[name].init = init;
	effectManagers[name].onEffects = F3(onEffects);

	// PUBLIC API

	function subscribe(callback)
	{
		subs.push(callback);
	}

	function unsubscribe(callback)
	{
		// copy subs into a new array in case unsubscribe is called within a
		// subscribed callback
		subs = subs.slice();
		var index = subs.indexOf(callback);
		if (index >= 0)
		{
			subs.splice(index, 1);
		}
	}

	return {
		subscribe: subscribe,
		unsubscribe: unsubscribe
	};
}


// INCOMING PORTS

function incomingPort(name, converter)
{
	checkPortName(name);
	effectManagers[name] = {
		tag: 'sub',
		subMap: incomingPortMap,
		converter: converter,
		isForeign: true
	};
	return leaf(name);
}

var incomingPortMap = F2(function subMap(tagger, finalTagger)
{
	return function(value)
	{
		return tagger(finalTagger(value));
	};
});

function setupIncomingPort(name, callback)
{
	var sentBeforeInit = [];
	var subs = _elm_lang$core$Native_List.Nil;
	var converter = effectManagers[name].converter;
	var currentOnEffects = preInitOnEffects;
	var currentSend = preInitSend;

	// CREATE MANAGER

	var init = _elm_lang$core$Native_Scheduler.succeed(null);

	function preInitOnEffects(router, subList, state)
	{
		var postInitResult = postInitOnEffects(router, subList, state);

		for(var i = 0; i < sentBeforeInit.length; i++)
		{
			postInitSend(sentBeforeInit[i]);
		}

		sentBeforeInit = null; // to release objects held in queue
		currentSend = postInitSend;
		currentOnEffects = postInitOnEffects;
		return postInitResult;
	}

	function postInitOnEffects(router, subList, state)
	{
		subs = subList;
		return init;
	}

	function onEffects(router, subList, state)
	{
		return currentOnEffects(router, subList, state);
	}

	effectManagers[name].init = init;
	effectManagers[name].onEffects = F3(onEffects);

	// PUBLIC API

	function preInitSend(value)
	{
		sentBeforeInit.push(value);
	}

	function postInitSend(value)
	{
		var temp = subs;
		while (temp.ctor !== '[]')
		{
			callback(temp._0(value));
			temp = temp._1;
		}
	}

	function send(incomingValue)
	{
		var result = A2(_elm_lang$core$Json_Decode$decodeValue, converter, incomingValue);
		if (result.ctor === 'Err')
		{
			throw new Error('Trying to send an unexpected type of value through port `' + name + '`:\n' + result._0);
		}

		currentSend(result._0);
	}

	return { send: send };
}

return {
	// routers
	sendToApp: F2(sendToApp),
	sendToSelf: F2(sendToSelf),

	// global setup
	effectManagers: effectManagers,
	outgoingPort: outgoingPort,
	incomingPort: incomingPort,

	htmlToProgram: htmlToProgram,
	program: program,
	programWithFlags: programWithFlags,
	initialize: initialize,

	// effect bags
	leaf: leaf,
	batch: batch,
	map: F2(map)
};

}();

//import Native.Utils //

var _elm_lang$core$Native_Scheduler = function() {

var MAX_STEPS = 10000;


// TASKS

function succeed(value)
{
	return {
		ctor: '_Task_succeed',
		value: value
	};
}

function fail(error)
{
	return {
		ctor: '_Task_fail',
		value: error
	};
}

function nativeBinding(callback)
{
	return {
		ctor: '_Task_nativeBinding',
		callback: callback,
		cancel: null
	};
}

function andThen(callback, task)
{
	return {
		ctor: '_Task_andThen',
		callback: callback,
		task: task
	};
}

function onError(callback, task)
{
	return {
		ctor: '_Task_onError',
		callback: callback,
		task: task
	};
}

function receive(callback)
{
	return {
		ctor: '_Task_receive',
		callback: callback
	};
}


// PROCESSES

function rawSpawn(task)
{
	var process = {
		ctor: '_Process',
		id: _elm_lang$core$Native_Utils.guid(),
		root: task,
		stack: null,
		mailbox: []
	};

	enqueue(process);

	return process;
}

function spawn(task)
{
	return nativeBinding(function(callback) {
		var process = rawSpawn(task);
		callback(succeed(process));
	});
}

function rawSend(process, msg)
{
	process.mailbox.push(msg);
	enqueue(process);
}

function send(process, msg)
{
	return nativeBinding(function(callback) {
		rawSend(process, msg);
		callback(succeed(_elm_lang$core$Native_Utils.Tuple0));
	});
}

function kill(process)
{
	return nativeBinding(function(callback) {
		var root = process.root;
		if (root.ctor === '_Task_nativeBinding' && root.cancel)
		{
			root.cancel();
		}

		process.root = null;

		callback(succeed(_elm_lang$core$Native_Utils.Tuple0));
	});
}

function sleep(time)
{
	return nativeBinding(function(callback) {
		var id = setTimeout(function() {
			callback(succeed(_elm_lang$core$Native_Utils.Tuple0));
		}, time);

		return function() { clearTimeout(id); };
	});
}


// STEP PROCESSES

function step(numSteps, process)
{
	while (numSteps < MAX_STEPS)
	{
		var ctor = process.root.ctor;

		if (ctor === '_Task_succeed')
		{
			while (process.stack && process.stack.ctor === '_Task_onError')
			{
				process.stack = process.stack.rest;
			}
			if (process.stack === null)
			{
				break;
			}
			process.root = process.stack.callback(process.root.value);
			process.stack = process.stack.rest;
			++numSteps;
			continue;
		}

		if (ctor === '_Task_fail')
		{
			while (process.stack && process.stack.ctor === '_Task_andThen')
			{
				process.stack = process.stack.rest;
			}
			if (process.stack === null)
			{
				break;
			}
			process.root = process.stack.callback(process.root.value);
			process.stack = process.stack.rest;
			++numSteps;
			continue;
		}

		if (ctor === '_Task_andThen')
		{
			process.stack = {
				ctor: '_Task_andThen',
				callback: process.root.callback,
				rest: process.stack
			};
			process.root = process.root.task;
			++numSteps;
			continue;
		}

		if (ctor === '_Task_onError')
		{
			process.stack = {
				ctor: '_Task_onError',
				callback: process.root.callback,
				rest: process.stack
			};
			process.root = process.root.task;
			++numSteps;
			continue;
		}

		if (ctor === '_Task_nativeBinding')
		{
			process.root.cancel = process.root.callback(function(newRoot) {
				process.root = newRoot;
				enqueue(process);
			});

			break;
		}

		if (ctor === '_Task_receive')
		{
			var mailbox = process.mailbox;
			if (mailbox.length === 0)
			{
				break;
			}

			process.root = process.root.callback(mailbox.shift());
			++numSteps;
			continue;
		}

		throw new Error(ctor);
	}

	if (numSteps < MAX_STEPS)
	{
		return numSteps + 1;
	}
	enqueue(process);

	return numSteps;
}


// WORK QUEUE

var working = false;
var workQueue = [];

function enqueue(process)
{
	workQueue.push(process);

	if (!working)
	{
		setTimeout(work, 0);
		working = true;
	}
}

function work()
{
	var numSteps = 0;
	var process;
	while (numSteps < MAX_STEPS && (process = workQueue.shift()))
	{
		if (process.root)
		{
			numSteps = step(numSteps, process);
		}
	}
	if (!process)
	{
		working = false;
		return;
	}
	setTimeout(work, 0);
}


return {
	succeed: succeed,
	fail: fail,
	nativeBinding: nativeBinding,
	andThen: F2(andThen),
	onError: F2(onError),
	receive: receive,

	spawn: spawn,
	kill: kill,
	sleep: sleep,
	send: F2(send),

	rawSpawn: rawSpawn,
	rawSend: rawSend
};

}();
var _elm_lang$core$Platform_Cmd$batch = _elm_lang$core$Native_Platform.batch;
var _elm_lang$core$Platform_Cmd$none = _elm_lang$core$Platform_Cmd$batch(
	{ctor: '[]'});
var _elm_lang$core$Platform_Cmd_ops = _elm_lang$core$Platform_Cmd_ops || {};
_elm_lang$core$Platform_Cmd_ops['!'] = F2(
	function (model, commands) {
		return {
			ctor: '_Tuple2',
			_0: model,
			_1: _elm_lang$core$Platform_Cmd$batch(commands)
		};
	});
var _elm_lang$core$Platform_Cmd$map = _elm_lang$core$Native_Platform.map;
var _elm_lang$core$Platform_Cmd$Cmd = {ctor: 'Cmd'};

var _elm_lang$core$Platform_Sub$batch = _elm_lang$core$Native_Platform.batch;
var _elm_lang$core$Platform_Sub$none = _elm_lang$core$Platform_Sub$batch(
	{ctor: '[]'});
var _elm_lang$core$Platform_Sub$map = _elm_lang$core$Native_Platform.map;
var _elm_lang$core$Platform_Sub$Sub = {ctor: 'Sub'};

var _elm_lang$core$Platform$hack = _elm_lang$core$Native_Scheduler.succeed;
var _elm_lang$core$Platform$sendToSelf = _elm_lang$core$Native_Platform.sendToSelf;
var _elm_lang$core$Platform$sendToApp = _elm_lang$core$Native_Platform.sendToApp;
var _elm_lang$core$Platform$programWithFlags = _elm_lang$core$Native_Platform.programWithFlags;
var _elm_lang$core$Platform$program = _elm_lang$core$Native_Platform.program;
var _elm_lang$core$Platform$Program = {ctor: 'Program'};
var _elm_lang$core$Platform$Task = {ctor: 'Task'};
var _elm_lang$core$Platform$ProcessId = {ctor: 'ProcessId'};
var _elm_lang$core$Platform$Router = {ctor: 'Router'};

//import Native.List //

var _elm_lang$core$Native_Array = function() {

// A RRB-Tree has two distinct data types.
// Leaf -> "height"  is always 0
//         "table"   is an array of elements
// Node -> "height"  is always greater than 0
//         "table"   is an array of child nodes
//         "lengths" is an array of accumulated lengths of the child nodes

// M is the maximal table size. 32 seems fast. E is the allowed increase
// of search steps when concatting to find an index. Lower values will
// decrease balancing, but will increase search steps.
var M = 32;
var E = 2;

// An empty array.
var empty = {
	ctor: '_Array',
	height: 0,
	table: []
};


function get(i, array)
{
	if (i < 0 || i >= length(array))
	{
		throw new Error(
			'Index ' + i + ' is out of range. Check the length of ' +
			'your array first or use getMaybe or getWithDefault.');
	}
	return unsafeGet(i, array);
}


function unsafeGet(i, array)
{
	for (var x = array.height; x > 0; x--)
	{
		var slot = i >> (x * 5);
		while (array.lengths[slot] <= i)
		{
			slot++;
		}
		if (slot > 0)
		{
			i -= array.lengths[slot - 1];
		}
		array = array.table[slot];
	}
	return array.table[i];
}


// Sets the value at the index i. Only the nodes leading to i will get
// copied and updated.
function set(i, item, array)
{
	if (i < 0 || length(array) <= i)
	{
		return array;
	}
	return unsafeSet(i, item, array);
}


function unsafeSet(i, item, array)
{
	array = nodeCopy(array);

	if (array.height === 0)
	{
		array.table[i] = item;
	}
	else
	{
		var slot = getSlot(i, array);
		if (slot > 0)
		{
			i -= array.lengths[slot - 1];
		}
		array.table[slot] = unsafeSet(i, item, array.table[slot]);
	}
	return array;
}


function initialize(len, f)
{
	if (len <= 0)
	{
		return empty;
	}
	var h = Math.floor( Math.log(len) / Math.log(M) );
	return initialize_(f, h, 0, len);
}

function initialize_(f, h, from, to)
{
	if (h === 0)
	{
		var table = new Array((to - from) % (M + 1));
		for (var i = 0; i < table.length; i++)
		{
		  table[i] = f(from + i);
		}
		return {
			ctor: '_Array',
			height: 0,
			table: table
		};
	}

	var step = Math.pow(M, h);
	var table = new Array(Math.ceil((to - from) / step));
	var lengths = new Array(table.length);
	for (var i = 0; i < table.length; i++)
	{
		table[i] = initialize_(f, h - 1, from + (i * step), Math.min(from + ((i + 1) * step), to));
		lengths[i] = length(table[i]) + (i > 0 ? lengths[i-1] : 0);
	}
	return {
		ctor: '_Array',
		height: h,
		table: table,
		lengths: lengths
	};
}

function fromList(list)
{
	if (list.ctor === '[]')
	{
		return empty;
	}

	// Allocate M sized blocks (table) and write list elements to it.
	var table = new Array(M);
	var nodes = [];
	var i = 0;

	while (list.ctor !== '[]')
	{
		table[i] = list._0;
		list = list._1;
		i++;

		// table is full, so we can push a leaf containing it into the
		// next node.
		if (i === M)
		{
			var leaf = {
				ctor: '_Array',
				height: 0,
				table: table
			};
			fromListPush(leaf, nodes);
			table = new Array(M);
			i = 0;
		}
	}

	// Maybe there is something left on the table.
	if (i > 0)
	{
		var leaf = {
			ctor: '_Array',
			height: 0,
			table: table.splice(0, i)
		};
		fromListPush(leaf, nodes);
	}

	// Go through all of the nodes and eventually push them into higher nodes.
	for (var h = 0; h < nodes.length - 1; h++)
	{
		if (nodes[h].table.length > 0)
		{
			fromListPush(nodes[h], nodes);
		}
	}

	var head = nodes[nodes.length - 1];
	if (head.height > 0 && head.table.length === 1)
	{
		return head.table[0];
	}
	else
	{
		return head;
	}
}

// Push a node into a higher node as a child.
function fromListPush(toPush, nodes)
{
	var h = toPush.height;

	// Maybe the node on this height does not exist.
	if (nodes.length === h)
	{
		var node = {
			ctor: '_Array',
			height: h + 1,
			table: [],
			lengths: []
		};
		nodes.push(node);
	}

	nodes[h].table.push(toPush);
	var len = length(toPush);
	if (nodes[h].lengths.length > 0)
	{
		len += nodes[h].lengths[nodes[h].lengths.length - 1];
	}
	nodes[h].lengths.push(len);

	if (nodes[h].table.length === M)
	{
		fromListPush(nodes[h], nodes);
		nodes[h] = {
			ctor: '_Array',
			height: h + 1,
			table: [],
			lengths: []
		};
	}
}

// Pushes an item via push_ to the bottom right of a tree.
function push(item, a)
{
	var pushed = push_(item, a);
	if (pushed !== null)
	{
		return pushed;
	}

	var newTree = create(item, a.height);
	return siblise(a, newTree);
}

// Recursively tries to push an item to the bottom-right most
// tree possible. If there is no space left for the item,
// null will be returned.
function push_(item, a)
{
	// Handle resursion stop at leaf level.
	if (a.height === 0)
	{
		if (a.table.length < M)
		{
			var newA = {
				ctor: '_Array',
				height: 0,
				table: a.table.slice()
			};
			newA.table.push(item);
			return newA;
		}
		else
		{
		  return null;
		}
	}

	// Recursively push
	var pushed = push_(item, botRight(a));

	// There was space in the bottom right tree, so the slot will
	// be updated.
	if (pushed !== null)
	{
		var newA = nodeCopy(a);
		newA.table[newA.table.length - 1] = pushed;
		newA.lengths[newA.lengths.length - 1]++;
		return newA;
	}

	// When there was no space left, check if there is space left
	// for a new slot with a tree which contains only the item
	// at the bottom.
	if (a.table.length < M)
	{
		var newSlot = create(item, a.height - 1);
		var newA = nodeCopy(a);
		newA.table.push(newSlot);
		newA.lengths.push(newA.lengths[newA.lengths.length - 1] + length(newSlot));
		return newA;
	}
	else
	{
		return null;
	}
}

// Converts an array into a list of elements.
function toList(a)
{
	return toList_(_elm_lang$core$Native_List.Nil, a);
}

function toList_(list, a)
{
	for (var i = a.table.length - 1; i >= 0; i--)
	{
		list =
			a.height === 0
				? _elm_lang$core$Native_List.Cons(a.table[i], list)
				: toList_(list, a.table[i]);
	}
	return list;
}

// Maps a function over the elements of an array.
function map(f, a)
{
	var newA = {
		ctor: '_Array',
		height: a.height,
		table: new Array(a.table.length)
	};
	if (a.height > 0)
	{
		newA.lengths = a.lengths;
	}
	for (var i = 0; i < a.table.length; i++)
	{
		newA.table[i] =
			a.height === 0
				? f(a.table[i])
				: map(f, a.table[i]);
	}
	return newA;
}

// Maps a function over the elements with their index as first argument.
function indexedMap(f, a)
{
	return indexedMap_(f, a, 0);
}

function indexedMap_(f, a, from)
{
	var newA = {
		ctor: '_Array',
		height: a.height,
		table: new Array(a.table.length)
	};
	if (a.height > 0)
	{
		newA.lengths = a.lengths;
	}
	for (var i = 0; i < a.table.length; i++)
	{
		newA.table[i] =
			a.height === 0
				? A2(f, from + i, a.table[i])
				: indexedMap_(f, a.table[i], i == 0 ? from : from + a.lengths[i - 1]);
	}
	return newA;
}

function foldl(f, b, a)
{
	if (a.height === 0)
	{
		for (var i = 0; i < a.table.length; i++)
		{
			b = A2(f, a.table[i], b);
		}
	}
	else
	{
		for (var i = 0; i < a.table.length; i++)
		{
			b = foldl(f, b, a.table[i]);
		}
	}
	return b;
}

function foldr(f, b, a)
{
	if (a.height === 0)
	{
		for (var i = a.table.length; i--; )
		{
			b = A2(f, a.table[i], b);
		}
	}
	else
	{
		for (var i = a.table.length; i--; )
		{
			b = foldr(f, b, a.table[i]);
		}
	}
	return b;
}

// TODO: currently, it slices the right, then the left. This can be
// optimized.
function slice(from, to, a)
{
	if (from < 0)
	{
		from += length(a);
	}
	if (to < 0)
	{
		to += length(a);
	}
	return sliceLeft(from, sliceRight(to, a));
}

function sliceRight(to, a)
{
	if (to === length(a))
	{
		return a;
	}

	// Handle leaf level.
	if (a.height === 0)
	{
		var newA = { ctor:'_Array', height:0 };
		newA.table = a.table.slice(0, to);
		return newA;
	}

	// Slice the right recursively.
	var right = getSlot(to, a);
	var sliced = sliceRight(to - (right > 0 ? a.lengths[right - 1] : 0), a.table[right]);

	// Maybe the a node is not even needed, as sliced contains the whole slice.
	if (right === 0)
	{
		return sliced;
	}

	// Create new node.
	var newA = {
		ctor: '_Array',
		height: a.height,
		table: a.table.slice(0, right),
		lengths: a.lengths.slice(0, right)
	};
	if (sliced.table.length > 0)
	{
		newA.table[right] = sliced;
		newA.lengths[right] = length(sliced) + (right > 0 ? newA.lengths[right - 1] : 0);
	}
	return newA;
}

function sliceLeft(from, a)
{
	if (from === 0)
	{
		return a;
	}

	// Handle leaf level.
	if (a.height === 0)
	{
		var newA = { ctor:'_Array', height:0 };
		newA.table = a.table.slice(from, a.table.length + 1);
		return newA;
	}

	// Slice the left recursively.
	var left = getSlot(from, a);
	var sliced = sliceLeft(from - (left > 0 ? a.lengths[left - 1] : 0), a.table[left]);

	// Maybe the a node is not even needed, as sliced contains the whole slice.
	if (left === a.table.length - 1)
	{
		return sliced;
	}

	// Create new node.
	var newA = {
		ctor: '_Array',
		height: a.height,
		table: a.table.slice(left, a.table.length + 1),
		lengths: new Array(a.table.length - left)
	};
	newA.table[0] = sliced;
	var len = 0;
	for (var i = 0; i < newA.table.length; i++)
	{
		len += length(newA.table[i]);
		newA.lengths[i] = len;
	}

	return newA;
}

// Appends two trees.
function append(a,b)
{
	if (a.table.length === 0)
	{
		return b;
	}
	if (b.table.length === 0)
	{
		return a;
	}

	var c = append_(a, b);

	// Check if both nodes can be crunshed together.
	if (c[0].table.length + c[1].table.length <= M)
	{
		if (c[0].table.length === 0)
		{
			return c[1];
		}
		if (c[1].table.length === 0)
		{
			return c[0];
		}

		// Adjust .table and .lengths
		c[0].table = c[0].table.concat(c[1].table);
		if (c[0].height > 0)
		{
			var len = length(c[0]);
			for (var i = 0; i < c[1].lengths.length; i++)
			{
				c[1].lengths[i] += len;
			}
			c[0].lengths = c[0].lengths.concat(c[1].lengths);
		}

		return c[0];
	}

	if (c[0].height > 0)
	{
		var toRemove = calcToRemove(a, b);
		if (toRemove > E)
		{
			c = shuffle(c[0], c[1], toRemove);
		}
	}

	return siblise(c[0], c[1]);
}

// Returns an array of two nodes; right and left. One node _may_ be empty.
function append_(a, b)
{
	if (a.height === 0 && b.height === 0)
	{
		return [a, b];
	}

	if (a.height !== 1 || b.height !== 1)
	{
		if (a.height === b.height)
		{
			a = nodeCopy(a);
			b = nodeCopy(b);
			var appended = append_(botRight(a), botLeft(b));

			insertRight(a, appended[1]);
			insertLeft(b, appended[0]);
		}
		else if (a.height > b.height)
		{
			a = nodeCopy(a);
			var appended = append_(botRight(a), b);

			insertRight(a, appended[0]);
			b = parentise(appended[1], appended[1].height + 1);
		}
		else
		{
			b = nodeCopy(b);
			var appended = append_(a, botLeft(b));

			var left = appended[0].table.length === 0 ? 0 : 1;
			var right = left === 0 ? 1 : 0;
			insertLeft(b, appended[left]);
			a = parentise(appended[right], appended[right].height + 1);
		}
	}

	// Check if balancing is needed and return based on that.
	if (a.table.length === 0 || b.table.length === 0)
	{
		return [a, b];
	}

	var toRemove = calcToRemove(a, b);
	if (toRemove <= E)
	{
		return [a, b];
	}
	return shuffle(a, b, toRemove);
}

// Helperfunctions for append_. Replaces a child node at the side of the parent.
function insertRight(parent, node)
{
	var index = parent.table.length - 1;
	parent.table[index] = node;
	parent.lengths[index] = length(node);
	parent.lengths[index] += index > 0 ? parent.lengths[index - 1] : 0;
}

function insertLeft(parent, node)
{
	if (node.table.length > 0)
	{
		parent.table[0] = node;
		parent.lengths[0] = length(node);

		var len = length(parent.table[0]);
		for (var i = 1; i < parent.lengths.length; i++)
		{
			len += length(parent.table[i]);
			parent.lengths[i] = len;
		}
	}
	else
	{
		parent.table.shift();
		for (var i = 1; i < parent.lengths.length; i++)
		{
			parent.lengths[i] = parent.lengths[i] - parent.lengths[0];
		}
		parent.lengths.shift();
	}
}

// Returns the extra search steps for E. Refer to the paper.
function calcToRemove(a, b)
{
	var subLengths = 0;
	for (var i = 0; i < a.table.length; i++)
	{
		subLengths += a.table[i].table.length;
	}
	for (var i = 0; i < b.table.length; i++)
	{
		subLengths += b.table[i].table.length;
	}

	var toRemove = a.table.length + b.table.length;
	return toRemove - (Math.floor((subLengths - 1) / M) + 1);
}

// get2, set2 and saveSlot are helpers for accessing elements over two arrays.
function get2(a, b, index)
{
	return index < a.length
		? a[index]
		: b[index - a.length];
}

function set2(a, b, index, value)
{
	if (index < a.length)
	{
		a[index] = value;
	}
	else
	{
		b[index - a.length] = value;
	}
}

function saveSlot(a, b, index, slot)
{
	set2(a.table, b.table, index, slot);

	var l = (index === 0 || index === a.lengths.length)
		? 0
		: get2(a.lengths, a.lengths, index - 1);

	set2(a.lengths, b.lengths, index, l + length(slot));
}

// Creates a node or leaf with a given length at their arrays for perfomance.
// Is only used by shuffle.
function createNode(h, length)
{
	if (length < 0)
	{
		length = 0;
	}
	var a = {
		ctor: '_Array',
		height: h,
		table: new Array(length)
	};
	if (h > 0)
	{
		a.lengths = new Array(length);
	}
	return a;
}

// Returns an array of two balanced nodes.
function shuffle(a, b, toRemove)
{
	var newA = createNode(a.height, Math.min(M, a.table.length + b.table.length - toRemove));
	var newB = createNode(a.height, newA.table.length - (a.table.length + b.table.length - toRemove));

	// Skip the slots with size M. More precise: copy the slot references
	// to the new node
	var read = 0;
	while (get2(a.table, b.table, read).table.length % M === 0)
	{
		set2(newA.table, newB.table, read, get2(a.table, b.table, read));
		set2(newA.lengths, newB.lengths, read, get2(a.lengths, b.lengths, read));
		read++;
	}

	// Pulling items from left to right, caching in a slot before writing
	// it into the new nodes.
	var write = read;
	var slot = new createNode(a.height - 1, 0);
	var from = 0;

	// If the current slot is still containing data, then there will be at
	// least one more write, so we do not break this loop yet.
	while (read - write - (slot.table.length > 0 ? 1 : 0) < toRemove)
	{
		// Find out the max possible items for copying.
		var source = get2(a.table, b.table, read);
		var to = Math.min(M - slot.table.length, source.table.length);

		// Copy and adjust size table.
		slot.table = slot.table.concat(source.table.slice(from, to));
		if (slot.height > 0)
		{
			var len = slot.lengths.length;
			for (var i = len; i < len + to - from; i++)
			{
				slot.lengths[i] = length(slot.table[i]);
				slot.lengths[i] += (i > 0 ? slot.lengths[i - 1] : 0);
			}
		}

		from += to;

		// Only proceed to next slots[i] if the current one was
		// fully copied.
		if (source.table.length <= to)
		{
			read++; from = 0;
		}

		// Only create a new slot if the current one is filled up.
		if (slot.table.length === M)
		{
			saveSlot(newA, newB, write, slot);
			slot = createNode(a.height - 1, 0);
			write++;
		}
	}

	// Cleanup after the loop. Copy the last slot into the new nodes.
	if (slot.table.length > 0)
	{
		saveSlot(newA, newB, write, slot);
		write++;
	}

	// Shift the untouched slots to the left
	while (read < a.table.length + b.table.length )
	{
		saveSlot(newA, newB, write, get2(a.table, b.table, read));
		read++;
		write++;
	}

	return [newA, newB];
}

// Navigation functions
function botRight(a)
{
	return a.table[a.table.length - 1];
}
function botLeft(a)
{
	return a.table[0];
}

// Copies a node for updating. Note that you should not use this if
// only updating only one of "table" or "lengths" for performance reasons.
function nodeCopy(a)
{
	var newA = {
		ctor: '_Array',
		height: a.height,
		table: a.table.slice()
	};
	if (a.height > 0)
	{
		newA.lengths = a.lengths.slice();
	}
	return newA;
}

// Returns how many items are in the tree.
function length(array)
{
	if (array.height === 0)
	{
		return array.table.length;
	}
	else
	{
		return array.lengths[array.lengths.length - 1];
	}
}

// Calculates in which slot of "table" the item probably is, then
// find the exact slot via forward searching in  "lengths". Returns the index.
function getSlot(i, a)
{
	var slot = i >> (5 * a.height);
	while (a.lengths[slot] <= i)
	{
		slot++;
	}
	return slot;
}

// Recursively creates a tree with a given height containing
// only the given item.
function create(item, h)
{
	if (h === 0)
	{
		return {
			ctor: '_Array',
			height: 0,
			table: [item]
		};
	}
	return {
		ctor: '_Array',
		height: h,
		table: [create(item, h - 1)],
		lengths: [1]
	};
}

// Recursively creates a tree that contains the given tree.
function parentise(tree, h)
{
	if (h === tree.height)
	{
		return tree;
	}

	return {
		ctor: '_Array',
		height: h,
		table: [parentise(tree, h - 1)],
		lengths: [length(tree)]
	};
}

// Emphasizes blood brotherhood beneath two trees.
function siblise(a, b)
{
	return {
		ctor: '_Array',
		height: a.height + 1,
		table: [a, b],
		lengths: [length(a), length(a) + length(b)]
	};
}

function toJSArray(a)
{
	var jsArray = new Array(length(a));
	toJSArray_(jsArray, 0, a);
	return jsArray;
}

function toJSArray_(jsArray, i, a)
{
	for (var t = 0; t < a.table.length; t++)
	{
		if (a.height === 0)
		{
			jsArray[i + t] = a.table[t];
		}
		else
		{
			var inc = t === 0 ? 0 : a.lengths[t - 1];
			toJSArray_(jsArray, i + inc, a.table[t]);
		}
	}
}

function fromJSArray(jsArray)
{
	if (jsArray.length === 0)
	{
		return empty;
	}
	var h = Math.floor(Math.log(jsArray.length) / Math.log(M));
	return fromJSArray_(jsArray, h, 0, jsArray.length);
}

function fromJSArray_(jsArray, h, from, to)
{
	if (h === 0)
	{
		return {
			ctor: '_Array',
			height: 0,
			table: jsArray.slice(from, to)
		};
	}

	var step = Math.pow(M, h);
	var table = new Array(Math.ceil((to - from) / step));
	var lengths = new Array(table.length);
	for (var i = 0; i < table.length; i++)
	{
		table[i] = fromJSArray_(jsArray, h - 1, from + (i * step), Math.min(from + ((i + 1) * step), to));
		lengths[i] = length(table[i]) + (i > 0 ? lengths[i - 1] : 0);
	}
	return {
		ctor: '_Array',
		height: h,
		table: table,
		lengths: lengths
	};
}

return {
	empty: empty,
	fromList: fromList,
	toList: toList,
	initialize: F2(initialize),
	append: F2(append),
	push: F2(push),
	slice: F3(slice),
	get: F2(get),
	set: F3(set),
	map: F2(map),
	indexedMap: F2(indexedMap),
	foldl: F3(foldl),
	foldr: F3(foldr),
	length: length,

	toJSArray: toJSArray,
	fromJSArray: fromJSArray
};

}();
var _elm_lang$core$Array$append = _elm_lang$core$Native_Array.append;
var _elm_lang$core$Array$length = _elm_lang$core$Native_Array.length;
var _elm_lang$core$Array$isEmpty = function (array) {
	return _elm_lang$core$Native_Utils.eq(
		_elm_lang$core$Array$length(array),
		0);
};
var _elm_lang$core$Array$slice = _elm_lang$core$Native_Array.slice;
var _elm_lang$core$Array$set = _elm_lang$core$Native_Array.set;
var _elm_lang$core$Array$get = F2(
	function (i, array) {
		return ((_elm_lang$core$Native_Utils.cmp(0, i) < 1) && (_elm_lang$core$Native_Utils.cmp(
			i,
			_elm_lang$core$Native_Array.length(array)) < 0)) ? _elm_lang$core$Maybe$Just(
			A2(_elm_lang$core$Native_Array.get, i, array)) : _elm_lang$core$Maybe$Nothing;
	});
var _elm_lang$core$Array$push = _elm_lang$core$Native_Array.push;
var _elm_lang$core$Array$empty = _elm_lang$core$Native_Array.empty;
var _elm_lang$core$Array$filter = F2(
	function (isOkay, arr) {
		var update = F2(
			function (x, xs) {
				return isOkay(x) ? A2(_elm_lang$core$Native_Array.push, x, xs) : xs;
			});
		return A3(_elm_lang$core$Native_Array.foldl, update, _elm_lang$core$Native_Array.empty, arr);
	});
var _elm_lang$core$Array$foldr = _elm_lang$core$Native_Array.foldr;
var _elm_lang$core$Array$foldl = _elm_lang$core$Native_Array.foldl;
var _elm_lang$core$Array$indexedMap = _elm_lang$core$Native_Array.indexedMap;
var _elm_lang$core$Array$map = _elm_lang$core$Native_Array.map;
var _elm_lang$core$Array$toIndexedList = function (array) {
	return A3(
		_elm_lang$core$List$map2,
		F2(
			function (v0, v1) {
				return {ctor: '_Tuple2', _0: v0, _1: v1};
			}),
		A2(
			_elm_lang$core$List$range,
			0,
			_elm_lang$core$Native_Array.length(array) - 1),
		_elm_lang$core$Native_Array.toList(array));
};
var _elm_lang$core$Array$toList = _elm_lang$core$Native_Array.toList;
var _elm_lang$core$Array$fromList = _elm_lang$core$Native_Array.fromList;
var _elm_lang$core$Array$initialize = _elm_lang$core$Native_Array.initialize;
var _elm_lang$core$Array$repeat = F2(
	function (n, e) {
		return A2(
			_elm_lang$core$Array$initialize,
			n,
			_elm_lang$core$Basics$always(e));
	});
var _elm_lang$core$Array$Array = {ctor: 'Array'};

var _elm_lang$core$Dict$foldr = F3(
	function (f, acc, t) {
		foldr:
		while (true) {
			var _p0 = t;
			if (_p0.ctor === 'RBEmpty_elm_builtin') {
				return acc;
			} else {
				var _v1 = f,
					_v2 = A3(
					f,
					_p0._1,
					_p0._2,
					A3(_elm_lang$core$Dict$foldr, f, acc, _p0._4)),
					_v3 = _p0._3;
				f = _v1;
				acc = _v2;
				t = _v3;
				continue foldr;
			}
		}
	});
var _elm_lang$core$Dict$keys = function (dict) {
	return A3(
		_elm_lang$core$Dict$foldr,
		F3(
			function (key, value, keyList) {
				return {ctor: '::', _0: key, _1: keyList};
			}),
		{ctor: '[]'},
		dict);
};
var _elm_lang$core$Dict$values = function (dict) {
	return A3(
		_elm_lang$core$Dict$foldr,
		F3(
			function (key, value, valueList) {
				return {ctor: '::', _0: value, _1: valueList};
			}),
		{ctor: '[]'},
		dict);
};
var _elm_lang$core$Dict$toList = function (dict) {
	return A3(
		_elm_lang$core$Dict$foldr,
		F3(
			function (key, value, list) {
				return {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: key, _1: value},
					_1: list
				};
			}),
		{ctor: '[]'},
		dict);
};
var _elm_lang$core$Dict$foldl = F3(
	function (f, acc, dict) {
		foldl:
		while (true) {
			var _p1 = dict;
			if (_p1.ctor === 'RBEmpty_elm_builtin') {
				return acc;
			} else {
				var _v5 = f,
					_v6 = A3(
					f,
					_p1._1,
					_p1._2,
					A3(_elm_lang$core$Dict$foldl, f, acc, _p1._3)),
					_v7 = _p1._4;
				f = _v5;
				acc = _v6;
				dict = _v7;
				continue foldl;
			}
		}
	});
var _elm_lang$core$Dict$merge = F6(
	function (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {
		var stepState = F3(
			function (rKey, rValue, _p2) {
				stepState:
				while (true) {
					var _p3 = _p2;
					var _p9 = _p3._1;
					var _p8 = _p3._0;
					var _p4 = _p8;
					if (_p4.ctor === '[]') {
						return {
							ctor: '_Tuple2',
							_0: _p8,
							_1: A3(rightStep, rKey, rValue, _p9)
						};
					} else {
						var _p7 = _p4._1;
						var _p6 = _p4._0._1;
						var _p5 = _p4._0._0;
						if (_elm_lang$core$Native_Utils.cmp(_p5, rKey) < 0) {
							var _v10 = rKey,
								_v11 = rValue,
								_v12 = {
								ctor: '_Tuple2',
								_0: _p7,
								_1: A3(leftStep, _p5, _p6, _p9)
							};
							rKey = _v10;
							rValue = _v11;
							_p2 = _v12;
							continue stepState;
						} else {
							if (_elm_lang$core$Native_Utils.cmp(_p5, rKey) > 0) {
								return {
									ctor: '_Tuple2',
									_0: _p8,
									_1: A3(rightStep, rKey, rValue, _p9)
								};
							} else {
								return {
									ctor: '_Tuple2',
									_0: _p7,
									_1: A4(bothStep, _p5, _p6, rValue, _p9)
								};
							}
						}
					}
				}
			});
		var _p10 = A3(
			_elm_lang$core$Dict$foldl,
			stepState,
			{
				ctor: '_Tuple2',
				_0: _elm_lang$core$Dict$toList(leftDict),
				_1: initialResult
			},
			rightDict);
		var leftovers = _p10._0;
		var intermediateResult = _p10._1;
		return A3(
			_elm_lang$core$List$foldl,
			F2(
				function (_p11, result) {
					var _p12 = _p11;
					return A3(leftStep, _p12._0, _p12._1, result);
				}),
			intermediateResult,
			leftovers);
	});
var _elm_lang$core$Dict$reportRemBug = F4(
	function (msg, c, lgot, rgot) {
		return _elm_lang$core$Native_Debug.crash(
			_elm_lang$core$String$concat(
				{
					ctor: '::',
					_0: 'Internal red-black tree invariant violated, expected ',
					_1: {
						ctor: '::',
						_0: msg,
						_1: {
							ctor: '::',
							_0: ' and got ',
							_1: {
								ctor: '::',
								_0: _elm_lang$core$Basics$toString(c),
								_1: {
									ctor: '::',
									_0: '/',
									_1: {
										ctor: '::',
										_0: lgot,
										_1: {
											ctor: '::',
											_0: '/',
											_1: {
												ctor: '::',
												_0: rgot,
												_1: {
													ctor: '::',
													_0: '\nPlease report this bug to <https://github.com/elm-lang/core/issues>',
													_1: {ctor: '[]'}
												}
											}
										}
									}
								}
							}
						}
					}
				}));
	});
var _elm_lang$core$Dict$isBBlack = function (dict) {
	var _p13 = dict;
	_v14_2:
	do {
		if (_p13.ctor === 'RBNode_elm_builtin') {
			if (_p13._0.ctor === 'BBlack') {
				return true;
			} else {
				break _v14_2;
			}
		} else {
			if (_p13._0.ctor === 'LBBlack') {
				return true;
			} else {
				break _v14_2;
			}
		}
	} while(false);
	return false;
};
var _elm_lang$core$Dict$sizeHelp = F2(
	function (n, dict) {
		sizeHelp:
		while (true) {
			var _p14 = dict;
			if (_p14.ctor === 'RBEmpty_elm_builtin') {
				return n;
			} else {
				var _v16 = A2(_elm_lang$core$Dict$sizeHelp, n + 1, _p14._4),
					_v17 = _p14._3;
				n = _v16;
				dict = _v17;
				continue sizeHelp;
			}
		}
	});
var _elm_lang$core$Dict$size = function (dict) {
	return A2(_elm_lang$core$Dict$sizeHelp, 0, dict);
};
var _elm_lang$core$Dict$get = F2(
	function (targetKey, dict) {
		get:
		while (true) {
			var _p15 = dict;
			if (_p15.ctor === 'RBEmpty_elm_builtin') {
				return _elm_lang$core$Maybe$Nothing;
			} else {
				var _p16 = A2(_elm_lang$core$Basics$compare, targetKey, _p15._1);
				switch (_p16.ctor) {
					case 'LT':
						var _v20 = targetKey,
							_v21 = _p15._3;
						targetKey = _v20;
						dict = _v21;
						continue get;
					case 'EQ':
						return _elm_lang$core$Maybe$Just(_p15._2);
					default:
						var _v22 = targetKey,
							_v23 = _p15._4;
						targetKey = _v22;
						dict = _v23;
						continue get;
				}
			}
		}
	});
var _elm_lang$core$Dict$member = F2(
	function (key, dict) {
		var _p17 = A2(_elm_lang$core$Dict$get, key, dict);
		if (_p17.ctor === 'Just') {
			return true;
		} else {
			return false;
		}
	});
var _elm_lang$core$Dict$maxWithDefault = F3(
	function (k, v, r) {
		maxWithDefault:
		while (true) {
			var _p18 = r;
			if (_p18.ctor === 'RBEmpty_elm_builtin') {
				return {ctor: '_Tuple2', _0: k, _1: v};
			} else {
				var _v26 = _p18._1,
					_v27 = _p18._2,
					_v28 = _p18._4;
				k = _v26;
				v = _v27;
				r = _v28;
				continue maxWithDefault;
			}
		}
	});
var _elm_lang$core$Dict$NBlack = {ctor: 'NBlack'};
var _elm_lang$core$Dict$BBlack = {ctor: 'BBlack'};
var _elm_lang$core$Dict$Black = {ctor: 'Black'};
var _elm_lang$core$Dict$blackish = function (t) {
	var _p19 = t;
	if (_p19.ctor === 'RBNode_elm_builtin') {
		var _p20 = _p19._0;
		return _elm_lang$core$Native_Utils.eq(_p20, _elm_lang$core$Dict$Black) || _elm_lang$core$Native_Utils.eq(_p20, _elm_lang$core$Dict$BBlack);
	} else {
		return true;
	}
};
var _elm_lang$core$Dict$Red = {ctor: 'Red'};
var _elm_lang$core$Dict$moreBlack = function (color) {
	var _p21 = color;
	switch (_p21.ctor) {
		case 'Black':
			return _elm_lang$core$Dict$BBlack;
		case 'Red':
			return _elm_lang$core$Dict$Black;
		case 'NBlack':
			return _elm_lang$core$Dict$Red;
		default:
			return _elm_lang$core$Native_Debug.crash('Can\'t make a double black node more black!');
	}
};
var _elm_lang$core$Dict$lessBlack = function (color) {
	var _p22 = color;
	switch (_p22.ctor) {
		case 'BBlack':
			return _elm_lang$core$Dict$Black;
		case 'Black':
			return _elm_lang$core$Dict$Red;
		case 'Red':
			return _elm_lang$core$Dict$NBlack;
		default:
			return _elm_lang$core$Native_Debug.crash('Can\'t make a negative black node less black!');
	}
};
var _elm_lang$core$Dict$LBBlack = {ctor: 'LBBlack'};
var _elm_lang$core$Dict$LBlack = {ctor: 'LBlack'};
var _elm_lang$core$Dict$RBEmpty_elm_builtin = function (a) {
	return {ctor: 'RBEmpty_elm_builtin', _0: a};
};
var _elm_lang$core$Dict$empty = _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);
var _elm_lang$core$Dict$isEmpty = function (dict) {
	return _elm_lang$core$Native_Utils.eq(dict, _elm_lang$core$Dict$empty);
};
var _elm_lang$core$Dict$RBNode_elm_builtin = F5(
	function (a, b, c, d, e) {
		return {ctor: 'RBNode_elm_builtin', _0: a, _1: b, _2: c, _3: d, _4: e};
	});
var _elm_lang$core$Dict$ensureBlackRoot = function (dict) {
	var _p23 = dict;
	if ((_p23.ctor === 'RBNode_elm_builtin') && (_p23._0.ctor === 'Red')) {
		return A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p23._1, _p23._2, _p23._3, _p23._4);
	} else {
		return dict;
	}
};
var _elm_lang$core$Dict$lessBlackTree = function (dict) {
	var _p24 = dict;
	if (_p24.ctor === 'RBNode_elm_builtin') {
		return A5(
			_elm_lang$core$Dict$RBNode_elm_builtin,
			_elm_lang$core$Dict$lessBlack(_p24._0),
			_p24._1,
			_p24._2,
			_p24._3,
			_p24._4);
	} else {
		return _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);
	}
};
var _elm_lang$core$Dict$balancedTree = function (col) {
	return function (xk) {
		return function (xv) {
			return function (yk) {
				return function (yv) {
					return function (zk) {
						return function (zv) {
							return function (a) {
								return function (b) {
									return function (c) {
										return function (d) {
											return A5(
												_elm_lang$core$Dict$RBNode_elm_builtin,
												_elm_lang$core$Dict$lessBlack(col),
												yk,
												yv,
												A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, xk, xv, a, b),
												A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, zk, zv, c, d));
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _elm_lang$core$Dict$blacken = function (t) {
	var _p25 = t;
	if (_p25.ctor === 'RBEmpty_elm_builtin') {
		return _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);
	} else {
		return A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p25._1, _p25._2, _p25._3, _p25._4);
	}
};
var _elm_lang$core$Dict$redden = function (t) {
	var _p26 = t;
	if (_p26.ctor === 'RBEmpty_elm_builtin') {
		return _elm_lang$core$Native_Debug.crash('can\'t make a Leaf red');
	} else {
		return A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Red, _p26._1, _p26._2, _p26._3, _p26._4);
	}
};
var _elm_lang$core$Dict$balanceHelp = function (tree) {
	var _p27 = tree;
	_v36_6:
	do {
		_v36_5:
		do {
			_v36_4:
			do {
				_v36_3:
				do {
					_v36_2:
					do {
						_v36_1:
						do {
							_v36_0:
							do {
								if (_p27.ctor === 'RBNode_elm_builtin') {
									if (_p27._3.ctor === 'RBNode_elm_builtin') {
										if (_p27._4.ctor === 'RBNode_elm_builtin') {
											switch (_p27._3._0.ctor) {
												case 'Red':
													switch (_p27._4._0.ctor) {
														case 'Red':
															if ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {
																break _v36_0;
															} else {
																if ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {
																	break _v36_1;
																} else {
																	if ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {
																		break _v36_2;
																	} else {
																		if ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {
																			break _v36_3;
																		} else {
																			break _v36_6;
																		}
																	}
																}
															}
														case 'NBlack':
															if ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {
																break _v36_0;
															} else {
																if ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {
																	break _v36_1;
																} else {
																	if (((((_p27._0.ctor === 'BBlack') && (_p27._4._3.ctor === 'RBNode_elm_builtin')) && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {
																		break _v36_4;
																	} else {
																		break _v36_6;
																	}
																}
															}
														default:
															if ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {
																break _v36_0;
															} else {
																if ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {
																	break _v36_1;
																} else {
																	break _v36_6;
																}
															}
													}
												case 'NBlack':
													switch (_p27._4._0.ctor) {
														case 'Red':
															if ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {
																break _v36_2;
															} else {
																if ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {
																	break _v36_3;
																} else {
																	if (((((_p27._0.ctor === 'BBlack') && (_p27._3._3.ctor === 'RBNode_elm_builtin')) && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {
																		break _v36_5;
																	} else {
																		break _v36_6;
																	}
																}
															}
														case 'NBlack':
															if (_p27._0.ctor === 'BBlack') {
																if ((((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {
																	break _v36_4;
																} else {
																	if ((((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {
																		break _v36_5;
																	} else {
																		break _v36_6;
																	}
																}
															} else {
																break _v36_6;
															}
														default:
															if (((((_p27._0.ctor === 'BBlack') && (_p27._3._3.ctor === 'RBNode_elm_builtin')) && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {
																break _v36_5;
															} else {
																break _v36_6;
															}
													}
												default:
													switch (_p27._4._0.ctor) {
														case 'Red':
															if ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {
																break _v36_2;
															} else {
																if ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {
																	break _v36_3;
																} else {
																	break _v36_6;
																}
															}
														case 'NBlack':
															if (((((_p27._0.ctor === 'BBlack') && (_p27._4._3.ctor === 'RBNode_elm_builtin')) && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {
																break _v36_4;
															} else {
																break _v36_6;
															}
														default:
															break _v36_6;
													}
											}
										} else {
											switch (_p27._3._0.ctor) {
												case 'Red':
													if ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {
														break _v36_0;
													} else {
														if ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {
															break _v36_1;
														} else {
															break _v36_6;
														}
													}
												case 'NBlack':
													if (((((_p27._0.ctor === 'BBlack') && (_p27._3._3.ctor === 'RBNode_elm_builtin')) && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {
														break _v36_5;
													} else {
														break _v36_6;
													}
												default:
													break _v36_6;
											}
										}
									} else {
										if (_p27._4.ctor === 'RBNode_elm_builtin') {
											switch (_p27._4._0.ctor) {
												case 'Red':
													if ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {
														break _v36_2;
													} else {
														if ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {
															break _v36_3;
														} else {
															break _v36_6;
														}
													}
												case 'NBlack':
													if (((((_p27._0.ctor === 'BBlack') && (_p27._4._3.ctor === 'RBNode_elm_builtin')) && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {
														break _v36_4;
													} else {
														break _v36_6;
													}
												default:
													break _v36_6;
											}
										} else {
											break _v36_6;
										}
									}
								} else {
									break _v36_6;
								}
							} while(false);
							return _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._3._3._1)(_p27._3._3._2)(_p27._3._1)(_p27._3._2)(_p27._1)(_p27._2)(_p27._3._3._3)(_p27._3._3._4)(_p27._3._4)(_p27._4);
						} while(false);
						return _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._3._1)(_p27._3._2)(_p27._3._4._1)(_p27._3._4._2)(_p27._1)(_p27._2)(_p27._3._3)(_p27._3._4._3)(_p27._3._4._4)(_p27._4);
					} while(false);
					return _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._1)(_p27._2)(_p27._4._3._1)(_p27._4._3._2)(_p27._4._1)(_p27._4._2)(_p27._3)(_p27._4._3._3)(_p27._4._3._4)(_p27._4._4);
				} while(false);
				return _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._1)(_p27._2)(_p27._4._1)(_p27._4._2)(_p27._4._4._1)(_p27._4._4._2)(_p27._3)(_p27._4._3)(_p27._4._4._3)(_p27._4._4._4);
			} while(false);
			return A5(
				_elm_lang$core$Dict$RBNode_elm_builtin,
				_elm_lang$core$Dict$Black,
				_p27._4._3._1,
				_p27._4._3._2,
				A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p27._1, _p27._2, _p27._3, _p27._4._3._3),
				A5(
					_elm_lang$core$Dict$balance,
					_elm_lang$core$Dict$Black,
					_p27._4._1,
					_p27._4._2,
					_p27._4._3._4,
					_elm_lang$core$Dict$redden(_p27._4._4)));
		} while(false);
		return A5(
			_elm_lang$core$Dict$RBNode_elm_builtin,
			_elm_lang$core$Dict$Black,
			_p27._3._4._1,
			_p27._3._4._2,
			A5(
				_elm_lang$core$Dict$balance,
				_elm_lang$core$Dict$Black,
				_p27._3._1,
				_p27._3._2,
				_elm_lang$core$Dict$redden(_p27._3._3),
				_p27._3._4._3),
			A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p27._1, _p27._2, _p27._3._4._4, _p27._4));
	} while(false);
	return tree;
};
var _elm_lang$core$Dict$balance = F5(
	function (c, k, v, l, r) {
		var tree = A5(_elm_lang$core$Dict$RBNode_elm_builtin, c, k, v, l, r);
		return _elm_lang$core$Dict$blackish(tree) ? _elm_lang$core$Dict$balanceHelp(tree) : tree;
	});
var _elm_lang$core$Dict$bubble = F5(
	function (c, k, v, l, r) {
		return (_elm_lang$core$Dict$isBBlack(l) || _elm_lang$core$Dict$isBBlack(r)) ? A5(
			_elm_lang$core$Dict$balance,
			_elm_lang$core$Dict$moreBlack(c),
			k,
			v,
			_elm_lang$core$Dict$lessBlackTree(l),
			_elm_lang$core$Dict$lessBlackTree(r)) : A5(_elm_lang$core$Dict$RBNode_elm_builtin, c, k, v, l, r);
	});
var _elm_lang$core$Dict$removeMax = F5(
	function (c, k, v, l, r) {
		var _p28 = r;
		if (_p28.ctor === 'RBEmpty_elm_builtin') {
			return A3(_elm_lang$core$Dict$rem, c, l, r);
		} else {
			return A5(
				_elm_lang$core$Dict$bubble,
				c,
				k,
				v,
				l,
				A5(_elm_lang$core$Dict$removeMax, _p28._0, _p28._1, _p28._2, _p28._3, _p28._4));
		}
	});
var _elm_lang$core$Dict$rem = F3(
	function (color, left, right) {
		var _p29 = {ctor: '_Tuple2', _0: left, _1: right};
		if (_p29._0.ctor === 'RBEmpty_elm_builtin') {
			if (_p29._1.ctor === 'RBEmpty_elm_builtin') {
				var _p30 = color;
				switch (_p30.ctor) {
					case 'Red':
						return _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);
					case 'Black':
						return _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBBlack);
					default:
						return _elm_lang$core$Native_Debug.crash('cannot have bblack or nblack nodes at this point');
				}
			} else {
				var _p33 = _p29._1._0;
				var _p32 = _p29._0._0;
				var _p31 = {ctor: '_Tuple3', _0: color, _1: _p32, _2: _p33};
				if ((((_p31.ctor === '_Tuple3') && (_p31._0.ctor === 'Black')) && (_p31._1.ctor === 'LBlack')) && (_p31._2.ctor === 'Red')) {
					return A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p29._1._1, _p29._1._2, _p29._1._3, _p29._1._4);
				} else {
					return A4(
						_elm_lang$core$Dict$reportRemBug,
						'Black/LBlack/Red',
						color,
						_elm_lang$core$Basics$toString(_p32),
						_elm_lang$core$Basics$toString(_p33));
				}
			}
		} else {
			if (_p29._1.ctor === 'RBEmpty_elm_builtin') {
				var _p36 = _p29._1._0;
				var _p35 = _p29._0._0;
				var _p34 = {ctor: '_Tuple3', _0: color, _1: _p35, _2: _p36};
				if ((((_p34.ctor === '_Tuple3') && (_p34._0.ctor === 'Black')) && (_p34._1.ctor === 'Red')) && (_p34._2.ctor === 'LBlack')) {
					return A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p29._0._1, _p29._0._2, _p29._0._3, _p29._0._4);
				} else {
					return A4(
						_elm_lang$core$Dict$reportRemBug,
						'Black/Red/LBlack',
						color,
						_elm_lang$core$Basics$toString(_p35),
						_elm_lang$core$Basics$toString(_p36));
				}
			} else {
				var _p40 = _p29._0._2;
				var _p39 = _p29._0._4;
				var _p38 = _p29._0._1;
				var newLeft = A5(_elm_lang$core$Dict$removeMax, _p29._0._0, _p38, _p40, _p29._0._3, _p39);
				var _p37 = A3(_elm_lang$core$Dict$maxWithDefault, _p38, _p40, _p39);
				var k = _p37._0;
				var v = _p37._1;
				return A5(_elm_lang$core$Dict$bubble, color, k, v, newLeft, right);
			}
		}
	});
var _elm_lang$core$Dict$map = F2(
	function (f, dict) {
		var _p41 = dict;
		if (_p41.ctor === 'RBEmpty_elm_builtin') {
			return _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);
		} else {
			var _p42 = _p41._1;
			return A5(
				_elm_lang$core$Dict$RBNode_elm_builtin,
				_p41._0,
				_p42,
				A2(f, _p42, _p41._2),
				A2(_elm_lang$core$Dict$map, f, _p41._3),
				A2(_elm_lang$core$Dict$map, f, _p41._4));
		}
	});
var _elm_lang$core$Dict$Same = {ctor: 'Same'};
var _elm_lang$core$Dict$Remove = {ctor: 'Remove'};
var _elm_lang$core$Dict$Insert = {ctor: 'Insert'};
var _elm_lang$core$Dict$update = F3(
	function (k, alter, dict) {
		var up = function (dict) {
			var _p43 = dict;
			if (_p43.ctor === 'RBEmpty_elm_builtin') {
				var _p44 = alter(_elm_lang$core$Maybe$Nothing);
				if (_p44.ctor === 'Nothing') {
					return {ctor: '_Tuple2', _0: _elm_lang$core$Dict$Same, _1: _elm_lang$core$Dict$empty};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Dict$Insert,
						_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Red, k, _p44._0, _elm_lang$core$Dict$empty, _elm_lang$core$Dict$empty)
					};
				}
			} else {
				var _p55 = _p43._2;
				var _p54 = _p43._4;
				var _p53 = _p43._3;
				var _p52 = _p43._1;
				var _p51 = _p43._0;
				var _p45 = A2(_elm_lang$core$Basics$compare, k, _p52);
				switch (_p45.ctor) {
					case 'EQ':
						var _p46 = alter(
							_elm_lang$core$Maybe$Just(_p55));
						if (_p46.ctor === 'Nothing') {
							return {
								ctor: '_Tuple2',
								_0: _elm_lang$core$Dict$Remove,
								_1: A3(_elm_lang$core$Dict$rem, _p51, _p53, _p54)
							};
						} else {
							return {
								ctor: '_Tuple2',
								_0: _elm_lang$core$Dict$Same,
								_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _p51, _p52, _p46._0, _p53, _p54)
							};
						}
					case 'LT':
						var _p47 = up(_p53);
						var flag = _p47._0;
						var newLeft = _p47._1;
						var _p48 = flag;
						switch (_p48.ctor) {
							case 'Same':
								return {
									ctor: '_Tuple2',
									_0: _elm_lang$core$Dict$Same,
									_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _p51, _p52, _p55, newLeft, _p54)
								};
							case 'Insert':
								return {
									ctor: '_Tuple2',
									_0: _elm_lang$core$Dict$Insert,
									_1: A5(_elm_lang$core$Dict$balance, _p51, _p52, _p55, newLeft, _p54)
								};
							default:
								return {
									ctor: '_Tuple2',
									_0: _elm_lang$core$Dict$Remove,
									_1: A5(_elm_lang$core$Dict$bubble, _p51, _p52, _p55, newLeft, _p54)
								};
						}
					default:
						var _p49 = up(_p54);
						var flag = _p49._0;
						var newRight = _p49._1;
						var _p50 = flag;
						switch (_p50.ctor) {
							case 'Same':
								return {
									ctor: '_Tuple2',
									_0: _elm_lang$core$Dict$Same,
									_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _p51, _p52, _p55, _p53, newRight)
								};
							case 'Insert':
								return {
									ctor: '_Tuple2',
									_0: _elm_lang$core$Dict$Insert,
									_1: A5(_elm_lang$core$Dict$balance, _p51, _p52, _p55, _p53, newRight)
								};
							default:
								return {
									ctor: '_Tuple2',
									_0: _elm_lang$core$Dict$Remove,
									_1: A5(_elm_lang$core$Dict$bubble, _p51, _p52, _p55, _p53, newRight)
								};
						}
				}
			}
		};
		var _p56 = up(dict);
		var flag = _p56._0;
		var updatedDict = _p56._1;
		var _p57 = flag;
		switch (_p57.ctor) {
			case 'Same':
				return updatedDict;
			case 'Insert':
				return _elm_lang$core$Dict$ensureBlackRoot(updatedDict);
			default:
				return _elm_lang$core$Dict$blacken(updatedDict);
		}
	});
var _elm_lang$core$Dict$insert = F3(
	function (key, value, dict) {
		return A3(
			_elm_lang$core$Dict$update,
			key,
			_elm_lang$core$Basics$always(
				_elm_lang$core$Maybe$Just(value)),
			dict);
	});
var _elm_lang$core$Dict$singleton = F2(
	function (key, value) {
		return A3(_elm_lang$core$Dict$insert, key, value, _elm_lang$core$Dict$empty);
	});
var _elm_lang$core$Dict$union = F2(
	function (t1, t2) {
		return A3(_elm_lang$core$Dict$foldl, _elm_lang$core$Dict$insert, t2, t1);
	});
var _elm_lang$core$Dict$filter = F2(
	function (predicate, dictionary) {
		var add = F3(
			function (key, value, dict) {
				return A2(predicate, key, value) ? A3(_elm_lang$core$Dict$insert, key, value, dict) : dict;
			});
		return A3(_elm_lang$core$Dict$foldl, add, _elm_lang$core$Dict$empty, dictionary);
	});
var _elm_lang$core$Dict$intersect = F2(
	function (t1, t2) {
		return A2(
			_elm_lang$core$Dict$filter,
			F2(
				function (k, _p58) {
					return A2(_elm_lang$core$Dict$member, k, t2);
				}),
			t1);
	});
var _elm_lang$core$Dict$partition = F2(
	function (predicate, dict) {
		var add = F3(
			function (key, value, _p59) {
				var _p60 = _p59;
				var _p62 = _p60._1;
				var _p61 = _p60._0;
				return A2(predicate, key, value) ? {
					ctor: '_Tuple2',
					_0: A3(_elm_lang$core$Dict$insert, key, value, _p61),
					_1: _p62
				} : {
					ctor: '_Tuple2',
					_0: _p61,
					_1: A3(_elm_lang$core$Dict$insert, key, value, _p62)
				};
			});
		return A3(
			_elm_lang$core$Dict$foldl,
			add,
			{ctor: '_Tuple2', _0: _elm_lang$core$Dict$empty, _1: _elm_lang$core$Dict$empty},
			dict);
	});
var _elm_lang$core$Dict$fromList = function (assocs) {
	return A3(
		_elm_lang$core$List$foldl,
		F2(
			function (_p63, dict) {
				var _p64 = _p63;
				return A3(_elm_lang$core$Dict$insert, _p64._0, _p64._1, dict);
			}),
		_elm_lang$core$Dict$empty,
		assocs);
};
var _elm_lang$core$Dict$remove = F2(
	function (key, dict) {
		return A3(
			_elm_lang$core$Dict$update,
			key,
			_elm_lang$core$Basics$always(_elm_lang$core$Maybe$Nothing),
			dict);
	});
var _elm_lang$core$Dict$diff = F2(
	function (t1, t2) {
		return A3(
			_elm_lang$core$Dict$foldl,
			F3(
				function (k, v, t) {
					return A2(_elm_lang$core$Dict$remove, k, t);
				}),
			t1,
			t2);
	});

//import Maybe, Native.Array, Native.List, Native.Utils, Result //

var _elm_lang$core$Native_Json = function() {


// CORE DECODERS

function succeed(msg)
{
	return {
		ctor: '<decoder>',
		tag: 'succeed',
		msg: msg
	};
}

function fail(msg)
{
	return {
		ctor: '<decoder>',
		tag: 'fail',
		msg: msg
	};
}

function decodePrimitive(tag)
{
	return {
		ctor: '<decoder>',
		tag: tag
	};
}

function decodeContainer(tag, decoder)
{
	return {
		ctor: '<decoder>',
		tag: tag,
		decoder: decoder
	};
}

function decodeNull(value)
{
	return {
		ctor: '<decoder>',
		tag: 'null',
		value: value
	};
}

function decodeField(field, decoder)
{
	return {
		ctor: '<decoder>',
		tag: 'field',
		field: field,
		decoder: decoder
	};
}

function decodeIndex(index, decoder)
{
	return {
		ctor: '<decoder>',
		tag: 'index',
		index: index,
		decoder: decoder
	};
}

function decodeKeyValuePairs(decoder)
{
	return {
		ctor: '<decoder>',
		tag: 'key-value',
		decoder: decoder
	};
}

function mapMany(f, decoders)
{
	return {
		ctor: '<decoder>',
		tag: 'map-many',
		func: f,
		decoders: decoders
	};
}

function andThen(callback, decoder)
{
	return {
		ctor: '<decoder>',
		tag: 'andThen',
		decoder: decoder,
		callback: callback
	};
}

function oneOf(decoders)
{
	return {
		ctor: '<decoder>',
		tag: 'oneOf',
		decoders: decoders
	};
}


// DECODING OBJECTS

function map1(f, d1)
{
	return mapMany(f, [d1]);
}

function map2(f, d1, d2)
{
	return mapMany(f, [d1, d2]);
}

function map3(f, d1, d2, d3)
{
	return mapMany(f, [d1, d2, d3]);
}

function map4(f, d1, d2, d3, d4)
{
	return mapMany(f, [d1, d2, d3, d4]);
}

function map5(f, d1, d2, d3, d4, d5)
{
	return mapMany(f, [d1, d2, d3, d4, d5]);
}

function map6(f, d1, d2, d3, d4, d5, d6)
{
	return mapMany(f, [d1, d2, d3, d4, d5, d6]);
}

function map7(f, d1, d2, d3, d4, d5, d6, d7)
{
	return mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);
}

function map8(f, d1, d2, d3, d4, d5, d6, d7, d8)
{
	return mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);
}


// DECODE HELPERS

function ok(value)
{
	return { tag: 'ok', value: value };
}

function badPrimitive(type, value)
{
	return { tag: 'primitive', type: type, value: value };
}

function badIndex(index, nestedProblems)
{
	return { tag: 'index', index: index, rest: nestedProblems };
}

function badField(field, nestedProblems)
{
	return { tag: 'field', field: field, rest: nestedProblems };
}

function badIndex(index, nestedProblems)
{
	return { tag: 'index', index: index, rest: nestedProblems };
}

function badOneOf(problems)
{
	return { tag: 'oneOf', problems: problems };
}

function bad(msg)
{
	return { tag: 'fail', msg: msg };
}

function badToString(problem)
{
	var context = '_';
	while (problem)
	{
		switch (problem.tag)
		{
			case 'primitive':
				return 'Expecting ' + problem.type
					+ (context === '_' ? '' : ' at ' + context)
					+ ' but instead got: ' + jsToString(problem.value);

			case 'index':
				context += '[' + problem.index + ']';
				problem = problem.rest;
				break;

			case 'field':
				context += '.' + problem.field;
				problem = problem.rest;
				break;

			case 'oneOf':
				var problems = problem.problems;
				for (var i = 0; i < problems.length; i++)
				{
					problems[i] = badToString(problems[i]);
				}
				return 'I ran into the following problems'
					+ (context === '_' ? '' : ' at ' + context)
					+ ':\n\n' + problems.join('\n');

			case 'fail':
				return 'I ran into a `fail` decoder'
					+ (context === '_' ? '' : ' at ' + context)
					+ ': ' + problem.msg;
		}
	}
}

function jsToString(value)
{
	return value === undefined
		? 'undefined'
		: JSON.stringify(value);
}


// DECODE

function runOnString(decoder, string)
{
	var json;
	try
	{
		json = JSON.parse(string);
	}
	catch (e)
	{
		return _elm_lang$core$Result$Err('Given an invalid JSON: ' + e.message);
	}
	return run(decoder, json);
}

function run(decoder, value)
{
	var result = runHelp(decoder, value);
	return (result.tag === 'ok')
		? _elm_lang$core$Result$Ok(result.value)
		: _elm_lang$core$Result$Err(badToString(result));
}

function runHelp(decoder, value)
{
	switch (decoder.tag)
	{
		case 'bool':
			return (typeof value === 'boolean')
				? ok(value)
				: badPrimitive('a Bool', value);

		case 'int':
			if (typeof value !== 'number') {
				return badPrimitive('an Int', value);
			}

			if (-2147483647 < value && value < 2147483647 && (value | 0) === value) {
				return ok(value);
			}

			if (isFinite(value) && !(value % 1)) {
				return ok(value);
			}

			return badPrimitive('an Int', value);

		case 'float':
			return (typeof value === 'number')
				? ok(value)
				: badPrimitive('a Float', value);

		case 'string':
			return (typeof value === 'string')
				? ok(value)
				: (value instanceof String)
					? ok(value + '')
					: badPrimitive('a String', value);

		case 'null':
			return (value === null)
				? ok(decoder.value)
				: badPrimitive('null', value);

		case 'value':
			return ok(value);

		case 'list':
			if (!(value instanceof Array))
			{
				return badPrimitive('a List', value);
			}

			var list = _elm_lang$core$Native_List.Nil;
			for (var i = value.length; i--; )
			{
				var result = runHelp(decoder.decoder, value[i]);
				if (result.tag !== 'ok')
				{
					return badIndex(i, result)
				}
				list = _elm_lang$core$Native_List.Cons(result.value, list);
			}
			return ok(list);

		case 'array':
			if (!(value instanceof Array))
			{
				return badPrimitive('an Array', value);
			}

			var len = value.length;
			var array = new Array(len);
			for (var i = len; i--; )
			{
				var result = runHelp(decoder.decoder, value[i]);
				if (result.tag !== 'ok')
				{
					return badIndex(i, result);
				}
				array[i] = result.value;
			}
			return ok(_elm_lang$core$Native_Array.fromJSArray(array));

		case 'maybe':
			var result = runHelp(decoder.decoder, value);
			return (result.tag === 'ok')
				? ok(_elm_lang$core$Maybe$Just(result.value))
				: ok(_elm_lang$core$Maybe$Nothing);

		case 'field':
			var field = decoder.field;
			if (typeof value !== 'object' || value === null || !(field in value))
			{
				return badPrimitive('an object with a field named `' + field + '`', value);
			}

			var result = runHelp(decoder.decoder, value[field]);
			return (result.tag === 'ok') ? result : badField(field, result);

		case 'index':
			var index = decoder.index;
			if (!(value instanceof Array))
			{
				return badPrimitive('an array', value);
			}
			if (index >= value.length)
			{
				return badPrimitive('a longer array. Need index ' + index + ' but there are only ' + value.length + ' entries', value);
			}

			var result = runHelp(decoder.decoder, value[index]);
			return (result.tag === 'ok') ? result : badIndex(index, result);

		case 'key-value':
			if (typeof value !== 'object' || value === null || value instanceof Array)
			{
				return badPrimitive('an object', value);
			}

			var keyValuePairs = _elm_lang$core$Native_List.Nil;
			for (var key in value)
			{
				var result = runHelp(decoder.decoder, value[key]);
				if (result.tag !== 'ok')
				{
					return badField(key, result);
				}
				var pair = _elm_lang$core$Native_Utils.Tuple2(key, result.value);
				keyValuePairs = _elm_lang$core$Native_List.Cons(pair, keyValuePairs);
			}
			return ok(keyValuePairs);

		case 'map-many':
			var answer = decoder.func;
			var decoders = decoder.decoders;
			for (var i = 0; i < decoders.length; i++)
			{
				var result = runHelp(decoders[i], value);
				if (result.tag !== 'ok')
				{
					return result;
				}
				answer = answer(result.value);
			}
			return ok(answer);

		case 'andThen':
			var result = runHelp(decoder.decoder, value);
			return (result.tag !== 'ok')
				? result
				: runHelp(decoder.callback(result.value), value);

		case 'oneOf':
			var errors = [];
			var temp = decoder.decoders;
			while (temp.ctor !== '[]')
			{
				var result = runHelp(temp._0, value);

				if (result.tag === 'ok')
				{
					return result;
				}

				errors.push(result);

				temp = temp._1;
			}
			return badOneOf(errors);

		case 'fail':
			return bad(decoder.msg);

		case 'succeed':
			return ok(decoder.msg);
	}
}


// EQUALITY

function equality(a, b)
{
	if (a === b)
	{
		return true;
	}

	if (a.tag !== b.tag)
	{
		return false;
	}

	switch (a.tag)
	{
		case 'succeed':
		case 'fail':
			return a.msg === b.msg;

		case 'bool':
		case 'int':
		case 'float':
		case 'string':
		case 'value':
			return true;

		case 'null':
			return a.value === b.value;

		case 'list':
		case 'array':
		case 'maybe':
		case 'key-value':
			return equality(a.decoder, b.decoder);

		case 'field':
			return a.field === b.field && equality(a.decoder, b.decoder);

		case 'index':
			return a.index === b.index && equality(a.decoder, b.decoder);

		case 'map-many':
			if (a.func !== b.func)
			{
				return false;
			}
			return listEquality(a.decoders, b.decoders);

		case 'andThen':
			return a.callback === b.callback && equality(a.decoder, b.decoder);

		case 'oneOf':
			return listEquality(a.decoders, b.decoders);
	}
}

function listEquality(aDecoders, bDecoders)
{
	var len = aDecoders.length;
	if (len !== bDecoders.length)
	{
		return false;
	}
	for (var i = 0; i < len; i++)
	{
		if (!equality(aDecoders[i], bDecoders[i]))
		{
			return false;
		}
	}
	return true;
}


// ENCODE

function encode(indentLevel, value)
{
	return JSON.stringify(value, null, indentLevel);
}

function identity(value)
{
	return value;
}

function encodeObject(keyValuePairs)
{
	var obj = {};
	while (keyValuePairs.ctor !== '[]')
	{
		var pair = keyValuePairs._0;
		obj[pair._0] = pair._1;
		keyValuePairs = keyValuePairs._1;
	}
	return obj;
}

return {
	encode: F2(encode),
	runOnString: F2(runOnString),
	run: F2(run),

	decodeNull: decodeNull,
	decodePrimitive: decodePrimitive,
	decodeContainer: F2(decodeContainer),

	decodeField: F2(decodeField),
	decodeIndex: F2(decodeIndex),

	map1: F2(map1),
	map2: F3(map2),
	map3: F4(map3),
	map4: F5(map4),
	map5: F6(map5),
	map6: F7(map6),
	map7: F8(map7),
	map8: F9(map8),
	decodeKeyValuePairs: decodeKeyValuePairs,

	andThen: F2(andThen),
	fail: fail,
	succeed: succeed,
	oneOf: oneOf,

	identity: identity,
	encodeNull: null,
	encodeArray: _elm_lang$core$Native_Array.toJSArray,
	encodeList: _elm_lang$core$Native_List.toArray,
	encodeObject: encodeObject,

	equality: equality
};

}();

var _elm_lang$core$Json_Encode$list = _elm_lang$core$Native_Json.encodeList;
var _elm_lang$core$Json_Encode$array = _elm_lang$core$Native_Json.encodeArray;
var _elm_lang$core$Json_Encode$object = _elm_lang$core$Native_Json.encodeObject;
var _elm_lang$core$Json_Encode$null = _elm_lang$core$Native_Json.encodeNull;
var _elm_lang$core$Json_Encode$bool = _elm_lang$core$Native_Json.identity;
var _elm_lang$core$Json_Encode$float = _elm_lang$core$Native_Json.identity;
var _elm_lang$core$Json_Encode$int = _elm_lang$core$Native_Json.identity;
var _elm_lang$core$Json_Encode$string = _elm_lang$core$Native_Json.identity;
var _elm_lang$core$Json_Encode$encode = _elm_lang$core$Native_Json.encode;
var _elm_lang$core$Json_Encode$Value = {ctor: 'Value'};

var _elm_lang$core$Json_Decode$null = _elm_lang$core$Native_Json.decodeNull;
var _elm_lang$core$Json_Decode$value = _elm_lang$core$Native_Json.decodePrimitive('value');
var _elm_lang$core$Json_Decode$andThen = _elm_lang$core$Native_Json.andThen;
var _elm_lang$core$Json_Decode$fail = _elm_lang$core$Native_Json.fail;
var _elm_lang$core$Json_Decode$succeed = _elm_lang$core$Native_Json.succeed;
var _elm_lang$core$Json_Decode$lazy = function (thunk) {
	return A2(
		_elm_lang$core$Json_Decode$andThen,
		thunk,
		_elm_lang$core$Json_Decode$succeed(
			{ctor: '_Tuple0'}));
};
var _elm_lang$core$Json_Decode$decodeValue = _elm_lang$core$Native_Json.run;
var _elm_lang$core$Json_Decode$decodeString = _elm_lang$core$Native_Json.runOnString;
var _elm_lang$core$Json_Decode$map8 = _elm_lang$core$Native_Json.map8;
var _elm_lang$core$Json_Decode$map7 = _elm_lang$core$Native_Json.map7;
var _elm_lang$core$Json_Decode$map6 = _elm_lang$core$Native_Json.map6;
var _elm_lang$core$Json_Decode$map5 = _elm_lang$core$Native_Json.map5;
var _elm_lang$core$Json_Decode$map4 = _elm_lang$core$Native_Json.map4;
var _elm_lang$core$Json_Decode$map3 = _elm_lang$core$Native_Json.map3;
var _elm_lang$core$Json_Decode$map2 = _elm_lang$core$Native_Json.map2;
var _elm_lang$core$Json_Decode$map = _elm_lang$core$Native_Json.map1;
var _elm_lang$core$Json_Decode$oneOf = _elm_lang$core$Native_Json.oneOf;
var _elm_lang$core$Json_Decode$maybe = function (decoder) {
	return A2(_elm_lang$core$Native_Json.decodeContainer, 'maybe', decoder);
};
var _elm_lang$core$Json_Decode$index = _elm_lang$core$Native_Json.decodeIndex;
var _elm_lang$core$Json_Decode$field = _elm_lang$core$Native_Json.decodeField;
var _elm_lang$core$Json_Decode$at = F2(
	function (fields, decoder) {
		return A3(_elm_lang$core$List$foldr, _elm_lang$core$Json_Decode$field, decoder, fields);
	});
var _elm_lang$core$Json_Decode$keyValuePairs = _elm_lang$core$Native_Json.decodeKeyValuePairs;
var _elm_lang$core$Json_Decode$dict = function (decoder) {
	return A2(
		_elm_lang$core$Json_Decode$map,
		_elm_lang$core$Dict$fromList,
		_elm_lang$core$Json_Decode$keyValuePairs(decoder));
};
var _elm_lang$core$Json_Decode$array = function (decoder) {
	return A2(_elm_lang$core$Native_Json.decodeContainer, 'array', decoder);
};
var _elm_lang$core$Json_Decode$list = function (decoder) {
	return A2(_elm_lang$core$Native_Json.decodeContainer, 'list', decoder);
};
var _elm_lang$core$Json_Decode$nullable = function (decoder) {
	return _elm_lang$core$Json_Decode$oneOf(
		{
			ctor: '::',
			_0: _elm_lang$core$Json_Decode$null(_elm_lang$core$Maybe$Nothing),
			_1: {
				ctor: '::',
				_0: A2(_elm_lang$core$Json_Decode$map, _elm_lang$core$Maybe$Just, decoder),
				_1: {ctor: '[]'}
			}
		});
};
var _elm_lang$core$Json_Decode$float = _elm_lang$core$Native_Json.decodePrimitive('float');
var _elm_lang$core$Json_Decode$int = _elm_lang$core$Native_Json.decodePrimitive('int');
var _elm_lang$core$Json_Decode$bool = _elm_lang$core$Native_Json.decodePrimitive('bool');
var _elm_lang$core$Json_Decode$string = _elm_lang$core$Native_Json.decodePrimitive('string');
var _elm_lang$core$Json_Decode$Decoder = {ctor: 'Decoder'};

var _elm_lang$virtual_dom$VirtualDom_Debug$wrap;
var _elm_lang$virtual_dom$VirtualDom_Debug$wrapWithFlags;

var _elm_lang$virtual_dom$Native_VirtualDom = function() {

var STYLE_KEY = 'STYLE';
var EVENT_KEY = 'EVENT';
var ATTR_KEY = 'ATTR';
var ATTR_NS_KEY = 'ATTR_NS';

var localDoc = typeof document !== 'undefined' ? document : {};


////////////  VIRTUAL DOM NODES  ////////////


function text(string)
{
	return {
		type: 'text',
		text: string
	};
}


function node(tag)
{
	return F2(function(factList, kidList) {
		return nodeHelp(tag, factList, kidList);
	});
}


function nodeHelp(tag, factList, kidList)
{
	var organized = organizeFacts(factList);
	var namespace = organized.namespace;
	var facts = organized.facts;

	var children = [];
	var descendantsCount = 0;
	while (kidList.ctor !== '[]')
	{
		var kid = kidList._0;
		descendantsCount += (kid.descendantsCount || 0);
		children.push(kid);
		kidList = kidList._1;
	}
	descendantsCount += children.length;

	return {
		type: 'node',
		tag: tag,
		facts: facts,
		children: children,
		namespace: namespace,
		descendantsCount: descendantsCount
	};
}


function keyedNode(tag, factList, kidList)
{
	var organized = organizeFacts(factList);
	var namespace = organized.namespace;
	var facts = organized.facts;

	var children = [];
	var descendantsCount = 0;
	while (kidList.ctor !== '[]')
	{
		var kid = kidList._0;
		descendantsCount += (kid._1.descendantsCount || 0);
		children.push(kid);
		kidList = kidList._1;
	}
	descendantsCount += children.length;

	return {
		type: 'keyed-node',
		tag: tag,
		facts: facts,
		children: children,
		namespace: namespace,
		descendantsCount: descendantsCount
	};
}


function custom(factList, model, impl)
{
	var facts = organizeFacts(factList).facts;

	return {
		type: 'custom',
		facts: facts,
		model: model,
		impl: impl
	};
}


function map(tagger, node)
{
	return {
		type: 'tagger',
		tagger: tagger,
		node: node,
		descendantsCount: 1 + (node.descendantsCount || 0)
	};
}


function thunk(func, args, thunk)
{
	return {
		type: 'thunk',
		func: func,
		args: args,
		thunk: thunk,
		node: undefined
	};
}

function lazy(fn, a)
{
	return thunk(fn, [a], function() {
		return fn(a);
	});
}

function lazy2(fn, a, b)
{
	return thunk(fn, [a,b], function() {
		return A2(fn, a, b);
	});
}

function lazy3(fn, a, b, c)
{
	return thunk(fn, [a,b,c], function() {
		return A3(fn, a, b, c);
	});
}



// FACTS


function organizeFacts(factList)
{
	var namespace, facts = {};

	while (factList.ctor !== '[]')
	{
		var entry = factList._0;
		var key = entry.key;

		if (key === ATTR_KEY || key === ATTR_NS_KEY || key === EVENT_KEY)
		{
			var subFacts = facts[key] || {};
			subFacts[entry.realKey] = entry.value;
			facts[key] = subFacts;
		}
		else if (key === STYLE_KEY)
		{
			var styles = facts[key] || {};
			var styleList = entry.value;
			while (styleList.ctor !== '[]')
			{
				var style = styleList._0;
				styles[style._0] = style._1;
				styleList = styleList._1;
			}
			facts[key] = styles;
		}
		else if (key === 'namespace')
		{
			namespace = entry.value;
		}
		else if (key === 'className')
		{
			var classes = facts[key];
			facts[key] = typeof classes === 'undefined'
				? entry.value
				: classes + ' ' + entry.value;
		}
 		else
		{
			facts[key] = entry.value;
		}
		factList = factList._1;
	}

	return {
		facts: facts,
		namespace: namespace
	};
}



////////////  PROPERTIES AND ATTRIBUTES  ////////////


function style(value)
{
	return {
		key: STYLE_KEY,
		value: value
	};
}


function property(key, value)
{
	return {
		key: key,
		value: value
	};
}


function attribute(key, value)
{
	return {
		key: ATTR_KEY,
		realKey: key,
		value: value
	};
}


function attributeNS(namespace, key, value)
{
	return {
		key: ATTR_NS_KEY,
		realKey: key,
		value: {
			value: value,
			namespace: namespace
		}
	};
}


function on(name, options, decoder)
{
	return {
		key: EVENT_KEY,
		realKey: name,
		value: {
			options: options,
			decoder: decoder
		}
	};
}


function equalEvents(a, b)
{
	if (a.options !== b.options)
	{
		if (a.options.stopPropagation !== b.options.stopPropagation || a.options.preventDefault !== b.options.preventDefault)
		{
			return false;
		}
	}
	return _elm_lang$core$Native_Json.equality(a.decoder, b.decoder);
}


function mapProperty(func, property)
{
	if (property.key !== EVENT_KEY)
	{
		return property;
	}
	return on(
		property.realKey,
		property.value.options,
		A2(_elm_lang$core$Json_Decode$map, func, property.value.decoder)
	);
}


////////////  RENDER  ////////////


function render(vNode, eventNode)
{
	switch (vNode.type)
	{
		case 'thunk':
			if (!vNode.node)
			{
				vNode.node = vNode.thunk();
			}
			return render(vNode.node, eventNode);

		case 'tagger':
			var subNode = vNode.node;
			var tagger = vNode.tagger;

			while (subNode.type === 'tagger')
			{
				typeof tagger !== 'object'
					? tagger = [tagger, subNode.tagger]
					: tagger.push(subNode.tagger);

				subNode = subNode.node;
			}

			var subEventRoot = { tagger: tagger, parent: eventNode };
			var domNode = render(subNode, subEventRoot);
			domNode.elm_event_node_ref = subEventRoot;
			return domNode;

		case 'text':
			return localDoc.createTextNode(vNode.text);

		case 'node':
			var domNode = vNode.namespace
				? localDoc.createElementNS(vNode.namespace, vNode.tag)
				: localDoc.createElement(vNode.tag);

			applyFacts(domNode, eventNode, vNode.facts);

			var children = vNode.children;

			for (var i = 0; i < children.length; i++)
			{
				domNode.appendChild(render(children[i], eventNode));
			}

			return domNode;

		case 'keyed-node':
			var domNode = vNode.namespace
				? localDoc.createElementNS(vNode.namespace, vNode.tag)
				: localDoc.createElement(vNode.tag);

			applyFacts(domNode, eventNode, vNode.facts);

			var children = vNode.children;

			for (var i = 0; i < children.length; i++)
			{
				domNode.appendChild(render(children[i]._1, eventNode));
			}

			return domNode;

		case 'custom':
			var domNode = vNode.impl.render(vNode.model);
			applyFacts(domNode, eventNode, vNode.facts);
			return domNode;
	}
}



////////////  APPLY FACTS  ////////////


function applyFacts(domNode, eventNode, facts)
{
	for (var key in facts)
	{
		var value = facts[key];

		switch (key)
		{
			case STYLE_KEY:
				applyStyles(domNode, value);
				break;

			case EVENT_KEY:
				applyEvents(domNode, eventNode, value);
				break;

			case ATTR_KEY:
				applyAttrs(domNode, value);
				break;

			case ATTR_NS_KEY:
				applyAttrsNS(domNode, value);
				break;

			case 'value':
				if (domNode[key] !== value)
				{
					domNode[key] = value;
				}
				break;

			default:
				domNode[key] = value;
				break;
		}
	}
}

function applyStyles(domNode, styles)
{
	var domNodeStyle = domNode.style;

	for (var key in styles)
	{
		domNodeStyle[key] = styles[key];
	}
}

function applyEvents(domNode, eventNode, events)
{
	var allHandlers = domNode.elm_handlers || {};

	for (var key in events)
	{
		var handler = allHandlers[key];
		var value = events[key];

		if (typeof value === 'undefined')
		{
			domNode.removeEventListener(key, handler);
			allHandlers[key] = undefined;
		}
		else if (typeof handler === 'undefined')
		{
			var handler = makeEventHandler(eventNode, value);
			domNode.addEventListener(key, handler);
			allHandlers[key] = handler;
		}
		else
		{
			handler.info = value;
		}
	}

	domNode.elm_handlers = allHandlers;
}

function makeEventHandler(eventNode, info)
{
	function eventHandler(event)
	{
		var info = eventHandler.info;

		var value = A2(_elm_lang$core$Native_Json.run, info.decoder, event);

		if (value.ctor === 'Ok')
		{
			var options = info.options;
			if (options.stopPropagation)
			{
				event.stopPropagation();
			}
			if (options.preventDefault)
			{
				event.preventDefault();
			}

			var message = value._0;

			var currentEventNode = eventNode;
			while (currentEventNode)
			{
				var tagger = currentEventNode.tagger;
				if (typeof tagger === 'function')
				{
					message = tagger(message);
				}
				else
				{
					for (var i = tagger.length; i--; )
					{
						message = tagger[i](message);
					}
				}
				currentEventNode = currentEventNode.parent;
			}
		}
	};

	eventHandler.info = info;

	return eventHandler;
}

function applyAttrs(domNode, attrs)
{
	for (var key in attrs)
	{
		var value = attrs[key];
		if (typeof value === 'undefined')
		{
			domNode.removeAttribute(key);
		}
		else
		{
			domNode.setAttribute(key, value);
		}
	}
}

function applyAttrsNS(domNode, nsAttrs)
{
	for (var key in nsAttrs)
	{
		var pair = nsAttrs[key];
		var namespace = pair.namespace;
		var value = pair.value;

		if (typeof value === 'undefined')
		{
			domNode.removeAttributeNS(namespace, key);
		}
		else
		{
			domNode.setAttributeNS(namespace, key, value);
		}
	}
}



////////////  DIFF  ////////////


function diff(a, b)
{
	var patches = [];
	diffHelp(a, b, patches, 0);
	return patches;
}


function makePatch(type, index, data)
{
	return {
		index: index,
		type: type,
		data: data,
		domNode: undefined,
		eventNode: undefined
	};
}


function diffHelp(a, b, patches, index)
{
	if (a === b)
	{
		return;
	}

	var aType = a.type;
	var bType = b.type;

	// Bail if you run into different types of nodes. Implies that the
	// structure has changed significantly and it's not worth a diff.
	if (aType !== bType)
	{
		patches.push(makePatch('p-redraw', index, b));
		return;
	}

	// Now we know that both nodes are the same type.
	switch (bType)
	{
		case 'thunk':
			var aArgs = a.args;
			var bArgs = b.args;
			var i = aArgs.length;
			var same = a.func === b.func && i === bArgs.length;
			while (same && i--)
			{
				same = aArgs[i] === bArgs[i];
			}
			if (same)
			{
				b.node = a.node;
				return;
			}
			b.node = b.thunk();
			var subPatches = [];
			diffHelp(a.node, b.node, subPatches, 0);
			if (subPatches.length > 0)
			{
				patches.push(makePatch('p-thunk', index, subPatches));
			}
			return;

		case 'tagger':
			// gather nested taggers
			var aTaggers = a.tagger;
			var bTaggers = b.tagger;
			var nesting = false;

			var aSubNode = a.node;
			while (aSubNode.type === 'tagger')
			{
				nesting = true;

				typeof aTaggers !== 'object'
					? aTaggers = [aTaggers, aSubNode.tagger]
					: aTaggers.push(aSubNode.tagger);

				aSubNode = aSubNode.node;
			}

			var bSubNode = b.node;
			while (bSubNode.type === 'tagger')
			{
				nesting = true;

				typeof bTaggers !== 'object'
					? bTaggers = [bTaggers, bSubNode.tagger]
					: bTaggers.push(bSubNode.tagger);

				bSubNode = bSubNode.node;
			}

			// Just bail if different numbers of taggers. This implies the
			// structure of the virtual DOM has changed.
			if (nesting && aTaggers.length !== bTaggers.length)
			{
				patches.push(makePatch('p-redraw', index, b));
				return;
			}

			// check if taggers are "the same"
			if (nesting ? !pairwiseRefEqual(aTaggers, bTaggers) : aTaggers !== bTaggers)
			{
				patches.push(makePatch('p-tagger', index, bTaggers));
			}

			// diff everything below the taggers
			diffHelp(aSubNode, bSubNode, patches, index + 1);
			return;

		case 'text':
			if (a.text !== b.text)
			{
				patches.push(makePatch('p-text', index, b.text));
				return;
			}

			return;

		case 'node':
			// Bail if obvious indicators have changed. Implies more serious
			// structural changes such that it's not worth it to diff.
			if (a.tag !== b.tag || a.namespace !== b.namespace)
			{
				patches.push(makePatch('p-redraw', index, b));
				return;
			}

			var factsDiff = diffFacts(a.facts, b.facts);

			if (typeof factsDiff !== 'undefined')
			{
				patches.push(makePatch('p-facts', index, factsDiff));
			}

			diffChildren(a, b, patches, index);
			return;

		case 'keyed-node':
			// Bail if obvious indicators have changed. Implies more serious
			// structural changes such that it's not worth it to diff.
			if (a.tag !== b.tag || a.namespace !== b.namespace)
			{
				patches.push(makePatch('p-redraw', index, b));
				return;
			}

			var factsDiff = diffFacts(a.facts, b.facts);

			if (typeof factsDiff !== 'undefined')
			{
				patches.push(makePatch('p-facts', index, factsDiff));
			}

			diffKeyedChildren(a, b, patches, index);
			return;

		case 'custom':
			if (a.impl !== b.impl)
			{
				patches.push(makePatch('p-redraw', index, b));
				return;
			}

			var factsDiff = diffFacts(a.facts, b.facts);
			if (typeof factsDiff !== 'undefined')
			{
				patches.push(makePatch('p-facts', index, factsDiff));
			}

			var patch = b.impl.diff(a,b);
			if (patch)
			{
				patches.push(makePatch('p-custom', index, patch));
				return;
			}

			return;
	}
}


// assumes the incoming arrays are the same length
function pairwiseRefEqual(as, bs)
{
	for (var i = 0; i < as.length; i++)
	{
		if (as[i] !== bs[i])
		{
			return false;
		}
	}

	return true;
}


// TODO Instead of creating a new diff object, it's possible to just test if
// there *is* a diff. During the actual patch, do the diff again and make the
// modifications directly. This way, there's no new allocations. Worth it?
function diffFacts(a, b, category)
{
	var diff;

	// look for changes and removals
	for (var aKey in a)
	{
		if (aKey === STYLE_KEY || aKey === EVENT_KEY || aKey === ATTR_KEY || aKey === ATTR_NS_KEY)
		{
			var subDiff = diffFacts(a[aKey], b[aKey] || {}, aKey);
			if (subDiff)
			{
				diff = diff || {};
				diff[aKey] = subDiff;
			}
			continue;
		}

		// remove if not in the new facts
		if (!(aKey in b))
		{
			diff = diff || {};
			diff[aKey] =
				(typeof category === 'undefined')
					? (typeof a[aKey] === 'string' ? '' : null)
					:
				(category === STYLE_KEY)
					? ''
					:
				(category === EVENT_KEY || category === ATTR_KEY)
					? undefined
					:
				{ namespace: a[aKey].namespace, value: undefined };

			continue;
		}

		var aValue = a[aKey];
		var bValue = b[aKey];

		// reference equal, so don't worry about it
		if (aValue === bValue && aKey !== 'value'
			|| category === EVENT_KEY && equalEvents(aValue, bValue))
		{
			continue;
		}

		diff = diff || {};
		diff[aKey] = bValue;
	}

	// add new stuff
	for (var bKey in b)
	{
		if (!(bKey in a))
		{
			diff = diff || {};
			diff[bKey] = b[bKey];
		}
	}

	return diff;
}


function diffChildren(aParent, bParent, patches, rootIndex)
{
	var aChildren = aParent.children;
	var bChildren = bParent.children;

	var aLen = aChildren.length;
	var bLen = bChildren.length;

	// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS

	if (aLen > bLen)
	{
		patches.push(makePatch('p-remove-last', rootIndex, aLen - bLen));
	}
	else if (aLen < bLen)
	{
		patches.push(makePatch('p-append', rootIndex, bChildren.slice(aLen)));
	}

	// PAIRWISE DIFF EVERYTHING ELSE

	var index = rootIndex;
	var minLen = aLen < bLen ? aLen : bLen;
	for (var i = 0; i < minLen; i++)
	{
		index++;
		var aChild = aChildren[i];
		diffHelp(aChild, bChildren[i], patches, index);
		index += aChild.descendantsCount || 0;
	}
}



////////////  KEYED DIFF  ////////////


function diffKeyedChildren(aParent, bParent, patches, rootIndex)
{
	var localPatches = [];

	var changes = {}; // Dict String Entry
	var inserts = []; // Array { index : Int, entry : Entry }
	// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }

	var aChildren = aParent.children;
	var bChildren = bParent.children;
	var aLen = aChildren.length;
	var bLen = bChildren.length;
	var aIndex = 0;
	var bIndex = 0;

	var index = rootIndex;

	while (aIndex < aLen && bIndex < bLen)
	{
		var a = aChildren[aIndex];
		var b = bChildren[bIndex];

		var aKey = a._0;
		var bKey = b._0;
		var aNode = a._1;
		var bNode = b._1;

		// check if keys match

		if (aKey === bKey)
		{
			index++;
			diffHelp(aNode, bNode, localPatches, index);
			index += aNode.descendantsCount || 0;

			aIndex++;
			bIndex++;
			continue;
		}

		// look ahead 1 to detect insertions and removals.

		var aLookAhead = aIndex + 1 < aLen;
		var bLookAhead = bIndex + 1 < bLen;

		if (aLookAhead)
		{
			var aNext = aChildren[aIndex + 1];
			var aNextKey = aNext._0;
			var aNextNode = aNext._1;
			var oldMatch = bKey === aNextKey;
		}

		if (bLookAhead)
		{
			var bNext = bChildren[bIndex + 1];
			var bNextKey = bNext._0;
			var bNextNode = bNext._1;
			var newMatch = aKey === bNextKey;
		}


		// swap a and b
		if (aLookAhead && bLookAhead && newMatch && oldMatch)
		{
			index++;
			diffHelp(aNode, bNextNode, localPatches, index);
			insertNode(changes, localPatches, aKey, bNode, bIndex, inserts);
			index += aNode.descendantsCount || 0;

			index++;
			removeNode(changes, localPatches, aKey, aNextNode, index);
			index += aNextNode.descendantsCount || 0;

			aIndex += 2;
			bIndex += 2;
			continue;
		}

		// insert b
		if (bLookAhead && newMatch)
		{
			index++;
			insertNode(changes, localPatches, bKey, bNode, bIndex, inserts);
			diffHelp(aNode, bNextNode, localPatches, index);
			index += aNode.descendantsCount || 0;

			aIndex += 1;
			bIndex += 2;
			continue;
		}

		// remove a
		if (aLookAhead && oldMatch)
		{
			index++;
			removeNode(changes, localPatches, aKey, aNode, index);
			index += aNode.descendantsCount || 0;

			index++;
			diffHelp(aNextNode, bNode, localPatches, index);
			index += aNextNode.descendantsCount || 0;

			aIndex += 2;
			bIndex += 1;
			continue;
		}

		// remove a, insert b
		if (aLookAhead && bLookAhead && aNextKey === bNextKey)
		{
			index++;
			removeNode(changes, localPatches, aKey, aNode, index);
			insertNode(changes, localPatches, bKey, bNode, bIndex, inserts);
			index += aNode.descendantsCount || 0;

			index++;
			diffHelp(aNextNode, bNextNode, localPatches, index);
			index += aNextNode.descendantsCount || 0;

			aIndex += 2;
			bIndex += 2;
			continue;
		}

		break;
	}

	// eat up any remaining nodes with removeNode and insertNode

	while (aIndex < aLen)
	{
		index++;
		var a = aChildren[aIndex];
		var aNode = a._1;
		removeNode(changes, localPatches, a._0, aNode, index);
		index += aNode.descendantsCount || 0;
		aIndex++;
	}

	var endInserts;
	while (bIndex < bLen)
	{
		endInserts = endInserts || [];
		var b = bChildren[bIndex];
		insertNode(changes, localPatches, b._0, b._1, undefined, endInserts);
		bIndex++;
	}

	if (localPatches.length > 0 || inserts.length > 0 || typeof endInserts !== 'undefined')
	{
		patches.push(makePatch('p-reorder', rootIndex, {
			patches: localPatches,
			inserts: inserts,
			endInserts: endInserts
		}));
	}
}



////////////  CHANGES FROM KEYED DIFF  ////////////


var POSTFIX = '_elmW6BL';


function insertNode(changes, localPatches, key, vnode, bIndex, inserts)
{
	var entry = changes[key];

	// never seen this key before
	if (typeof entry === 'undefined')
	{
		entry = {
			tag: 'insert',
			vnode: vnode,
			index: bIndex,
			data: undefined
		};

		inserts.push({ index: bIndex, entry: entry });
		changes[key] = entry;

		return;
	}

	// this key was removed earlier, a match!
	if (entry.tag === 'remove')
	{
		inserts.push({ index: bIndex, entry: entry });

		entry.tag = 'move';
		var subPatches = [];
		diffHelp(entry.vnode, vnode, subPatches, entry.index);
		entry.index = bIndex;
		entry.data.data = {
			patches: subPatches,
			entry: entry
		};

		return;
	}

	// this key has already been inserted or moved, a duplicate!
	insertNode(changes, localPatches, key + POSTFIX, vnode, bIndex, inserts);
}


function removeNode(changes, localPatches, key, vnode, index)
{
	var entry = changes[key];

	// never seen this key before
	if (typeof entry === 'undefined')
	{
		var patch = makePatch('p-remove', index, undefined);
		localPatches.push(patch);

		changes[key] = {
			tag: 'remove',
			vnode: vnode,
			index: index,
			data: patch
		};

		return;
	}

	// this key was inserted earlier, a match!
	if (entry.tag === 'insert')
	{
		entry.tag = 'move';
		var subPatches = [];
		diffHelp(vnode, entry.vnode, subPatches, index);

		var patch = makePatch('p-remove', index, {
			patches: subPatches,
			entry: entry
		});
		localPatches.push(patch);

		return;
	}

	// this key has already been removed or moved, a duplicate!
	removeNode(changes, localPatches, key + POSTFIX, vnode, index);
}



////////////  ADD DOM NODES  ////////////
//
// Each DOM node has an "index" assigned in order of traversal. It is important
// to minimize our crawl over the actual DOM, so these indexes (along with the
// descendantsCount of virtual nodes) let us skip touching entire subtrees of
// the DOM if we know there are no patches there.


function addDomNodes(domNode, vNode, patches, eventNode)
{
	addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.descendantsCount, eventNode);
}


// assumes `patches` is non-empty and indexes increase monotonically.
function addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)
{
	var patch = patches[i];
	var index = patch.index;

	while (index === low)
	{
		var patchType = patch.type;

		if (patchType === 'p-thunk')
		{
			addDomNodes(domNode, vNode.node, patch.data, eventNode);
		}
		else if (patchType === 'p-reorder')
		{
			patch.domNode = domNode;
			patch.eventNode = eventNode;

			var subPatches = patch.data.patches;
			if (subPatches.length > 0)
			{
				addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
			}
		}
		else if (patchType === 'p-remove')
		{
			patch.domNode = domNode;
			patch.eventNode = eventNode;

			var data = patch.data;
			if (typeof data !== 'undefined')
			{
				data.entry.data = domNode;
				var subPatches = data.patches;
				if (subPatches.length > 0)
				{
					addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
				}
			}
		}
		else
		{
			patch.domNode = domNode;
			patch.eventNode = eventNode;
		}

		i++;

		if (!(patch = patches[i]) || (index = patch.index) > high)
		{
			return i;
		}
	}

	switch (vNode.type)
	{
		case 'tagger':
			var subNode = vNode.node;

			while (subNode.type === "tagger")
			{
				subNode = subNode.node;
			}

			return addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);

		case 'node':
			var vChildren = vNode.children;
			var childNodes = domNode.childNodes;
			for (var j = 0; j < vChildren.length; j++)
			{
				low++;
				var vChild = vChildren[j];
				var nextLow = low + (vChild.descendantsCount || 0);
				if (low <= index && index <= nextLow)
				{
					i = addDomNodesHelp(childNodes[j], vChild, patches, i, low, nextLow, eventNode);
					if (!(patch = patches[i]) || (index = patch.index) > high)
					{
						return i;
					}
				}
				low = nextLow;
			}
			return i;

		case 'keyed-node':
			var vChildren = vNode.children;
			var childNodes = domNode.childNodes;
			for (var j = 0; j < vChildren.length; j++)
			{
				low++;
				var vChild = vChildren[j]._1;
				var nextLow = low + (vChild.descendantsCount || 0);
				if (low <= index && index <= nextLow)
				{
					i = addDomNodesHelp(childNodes[j], vChild, patches, i, low, nextLow, eventNode);
					if (!(patch = patches[i]) || (index = patch.index) > high)
					{
						return i;
					}
				}
				low = nextLow;
			}
			return i;

		case 'text':
		case 'thunk':
			throw new Error('should never traverse `text` or `thunk` nodes like this');
	}
}



////////////  APPLY PATCHES  ////////////


function applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)
{
	if (patches.length === 0)
	{
		return rootDomNode;
	}

	addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);
	return applyPatchesHelp(rootDomNode, patches);
}

function applyPatchesHelp(rootDomNode, patches)
{
	for (var i = 0; i < patches.length; i++)
	{
		var patch = patches[i];
		var localDomNode = patch.domNode
		var newNode = applyPatch(localDomNode, patch);
		if (localDomNode === rootDomNode)
		{
			rootDomNode = newNode;
		}
	}
	return rootDomNode;
}

function applyPatch(domNode, patch)
{
	switch (patch.type)
	{
		case 'p-redraw':
			return applyPatchRedraw(domNode, patch.data, patch.eventNode);

		case 'p-facts':
			applyFacts(domNode, patch.eventNode, patch.data);
			return domNode;

		case 'p-text':
			domNode.replaceData(0, domNode.length, patch.data);
			return domNode;

		case 'p-thunk':
			return applyPatchesHelp(domNode, patch.data);

		case 'p-tagger':
			if (typeof domNode.elm_event_node_ref !== 'undefined')
			{
				domNode.elm_event_node_ref.tagger = patch.data;
			}
			else
			{
				domNode.elm_event_node_ref = { tagger: patch.data, parent: patch.eventNode };
			}
			return domNode;

		case 'p-remove-last':
			var i = patch.data;
			while (i--)
			{
				domNode.removeChild(domNode.lastChild);
			}
			return domNode;

		case 'p-append':
			var newNodes = patch.data;
			for (var i = 0; i < newNodes.length; i++)
			{
				domNode.appendChild(render(newNodes[i], patch.eventNode));
			}
			return domNode;

		case 'p-remove':
			var data = patch.data;
			if (typeof data === 'undefined')
			{
				domNode.parentNode.removeChild(domNode);
				return domNode;
			}
			var entry = data.entry;
			if (typeof entry.index !== 'undefined')
			{
				domNode.parentNode.removeChild(domNode);
			}
			entry.data = applyPatchesHelp(domNode, data.patches);
			return domNode;

		case 'p-reorder':
			return applyPatchReorder(domNode, patch);

		case 'p-custom':
			var impl = patch.data;
			return impl.applyPatch(domNode, impl.data);

		default:
			throw new Error('Ran into an unknown patch!');
	}
}


function applyPatchRedraw(domNode, vNode, eventNode)
{
	var parentNode = domNode.parentNode;
	var newNode = render(vNode, eventNode);

	if (typeof newNode.elm_event_node_ref === 'undefined')
	{
		newNode.elm_event_node_ref = domNode.elm_event_node_ref;
	}

	if (parentNode && newNode !== domNode)
	{
		parentNode.replaceChild(newNode, domNode);
	}
	return newNode;
}


function applyPatchReorder(domNode, patch)
{
	var data = patch.data;

	// remove end inserts
	var frag = applyPatchReorderEndInsertsHelp(data.endInserts, patch);

	// removals
	domNode = applyPatchesHelp(domNode, data.patches);

	// inserts
	var inserts = data.inserts;
	for (var i = 0; i < inserts.length; i++)
	{
		var insert = inserts[i];
		var entry = insert.entry;
		var node = entry.tag === 'move'
			? entry.data
			: render(entry.vnode, patch.eventNode);
		domNode.insertBefore(node, domNode.childNodes[insert.index]);
	}

	// add end inserts
	if (typeof frag !== 'undefined')
	{
		domNode.appendChild(frag);
	}

	return domNode;
}


function applyPatchReorderEndInsertsHelp(endInserts, patch)
{
	if (typeof endInserts === 'undefined')
	{
		return;
	}

	var frag = localDoc.createDocumentFragment();
	for (var i = 0; i < endInserts.length; i++)
	{
		var insert = endInserts[i];
		var entry = insert.entry;
		frag.appendChild(entry.tag === 'move'
			? entry.data
			: render(entry.vnode, patch.eventNode)
		);
	}
	return frag;
}


// PROGRAMS

var program = makeProgram(checkNoFlags);
var programWithFlags = makeProgram(checkYesFlags);

function makeProgram(flagChecker)
{
	return F2(function(debugWrap, impl)
	{
		return function(flagDecoder)
		{
			return function(object, moduleName, debugMetadata)
			{
				var checker = flagChecker(flagDecoder, moduleName);
				if (typeof debugMetadata === 'undefined')
				{
					normalSetup(impl, object, moduleName, checker);
				}
				else
				{
					debugSetup(A2(debugWrap, debugMetadata, impl), object, moduleName, checker);
				}
			};
		};
	});
}

function staticProgram(vNode)
{
	var nothing = _elm_lang$core$Native_Utils.Tuple2(
		_elm_lang$core$Native_Utils.Tuple0,
		_elm_lang$core$Platform_Cmd$none
	);
	return A2(program, _elm_lang$virtual_dom$VirtualDom_Debug$wrap, {
		init: nothing,
		view: function() { return vNode; },
		update: F2(function() { return nothing; }),
		subscriptions: function() { return _elm_lang$core$Platform_Sub$none; }
	})();
}


// FLAG CHECKERS

function checkNoFlags(flagDecoder, moduleName)
{
	return function(init, flags, domNode)
	{
		if (typeof flags === 'undefined')
		{
			return init;
		}

		var errorMessage =
			'The `' + moduleName + '` module does not need flags.\n'
			+ 'Initialize it with no arguments and you should be all set!';

		crash(errorMessage, domNode);
	};
}

function checkYesFlags(flagDecoder, moduleName)
{
	return function(init, flags, domNode)
	{
		if (typeof flagDecoder === 'undefined')
		{
			var errorMessage =
				'Are you trying to sneak a Never value into Elm? Trickster!\n'
				+ 'It looks like ' + moduleName + '.main is defined with `programWithFlags` but has type `Program Never`.\n'
				+ 'Use `program` instead if you do not want flags.'

			crash(errorMessage, domNode);
		}

		var result = A2(_elm_lang$core$Native_Json.run, flagDecoder, flags);
		if (result.ctor === 'Ok')
		{
			return init(result._0);
		}

		var errorMessage =
			'Trying to initialize the `' + moduleName + '` module with an unexpected flag.\n'
			+ 'I tried to convert it to an Elm value, but ran into this problem:\n\n'
			+ result._0;

		crash(errorMessage, domNode);
	};
}

function crash(errorMessage, domNode)
{
	if (domNode)
	{
		domNode.innerHTML =
			'<div style="padding-left:1em;">'
			+ '<h2 style="font-weight:normal;"><b>Oops!</b> Something went wrong when starting your Elm program.</h2>'
			+ '<pre style="padding-left:1em;">' + errorMessage + '</pre>'
			+ '</div>';
	}

	throw new Error(errorMessage);
}


//  NORMAL SETUP

function normalSetup(impl, object, moduleName, flagChecker)
{
	object['embed'] = function embed(node, flags)
	{
		while (node.lastChild)
		{
			node.removeChild(node.lastChild);
		}

		return _elm_lang$core$Native_Platform.initialize(
			flagChecker(impl.init, flags, node),
			impl.update,
			impl.subscriptions,
			normalRenderer(node, impl.view)
		);
	};

	object['fullscreen'] = function fullscreen(flags)
	{
		return _elm_lang$core$Native_Platform.initialize(
			flagChecker(impl.init, flags, document.body),
			impl.update,
			impl.subscriptions,
			normalRenderer(document.body, impl.view)
		);
	};
}

function normalRenderer(parentNode, view)
{
	return function(tagger, initialModel)
	{
		var eventNode = { tagger: tagger, parent: undefined };
		var initialVirtualNode = view(initialModel);
		var domNode = render(initialVirtualNode, eventNode);
		parentNode.appendChild(domNode);
		return makeStepper(domNode, view, initialVirtualNode, eventNode);
	};
}


// STEPPER

var rAF =
	typeof requestAnimationFrame !== 'undefined'
		? requestAnimationFrame
		: function(callback) { setTimeout(callback, 1000 / 60); };

function makeStepper(domNode, view, initialVirtualNode, eventNode)
{
	var state = 'NO_REQUEST';
	var currNode = initialVirtualNode;
	var nextModel;

	function updateIfNeeded()
	{
		switch (state)
		{
			case 'NO_REQUEST':
				throw new Error(
					'Unexpected draw callback.\n' +
					'Please report this to <https://github.com/elm-lang/virtual-dom/issues>.'
				);

			case 'PENDING_REQUEST':
				rAF(updateIfNeeded);
				state = 'EXTRA_REQUEST';

				var nextNode = view(nextModel);
				var patches = diff(currNode, nextNode);
				domNode = applyPatches(domNode, currNode, patches, eventNode);
				currNode = nextNode;

				return;

			case 'EXTRA_REQUEST':
				state = 'NO_REQUEST';
				return;
		}
	}

	return function stepper(model)
	{
		if (state === 'NO_REQUEST')
		{
			rAF(updateIfNeeded);
		}
		state = 'PENDING_REQUEST';
		nextModel = model;
	};
}


// DEBUG SETUP

function debugSetup(impl, object, moduleName, flagChecker)
{
	object['fullscreen'] = function fullscreen(flags)
	{
		var popoutRef = { doc: undefined };
		return _elm_lang$core$Native_Platform.initialize(
			flagChecker(impl.init, flags, document.body),
			impl.update(scrollTask(popoutRef)),
			impl.subscriptions,
			debugRenderer(moduleName, document.body, popoutRef, impl.view, impl.viewIn, impl.viewOut)
		);
	};

	object['embed'] = function fullscreen(node, flags)
	{
		var popoutRef = { doc: undefined };
		return _elm_lang$core$Native_Platform.initialize(
			flagChecker(impl.init, flags, node),
			impl.update(scrollTask(popoutRef)),
			impl.subscriptions,
			debugRenderer(moduleName, node, popoutRef, impl.view, impl.viewIn, impl.viewOut)
		);
	};
}

function scrollTask(popoutRef)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		var doc = popoutRef.doc;
		if (doc)
		{
			var msgs = doc.getElementsByClassName('debugger-sidebar-messages')[0];
			if (msgs)
			{
				msgs.scrollTop = msgs.scrollHeight;
			}
		}
		callback(_elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Native_Utils.Tuple0));
	});
}


function debugRenderer(moduleName, parentNode, popoutRef, view, viewIn, viewOut)
{
	return function(tagger, initialModel)
	{
		var appEventNode = { tagger: tagger, parent: undefined };
		var eventNode = { tagger: tagger, parent: undefined };

		// make normal stepper
		var appVirtualNode = view(initialModel);
		var appNode = render(appVirtualNode, appEventNode);
		parentNode.appendChild(appNode);
		var appStepper = makeStepper(appNode, view, appVirtualNode, appEventNode);

		// make overlay stepper
		var overVirtualNode = viewIn(initialModel)._1;
		var overNode = render(overVirtualNode, eventNode);
		parentNode.appendChild(overNode);
		var wrappedViewIn = wrapViewIn(appEventNode, overNode, viewIn);
		var overStepper = makeStepper(overNode, wrappedViewIn, overVirtualNode, eventNode);

		// make debugger stepper
		var debugStepper = makeDebugStepper(initialModel, viewOut, eventNode, parentNode, moduleName, popoutRef);

		return function stepper(model)
		{
			appStepper(model);
			overStepper(model);
			debugStepper(model);
		}
	};
}

function makeDebugStepper(initialModel, view, eventNode, parentNode, moduleName, popoutRef)
{
	var curr;
	var domNode;

	return function stepper(model)
	{
		if (!model.isDebuggerOpen)
		{
			return;
		}

		if (!popoutRef.doc)
		{
			curr = view(model);
			domNode = openDebugWindow(moduleName, popoutRef, curr, eventNode);
			return;
		}

		// switch to document of popout
		localDoc = popoutRef.doc;

		var next = view(model);
		var patches = diff(curr, next);
		domNode = applyPatches(domNode, curr, patches, eventNode);
		curr = next;

		// switch back to normal document
		localDoc = document;
	};
}

function openDebugWindow(moduleName, popoutRef, virtualNode, eventNode)
{
	var w = 900;
	var h = 360;
	var x = screen.width - w;
	var y = screen.height - h;
	var debugWindow = window.open('', '', 'width=' + w + ',height=' + h + ',left=' + x + ',top=' + y);

	// switch to window document
	localDoc = debugWindow.document;

	popoutRef.doc = localDoc;
	localDoc.title = 'Debugger - ' + moduleName;
	localDoc.body.style.margin = '0';
	localDoc.body.style.padding = '0';
	var domNode = render(virtualNode, eventNode);
	localDoc.body.appendChild(domNode);

	localDoc.addEventListener('keydown', function(event) {
		if (event.metaKey && event.which === 82)
		{
			window.location.reload();
		}
		if (event.which === 38)
		{
			eventNode.tagger({ ctor: 'Up' });
			event.preventDefault();
		}
		if (event.which === 40)
		{
			eventNode.tagger({ ctor: 'Down' });
			event.preventDefault();
		}
	});

	function close()
	{
		popoutRef.doc = undefined;
		debugWindow.close();
	}
	window.addEventListener('unload', close);
	debugWindow.addEventListener('unload', function() {
		popoutRef.doc = undefined;
		window.removeEventListener('unload', close);
		eventNode.tagger({ ctor: 'Close' });
	});

	// switch back to the normal document
	localDoc = document;

	return domNode;
}


// BLOCK EVENTS

function wrapViewIn(appEventNode, overlayNode, viewIn)
{
	var ignorer = makeIgnorer(overlayNode);
	var blocking = 'Normal';
	var overflow;

	var normalTagger = appEventNode.tagger;
	var blockTagger = function() {};

	return function(model)
	{
		var tuple = viewIn(model);
		var newBlocking = tuple._0.ctor;
		appEventNode.tagger = newBlocking === 'Normal' ? normalTagger : blockTagger;
		if (blocking !== newBlocking)
		{
			traverse('removeEventListener', ignorer, blocking);
			traverse('addEventListener', ignorer, newBlocking);

			if (blocking === 'Normal')
			{
				overflow = document.body.style.overflow;
				document.body.style.overflow = 'hidden';
			}

			if (newBlocking === 'Normal')
			{
				document.body.style.overflow = overflow;
			}

			blocking = newBlocking;
		}
		return tuple._1;
	}
}

function traverse(verbEventListener, ignorer, blocking)
{
	switch(blocking)
	{
		case 'Normal':
			return;

		case 'Pause':
			return traverseHelp(verbEventListener, ignorer, mostEvents);

		case 'Message':
			return traverseHelp(verbEventListener, ignorer, allEvents);
	}
}

function traverseHelp(verbEventListener, handler, eventNames)
{
	for (var i = 0; i < eventNames.length; i++)
	{
		document.body[verbEventListener](eventNames[i], handler, true);
	}
}

function makeIgnorer(overlayNode)
{
	return function(event)
	{
		if (event.type === 'keydown' && event.metaKey && event.which === 82)
		{
			return;
		}

		var isScroll = event.type === 'scroll' || event.type === 'wheel';

		var node = event.target;
		while (node !== null)
		{
			if (node.className === 'elm-overlay-message-details' && isScroll)
			{
				return;
			}

			if (node === overlayNode && !isScroll)
			{
				return;
			}
			node = node.parentNode;
		}

		event.stopPropagation();
		event.preventDefault();
	}
}

var mostEvents = [
	'click', 'dblclick', 'mousemove',
	'mouseup', 'mousedown', 'mouseenter', 'mouseleave',
	'touchstart', 'touchend', 'touchcancel', 'touchmove',
	'pointerdown', 'pointerup', 'pointerover', 'pointerout',
	'pointerenter', 'pointerleave', 'pointermove', 'pointercancel',
	'dragstart', 'drag', 'dragend', 'dragenter', 'dragover', 'dragleave', 'drop',
	'keyup', 'keydown', 'keypress',
	'input', 'change',
	'focus', 'blur'
];

var allEvents = mostEvents.concat('wheel', 'scroll');


return {
	node: node,
	text: text,
	custom: custom,
	map: F2(map),

	on: F3(on),
	style: style,
	property: F2(property),
	attribute: F2(attribute),
	attributeNS: F3(attributeNS),
	mapProperty: F2(mapProperty),

	lazy: F2(lazy),
	lazy2: F3(lazy2),
	lazy3: F4(lazy3),
	keyedNode: F3(keyedNode),

	program: program,
	programWithFlags: programWithFlags,
	staticProgram: staticProgram
};

}();

var _elm_lang$core$Task$onError = _elm_lang$core$Native_Scheduler.onError;
var _elm_lang$core$Task$andThen = _elm_lang$core$Native_Scheduler.andThen;
var _elm_lang$core$Task$spawnCmd = F2(
	function (router, _p0) {
		var _p1 = _p0;
		return _elm_lang$core$Native_Scheduler.spawn(
			A2(
				_elm_lang$core$Task$andThen,
				_elm_lang$core$Platform$sendToApp(router),
				_p1._0));
	});
var _elm_lang$core$Task$fail = _elm_lang$core$Native_Scheduler.fail;
var _elm_lang$core$Task$mapError = F2(
	function (convert, task) {
		return A2(
			_elm_lang$core$Task$onError,
			function (_p2) {
				return _elm_lang$core$Task$fail(
					convert(_p2));
			},
			task);
	});
var _elm_lang$core$Task$succeed = _elm_lang$core$Native_Scheduler.succeed;
var _elm_lang$core$Task$map = F2(
	function (func, taskA) {
		return A2(
			_elm_lang$core$Task$andThen,
			function (a) {
				return _elm_lang$core$Task$succeed(
					func(a));
			},
			taskA);
	});
var _elm_lang$core$Task$map2 = F3(
	function (func, taskA, taskB) {
		return A2(
			_elm_lang$core$Task$andThen,
			function (a) {
				return A2(
					_elm_lang$core$Task$andThen,
					function (b) {
						return _elm_lang$core$Task$succeed(
							A2(func, a, b));
					},
					taskB);
			},
			taskA);
	});
var _elm_lang$core$Task$map3 = F4(
	function (func, taskA, taskB, taskC) {
		return A2(
			_elm_lang$core$Task$andThen,
			function (a) {
				return A2(
					_elm_lang$core$Task$andThen,
					function (b) {
						return A2(
							_elm_lang$core$Task$andThen,
							function (c) {
								return _elm_lang$core$Task$succeed(
									A3(func, a, b, c));
							},
							taskC);
					},
					taskB);
			},
			taskA);
	});
var _elm_lang$core$Task$map4 = F5(
	function (func, taskA, taskB, taskC, taskD) {
		return A2(
			_elm_lang$core$Task$andThen,
			function (a) {
				return A2(
					_elm_lang$core$Task$andThen,
					function (b) {
						return A2(
							_elm_lang$core$Task$andThen,
							function (c) {
								return A2(
									_elm_lang$core$Task$andThen,
									function (d) {
										return _elm_lang$core$Task$succeed(
											A4(func, a, b, c, d));
									},
									taskD);
							},
							taskC);
					},
					taskB);
			},
			taskA);
	});
var _elm_lang$core$Task$map5 = F6(
	function (func, taskA, taskB, taskC, taskD, taskE) {
		return A2(
			_elm_lang$core$Task$andThen,
			function (a) {
				return A2(
					_elm_lang$core$Task$andThen,
					function (b) {
						return A2(
							_elm_lang$core$Task$andThen,
							function (c) {
								return A2(
									_elm_lang$core$Task$andThen,
									function (d) {
										return A2(
											_elm_lang$core$Task$andThen,
											function (e) {
												return _elm_lang$core$Task$succeed(
													A5(func, a, b, c, d, e));
											},
											taskE);
									},
									taskD);
							},
							taskC);
					},
					taskB);
			},
			taskA);
	});
var _elm_lang$core$Task$sequence = function (tasks) {
	var _p3 = tasks;
	if (_p3.ctor === '[]') {
		return _elm_lang$core$Task$succeed(
			{ctor: '[]'});
	} else {
		return A3(
			_elm_lang$core$Task$map2,
			F2(
				function (x, y) {
					return {ctor: '::', _0: x, _1: y};
				}),
			_p3._0,
			_elm_lang$core$Task$sequence(_p3._1));
	}
};
var _elm_lang$core$Task$onEffects = F3(
	function (router, commands, state) {
		return A2(
			_elm_lang$core$Task$map,
			function (_p4) {
				return {ctor: '_Tuple0'};
			},
			_elm_lang$core$Task$sequence(
				A2(
					_elm_lang$core$List$map,
					_elm_lang$core$Task$spawnCmd(router),
					commands)));
	});
var _elm_lang$core$Task$init = _elm_lang$core$Task$succeed(
	{ctor: '_Tuple0'});
var _elm_lang$core$Task$onSelfMsg = F3(
	function (_p7, _p6, _p5) {
		return _elm_lang$core$Task$succeed(
			{ctor: '_Tuple0'});
	});
var _elm_lang$core$Task$command = _elm_lang$core$Native_Platform.leaf('Task');
var _elm_lang$core$Task$Perform = function (a) {
	return {ctor: 'Perform', _0: a};
};
var _elm_lang$core$Task$perform = F2(
	function (toMessage, task) {
		return _elm_lang$core$Task$command(
			_elm_lang$core$Task$Perform(
				A2(_elm_lang$core$Task$map, toMessage, task)));
	});
var _elm_lang$core$Task$attempt = F2(
	function (resultToMessage, task) {
		return _elm_lang$core$Task$command(
			_elm_lang$core$Task$Perform(
				A2(
					_elm_lang$core$Task$onError,
					function (_p8) {
						return _elm_lang$core$Task$succeed(
							resultToMessage(
								_elm_lang$core$Result$Err(_p8)));
					},
					A2(
						_elm_lang$core$Task$andThen,
						function (_p9) {
							return _elm_lang$core$Task$succeed(
								resultToMessage(
									_elm_lang$core$Result$Ok(_p9)));
						},
						task))));
	});
var _elm_lang$core$Task$cmdMap = F2(
	function (tagger, _p10) {
		var _p11 = _p10;
		return _elm_lang$core$Task$Perform(
			A2(_elm_lang$core$Task$map, tagger, _p11._0));
	});
_elm_lang$core$Native_Platform.effectManagers['Task'] = {pkg: 'elm-lang/core', init: _elm_lang$core$Task$init, onEffects: _elm_lang$core$Task$onEffects, onSelfMsg: _elm_lang$core$Task$onSelfMsg, tag: 'cmd', cmdMap: _elm_lang$core$Task$cmdMap};

var _elm_lang$virtual_dom$Native_Debug = function() {


// IMPORT / EXPORT

function unsafeCoerce(value)
{
	return value;
}

var upload = _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
{
	var element = document.createElement('input');
	element.setAttribute('type', 'file');
	element.setAttribute('accept', 'text/json');
	element.style.display = 'none';
	element.addEventListener('change', function(event)
	{
		var fileReader = new FileReader();
		fileReader.onload = function(e)
		{
			callback(_elm_lang$core$Native_Scheduler.succeed(e.target.result));
		};
		fileReader.readAsText(event.target.files[0]);
		document.body.removeChild(element);
	});
	document.body.appendChild(element);
	element.click();
});

function download(historyLength, json)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		var fileName = 'history-' + historyLength + '.txt';
		var jsonString = JSON.stringify(json);
		var mime = 'text/plain;charset=utf-8';
		var done = _elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Native_Utils.Tuple0);

		// for IE10+
		if (navigator.msSaveBlob)
		{
			navigator.msSaveBlob(new Blob([jsonString], {type: mime}), fileName);
			return callback(done);
		}

		// for HTML5
		var element = document.createElement('a');
		element.setAttribute('href', 'data:' + mime + ',' + encodeURIComponent(jsonString));
		element.setAttribute('download', fileName);
		element.style.display = 'none';
		document.body.appendChild(element);
		element.click();
		document.body.removeChild(element);
		callback(done);
	});
}


// POPOUT

function messageToString(value)
{
	switch (typeof value)
	{
		case 'boolean':
			return value ? 'True' : 'False';
		case 'number':
			return value + '';
		case 'string':
			return '"' + addSlashes(value, false) + '"';
	}
	if (value instanceof String)
	{
		return '\'' + addSlashes(value, true) + '\'';
	}
	if (typeof value !== 'object' || value === null || !('ctor' in value))
	{
		return '…';
	}

	var ctorStarter = value.ctor.substring(0, 5);
	if (ctorStarter === '_Tupl' || ctorStarter === '_Task')
	{
		return '…'
	}
	if (['_Array', '<decoder>', '_Process', '::', '[]', 'Set_elm_builtin', 'RBNode_elm_builtin', 'RBEmpty_elm_builtin'].indexOf(value.ctor) >= 0)
	{
		return '…';
	}

	var keys = Object.keys(value);
	switch (keys.length)
	{
		case 1:
			return value.ctor;
		case 2:
			return value.ctor + ' ' + messageToString(value._0);
		default:
			return value.ctor + ' … ' + messageToString(value[keys[keys.length - 1]]);
	}
}


function primitive(str)
{
	return { ctor: 'Primitive', _0: str };
}


function init(value)
{
	var type = typeof value;

	if (type === 'boolean')
	{
		return {
			ctor: 'Constructor',
			_0: _elm_lang$core$Maybe$Just(value ? 'True' : 'False'),
			_1: true,
			_2: _elm_lang$core$Native_List.Nil
		};
	}

	if (type === 'number')
	{
		return primitive(value + '');
	}

	if (type === 'string')
	{
		return { ctor: 'S', _0: '"' + addSlashes(value, false) + '"' };
	}

	if (value instanceof String)
	{
		return { ctor: 'S', _0: "'" + addSlashes(value, true) + "'" };
	}

	if (value instanceof Date)
	{
		return primitive('<' + value.toString() + '>');
	}

	if (value === null)
	{
		return primitive('XXX');
	}

	if (type === 'object' && 'ctor' in value)
	{
		var ctor = value.ctor;

		if (ctor === '::' || ctor === '[]')
		{
			return {
				ctor: 'Sequence',
				_0: {ctor: 'ListSeq'},
				_1: true,
				_2: A2(_elm_lang$core$List$map, init, value)
			};
		}

		if (ctor === 'Set_elm_builtin')
		{
			return {
				ctor: 'Sequence',
				_0: {ctor: 'SetSeq'},
				_1: true,
				_2: A3(_elm_lang$core$Set$foldr, initCons, _elm_lang$core$Native_List.Nil, value)
			};
		}

		if (ctor === 'RBNode_elm_builtin' || ctor == 'RBEmpty_elm_builtin')
		{
			return {
				ctor: 'Dictionary',
				_0: true,
				_1: A3(_elm_lang$core$Dict$foldr, initKeyValueCons, _elm_lang$core$Native_List.Nil, value)
			};
		}

		if (ctor === '_Array')
		{
			return {
				ctor: 'Sequence',
				_0: {ctor: 'ArraySeq'},
				_1: true,
				_2: A3(_elm_lang$core$Array$foldr, initCons, _elm_lang$core$Native_List.Nil, value)
			};
		}

		var ctorStarter = value.ctor.substring(0, 5);
		if (ctorStarter === '_Task')
		{
			return primitive('<task>');
		}

		if (ctor === '<decoder>')
		{
			return primitive(ctor);
		}

		if (ctor === '_Process')
		{
			return primitive('<process>');
		}

		var list = _elm_lang$core$Native_List.Nil;
		for (var i in value)
		{
			if (i === 'ctor') continue;
			list = _elm_lang$core$Native_List.Cons(init(value[i]), list);
		}
		return {
			ctor: 'Constructor',
			_0: ctorStarter === '_Tupl' ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(ctor),
			_1: true,
			_2: _elm_lang$core$List$reverse(list)
		};
	}

	if (type === 'object')
	{
		var dict = _elm_lang$core$Dict$empty;
		for (var i in value)
		{
			dict = A3(_elm_lang$core$Dict$insert, i, init(value[i]), dict);
		}
		return { ctor: 'Record', _0: true, _1: dict };
	}

	return primitive('XXX');
}

var initCons = F2(initConsHelp);

function initConsHelp(value, list)
{
	return _elm_lang$core$Native_List.Cons(init(value), list);
}

var initKeyValueCons = F3(initKeyValueConsHelp);

function initKeyValueConsHelp(key, value, list)
{
	return _elm_lang$core$Native_List.Cons(
		_elm_lang$core$Native_Utils.Tuple2(init(key), init(value)),
		list
	);
}

function addSlashes(str, isChar)
{
	var s = str.replace(/\\/g, '\\\\')
			  .replace(/\n/g, '\\n')
			  .replace(/\t/g, '\\t')
			  .replace(/\r/g, '\\r')
			  .replace(/\v/g, '\\v')
			  .replace(/\0/g, '\\0');
	if (isChar)
	{
		return s.replace(/\'/g, '\\\'');
	}
	else
	{
		return s.replace(/\"/g, '\\"');
	}
}


return {
	upload: upload,
	download: F2(download),
	unsafeCoerce: unsafeCoerce,
	messageToString: messageToString,
	init: init
}

}();

var _elm_lang$virtual_dom$VirtualDom_Helpers$keyedNode = _elm_lang$virtual_dom$Native_VirtualDom.keyedNode;
var _elm_lang$virtual_dom$VirtualDom_Helpers$lazy3 = _elm_lang$virtual_dom$Native_VirtualDom.lazy3;
var _elm_lang$virtual_dom$VirtualDom_Helpers$lazy2 = _elm_lang$virtual_dom$Native_VirtualDom.lazy2;
var _elm_lang$virtual_dom$VirtualDom_Helpers$lazy = _elm_lang$virtual_dom$Native_VirtualDom.lazy;
var _elm_lang$virtual_dom$VirtualDom_Helpers$defaultOptions = {stopPropagation: false, preventDefault: false};
var _elm_lang$virtual_dom$VirtualDom_Helpers$onWithOptions = _elm_lang$virtual_dom$Native_VirtualDom.on;
var _elm_lang$virtual_dom$VirtualDom_Helpers$on = F2(
	function (eventName, decoder) {
		return A3(_elm_lang$virtual_dom$VirtualDom_Helpers$onWithOptions, eventName, _elm_lang$virtual_dom$VirtualDom_Helpers$defaultOptions, decoder);
	});
var _elm_lang$virtual_dom$VirtualDom_Helpers$onClick = function (msg) {
	return A2(
		_elm_lang$virtual_dom$VirtualDom_Helpers$on,
		'click',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _elm_lang$virtual_dom$VirtualDom_Helpers$style = _elm_lang$virtual_dom$Native_VirtualDom.style;
var _elm_lang$virtual_dom$VirtualDom_Helpers$attribute = _elm_lang$virtual_dom$Native_VirtualDom.attribute;
var _elm_lang$virtual_dom$VirtualDom_Helpers$id = _elm_lang$virtual_dom$VirtualDom_Helpers$attribute('id');
var _elm_lang$virtual_dom$VirtualDom_Helpers$property = _elm_lang$virtual_dom$Native_VirtualDom.property;
var _elm_lang$virtual_dom$VirtualDom_Helpers$class = function (name) {
	return A2(
		_elm_lang$virtual_dom$VirtualDom_Helpers$property,
		'className',
		_elm_lang$core$Json_Encode$string(name));
};
var _elm_lang$virtual_dom$VirtualDom_Helpers$href = function (name) {
	return A2(
		_elm_lang$virtual_dom$VirtualDom_Helpers$property,
		'href',
		_elm_lang$core$Json_Encode$string(name));
};
var _elm_lang$virtual_dom$VirtualDom_Helpers$map = _elm_lang$virtual_dom$Native_VirtualDom.map;
var _elm_lang$virtual_dom$VirtualDom_Helpers$text = _elm_lang$virtual_dom$Native_VirtualDom.text;
var _elm_lang$virtual_dom$VirtualDom_Helpers$node = _elm_lang$virtual_dom$Native_VirtualDom.node;
var _elm_lang$virtual_dom$VirtualDom_Helpers$div = _elm_lang$virtual_dom$VirtualDom_Helpers$node('div');
var _elm_lang$virtual_dom$VirtualDom_Helpers$span = _elm_lang$virtual_dom$VirtualDom_Helpers$node('span');
var _elm_lang$virtual_dom$VirtualDom_Helpers$a = _elm_lang$virtual_dom$VirtualDom_Helpers$node('a');
var _elm_lang$virtual_dom$VirtualDom_Helpers$h1 = _elm_lang$virtual_dom$VirtualDom_Helpers$node('h1');
var _elm_lang$virtual_dom$VirtualDom_Helpers$Options = F2(
	function (a, b) {
		return {stopPropagation: a, preventDefault: b};
	});
var _elm_lang$virtual_dom$VirtualDom_Helpers$Node = {ctor: 'Node'};
var _elm_lang$virtual_dom$VirtualDom_Helpers$Property = {ctor: 'Property'};

var _elm_lang$virtual_dom$VirtualDom_Expando$purple = _elm_lang$virtual_dom$VirtualDom_Helpers$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'color', _1: 'rgb(136, 19, 145)'},
		_1: {ctor: '[]'}
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$blue = _elm_lang$virtual_dom$VirtualDom_Helpers$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'color', _1: 'rgb(28, 0, 207)'},
		_1: {ctor: '[]'}
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$red = _elm_lang$virtual_dom$VirtualDom_Helpers$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'color', _1: 'rgb(196, 26, 22)'},
		_1: {ctor: '[]'}
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$leftPad = function (maybeKey) {
	var _p0 = maybeKey;
	if (_p0.ctor === 'Nothing') {
		return _elm_lang$virtual_dom$VirtualDom_Helpers$style(
			{ctor: '[]'});
	} else {
		return _elm_lang$virtual_dom$VirtualDom_Helpers$style(
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'padding-left', _1: '4ch'},
				_1: {ctor: '[]'}
			});
	}
};
var _elm_lang$virtual_dom$VirtualDom_Expando$makeArrow = function (arrow) {
	return A2(
		_elm_lang$virtual_dom$VirtualDom_Helpers$span,
		{
			ctor: '::',
			_0: _elm_lang$virtual_dom$VirtualDom_Helpers$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'color', _1: '#777'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'padding-left', _1: '2ch'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'width', _1: '2ch'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-block'},
								_1: {ctor: '[]'}
							}
						}
					}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(arrow),
			_1: {ctor: '[]'}
		});
};
var _elm_lang$virtual_dom$VirtualDom_Expando$lineStarter = F3(
	function (maybeKey, maybeIsClosed, description) {
		var arrow = function () {
			var _p1 = maybeIsClosed;
			if (_p1.ctor === 'Nothing') {
				return _elm_lang$virtual_dom$VirtualDom_Expando$makeArrow('');
			} else {
				if (_p1._0 === true) {
					return _elm_lang$virtual_dom$VirtualDom_Expando$makeArrow('▸');
				} else {
					return _elm_lang$virtual_dom$VirtualDom_Expando$makeArrow('▾');
				}
			}
		}();
		var _p2 = maybeKey;
		if (_p2.ctor === 'Nothing') {
			return {ctor: '::', _0: arrow, _1: description};
		} else {
			return {
				ctor: '::',
				_0: arrow,
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$virtual_dom$VirtualDom_Helpers$span,
						{
							ctor: '::',
							_0: _elm_lang$virtual_dom$VirtualDom_Expando$purple,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(_p2._0),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(' = '),
						_1: description
					}
				}
			};
		}
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$viewExtraTinyRecord = F3(
	function (length, starter, entries) {
		var _p3 = entries;
		if (_p3.ctor === '[]') {
			return {
				ctor: '_Tuple2',
				_0: length + 1,
				_1: {
					ctor: '::',
					_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('}'),
					_1: {ctor: '[]'}
				}
			};
		} else {
			var _p5 = _p3._0;
			var nextLength = (length + _elm_lang$core$String$length(_p5)) + 1;
			if (_elm_lang$core$Native_Utils.cmp(nextLength, 18) > 0) {
				return {
					ctor: '_Tuple2',
					_0: length + 2,
					_1: {
						ctor: '::',
						_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('…}'),
						_1: {ctor: '[]'}
					}
				};
			} else {
				var _p4 = A3(_elm_lang$virtual_dom$VirtualDom_Expando$viewExtraTinyRecord, nextLength, ',', _p3._1);
				var finalLength = _p4._0;
				var otherNodes = _p4._1;
				return {
					ctor: '_Tuple2',
					_0: finalLength,
					_1: {
						ctor: '::',
						_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(starter),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$virtual_dom$VirtualDom_Helpers$span,
								{
									ctor: '::',
									_0: _elm_lang$virtual_dom$VirtualDom_Expando$purple,
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(_p5),
									_1: {ctor: '[]'}
								}),
							_1: otherNodes
						}
					}
				};
			}
		}
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$elideMiddle = function (str) {
	return (_elm_lang$core$Native_Utils.cmp(
		_elm_lang$core$String$length(str),
		18) < 1) ? str : A2(
		_elm_lang$core$Basics_ops['++'],
		A2(_elm_lang$core$String$left, 8, str),
		A2(
			_elm_lang$core$Basics_ops['++'],
			'...',
			A2(_elm_lang$core$String$right, 8, str)));
};
var _elm_lang$virtual_dom$VirtualDom_Expando$viewTinyHelp = function (str) {
	return {
		ctor: '_Tuple2',
		_0: _elm_lang$core$String$length(str),
		_1: {
			ctor: '::',
			_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(str),
			_1: {ctor: '[]'}
		}
	};
};
var _elm_lang$virtual_dom$VirtualDom_Expando$updateIndex = F3(
	function (n, func, list) {
		var _p6 = list;
		if (_p6.ctor === '[]') {
			return {ctor: '[]'};
		} else {
			var _p8 = _p6._1;
			var _p7 = _p6._0;
			return (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) ? {
				ctor: '::',
				_0: func(_p7),
				_1: _p8
			} : {
				ctor: '::',
				_0: _p7,
				_1: A3(_elm_lang$virtual_dom$VirtualDom_Expando$updateIndex, n - 1, func, _p8)
			};
		}
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$seqTypeToString = F2(
	function (n, seqType) {
		var _p9 = seqType;
		switch (_p9.ctor) {
			case 'ListSeq':
				return A2(
					_elm_lang$core$Basics_ops['++'],
					'List(',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(n),
						')'));
			case 'SetSeq':
				return A2(
					_elm_lang$core$Basics_ops['++'],
					'Set(',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(n),
						')'));
			default:
				return A2(
					_elm_lang$core$Basics_ops['++'],
					'Array(',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(n),
						')'));
		}
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$viewTiny = function (value) {
	var _p10 = value;
	switch (_p10.ctor) {
		case 'S':
			var str = _elm_lang$virtual_dom$VirtualDom_Expando$elideMiddle(_p10._0);
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$String$length(str),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$virtual_dom$VirtualDom_Helpers$span,
						{
							ctor: '::',
							_0: _elm_lang$virtual_dom$VirtualDom_Expando$red,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(str),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			};
		case 'Primitive':
			var _p11 = _p10._0;
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$String$length(_p11),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$virtual_dom$VirtualDom_Helpers$span,
						{
							ctor: '::',
							_0: _elm_lang$virtual_dom$VirtualDom_Expando$blue,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(_p11),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			};
		case 'Sequence':
			return _elm_lang$virtual_dom$VirtualDom_Expando$viewTinyHelp(
				A2(
					_elm_lang$virtual_dom$VirtualDom_Expando$seqTypeToString,
					_elm_lang$core$List$length(_p10._2),
					_p10._0));
		case 'Dictionary':
			return _elm_lang$virtual_dom$VirtualDom_Expando$viewTinyHelp(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Dict(',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(
							_elm_lang$core$List$length(_p10._1)),
						')')));
		case 'Record':
			return _elm_lang$virtual_dom$VirtualDom_Expando$viewTinyRecord(_p10._1);
		default:
			if (_p10._2.ctor === '[]') {
				return _elm_lang$virtual_dom$VirtualDom_Expando$viewTinyHelp(
					A2(_elm_lang$core$Maybe$withDefault, 'Unit', _p10._0));
			} else {
				return _elm_lang$virtual_dom$VirtualDom_Expando$viewTinyHelp(
					function () {
						var _p12 = _p10._0;
						if (_p12.ctor === 'Nothing') {
							return A2(
								_elm_lang$core$Basics_ops['++'],
								'Tuple(',
								A2(
									_elm_lang$core$Basics_ops['++'],
									_elm_lang$core$Basics$toString(
										_elm_lang$core$List$length(_p10._2)),
									')'));
						} else {
							return A2(_elm_lang$core$Basics_ops['++'], _p12._0, ' …');
						}
					}());
			}
	}
};
var _elm_lang$virtual_dom$VirtualDom_Expando$viewTinyRecord = function (record) {
	return _elm_lang$core$Dict$isEmpty(record) ? {
		ctor: '_Tuple2',
		_0: 2,
		_1: {
			ctor: '::',
			_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('{}'),
			_1: {ctor: '[]'}
		}
	} : A3(
		_elm_lang$virtual_dom$VirtualDom_Expando$viewTinyRecordHelp,
		0,
		'{ ',
		_elm_lang$core$Dict$toList(record));
};
var _elm_lang$virtual_dom$VirtualDom_Expando$viewTinyRecordHelp = F3(
	function (length, starter, entries) {
		var _p13 = entries;
		if (_p13.ctor === '[]') {
			return {
				ctor: '_Tuple2',
				_0: length + 2,
				_1: {
					ctor: '::',
					_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(' }'),
					_1: {ctor: '[]'}
				}
			};
		} else {
			var _p16 = _p13._0._0;
			var _p14 = _elm_lang$virtual_dom$VirtualDom_Expando$viewExtraTiny(_p13._0._1);
			var valueLen = _p14._0;
			var valueNodes = _p14._1;
			var fieldLen = _elm_lang$core$String$length(_p16);
			var newLength = ((length + fieldLen) + valueLen) + 5;
			if (_elm_lang$core$Native_Utils.cmp(newLength, 60) > 0) {
				return {
					ctor: '_Tuple2',
					_0: length + 4,
					_1: {
						ctor: '::',
						_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(', … }'),
						_1: {ctor: '[]'}
					}
				};
			} else {
				var _p15 = A3(_elm_lang$virtual_dom$VirtualDom_Expando$viewTinyRecordHelp, newLength, ', ', _p13._1);
				var finalLength = _p15._0;
				var otherNodes = _p15._1;
				return {
					ctor: '_Tuple2',
					_0: finalLength,
					_1: {
						ctor: '::',
						_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(starter),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$virtual_dom$VirtualDom_Helpers$span,
								{
									ctor: '::',
									_0: _elm_lang$virtual_dom$VirtualDom_Expando$purple,
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(_p16),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(' = '),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$virtual_dom$VirtualDom_Helpers$span,
										{ctor: '[]'},
										valueNodes),
									_1: otherNodes
								}
							}
						}
					}
				};
			}
		}
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$viewExtraTiny = function (value) {
	var _p17 = value;
	if (_p17.ctor === 'Record') {
		return A3(
			_elm_lang$virtual_dom$VirtualDom_Expando$viewExtraTinyRecord,
			0,
			'{',
			_elm_lang$core$Dict$keys(_p17._1));
	} else {
		return _elm_lang$virtual_dom$VirtualDom_Expando$viewTiny(value);
	}
};
var _elm_lang$virtual_dom$VirtualDom_Expando$Constructor = F3(
	function (a, b, c) {
		return {ctor: 'Constructor', _0: a, _1: b, _2: c};
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$Record = F2(
	function (a, b) {
		return {ctor: 'Record', _0: a, _1: b};
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$Dictionary = F2(
	function (a, b) {
		return {ctor: 'Dictionary', _0: a, _1: b};
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$Sequence = F3(
	function (a, b, c) {
		return {ctor: 'Sequence', _0: a, _1: b, _2: c};
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$initHelp = F2(
	function (isOuter, expando) {
		var _p18 = expando;
		switch (_p18.ctor) {
			case 'S':
				return expando;
			case 'Primitive':
				return expando;
			case 'Sequence':
				var _p20 = _p18._0;
				var _p19 = _p18._2;
				return isOuter ? A3(
					_elm_lang$virtual_dom$VirtualDom_Expando$Sequence,
					_p20,
					false,
					A2(
						_elm_lang$core$List$map,
						_elm_lang$virtual_dom$VirtualDom_Expando$initHelp(false),
						_p19)) : ((_elm_lang$core$Native_Utils.cmp(
					_elm_lang$core$List$length(_p19),
					8) < 1) ? A3(_elm_lang$virtual_dom$VirtualDom_Expando$Sequence, _p20, false, _p19) : expando);
			case 'Dictionary':
				var _p23 = _p18._1;
				return isOuter ? A2(
					_elm_lang$virtual_dom$VirtualDom_Expando$Dictionary,
					false,
					A2(
						_elm_lang$core$List$map,
						function (_p21) {
							var _p22 = _p21;
							return {
								ctor: '_Tuple2',
								_0: _p22._0,
								_1: A2(_elm_lang$virtual_dom$VirtualDom_Expando$initHelp, false, _p22._1)
							};
						},
						_p23)) : ((_elm_lang$core$Native_Utils.cmp(
					_elm_lang$core$List$length(_p23),
					8) < 1) ? A2(_elm_lang$virtual_dom$VirtualDom_Expando$Dictionary, false, _p23) : expando);
			case 'Record':
				var _p25 = _p18._1;
				return isOuter ? A2(
					_elm_lang$virtual_dom$VirtualDom_Expando$Record,
					false,
					A2(
						_elm_lang$core$Dict$map,
						F2(
							function (_p24, v) {
								return A2(_elm_lang$virtual_dom$VirtualDom_Expando$initHelp, false, v);
							}),
						_p25)) : ((_elm_lang$core$Native_Utils.cmp(
					_elm_lang$core$Dict$size(_p25),
					4) < 1) ? A2(_elm_lang$virtual_dom$VirtualDom_Expando$Record, false, _p25) : expando);
			default:
				var _p27 = _p18._0;
				var _p26 = _p18._2;
				return isOuter ? A3(
					_elm_lang$virtual_dom$VirtualDom_Expando$Constructor,
					_p27,
					false,
					A2(
						_elm_lang$core$List$map,
						_elm_lang$virtual_dom$VirtualDom_Expando$initHelp(false),
						_p26)) : ((_elm_lang$core$Native_Utils.cmp(
					_elm_lang$core$List$length(_p26),
					4) < 1) ? A3(_elm_lang$virtual_dom$VirtualDom_Expando$Constructor, _p27, false, _p26) : expando);
		}
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$init = function (value) {
	return A2(
		_elm_lang$virtual_dom$VirtualDom_Expando$initHelp,
		true,
		_elm_lang$virtual_dom$Native_Debug.init(value));
};
var _elm_lang$virtual_dom$VirtualDom_Expando$mergeHelp = F2(
	function (old, $new) {
		var _p28 = {ctor: '_Tuple2', _0: old, _1: $new};
		_v12_6:
		do {
			if (_p28.ctor === '_Tuple2') {
				switch (_p28._1.ctor) {
					case 'S':
						return $new;
					case 'Primitive':
						return $new;
					case 'Sequence':
						if (_p28._0.ctor === 'Sequence') {
							return A3(
								_elm_lang$virtual_dom$VirtualDom_Expando$Sequence,
								_p28._1._0,
								_p28._0._1,
								A2(_elm_lang$virtual_dom$VirtualDom_Expando$mergeListHelp, _p28._0._2, _p28._1._2));
						} else {
							break _v12_6;
						}
					case 'Dictionary':
						if (_p28._0.ctor === 'Dictionary') {
							return A2(_elm_lang$virtual_dom$VirtualDom_Expando$Dictionary, _p28._0._0, _p28._1._1);
						} else {
							break _v12_6;
						}
					case 'Record':
						if (_p28._0.ctor === 'Record') {
							return A2(
								_elm_lang$virtual_dom$VirtualDom_Expando$Record,
								_p28._0._0,
								A2(
									_elm_lang$core$Dict$map,
									_elm_lang$virtual_dom$VirtualDom_Expando$mergeDictHelp(_p28._0._1),
									_p28._1._1));
						} else {
							break _v12_6;
						}
					default:
						if (_p28._0.ctor === 'Constructor') {
							return A3(
								_elm_lang$virtual_dom$VirtualDom_Expando$Constructor,
								_p28._1._0,
								_p28._0._1,
								A2(_elm_lang$virtual_dom$VirtualDom_Expando$mergeListHelp, _p28._0._2, _p28._1._2));
						} else {
							break _v12_6;
						}
				}
			} else {
				break _v12_6;
			}
		} while(false);
		return $new;
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$mergeDictHelp = F3(
	function (oldDict, key, value) {
		var _p29 = A2(_elm_lang$core$Dict$get, key, oldDict);
		if (_p29.ctor === 'Nothing') {
			return value;
		} else {
			return A2(_elm_lang$virtual_dom$VirtualDom_Expando$mergeHelp, _p29._0, value);
		}
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$mergeListHelp = F2(
	function (olds, news) {
		var _p30 = {ctor: '_Tuple2', _0: olds, _1: news};
		if (_p30._0.ctor === '[]') {
			return news;
		} else {
			if (_p30._1.ctor === '[]') {
				return news;
			} else {
				return {
					ctor: '::',
					_0: A2(_elm_lang$virtual_dom$VirtualDom_Expando$mergeHelp, _p30._0._0, _p30._1._0),
					_1: A2(_elm_lang$virtual_dom$VirtualDom_Expando$mergeListHelp, _p30._0._1, _p30._1._1)
				};
			}
		}
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$merge = F2(
	function (value, expando) {
		return A2(
			_elm_lang$virtual_dom$VirtualDom_Expando$mergeHelp,
			expando,
			_elm_lang$virtual_dom$Native_Debug.init(value));
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$update = F2(
	function (msg, value) {
		var _p31 = value;
		switch (_p31.ctor) {
			case 'S':
				return _elm_lang$core$Native_Utils.crashCase(
					'VirtualDom.Expando',
					{
						start: {line: 168, column: 3},
						end: {line: 235, column: 50}
					},
					_p31)('No messages for primitives');
			case 'Primitive':
				return _elm_lang$core$Native_Utils.crashCase(
					'VirtualDom.Expando',
					{
						start: {line: 168, column: 3},
						end: {line: 235, column: 50}
					},
					_p31)('No messages for primitives');
			case 'Sequence':
				var _p39 = _p31._2;
				var _p38 = _p31._0;
				var _p37 = _p31._1;
				var _p34 = msg;
				switch (_p34.ctor) {
					case 'Toggle':
						return A3(_elm_lang$virtual_dom$VirtualDom_Expando$Sequence, _p38, !_p37, _p39);
					case 'Index':
						if (_p34._0.ctor === 'None') {
							return A3(
								_elm_lang$virtual_dom$VirtualDom_Expando$Sequence,
								_p38,
								_p37,
								A3(
									_elm_lang$virtual_dom$VirtualDom_Expando$updateIndex,
									_p34._1,
									_elm_lang$virtual_dom$VirtualDom_Expando$update(_p34._2),
									_p39));
						} else {
							return _elm_lang$core$Native_Utils.crashCase(
								'VirtualDom.Expando',
								{
									start: {line: 176, column: 7},
									end: {line: 188, column: 46}
								},
								_p34)('No redirected indexes on sequences');
						}
					default:
						return _elm_lang$core$Native_Utils.crashCase(
							'VirtualDom.Expando',
							{
								start: {line: 176, column: 7},
								end: {line: 188, column: 46}
							},
							_p34)('No field on sequences');
				}
			case 'Dictionary':
				var _p51 = _p31._1;
				var _p50 = _p31._0;
				var _p40 = msg;
				switch (_p40.ctor) {
					case 'Toggle':
						return A2(_elm_lang$virtual_dom$VirtualDom_Expando$Dictionary, !_p50, _p51);
					case 'Index':
						var _p48 = _p40._2;
						var _p47 = _p40._1;
						var _p41 = _p40._0;
						switch (_p41.ctor) {
							case 'None':
								return _elm_lang$core$Native_Utils.crashCase(
									'VirtualDom.Expando',
									{
										start: {line: 196, column: 11},
										end: {line: 206, column: 81}
									},
									_p41)('must have redirect for dictionaries');
							case 'Key':
								return A2(
									_elm_lang$virtual_dom$VirtualDom_Expando$Dictionary,
									_p50,
									A3(
										_elm_lang$virtual_dom$VirtualDom_Expando$updateIndex,
										_p47,
										function (_p43) {
											var _p44 = _p43;
											return {
												ctor: '_Tuple2',
												_0: A2(_elm_lang$virtual_dom$VirtualDom_Expando$update, _p48, _p44._0),
												_1: _p44._1
											};
										},
										_p51));
							default:
								return A2(
									_elm_lang$virtual_dom$VirtualDom_Expando$Dictionary,
									_p50,
									A3(
										_elm_lang$virtual_dom$VirtualDom_Expando$updateIndex,
										_p47,
										function (_p45) {
											var _p46 = _p45;
											return {
												ctor: '_Tuple2',
												_0: _p46._0,
												_1: A2(_elm_lang$virtual_dom$VirtualDom_Expando$update, _p48, _p46._1)
											};
										},
										_p51));
						}
					default:
						return _elm_lang$core$Native_Utils.crashCase(
							'VirtualDom.Expando',
							{
								start: {line: 191, column: 7},
								end: {line: 209, column: 50}
							},
							_p40)('no field for dictionaries');
				}
			case 'Record':
				var _p55 = _p31._1;
				var _p54 = _p31._0;
				var _p52 = msg;
				switch (_p52.ctor) {
					case 'Toggle':
						return A2(_elm_lang$virtual_dom$VirtualDom_Expando$Record, !_p54, _p55);
					case 'Index':
						return _elm_lang$core$Native_Utils.crashCase(
							'VirtualDom.Expando',
							{
								start: {line: 212, column: 7},
								end: {line: 220, column: 77}
							},
							_p52)('No index for records');
					default:
						return A2(
							_elm_lang$virtual_dom$VirtualDom_Expando$Record,
							_p54,
							A3(
								_elm_lang$core$Dict$update,
								_p52._0,
								_elm_lang$virtual_dom$VirtualDom_Expando$updateField(_p52._1),
								_p55));
				}
			default:
				var _p61 = _p31._2;
				var _p60 = _p31._0;
				var _p59 = _p31._1;
				var _p56 = msg;
				switch (_p56.ctor) {
					case 'Toggle':
						return A3(_elm_lang$virtual_dom$VirtualDom_Expando$Constructor, _p60, !_p59, _p61);
					case 'Index':
						if (_p56._0.ctor === 'None') {
							return A3(
								_elm_lang$virtual_dom$VirtualDom_Expando$Constructor,
								_p60,
								_p59,
								A3(
									_elm_lang$virtual_dom$VirtualDom_Expando$updateIndex,
									_p56._1,
									_elm_lang$virtual_dom$VirtualDom_Expando$update(_p56._2),
									_p61));
						} else {
							return _elm_lang$core$Native_Utils.crashCase(
								'VirtualDom.Expando',
								{
									start: {line: 223, column: 7},
									end: {line: 235, column: 50}
								},
								_p56)('No redirected indexes on sequences');
						}
					default:
						return _elm_lang$core$Native_Utils.crashCase(
							'VirtualDom.Expando',
							{
								start: {line: 223, column: 7},
								end: {line: 235, column: 50}
							},
							_p56)('No field for constructors');
				}
		}
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$updateField = F2(
	function (msg, maybeExpando) {
		var _p62 = maybeExpando;
		if (_p62.ctor === 'Nothing') {
			return _elm_lang$core$Native_Utils.crashCase(
				'VirtualDom.Expando',
				{
					start: {line: 253, column: 3},
					end: {line: 258, column: 32}
				},
				_p62)('key does not exist');
		} else {
			return _elm_lang$core$Maybe$Just(
				A2(_elm_lang$virtual_dom$VirtualDom_Expando$update, msg, _p62._0));
		}
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$Primitive = function (a) {
	return {ctor: 'Primitive', _0: a};
};
var _elm_lang$virtual_dom$VirtualDom_Expando$S = function (a) {
	return {ctor: 'S', _0: a};
};
var _elm_lang$virtual_dom$VirtualDom_Expando$ArraySeq = {ctor: 'ArraySeq'};
var _elm_lang$virtual_dom$VirtualDom_Expando$SetSeq = {ctor: 'SetSeq'};
var _elm_lang$virtual_dom$VirtualDom_Expando$ListSeq = {ctor: 'ListSeq'};
var _elm_lang$virtual_dom$VirtualDom_Expando$Field = F2(
	function (a, b) {
		return {ctor: 'Field', _0: a, _1: b};
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$Index = F3(
	function (a, b, c) {
		return {ctor: 'Index', _0: a, _1: b, _2: c};
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$Toggle = {ctor: 'Toggle'};
var _elm_lang$virtual_dom$VirtualDom_Expando$Value = {ctor: 'Value'};
var _elm_lang$virtual_dom$VirtualDom_Expando$Key = {ctor: 'Key'};
var _elm_lang$virtual_dom$VirtualDom_Expando$None = {ctor: 'None'};
var _elm_lang$virtual_dom$VirtualDom_Expando$viewConstructorEntry = F2(
	function (index, value) {
		return A2(
			_elm_lang$virtual_dom$VirtualDom_Helpers$map,
			A2(_elm_lang$virtual_dom$VirtualDom_Expando$Index, _elm_lang$virtual_dom$VirtualDom_Expando$None, index),
			A2(
				_elm_lang$virtual_dom$VirtualDom_Expando$view,
				_elm_lang$core$Maybe$Just(
					_elm_lang$core$Basics$toString(index)),
				value));
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$view = F2(
	function (maybeKey, expando) {
		var _p64 = expando;
		switch (_p64.ctor) {
			case 'S':
				return A2(
					_elm_lang$virtual_dom$VirtualDom_Helpers$div,
					{
						ctor: '::',
						_0: _elm_lang$virtual_dom$VirtualDom_Expando$leftPad(maybeKey),
						_1: {ctor: '[]'}
					},
					A3(
						_elm_lang$virtual_dom$VirtualDom_Expando$lineStarter,
						maybeKey,
						_elm_lang$core$Maybe$Nothing,
						{
							ctor: '::',
							_0: A2(
								_elm_lang$virtual_dom$VirtualDom_Helpers$span,
								{
									ctor: '::',
									_0: _elm_lang$virtual_dom$VirtualDom_Expando$red,
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(_p64._0),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}));
			case 'Primitive':
				return A2(
					_elm_lang$virtual_dom$VirtualDom_Helpers$div,
					{
						ctor: '::',
						_0: _elm_lang$virtual_dom$VirtualDom_Expando$leftPad(maybeKey),
						_1: {ctor: '[]'}
					},
					A3(
						_elm_lang$virtual_dom$VirtualDom_Expando$lineStarter,
						maybeKey,
						_elm_lang$core$Maybe$Nothing,
						{
							ctor: '::',
							_0: A2(
								_elm_lang$virtual_dom$VirtualDom_Helpers$span,
								{
									ctor: '::',
									_0: _elm_lang$virtual_dom$VirtualDom_Expando$blue,
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(_p64._0),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}));
			case 'Sequence':
				return A4(_elm_lang$virtual_dom$VirtualDom_Expando$viewSequence, maybeKey, _p64._0, _p64._1, _p64._2);
			case 'Dictionary':
				return A3(_elm_lang$virtual_dom$VirtualDom_Expando$viewDictionary, maybeKey, _p64._0, _p64._1);
			case 'Record':
				return A3(_elm_lang$virtual_dom$VirtualDom_Expando$viewRecord, maybeKey, _p64._0, _p64._1);
			default:
				return A4(_elm_lang$virtual_dom$VirtualDom_Expando$viewConstructor, maybeKey, _p64._0, _p64._1, _p64._2);
		}
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$viewConstructor = F4(
	function (maybeKey, maybeName, isClosed, valueList) {
		var _p65 = function () {
			var _p66 = valueList;
			if (_p66.ctor === '[]') {
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Maybe$Nothing,
					_1: A2(
						_elm_lang$virtual_dom$VirtualDom_Helpers$div,
						{ctor: '[]'},
						{ctor: '[]'})
				};
			} else {
				if (_p66._1.ctor === '[]') {
					var _p67 = _p66._0;
					switch (_p67.ctor) {
						case 'S':
							return {
								ctor: '_Tuple2',
								_0: _elm_lang$core$Maybe$Nothing,
								_1: A2(
									_elm_lang$virtual_dom$VirtualDom_Helpers$div,
									{ctor: '[]'},
									{ctor: '[]'})
							};
						case 'Primitive':
							return {
								ctor: '_Tuple2',
								_0: _elm_lang$core$Maybe$Nothing,
								_1: A2(
									_elm_lang$virtual_dom$VirtualDom_Helpers$div,
									{ctor: '[]'},
									{ctor: '[]'})
							};
						case 'Sequence':
							return {
								ctor: '_Tuple2',
								_0: _elm_lang$core$Maybe$Just(isClosed),
								_1: isClosed ? A2(
									_elm_lang$virtual_dom$VirtualDom_Helpers$div,
									{ctor: '[]'},
									{ctor: '[]'}) : A2(
									_elm_lang$virtual_dom$VirtualDom_Helpers$map,
									A2(_elm_lang$virtual_dom$VirtualDom_Expando$Index, _elm_lang$virtual_dom$VirtualDom_Expando$None, 0),
									_elm_lang$virtual_dom$VirtualDom_Expando$viewSequenceOpen(_p67._2))
							};
						case 'Dictionary':
							return {
								ctor: '_Tuple2',
								_0: _elm_lang$core$Maybe$Just(isClosed),
								_1: isClosed ? A2(
									_elm_lang$virtual_dom$VirtualDom_Helpers$div,
									{ctor: '[]'},
									{ctor: '[]'}) : A2(
									_elm_lang$virtual_dom$VirtualDom_Helpers$map,
									A2(_elm_lang$virtual_dom$VirtualDom_Expando$Index, _elm_lang$virtual_dom$VirtualDom_Expando$None, 0),
									_elm_lang$virtual_dom$VirtualDom_Expando$viewDictionaryOpen(_p67._1))
							};
						case 'Record':
							return {
								ctor: '_Tuple2',
								_0: _elm_lang$core$Maybe$Just(isClosed),
								_1: isClosed ? A2(
									_elm_lang$virtual_dom$VirtualDom_Helpers$div,
									{ctor: '[]'},
									{ctor: '[]'}) : A2(
									_elm_lang$virtual_dom$VirtualDom_Helpers$map,
									A2(_elm_lang$virtual_dom$VirtualDom_Expando$Index, _elm_lang$virtual_dom$VirtualDom_Expando$None, 0),
									_elm_lang$virtual_dom$VirtualDom_Expando$viewRecordOpen(_p67._1))
							};
						default:
							return {
								ctor: '_Tuple2',
								_0: _elm_lang$core$Maybe$Just(isClosed),
								_1: isClosed ? A2(
									_elm_lang$virtual_dom$VirtualDom_Helpers$div,
									{ctor: '[]'},
									{ctor: '[]'}) : A2(
									_elm_lang$virtual_dom$VirtualDom_Helpers$map,
									A2(_elm_lang$virtual_dom$VirtualDom_Expando$Index, _elm_lang$virtual_dom$VirtualDom_Expando$None, 0),
									_elm_lang$virtual_dom$VirtualDom_Expando$viewConstructorOpen(_p67._2))
							};
					}
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Maybe$Just(isClosed),
						_1: isClosed ? A2(
							_elm_lang$virtual_dom$VirtualDom_Helpers$div,
							{ctor: '[]'},
							{ctor: '[]'}) : _elm_lang$virtual_dom$VirtualDom_Expando$viewConstructorOpen(valueList)
					};
				}
			}
		}();
		var maybeIsClosed = _p65._0;
		var openHtml = _p65._1;
		var tinyArgs = A2(
			_elm_lang$core$List$map,
			function (_p68) {
				return _elm_lang$core$Tuple$second(
					_elm_lang$virtual_dom$VirtualDom_Expando$viewExtraTiny(_p68));
			},
			valueList);
		var description = function () {
			var _p69 = {ctor: '_Tuple2', _0: maybeName, _1: tinyArgs};
			if (_p69._0.ctor === 'Nothing') {
				if (_p69._1.ctor === '[]') {
					return {
						ctor: '::',
						_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('()'),
						_1: {ctor: '[]'}
					};
				} else {
					return {
						ctor: '::',
						_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('( '),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$virtual_dom$VirtualDom_Helpers$span,
								{ctor: '[]'},
								_p69._1._0),
							_1: A3(
								_elm_lang$core$List$foldr,
								F2(
									function (args, rest) {
										return {
											ctor: '::',
											_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(', '),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$virtual_dom$VirtualDom_Helpers$span,
													{ctor: '[]'},
													args),
												_1: rest
											}
										};
									}),
								{
									ctor: '::',
									_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(' )'),
									_1: {ctor: '[]'}
								},
								_p69._1._1)
						}
					};
				}
			} else {
				if (_p69._1.ctor === '[]') {
					return {
						ctor: '::',
						_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(_p69._0._0),
						_1: {ctor: '[]'}
					};
				} else {
					return {
						ctor: '::',
						_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(
							A2(_elm_lang$core$Basics_ops['++'], _p69._0._0, ' ')),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$virtual_dom$VirtualDom_Helpers$span,
								{ctor: '[]'},
								_p69._1._0),
							_1: A3(
								_elm_lang$core$List$foldr,
								F2(
									function (args, rest) {
										return {
											ctor: '::',
											_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(' '),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$virtual_dom$VirtualDom_Helpers$span,
													{ctor: '[]'},
													args),
												_1: rest
											}
										};
									}),
								{ctor: '[]'},
								_p69._1._1)
						}
					};
				}
			}
		}();
		return A2(
			_elm_lang$virtual_dom$VirtualDom_Helpers$div,
			{
				ctor: '::',
				_0: _elm_lang$virtual_dom$VirtualDom_Expando$leftPad(maybeKey),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$virtual_dom$VirtualDom_Helpers$div,
					{
						ctor: '::',
						_0: _elm_lang$virtual_dom$VirtualDom_Helpers$onClick(_elm_lang$virtual_dom$VirtualDom_Expando$Toggle),
						_1: {ctor: '[]'}
					},
					A3(_elm_lang$virtual_dom$VirtualDom_Expando$lineStarter, maybeKey, maybeIsClosed, description)),
				_1: {
					ctor: '::',
					_0: openHtml,
					_1: {ctor: '[]'}
				}
			});
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$viewConstructorOpen = function (valueList) {
	return A2(
		_elm_lang$virtual_dom$VirtualDom_Helpers$div,
		{ctor: '[]'},
		A2(_elm_lang$core$List$indexedMap, _elm_lang$virtual_dom$VirtualDom_Expando$viewConstructorEntry, valueList));
};
var _elm_lang$virtual_dom$VirtualDom_Expando$viewDictionaryOpen = function (keyValuePairs) {
	return A2(
		_elm_lang$virtual_dom$VirtualDom_Helpers$div,
		{ctor: '[]'},
		A2(_elm_lang$core$List$indexedMap, _elm_lang$virtual_dom$VirtualDom_Expando$viewDictionaryEntry, keyValuePairs));
};
var _elm_lang$virtual_dom$VirtualDom_Expando$viewDictionaryEntry = F2(
	function (index, _p70) {
		var _p71 = _p70;
		var _p74 = _p71._1;
		var _p73 = _p71._0;
		var _p72 = _p73;
		switch (_p72.ctor) {
			case 'S':
				return A2(
					_elm_lang$virtual_dom$VirtualDom_Helpers$map,
					A2(_elm_lang$virtual_dom$VirtualDom_Expando$Index, _elm_lang$virtual_dom$VirtualDom_Expando$Value, index),
					A2(
						_elm_lang$virtual_dom$VirtualDom_Expando$view,
						_elm_lang$core$Maybe$Just(_p72._0),
						_p74));
			case 'Primitive':
				return A2(
					_elm_lang$virtual_dom$VirtualDom_Helpers$map,
					A2(_elm_lang$virtual_dom$VirtualDom_Expando$Index, _elm_lang$virtual_dom$VirtualDom_Expando$Value, index),
					A2(
						_elm_lang$virtual_dom$VirtualDom_Expando$view,
						_elm_lang$core$Maybe$Just(_p72._0),
						_p74));
			default:
				return A2(
					_elm_lang$virtual_dom$VirtualDom_Helpers$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$virtual_dom$VirtualDom_Helpers$map,
							A2(_elm_lang$virtual_dom$VirtualDom_Expando$Index, _elm_lang$virtual_dom$VirtualDom_Expando$Key, index),
							A2(
								_elm_lang$virtual_dom$VirtualDom_Expando$view,
								_elm_lang$core$Maybe$Just('key'),
								_p73)),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$virtual_dom$VirtualDom_Helpers$map,
								A2(_elm_lang$virtual_dom$VirtualDom_Expando$Index, _elm_lang$virtual_dom$VirtualDom_Expando$Value, index),
								A2(
									_elm_lang$virtual_dom$VirtualDom_Expando$view,
									_elm_lang$core$Maybe$Just('value'),
									_p74)),
							_1: {ctor: '[]'}
						}
					});
		}
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$viewRecordOpen = function (record) {
	return A2(
		_elm_lang$virtual_dom$VirtualDom_Helpers$div,
		{ctor: '[]'},
		A2(
			_elm_lang$core$List$map,
			_elm_lang$virtual_dom$VirtualDom_Expando$viewRecordEntry,
			_elm_lang$core$Dict$toList(record)));
};
var _elm_lang$virtual_dom$VirtualDom_Expando$viewRecordEntry = function (_p75) {
	var _p76 = _p75;
	var _p77 = _p76._0;
	return A2(
		_elm_lang$virtual_dom$VirtualDom_Helpers$map,
		_elm_lang$virtual_dom$VirtualDom_Expando$Field(_p77),
		A2(
			_elm_lang$virtual_dom$VirtualDom_Expando$view,
			_elm_lang$core$Maybe$Just(_p77),
			_p76._1));
};
var _elm_lang$virtual_dom$VirtualDom_Expando$viewSequenceOpen = function (values) {
	return A2(
		_elm_lang$virtual_dom$VirtualDom_Helpers$div,
		{ctor: '[]'},
		A2(_elm_lang$core$List$indexedMap, _elm_lang$virtual_dom$VirtualDom_Expando$viewConstructorEntry, values));
};
var _elm_lang$virtual_dom$VirtualDom_Expando$viewDictionary = F3(
	function (maybeKey, isClosed, keyValuePairs) {
		var starter = A2(
			_elm_lang$core$Basics_ops['++'],
			'Dict(',
			A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(
					_elm_lang$core$List$length(keyValuePairs)),
				')'));
		return A2(
			_elm_lang$virtual_dom$VirtualDom_Helpers$div,
			{
				ctor: '::',
				_0: _elm_lang$virtual_dom$VirtualDom_Expando$leftPad(maybeKey),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$virtual_dom$VirtualDom_Helpers$div,
					{
						ctor: '::',
						_0: _elm_lang$virtual_dom$VirtualDom_Helpers$onClick(_elm_lang$virtual_dom$VirtualDom_Expando$Toggle),
						_1: {ctor: '[]'}
					},
					A3(
						_elm_lang$virtual_dom$VirtualDom_Expando$lineStarter,
						maybeKey,
						_elm_lang$core$Maybe$Just(isClosed),
						{
							ctor: '::',
							_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(starter),
							_1: {ctor: '[]'}
						})),
				_1: {
					ctor: '::',
					_0: isClosed ? _elm_lang$virtual_dom$VirtualDom_Helpers$text('') : _elm_lang$virtual_dom$VirtualDom_Expando$viewDictionaryOpen(keyValuePairs),
					_1: {ctor: '[]'}
				}
			});
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$viewRecord = F3(
	function (maybeKey, isClosed, record) {
		var _p78 = isClosed ? {
			ctor: '_Tuple3',
			_0: _elm_lang$core$Tuple$second(
				_elm_lang$virtual_dom$VirtualDom_Expando$viewTinyRecord(record)),
			_1: _elm_lang$virtual_dom$VirtualDom_Helpers$text(''),
			_2: _elm_lang$virtual_dom$VirtualDom_Helpers$text('')
		} : {
			ctor: '_Tuple3',
			_0: {
				ctor: '::',
				_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('{'),
				_1: {ctor: '[]'}
			},
			_1: _elm_lang$virtual_dom$VirtualDom_Expando$viewRecordOpen(record),
			_2: A2(
				_elm_lang$virtual_dom$VirtualDom_Helpers$div,
				{
					ctor: '::',
					_0: _elm_lang$virtual_dom$VirtualDom_Expando$leftPad(
						_elm_lang$core$Maybe$Just(
							{ctor: '_Tuple0'})),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('}'),
					_1: {ctor: '[]'}
				})
		};
		var start = _p78._0;
		var middle = _p78._1;
		var end = _p78._2;
		return A2(
			_elm_lang$virtual_dom$VirtualDom_Helpers$div,
			{
				ctor: '::',
				_0: _elm_lang$virtual_dom$VirtualDom_Expando$leftPad(maybeKey),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$virtual_dom$VirtualDom_Helpers$div,
					{
						ctor: '::',
						_0: _elm_lang$virtual_dom$VirtualDom_Helpers$onClick(_elm_lang$virtual_dom$VirtualDom_Expando$Toggle),
						_1: {ctor: '[]'}
					},
					A3(
						_elm_lang$virtual_dom$VirtualDom_Expando$lineStarter,
						maybeKey,
						_elm_lang$core$Maybe$Just(isClosed),
						start)),
				_1: {
					ctor: '::',
					_0: middle,
					_1: {
						ctor: '::',
						_0: end,
						_1: {ctor: '[]'}
					}
				}
			});
	});
var _elm_lang$virtual_dom$VirtualDom_Expando$viewSequence = F4(
	function (maybeKey, seqType, isClosed, valueList) {
		var starter = A2(
			_elm_lang$virtual_dom$VirtualDom_Expando$seqTypeToString,
			_elm_lang$core$List$length(valueList),
			seqType);
		return A2(
			_elm_lang$virtual_dom$VirtualDom_Helpers$div,
			{
				ctor: '::',
				_0: _elm_lang$virtual_dom$VirtualDom_Expando$leftPad(maybeKey),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$virtual_dom$VirtualDom_Helpers$div,
					{
						ctor: '::',
						_0: _elm_lang$virtual_dom$VirtualDom_Helpers$onClick(_elm_lang$virtual_dom$VirtualDom_Expando$Toggle),
						_1: {ctor: '[]'}
					},
					A3(
						_elm_lang$virtual_dom$VirtualDom_Expando$lineStarter,
						maybeKey,
						_elm_lang$core$Maybe$Just(isClosed),
						{
							ctor: '::',
							_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(starter),
							_1: {ctor: '[]'}
						})),
				_1: {
					ctor: '::',
					_0: isClosed ? _elm_lang$virtual_dom$VirtualDom_Helpers$text('') : _elm_lang$virtual_dom$VirtualDom_Expando$viewSequenceOpen(valueList),
					_1: {ctor: '[]'}
				}
			});
	});

var _elm_lang$virtual_dom$VirtualDom_Report$some = function (list) {
	return !_elm_lang$core$List$isEmpty(list);
};
var _elm_lang$virtual_dom$VirtualDom_Report$TagChanges = F4(
	function (a, b, c, d) {
		return {removed: a, changed: b, added: c, argsMatch: d};
	});
var _elm_lang$virtual_dom$VirtualDom_Report$emptyTagChanges = function (argsMatch) {
	return A4(
		_elm_lang$virtual_dom$VirtualDom_Report$TagChanges,
		{ctor: '[]'},
		{ctor: '[]'},
		{ctor: '[]'},
		argsMatch);
};
var _elm_lang$virtual_dom$VirtualDom_Report$hasTagChanges = function (tagChanges) {
	return _elm_lang$core$Native_Utils.eq(
		tagChanges,
		A4(
			_elm_lang$virtual_dom$VirtualDom_Report$TagChanges,
			{ctor: '[]'},
			{ctor: '[]'},
			{ctor: '[]'},
			true));
};
var _elm_lang$virtual_dom$VirtualDom_Report$SomethingChanged = function (a) {
	return {ctor: 'SomethingChanged', _0: a};
};
var _elm_lang$virtual_dom$VirtualDom_Report$MessageChanged = F2(
	function (a, b) {
		return {ctor: 'MessageChanged', _0: a, _1: b};
	});
var _elm_lang$virtual_dom$VirtualDom_Report$VersionChanged = F2(
	function (a, b) {
		return {ctor: 'VersionChanged', _0: a, _1: b};
	});
var _elm_lang$virtual_dom$VirtualDom_Report$CorruptHistory = {ctor: 'CorruptHistory'};
var _elm_lang$virtual_dom$VirtualDom_Report$UnionChange = F2(
	function (a, b) {
		return {ctor: 'UnionChange', _0: a, _1: b};
	});
var _elm_lang$virtual_dom$VirtualDom_Report$AliasChange = function (a) {
	return {ctor: 'AliasChange', _0: a};
};
var _elm_lang$virtual_dom$VirtualDom_Report$Fine = {ctor: 'Fine'};
var _elm_lang$virtual_dom$VirtualDom_Report$Risky = {ctor: 'Risky'};
var _elm_lang$virtual_dom$VirtualDom_Report$Impossible = {ctor: 'Impossible'};
var _elm_lang$virtual_dom$VirtualDom_Report$worstCase = F2(
	function (status, statusList) {
		worstCase:
		while (true) {
			var _p0 = statusList;
			if (_p0.ctor === '[]') {
				return status;
			} else {
				switch (_p0._0.ctor) {
					case 'Impossible':
						return _elm_lang$virtual_dom$VirtualDom_Report$Impossible;
					case 'Risky':
						var _v1 = _elm_lang$virtual_dom$VirtualDom_Report$Risky,
							_v2 = _p0._1;
						status = _v1;
						statusList = _v2;
						continue worstCase;
					default:
						var _v3 = status,
							_v4 = _p0._1;
						status = _v3;
						statusList = _v4;
						continue worstCase;
				}
			}
		}
	});
var _elm_lang$virtual_dom$VirtualDom_Report$evaluateChange = function (change) {
	var _p1 = change;
	if (_p1.ctor === 'AliasChange') {
		return _elm_lang$virtual_dom$VirtualDom_Report$Impossible;
	} else {
		return ((!_p1._1.argsMatch) || (_elm_lang$virtual_dom$VirtualDom_Report$some(_p1._1.changed) || _elm_lang$virtual_dom$VirtualDom_Report$some(_p1._1.removed))) ? _elm_lang$virtual_dom$VirtualDom_Report$Impossible : (_elm_lang$virtual_dom$VirtualDom_Report$some(_p1._1.added) ? _elm_lang$virtual_dom$VirtualDom_Report$Risky : _elm_lang$virtual_dom$VirtualDom_Report$Fine);
	}
};
var _elm_lang$virtual_dom$VirtualDom_Report$evaluate = function (report) {
	var _p2 = report;
	switch (_p2.ctor) {
		case 'CorruptHistory':
			return _elm_lang$virtual_dom$VirtualDom_Report$Impossible;
		case 'VersionChanged':
			return _elm_lang$virtual_dom$VirtualDom_Report$Impossible;
		case 'MessageChanged':
			return _elm_lang$virtual_dom$VirtualDom_Report$Impossible;
		default:
			return A2(
				_elm_lang$virtual_dom$VirtualDom_Report$worstCase,
				_elm_lang$virtual_dom$VirtualDom_Report$Fine,
				A2(_elm_lang$core$List$map, _elm_lang$virtual_dom$VirtualDom_Report$evaluateChange, _p2._0));
	}
};

var _elm_lang$virtual_dom$VirtualDom_Metadata$encodeDict = F2(
	function (f, dict) {
		return _elm_lang$core$Json_Encode$object(
			_elm_lang$core$Dict$toList(
				A2(
					_elm_lang$core$Dict$map,
					F2(
						function (key, value) {
							return f(value);
						}),
					dict)));
	});
var _elm_lang$virtual_dom$VirtualDom_Metadata$encodeUnion = function (_p0) {
	var _p1 = _p0;
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'args',
				_1: _elm_lang$core$Json_Encode$list(
					A2(_elm_lang$core$List$map, _elm_lang$core$Json_Encode$string, _p1.args))
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'tags',
					_1: A2(
						_elm_lang$virtual_dom$VirtualDom_Metadata$encodeDict,
						function (_p2) {
							return _elm_lang$core$Json_Encode$list(
								A2(_elm_lang$core$List$map, _elm_lang$core$Json_Encode$string, _p2));
						},
						_p1.tags)
				},
				_1: {ctor: '[]'}
			}
		});
};
var _elm_lang$virtual_dom$VirtualDom_Metadata$encodeAlias = function (_p3) {
	var _p4 = _p3;
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'args',
				_1: _elm_lang$core$Json_Encode$list(
					A2(_elm_lang$core$List$map, _elm_lang$core$Json_Encode$string, _p4.args))
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'type',
					_1: _elm_lang$core$Json_Encode$string(_p4.tipe)
				},
				_1: {ctor: '[]'}
			}
		});
};
var _elm_lang$virtual_dom$VirtualDom_Metadata$encodeTypes = function (_p5) {
	var _p6 = _p5;
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'message',
				_1: _elm_lang$core$Json_Encode$string(_p6.message)
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'aliases',
					_1: A2(_elm_lang$virtual_dom$VirtualDom_Metadata$encodeDict, _elm_lang$virtual_dom$VirtualDom_Metadata$encodeAlias, _p6.aliases)
				},
				_1: {
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'unions',
						_1: A2(_elm_lang$virtual_dom$VirtualDom_Metadata$encodeDict, _elm_lang$virtual_dom$VirtualDom_Metadata$encodeUnion, _p6.unions)
					},
					_1: {ctor: '[]'}
				}
			}
		});
};
var _elm_lang$virtual_dom$VirtualDom_Metadata$encodeVersions = function (_p7) {
	var _p8 = _p7;
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'elm',
				_1: _elm_lang$core$Json_Encode$string(_p8.elm)
			},
			_1: {ctor: '[]'}
		});
};
var _elm_lang$virtual_dom$VirtualDom_Metadata$encode = function (_p9) {
	var _p10 = _p9;
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'versions',
				_1: _elm_lang$virtual_dom$VirtualDom_Metadata$encodeVersions(_p10.versions)
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'types',
					_1: _elm_lang$virtual_dom$VirtualDom_Metadata$encodeTypes(_p10.types)
				},
				_1: {ctor: '[]'}
			}
		});
};
var _elm_lang$virtual_dom$VirtualDom_Metadata$checkTag = F4(
	function (tag, old, $new, changes) {
		return _elm_lang$core$Native_Utils.eq(old, $new) ? changes : _elm_lang$core$Native_Utils.update(
			changes,
			{
				changed: {ctor: '::', _0: tag, _1: changes.changed}
			});
	});
var _elm_lang$virtual_dom$VirtualDom_Metadata$addTag = F3(
	function (tag, _p11, changes) {
		return _elm_lang$core$Native_Utils.update(
			changes,
			{
				added: {ctor: '::', _0: tag, _1: changes.added}
			});
	});
var _elm_lang$virtual_dom$VirtualDom_Metadata$removeTag = F3(
	function (tag, _p12, changes) {
		return _elm_lang$core$Native_Utils.update(
			changes,
			{
				removed: {ctor: '::', _0: tag, _1: changes.removed}
			});
	});
var _elm_lang$virtual_dom$VirtualDom_Metadata$checkUnion = F4(
	function (name, old, $new, changes) {
		var tagChanges = A6(
			_elm_lang$core$Dict$merge,
			_elm_lang$virtual_dom$VirtualDom_Metadata$removeTag,
			_elm_lang$virtual_dom$VirtualDom_Metadata$checkTag,
			_elm_lang$virtual_dom$VirtualDom_Metadata$addTag,
			old.tags,
			$new.tags,
			_elm_lang$virtual_dom$VirtualDom_Report$emptyTagChanges(
				_elm_lang$core$Native_Utils.eq(old.args, $new.args)));
		return _elm_lang$virtual_dom$VirtualDom_Report$hasTagChanges(tagChanges) ? changes : {
			ctor: '::',
			_0: A2(_elm_lang$virtual_dom$VirtualDom_Report$UnionChange, name, tagChanges),
			_1: changes
		};
	});
var _elm_lang$virtual_dom$VirtualDom_Metadata$checkAlias = F4(
	function (name, old, $new, changes) {
		return (_elm_lang$core$Native_Utils.eq(old.tipe, $new.tipe) && _elm_lang$core$Native_Utils.eq(old.args, $new.args)) ? changes : {
			ctor: '::',
			_0: _elm_lang$virtual_dom$VirtualDom_Report$AliasChange(name),
			_1: changes
		};
	});
var _elm_lang$virtual_dom$VirtualDom_Metadata$ignore = F3(
	function (key, value, report) {
		return report;
	});
var _elm_lang$virtual_dom$VirtualDom_Metadata$checkTypes = F2(
	function (old, $new) {
		return (!_elm_lang$core$Native_Utils.eq(old.message, $new.message)) ? A2(_elm_lang$virtual_dom$VirtualDom_Report$MessageChanged, old.message, $new.message) : _elm_lang$virtual_dom$VirtualDom_Report$SomethingChanged(
			A6(
				_elm_lang$core$Dict$merge,
				_elm_lang$virtual_dom$VirtualDom_Metadata$ignore,
				_elm_lang$virtual_dom$VirtualDom_Metadata$checkUnion,
				_elm_lang$virtual_dom$VirtualDom_Metadata$ignore,
				old.unions,
				$new.unions,
				A6(
					_elm_lang$core$Dict$merge,
					_elm_lang$virtual_dom$VirtualDom_Metadata$ignore,
					_elm_lang$virtual_dom$VirtualDom_Metadata$checkAlias,
					_elm_lang$virtual_dom$VirtualDom_Metadata$ignore,
					old.aliases,
					$new.aliases,
					{ctor: '[]'})));
	});
var _elm_lang$virtual_dom$VirtualDom_Metadata$check = F2(
	function (old, $new) {
		return (!_elm_lang$core$Native_Utils.eq(old.versions.elm, $new.versions.elm)) ? A2(_elm_lang$virtual_dom$VirtualDom_Report$VersionChanged, old.versions.elm, $new.versions.elm) : A2(_elm_lang$virtual_dom$VirtualDom_Metadata$checkTypes, old.types, $new.types);
	});
var _elm_lang$virtual_dom$VirtualDom_Metadata$hasProblem = F2(
	function (tipe, _p13) {
		var _p14 = _p13;
		return A2(_elm_lang$core$String$contains, _p14._1, tipe) ? _elm_lang$core$Maybe$Just(_p14._0) : _elm_lang$core$Maybe$Nothing;
	});
var _elm_lang$virtual_dom$VirtualDom_Metadata$Metadata = F2(
	function (a, b) {
		return {versions: a, types: b};
	});
var _elm_lang$virtual_dom$VirtualDom_Metadata$Versions = function (a) {
	return {elm: a};
};
var _elm_lang$virtual_dom$VirtualDom_Metadata$decodeVersions = A2(
	_elm_lang$core$Json_Decode$map,
	_elm_lang$virtual_dom$VirtualDom_Metadata$Versions,
	A2(_elm_lang$core$Json_Decode$field, 'elm', _elm_lang$core$Json_Decode$string));
var _elm_lang$virtual_dom$VirtualDom_Metadata$Types = F3(
	function (a, b, c) {
		return {message: a, aliases: b, unions: c};
	});
var _elm_lang$virtual_dom$VirtualDom_Metadata$Alias = F2(
	function (a, b) {
		return {args: a, tipe: b};
	});
var _elm_lang$virtual_dom$VirtualDom_Metadata$decodeAlias = A3(
	_elm_lang$core$Json_Decode$map2,
	_elm_lang$virtual_dom$VirtualDom_Metadata$Alias,
	A2(
		_elm_lang$core$Json_Decode$field,
		'args',
		_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string)),
	A2(_elm_lang$core$Json_Decode$field, 'type', _elm_lang$core$Json_Decode$string));
var _elm_lang$virtual_dom$VirtualDom_Metadata$Union = F2(
	function (a, b) {
		return {args: a, tags: b};
	});
var _elm_lang$virtual_dom$VirtualDom_Metadata$decodeUnion = A3(
	_elm_lang$core$Json_Decode$map2,
	_elm_lang$virtual_dom$VirtualDom_Metadata$Union,
	A2(
		_elm_lang$core$Json_Decode$field,
		'args',
		_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string)),
	A2(
		_elm_lang$core$Json_Decode$field,
		'tags',
		_elm_lang$core$Json_Decode$dict(
			_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string))));
var _elm_lang$virtual_dom$VirtualDom_Metadata$decodeTypes = A4(
	_elm_lang$core$Json_Decode$map3,
	_elm_lang$virtual_dom$VirtualDom_Metadata$Types,
	A2(_elm_lang$core$Json_Decode$field, 'message', _elm_lang$core$Json_Decode$string),
	A2(
		_elm_lang$core$Json_Decode$field,
		'aliases',
		_elm_lang$core$Json_Decode$dict(_elm_lang$virtual_dom$VirtualDom_Metadata$decodeAlias)),
	A2(
		_elm_lang$core$Json_Decode$field,
		'unions',
		_elm_lang$core$Json_Decode$dict(_elm_lang$virtual_dom$VirtualDom_Metadata$decodeUnion)));
var _elm_lang$virtual_dom$VirtualDom_Metadata$decoder = A3(
	_elm_lang$core$Json_Decode$map2,
	_elm_lang$virtual_dom$VirtualDom_Metadata$Metadata,
	A2(_elm_lang$core$Json_Decode$field, 'versions', _elm_lang$virtual_dom$VirtualDom_Metadata$decodeVersions),
	A2(_elm_lang$core$Json_Decode$field, 'types', _elm_lang$virtual_dom$VirtualDom_Metadata$decodeTypes));
var _elm_lang$virtual_dom$VirtualDom_Metadata$Error = F2(
	function (a, b) {
		return {message: a, problems: b};
	});
var _elm_lang$virtual_dom$VirtualDom_Metadata$ProblemType = F2(
	function (a, b) {
		return {name: a, problems: b};
	});
var _elm_lang$virtual_dom$VirtualDom_Metadata$VirtualDom = {ctor: 'VirtualDom'};
var _elm_lang$virtual_dom$VirtualDom_Metadata$Program = {ctor: 'Program'};
var _elm_lang$virtual_dom$VirtualDom_Metadata$Request = {ctor: 'Request'};
var _elm_lang$virtual_dom$VirtualDom_Metadata$Socket = {ctor: 'Socket'};
var _elm_lang$virtual_dom$VirtualDom_Metadata$Process = {ctor: 'Process'};
var _elm_lang$virtual_dom$VirtualDom_Metadata$Task = {ctor: 'Task'};
var _elm_lang$virtual_dom$VirtualDom_Metadata$Decoder = {ctor: 'Decoder'};
var _elm_lang$virtual_dom$VirtualDom_Metadata$Function = {ctor: 'Function'};
var _elm_lang$virtual_dom$VirtualDom_Metadata$problemTable = {
	ctor: '::',
	_0: {ctor: '_Tuple2', _0: _elm_lang$virtual_dom$VirtualDom_Metadata$Function, _1: '->'},
	_1: {
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: _elm_lang$virtual_dom$VirtualDom_Metadata$Decoder, _1: 'Json.Decode.Decoder'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: _elm_lang$virtual_dom$VirtualDom_Metadata$Task, _1: 'Task.Task'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: _elm_lang$virtual_dom$VirtualDom_Metadata$Process, _1: 'Process.Id'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: _elm_lang$virtual_dom$VirtualDom_Metadata$Socket, _1: 'WebSocket.LowLevel.WebSocket'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: _elm_lang$virtual_dom$VirtualDom_Metadata$Request, _1: 'Http.Request'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: _elm_lang$virtual_dom$VirtualDom_Metadata$Program, _1: 'Platform.Program'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: _elm_lang$virtual_dom$VirtualDom_Metadata$VirtualDom, _1: 'VirtualDom.Node'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: _elm_lang$virtual_dom$VirtualDom_Metadata$VirtualDom, _1: 'VirtualDom.Attribute'},
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}
		}
	}
};
var _elm_lang$virtual_dom$VirtualDom_Metadata$findProblems = function (tipe) {
	return A2(
		_elm_lang$core$List$filterMap,
		_elm_lang$virtual_dom$VirtualDom_Metadata$hasProblem(tipe),
		_elm_lang$virtual_dom$VirtualDom_Metadata$problemTable);
};
var _elm_lang$virtual_dom$VirtualDom_Metadata$collectBadAliases = F3(
	function (name, _p15, list) {
		var _p16 = _p15;
		var _p17 = _elm_lang$virtual_dom$VirtualDom_Metadata$findProblems(_p16.tipe);
		if (_p17.ctor === '[]') {
			return list;
		} else {
			return {
				ctor: '::',
				_0: A2(_elm_lang$virtual_dom$VirtualDom_Metadata$ProblemType, name, _p17),
				_1: list
			};
		}
	});
var _elm_lang$virtual_dom$VirtualDom_Metadata$collectBadUnions = F3(
	function (name, _p18, list) {
		var _p19 = _p18;
		var _p20 = A2(
			_elm_lang$core$List$concatMap,
			_elm_lang$virtual_dom$VirtualDom_Metadata$findProblems,
			_elm_lang$core$List$concat(
				_elm_lang$core$Dict$values(_p19.tags)));
		if (_p20.ctor === '[]') {
			return list;
		} else {
			return {
				ctor: '::',
				_0: A2(_elm_lang$virtual_dom$VirtualDom_Metadata$ProblemType, name, _p20),
				_1: list
			};
		}
	});
var _elm_lang$virtual_dom$VirtualDom_Metadata$isPortable = function (_p21) {
	var _p22 = _p21;
	var _p24 = _p22.types;
	var badAliases = A3(
		_elm_lang$core$Dict$foldl,
		_elm_lang$virtual_dom$VirtualDom_Metadata$collectBadAliases,
		{ctor: '[]'},
		_p24.aliases);
	var _p23 = A3(_elm_lang$core$Dict$foldl, _elm_lang$virtual_dom$VirtualDom_Metadata$collectBadUnions, badAliases, _p24.unions);
	if (_p23.ctor === '[]') {
		return _elm_lang$core$Maybe$Nothing;
	} else {
		return _elm_lang$core$Maybe$Just(
			A2(_elm_lang$virtual_dom$VirtualDom_Metadata$Error, _p24.message, _p23));
	}
};
var _elm_lang$virtual_dom$VirtualDom_Metadata$decode = function (value) {
	var _p25 = A2(_elm_lang$core$Json_Decode$decodeValue, _elm_lang$virtual_dom$VirtualDom_Metadata$decoder, value);
	if (_p25.ctor === 'Err') {
		return _elm_lang$core$Native_Utils.crashCase(
			'VirtualDom.Metadata',
			{
				start: {line: 229, column: 3},
				end: {line: 239, column: 20}
			},
			_p25)('Compiler is generating bad metadata. Report this at <https://github.com/elm-lang/virtual-dom/issues>.');
	} else {
		var _p28 = _p25._0;
		var _p27 = _elm_lang$virtual_dom$VirtualDom_Metadata$isPortable(_p28);
		if (_p27.ctor === 'Nothing') {
			return _elm_lang$core$Result$Ok(_p28);
		} else {
			return _elm_lang$core$Result$Err(_p27._0);
		}
	}
};

var _elm_lang$virtual_dom$VirtualDom_History$viewMessage = F3(
	function (currentIndex, index, msg) {
		var messageName = _elm_lang$virtual_dom$Native_Debug.messageToString(msg);
		var className = _elm_lang$core$Native_Utils.eq(currentIndex, index) ? 'messages-entry messages-entry-selected' : 'messages-entry';
		return A2(
			_elm_lang$virtual_dom$VirtualDom_Helpers$div,
			{
				ctor: '::',
				_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class(className),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$virtual_dom$VirtualDom_Helpers$on,
						'click',
						_elm_lang$core$Json_Decode$succeed(index)),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$virtual_dom$VirtualDom_Helpers$span,
					{
						ctor: '::',
						_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('messages-entry-content'),
						_1: {
							ctor: '::',
							_0: A2(_elm_lang$virtual_dom$VirtualDom_Helpers$attribute, 'title', messageName),
							_1: {ctor: '[]'}
						}
					},
					{
						ctor: '::',
						_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(messageName),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$virtual_dom$VirtualDom_Helpers$span,
						{
							ctor: '::',
							_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('messages-entry-index'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(
								_elm_lang$core$Basics$toString(index)),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _elm_lang$virtual_dom$VirtualDom_History$consMsg = F3(
	function (currentIndex, msg, _p0) {
		var _p1 = _p0;
		var _p2 = _p1._0;
		return {
			ctor: '_Tuple2',
			_0: _p2 - 1,
			_1: {
				ctor: '::',
				_0: A4(_elm_lang$virtual_dom$VirtualDom_Helpers$lazy3, _elm_lang$virtual_dom$VirtualDom_History$viewMessage, currentIndex, _p2, msg),
				_1: _p1._1
			}
		};
	});
var _elm_lang$virtual_dom$VirtualDom_History$viewSnapshot = F3(
	function (currentIndex, index, _p3) {
		var _p4 = _p3;
		return A2(
			_elm_lang$virtual_dom$VirtualDom_Helpers$div,
			{ctor: '[]'},
			_elm_lang$core$Tuple$second(
				A3(
					_elm_lang$core$Array$foldl,
					_elm_lang$virtual_dom$VirtualDom_History$consMsg(currentIndex),
					{
						ctor: '_Tuple2',
						_0: index - 1,
						_1: {ctor: '[]'}
					},
					_p4.messages)));
	});
var _elm_lang$virtual_dom$VirtualDom_History$undone = function (getResult) {
	var _p5 = getResult;
	if (_p5.ctor === 'Done') {
		return {ctor: '_Tuple2', _0: _p5._1, _1: _p5._0};
	} else {
		return _elm_lang$core$Native_Utils.crashCase(
			'VirtualDom.History',
			{
				start: {line: 195, column: 3},
				end: {line: 200, column: 39}
			},
			_p5)('Bug in History.get');
	}
};
var _elm_lang$virtual_dom$VirtualDom_History$elmToJs = _elm_lang$virtual_dom$Native_Debug.unsafeCoerce;
var _elm_lang$virtual_dom$VirtualDom_History$encodeHelp = F2(
	function (snapshot, allMessages) {
		return A3(
			_elm_lang$core$Array$foldl,
			F2(
				function (elm, msgs) {
					return {
						ctor: '::',
						_0: _elm_lang$virtual_dom$VirtualDom_History$elmToJs(elm),
						_1: msgs
					};
				}),
			allMessages,
			snapshot.messages);
	});
var _elm_lang$virtual_dom$VirtualDom_History$encode = function (_p7) {
	var _p8 = _p7;
	var recentJson = A2(
		_elm_lang$core$List$map,
		_elm_lang$virtual_dom$VirtualDom_History$elmToJs,
		_elm_lang$core$List$reverse(_p8.recent.messages));
	return _elm_lang$core$Json_Encode$list(
		A3(_elm_lang$core$Array$foldr, _elm_lang$virtual_dom$VirtualDom_History$encodeHelp, recentJson, _p8.snapshots));
};
var _elm_lang$virtual_dom$VirtualDom_History$jsToElm = _elm_lang$virtual_dom$Native_Debug.unsafeCoerce;
var _elm_lang$virtual_dom$VirtualDom_History$initialModel = function (_p9) {
	var _p10 = _p9;
	var _p11 = A2(_elm_lang$core$Array$get, 0, _p10.snapshots);
	if (_p11.ctor === 'Just') {
		return _p11._0.model;
	} else {
		return _p10.recent.model;
	}
};
var _elm_lang$virtual_dom$VirtualDom_History$size = function (history) {
	return history.numMessages;
};
var _elm_lang$virtual_dom$VirtualDom_History$maxSnapshotSize = 64;
var _elm_lang$virtual_dom$VirtualDom_History$consSnapshot = F3(
	function (currentIndex, snapshot, _p12) {
		var _p13 = _p12;
		var _p14 = _p13._0;
		var nextIndex = _p14 - _elm_lang$virtual_dom$VirtualDom_History$maxSnapshotSize;
		var currentIndexHelp = ((_elm_lang$core$Native_Utils.cmp(nextIndex, currentIndex) < 1) && (_elm_lang$core$Native_Utils.cmp(currentIndex, _p14) < 0)) ? currentIndex : -1;
		return {
			ctor: '_Tuple2',
			_0: _p14 - _elm_lang$virtual_dom$VirtualDom_History$maxSnapshotSize,
			_1: {
				ctor: '::',
				_0: A4(_elm_lang$virtual_dom$VirtualDom_Helpers$lazy3, _elm_lang$virtual_dom$VirtualDom_History$viewSnapshot, currentIndexHelp, _p14, snapshot),
				_1: _p13._1
			}
		};
	});
var _elm_lang$virtual_dom$VirtualDom_History$viewSnapshots = F2(
	function (currentIndex, snapshots) {
		var highIndex = _elm_lang$virtual_dom$VirtualDom_History$maxSnapshotSize * _elm_lang$core$Array$length(snapshots);
		return A2(
			_elm_lang$virtual_dom$VirtualDom_Helpers$div,
			{ctor: '[]'},
			_elm_lang$core$Tuple$second(
				A3(
					_elm_lang$core$Array$foldr,
					_elm_lang$virtual_dom$VirtualDom_History$consSnapshot(currentIndex),
					{
						ctor: '_Tuple2',
						_0: highIndex,
						_1: {ctor: '[]'}
					},
					snapshots)));
	});
var _elm_lang$virtual_dom$VirtualDom_History$view = F2(
	function (maybeIndex, _p15) {
		var _p16 = _p15;
		var _p17 = function () {
			var _p18 = maybeIndex;
			if (_p18.ctor === 'Nothing') {
				return {ctor: '_Tuple2', _0: -1, _1: 'debugger-sidebar-messages'};
			} else {
				return {ctor: '_Tuple2', _0: _p18._0, _1: 'debugger-sidebar-messages-paused'};
			}
		}();
		var index = _p17._0;
		var className = _p17._1;
		var oldStuff = A3(_elm_lang$virtual_dom$VirtualDom_Helpers$lazy2, _elm_lang$virtual_dom$VirtualDom_History$viewSnapshots, index, _p16.snapshots);
		var newStuff = _elm_lang$core$Tuple$second(
			A3(
				_elm_lang$core$List$foldl,
				_elm_lang$virtual_dom$VirtualDom_History$consMsg(index),
				{
					ctor: '_Tuple2',
					_0: _p16.numMessages - 1,
					_1: {ctor: '[]'}
				},
				_p16.recent.messages));
		return A2(
			_elm_lang$virtual_dom$VirtualDom_Helpers$div,
			{
				ctor: '::',
				_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class(className),
				_1: {ctor: '[]'}
			},
			{ctor: '::', _0: oldStuff, _1: newStuff});
	});
var _elm_lang$virtual_dom$VirtualDom_History$History = F3(
	function (a, b, c) {
		return {snapshots: a, recent: b, numMessages: c};
	});
var _elm_lang$virtual_dom$VirtualDom_History$RecentHistory = F3(
	function (a, b, c) {
		return {model: a, messages: b, numMessages: c};
	});
var _elm_lang$virtual_dom$VirtualDom_History$empty = function (model) {
	return A3(
		_elm_lang$virtual_dom$VirtualDom_History$History,
		_elm_lang$core$Array$empty,
		A3(
			_elm_lang$virtual_dom$VirtualDom_History$RecentHistory,
			model,
			{ctor: '[]'},
			0),
		0);
};
var _elm_lang$virtual_dom$VirtualDom_History$Snapshot = F2(
	function (a, b) {
		return {model: a, messages: b};
	});
var _elm_lang$virtual_dom$VirtualDom_History$addRecent = F3(
	function (msg, newModel, _p19) {
		var _p20 = _p19;
		var _p23 = _p20.numMessages;
		var _p22 = _p20.model;
		var _p21 = _p20.messages;
		return _elm_lang$core$Native_Utils.eq(_p23, _elm_lang$virtual_dom$VirtualDom_History$maxSnapshotSize) ? {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Maybe$Just(
				A2(
					_elm_lang$virtual_dom$VirtualDom_History$Snapshot,
					_p22,
					_elm_lang$core$Array$fromList(_p21))),
			_1: A3(
				_elm_lang$virtual_dom$VirtualDom_History$RecentHistory,
				newModel,
				{
					ctor: '::',
					_0: msg,
					_1: {ctor: '[]'}
				},
				1)
		} : {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Maybe$Nothing,
			_1: A3(
				_elm_lang$virtual_dom$VirtualDom_History$RecentHistory,
				_p22,
				{ctor: '::', _0: msg, _1: _p21},
				_p23 + 1)
		};
	});
var _elm_lang$virtual_dom$VirtualDom_History$add = F3(
	function (msg, model, _p24) {
		var _p25 = _p24;
		var _p28 = _p25.snapshots;
		var _p27 = _p25.numMessages;
		var _p26 = A3(_elm_lang$virtual_dom$VirtualDom_History$addRecent, msg, model, _p25.recent);
		if (_p26._0.ctor === 'Just') {
			return A3(
				_elm_lang$virtual_dom$VirtualDom_History$History,
				A2(_elm_lang$core$Array$push, _p26._0._0, _p28),
				_p26._1,
				_p27 + 1);
		} else {
			return A3(_elm_lang$virtual_dom$VirtualDom_History$History, _p28, _p26._1, _p27 + 1);
		}
	});
var _elm_lang$virtual_dom$VirtualDom_History$decoder = F2(
	function (initialModel, update) {
		var addMessage = F2(
			function (rawMsg, _p29) {
				var _p30 = _p29;
				var _p31 = _p30._0;
				var msg = _elm_lang$virtual_dom$VirtualDom_History$jsToElm(rawMsg);
				return {
					ctor: '_Tuple2',
					_0: A2(update, msg, _p31),
					_1: A3(_elm_lang$virtual_dom$VirtualDom_History$add, msg, _p31, _p30._1)
				};
			});
		var updateModel = function (rawMsgs) {
			return A3(
				_elm_lang$core$List$foldl,
				addMessage,
				{
					ctor: '_Tuple2',
					_0: initialModel,
					_1: _elm_lang$virtual_dom$VirtualDom_History$empty(initialModel)
				},
				rawMsgs);
		};
		return A2(
			_elm_lang$core$Json_Decode$map,
			updateModel,
			_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$value));
	});
var _elm_lang$virtual_dom$VirtualDom_History$Done = F2(
	function (a, b) {
		return {ctor: 'Done', _0: a, _1: b};
	});
var _elm_lang$virtual_dom$VirtualDom_History$Stepping = F2(
	function (a, b) {
		return {ctor: 'Stepping', _0: a, _1: b};
	});
var _elm_lang$virtual_dom$VirtualDom_History$getHelp = F3(
	function (update, msg, getResult) {
		var _p32 = getResult;
		if (_p32.ctor === 'Done') {
			return getResult;
		} else {
			var _p34 = _p32._0;
			var _p33 = _p32._1;
			return _elm_lang$core$Native_Utils.eq(_p34, 0) ? A2(
				_elm_lang$virtual_dom$VirtualDom_History$Done,
				msg,
				_elm_lang$core$Tuple$first(
					A2(update, msg, _p33))) : A2(
				_elm_lang$virtual_dom$VirtualDom_History$Stepping,
				_p34 - 1,
				_elm_lang$core$Tuple$first(
					A2(update, msg, _p33)));
		}
	});
var _elm_lang$virtual_dom$VirtualDom_History$get = F3(
	function (update, index, _p35) {
		var _p36 = _p35;
		var _p39 = _p36.recent;
		var snapshotMax = _p36.numMessages - _p39.numMessages;
		if (_elm_lang$core$Native_Utils.cmp(index, snapshotMax) > -1) {
			return _elm_lang$virtual_dom$VirtualDom_History$undone(
				A3(
					_elm_lang$core$List$foldr,
					_elm_lang$virtual_dom$VirtualDom_History$getHelp(update),
					A2(_elm_lang$virtual_dom$VirtualDom_History$Stepping, index - snapshotMax, _p39.model),
					_p39.messages));
		} else {
			var _p37 = A2(_elm_lang$core$Array$get, (index / _elm_lang$virtual_dom$VirtualDom_History$maxSnapshotSize) | 0, _p36.snapshots);
			if (_p37.ctor === 'Nothing') {
				return _elm_lang$core$Native_Utils.crashCase(
					'VirtualDom.History',
					{
						start: {line: 165, column: 7},
						end: {line: 171, column: 95}
					},
					_p37)('UI should only let you ask for real indexes!');
			} else {
				return _elm_lang$virtual_dom$VirtualDom_History$undone(
					A3(
						_elm_lang$core$Array$foldr,
						_elm_lang$virtual_dom$VirtualDom_History$getHelp(update),
						A2(
							_elm_lang$virtual_dom$VirtualDom_History$Stepping,
							A2(_elm_lang$core$Basics$rem, index, _elm_lang$virtual_dom$VirtualDom_History$maxSnapshotSize),
							_p37._0.model),
						_p37._0.messages));
			}
		}
	});

var _elm_lang$virtual_dom$VirtualDom_Overlay$styles = A3(
	_elm_lang$virtual_dom$VirtualDom_Helpers$node,
	'style',
	{ctor: '[]'},
	{
		ctor: '::',
		_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('\n\n.elm-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  color: white;\n  pointer-events: none;\n  font-family: \'Trebuchet MS\', \'Lucida Grande\', \'Bitstream Vera Sans\', \'Helvetica Neue\', sans-serif;\n}\n\n.elm-overlay-resume {\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n  text-align: center;\n  pointer-events: auto;\n  background-color: rgba(200, 200, 200, 0.7);\n}\n\n.elm-overlay-resume-words {\n  position: absolute;\n  top: calc(50% - 40px);\n  font-size: 80px;\n  line-height: 80px;\n  height: 80px;\n  width: 100%;\n}\n\n.elm-mini-controls {\n  position: fixed;\n  bottom: 0;\n  right: 6px;\n  border-radius: 4px;\n  background-color: rgb(61, 61, 61);\n  font-family: monospace;\n  pointer-events: auto;\n}\n\n.elm-mini-controls-button {\n  padding: 6px;\n  cursor: pointer;\n  text-align: center;\n  min-width: 24ch;\n}\n\n.elm-mini-controls-import-export {\n  padding: 4px 0;\n  font-size: 0.8em;\n  text-align: center;\n  background-color: rgb(50, 50, 50);\n}\n\n.elm-overlay-message {\n  position: absolute;\n  width: 600px;\n  height: 100%;\n  padding-left: calc(50% - 300px);\n  padding-right: calc(50% - 300px);\n  background-color: rgba(200, 200, 200, 0.7);\n  pointer-events: auto;\n}\n\n.elm-overlay-message-title {\n  font-size: 36px;\n  height: 80px;\n  background-color: rgb(50, 50, 50);\n  padding-left: 22px;\n  vertical-align: middle;\n  line-height: 80px;\n}\n\n.elm-overlay-message-details {\n  padding: 8px 20px;\n  overflow-y: auto;\n  max-height: calc(100% - 156px);\n  background-color: rgb(61, 61, 61);\n}\n\n.elm-overlay-message-details-type {\n  font-size: 1.5em;\n}\n\n.elm-overlay-message-details ul {\n  list-style-type: none;\n  padding-left: 20px;\n}\n\n.elm-overlay-message-details ul ul {\n  list-style-type: disc;\n  padding-left: 2em;\n}\n\n.elm-overlay-message-details li {\n  margin: 8px 0;\n}\n\n.elm-overlay-message-buttons {\n  height: 60px;\n  line-height: 60px;\n  text-align: right;\n  background-color: rgb(50, 50, 50);\n}\n\n.elm-overlay-message-buttons button {\n  margin-right: 20px;\n}\n\n'),
		_1: {ctor: '[]'}
	});
var _elm_lang$virtual_dom$VirtualDom_Overlay$button = F2(
	function (msg, label) {
		return A2(
			_elm_lang$virtual_dom$VirtualDom_Helpers$span,
			{
				ctor: '::',
				_0: _elm_lang$virtual_dom$VirtualDom_Helpers$onClick(msg),
				_1: {
					ctor: '::',
					_0: _elm_lang$virtual_dom$VirtualDom_Helpers$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'cursor', _1: 'pointer'},
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(label),
				_1: {ctor: '[]'}
			});
	});
var _elm_lang$virtual_dom$VirtualDom_Overlay$viewImportExport = F3(
	function (props, importMsg, exportMsg) {
		return A2(
			_elm_lang$virtual_dom$VirtualDom_Helpers$div,
			props,
			{
				ctor: '::',
				_0: A2(_elm_lang$virtual_dom$VirtualDom_Overlay$button, importMsg, 'Import'),
				_1: {
					ctor: '::',
					_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(' / '),
					_1: {
						ctor: '::',
						_0: A2(_elm_lang$virtual_dom$VirtualDom_Overlay$button, exportMsg, 'Export'),
						_1: {ctor: '[]'}
					}
				}
			});
	});
var _elm_lang$virtual_dom$VirtualDom_Overlay$viewMiniControls = F2(
	function (config, numMsgs) {
		return A2(
			_elm_lang$virtual_dom$VirtualDom_Helpers$div,
			{
				ctor: '::',
				_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('elm-mini-controls'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$virtual_dom$VirtualDom_Helpers$div,
					{
						ctor: '::',
						_0: _elm_lang$virtual_dom$VirtualDom_Helpers$onClick(config.open),
						_1: {
							ctor: '::',
							_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('elm-mini-controls-button'),
							_1: {ctor: '[]'}
						}
					},
					{
						ctor: '::',
						_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(
							A2(
								_elm_lang$core$Basics_ops['++'],
								'Explore History (',
								A2(
									_elm_lang$core$Basics_ops['++'],
									_elm_lang$core$Basics$toString(numMsgs),
									')'))),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A3(
						_elm_lang$virtual_dom$VirtualDom_Overlay$viewImportExport,
						{
							ctor: '::',
							_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('elm-mini-controls-import-export'),
							_1: {ctor: '[]'}
						},
						config.importHistory,
						config.exportHistory),
					_1: {ctor: '[]'}
				}
			});
	});
var _elm_lang$virtual_dom$VirtualDom_Overlay$addCommas = function (items) {
	var _p0 = items;
	if (_p0.ctor === '[]') {
		return '';
	} else {
		if (_p0._1.ctor === '[]') {
			return _p0._0;
		} else {
			if (_p0._1._1.ctor === '[]') {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					_p0._0,
					A2(_elm_lang$core$Basics_ops['++'], ' and ', _p0._1._0));
			} else {
				return A2(
					_elm_lang$core$String$join,
					', ',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_p0._1,
						{
							ctor: '::',
							_0: A2(_elm_lang$core$Basics_ops['++'], ' and ', _p0._0),
							_1: {ctor: '[]'}
						}));
			}
		}
	}
};
var _elm_lang$virtual_dom$VirtualDom_Overlay$problemToString = function (problem) {
	var _p1 = problem;
	switch (_p1.ctor) {
		case 'Function':
			return 'functions';
		case 'Decoder':
			return 'JSON decoders';
		case 'Task':
			return 'tasks';
		case 'Process':
			return 'processes';
		case 'Socket':
			return 'web sockets';
		case 'Request':
			return 'HTTP requests';
		case 'Program':
			return 'programs';
		default:
			return 'virtual DOM values';
	}
};
var _elm_lang$virtual_dom$VirtualDom_Overlay$goodNews2 = '\nfunction can pattern match on that data and call whatever functions, JSON\ndecoders, etc. you need. This makes the code much more explicit and easy to\nfollow for other readers (or you in a few months!)\n';
var _elm_lang$virtual_dom$VirtualDom_Overlay$goodNews1 = '\nThe good news is that having values like this in your message type is not\nso great in the long run. You are better off using simpler data, like\n';
var _elm_lang$virtual_dom$VirtualDom_Overlay$viewCode = function (name) {
	return A3(
		_elm_lang$virtual_dom$VirtualDom_Helpers$node,
		'code',
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(name),
			_1: {ctor: '[]'}
		});
};
var _elm_lang$virtual_dom$VirtualDom_Overlay$viewMention = F2(
	function (tags, verbed) {
		var _p2 = A2(
			_elm_lang$core$List$map,
			_elm_lang$virtual_dom$VirtualDom_Overlay$viewCode,
			_elm_lang$core$List$reverse(tags));
		if (_p2.ctor === '[]') {
			return _elm_lang$virtual_dom$VirtualDom_Helpers$text('');
		} else {
			if (_p2._1.ctor === '[]') {
				return A3(
					_elm_lang$virtual_dom$VirtualDom_Helpers$node,
					'li',
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(verbed),
						_1: {
							ctor: '::',
							_0: _p2._0,
							_1: {
								ctor: '::',
								_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('.'),
								_1: {ctor: '[]'}
							}
						}
					});
			} else {
				if (_p2._1._1.ctor === '[]') {
					return A3(
						_elm_lang$virtual_dom$VirtualDom_Helpers$node,
						'li',
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(verbed),
							_1: {
								ctor: '::',
								_0: _p2._1._0,
								_1: {
									ctor: '::',
									_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(' and '),
									_1: {
										ctor: '::',
										_0: _p2._0,
										_1: {
											ctor: '::',
											_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('.'),
											_1: {ctor: '[]'}
										}
									}
								}
							}
						});
				} else {
					return A3(
						_elm_lang$virtual_dom$VirtualDom_Helpers$node,
						'li',
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(verbed),
							_1: A2(
								_elm_lang$core$Basics_ops['++'],
								A2(
									_elm_lang$core$List$intersperse,
									_elm_lang$virtual_dom$VirtualDom_Helpers$text(', '),
									_elm_lang$core$List$reverse(_p2._1)),
								{
									ctor: '::',
									_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(', and '),
									_1: {
										ctor: '::',
										_0: _p2._0,
										_1: {
											ctor: '::',
											_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('.'),
											_1: {ctor: '[]'}
										}
									}
								})
						});
				}
			}
		}
	});
var _elm_lang$virtual_dom$VirtualDom_Overlay$viewChange = function (change) {
	return A3(
		_elm_lang$virtual_dom$VirtualDom_Helpers$node,
		'li',
		{ctor: '[]'},
		function () {
			var _p3 = change;
			if (_p3.ctor === 'AliasChange') {
				return {
					ctor: '::',
					_0: A2(
						_elm_lang$virtual_dom$VirtualDom_Helpers$span,
						{
							ctor: '::',
							_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('elm-overlay-message-details-type'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$virtual_dom$VirtualDom_Overlay$viewCode(_p3._0),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				};
			} else {
				return {
					ctor: '::',
					_0: A2(
						_elm_lang$virtual_dom$VirtualDom_Helpers$span,
						{
							ctor: '::',
							_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('elm-overlay-message-details-type'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$virtual_dom$VirtualDom_Overlay$viewCode(_p3._0),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A3(
							_elm_lang$virtual_dom$VirtualDom_Helpers$node,
							'ul',
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(_elm_lang$virtual_dom$VirtualDom_Overlay$viewMention, _p3._1.removed, 'Removed '),
								_1: {
									ctor: '::',
									_0: A2(_elm_lang$virtual_dom$VirtualDom_Overlay$viewMention, _p3._1.changed, 'Changed '),
									_1: {
										ctor: '::',
										_0: A2(_elm_lang$virtual_dom$VirtualDom_Overlay$viewMention, _p3._1.added, 'Added '),
										_1: {ctor: '[]'}
									}
								}
							}),
						_1: {
							ctor: '::',
							_0: _p3._1.argsMatch ? _elm_lang$virtual_dom$VirtualDom_Helpers$text('') : _elm_lang$virtual_dom$VirtualDom_Helpers$text('This may be due to the fact that the type variable names changed.'),
							_1: {ctor: '[]'}
						}
					}
				};
			}
		}());
};
var _elm_lang$virtual_dom$VirtualDom_Overlay$viewProblemType = function (_p4) {
	var _p5 = _p4;
	return A3(
		_elm_lang$virtual_dom$VirtualDom_Helpers$node,
		'li',
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$virtual_dom$VirtualDom_Overlay$viewCode(_p5.name),
			_1: {
				ctor: '::',
				_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(
					A2(
						_elm_lang$core$Basics_ops['++'],
						' can contain ',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$virtual_dom$VirtualDom_Overlay$addCommas(
								A2(_elm_lang$core$List$map, _elm_lang$virtual_dom$VirtualDom_Overlay$problemToString, _p5.problems)),
							'.'))),
				_1: {ctor: '[]'}
			}
		});
};
var _elm_lang$virtual_dom$VirtualDom_Overlay$viewBadMetadata = function (_p6) {
	var _p7 = _p6;
	return {
		ctor: '::',
		_0: A3(
			_elm_lang$virtual_dom$VirtualDom_Helpers$node,
			'p',
			{ctor: '[]'},
			{
				ctor: '::',
				_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('The '),
				_1: {
					ctor: '::',
					_0: _elm_lang$virtual_dom$VirtualDom_Overlay$viewCode(_p7.message),
					_1: {
						ctor: '::',
						_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(' type of your program cannot be reliably serialized for history files.'),
						_1: {ctor: '[]'}
					}
				}
			}),
		_1: {
			ctor: '::',
			_0: A3(
				_elm_lang$virtual_dom$VirtualDom_Helpers$node,
				'p',
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('Functions cannot be serialized, nor can values that contain functions. This is a problem in these places:'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A3(
					_elm_lang$virtual_dom$VirtualDom_Helpers$node,
					'ul',
					{ctor: '[]'},
					A2(_elm_lang$core$List$map, _elm_lang$virtual_dom$VirtualDom_Overlay$viewProblemType, _p7.problems)),
				_1: {
					ctor: '::',
					_0: A3(
						_elm_lang$virtual_dom$VirtualDom_Helpers$node,
						'p',
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(_elm_lang$virtual_dom$VirtualDom_Overlay$goodNews1),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$virtual_dom$VirtualDom_Helpers$a,
									{
										ctor: '::',
										_0: _elm_lang$virtual_dom$VirtualDom_Helpers$href('https://guide.elm-lang.org/types/union_types.html'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('union types'),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(', in your messages. From there, your '),
									_1: {
										ctor: '::',
										_0: _elm_lang$virtual_dom$VirtualDom_Overlay$viewCode('update'),
										_1: {
											ctor: '::',
											_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(_elm_lang$virtual_dom$VirtualDom_Overlay$goodNews2),
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			}
		}
	};
};
var _elm_lang$virtual_dom$VirtualDom_Overlay$explanationRisky = '\nThis history seems old. It will work with this program, but some\nmessages have been added since the history was created:\n';
var _elm_lang$virtual_dom$VirtualDom_Overlay$explanationBad = '\nThe messages in this history do not match the messages handled by your\nprogram. I noticed changes in the following types:\n';
var _elm_lang$virtual_dom$VirtualDom_Overlay$viewReport = F2(
	function (isBad, report) {
		var _p8 = report;
		switch (_p8.ctor) {
			case 'CorruptHistory':
				return {
					ctor: '::',
					_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('Looks like this history file is corrupt. I cannot understand it.'),
					_1: {ctor: '[]'}
				};
			case 'VersionChanged':
				return {
					ctor: '::',
					_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(
						A2(
							_elm_lang$core$Basics_ops['++'],
							'This history was created with Elm ',
							A2(
								_elm_lang$core$Basics_ops['++'],
								_p8._0,
								A2(
									_elm_lang$core$Basics_ops['++'],
									', but you are using Elm ',
									A2(_elm_lang$core$Basics_ops['++'], _p8._1, ' right now.'))))),
					_1: {ctor: '[]'}
				};
			case 'MessageChanged':
				return {
					ctor: '::',
					_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(
						A2(_elm_lang$core$Basics_ops['++'], 'To import some other history, the overall message type must', ' be the same. The old history has ')),
					_1: {
						ctor: '::',
						_0: _elm_lang$virtual_dom$VirtualDom_Overlay$viewCode(_p8._0),
						_1: {
							ctor: '::',
							_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(' messages, but the new program works with '),
							_1: {
								ctor: '::',
								_0: _elm_lang$virtual_dom$VirtualDom_Overlay$viewCode(_p8._1),
								_1: {
									ctor: '::',
									_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(' messages.'),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				};
			default:
				return {
					ctor: '::',
					_0: A3(
						_elm_lang$virtual_dom$VirtualDom_Helpers$node,
						'p',
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(
								isBad ? _elm_lang$virtual_dom$VirtualDom_Overlay$explanationBad : _elm_lang$virtual_dom$VirtualDom_Overlay$explanationRisky),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A3(
							_elm_lang$virtual_dom$VirtualDom_Helpers$node,
							'ul',
							{ctor: '[]'},
							A2(_elm_lang$core$List$map, _elm_lang$virtual_dom$VirtualDom_Overlay$viewChange, _p8._0)),
						_1: {ctor: '[]'}
					}
				};
		}
	});
var _elm_lang$virtual_dom$VirtualDom_Overlay$viewResume = function (config) {
	return A2(
		_elm_lang$virtual_dom$VirtualDom_Helpers$div,
		{
			ctor: '::',
			_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('elm-overlay-resume'),
			_1: {
				ctor: '::',
				_0: _elm_lang$virtual_dom$VirtualDom_Helpers$onClick(config.resume),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$virtual_dom$VirtualDom_Helpers$div,
				{
					ctor: '::',
					_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('elm-overlay-resume-words'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('Click to Resume'),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		});
};
var _elm_lang$virtual_dom$VirtualDom_Overlay$uploadDecoder = A3(
	_elm_lang$core$Json_Decode$map2,
	F2(
		function (v0, v1) {
			return {ctor: '_Tuple2', _0: v0, _1: v1};
		}),
	A2(_elm_lang$core$Json_Decode$field, 'metadata', _elm_lang$virtual_dom$VirtualDom_Metadata$decoder),
	A2(_elm_lang$core$Json_Decode$field, 'history', _elm_lang$core$Json_Decode$value));
var _elm_lang$virtual_dom$VirtualDom_Overlay$close = F2(
	function (msg, state) {
		var _p9 = state;
		switch (_p9.ctor) {
			case 'None':
				return _elm_lang$core$Maybe$Nothing;
			case 'BadMetadata':
				return _elm_lang$core$Maybe$Nothing;
			case 'BadImport':
				return _elm_lang$core$Maybe$Nothing;
			default:
				var _p10 = msg;
				if (_p10.ctor === 'Cancel') {
					return _elm_lang$core$Maybe$Nothing;
				} else {
					return _elm_lang$core$Maybe$Just(_p9._1);
				}
		}
	});
var _elm_lang$virtual_dom$VirtualDom_Overlay$isBlocking = function (state) {
	var _p11 = state;
	if (_p11.ctor === 'None') {
		return false;
	} else {
		return true;
	}
};
var _elm_lang$virtual_dom$VirtualDom_Overlay$Config = F5(
	function (a, b, c, d, e) {
		return {resume: a, open: b, importHistory: c, exportHistory: d, wrap: e};
	});
var _elm_lang$virtual_dom$VirtualDom_Overlay$RiskyImport = F2(
	function (a, b) {
		return {ctor: 'RiskyImport', _0: a, _1: b};
	});
var _elm_lang$virtual_dom$VirtualDom_Overlay$BadImport = function (a) {
	return {ctor: 'BadImport', _0: a};
};
var _elm_lang$virtual_dom$VirtualDom_Overlay$corruptImport = _elm_lang$virtual_dom$VirtualDom_Overlay$BadImport(_elm_lang$virtual_dom$VirtualDom_Report$CorruptHistory);
var _elm_lang$virtual_dom$VirtualDom_Overlay$assessImport = F2(
	function (metadata, jsonString) {
		var _p12 = A2(_elm_lang$core$Json_Decode$decodeString, _elm_lang$virtual_dom$VirtualDom_Overlay$uploadDecoder, jsonString);
		if (_p12.ctor === 'Err') {
			return _elm_lang$core$Result$Err(_elm_lang$virtual_dom$VirtualDom_Overlay$corruptImport);
		} else {
			var _p14 = _p12._0._1;
			var report = A2(_elm_lang$virtual_dom$VirtualDom_Metadata$check, _p12._0._0, metadata);
			var _p13 = _elm_lang$virtual_dom$VirtualDom_Report$evaluate(report);
			switch (_p13.ctor) {
				case 'Impossible':
					return _elm_lang$core$Result$Err(
						_elm_lang$virtual_dom$VirtualDom_Overlay$BadImport(report));
				case 'Risky':
					return _elm_lang$core$Result$Err(
						A2(_elm_lang$virtual_dom$VirtualDom_Overlay$RiskyImport, report, _p14));
				default:
					return _elm_lang$core$Result$Ok(_p14);
			}
		}
	});
var _elm_lang$virtual_dom$VirtualDom_Overlay$BadMetadata = function (a) {
	return {ctor: 'BadMetadata', _0: a};
};
var _elm_lang$virtual_dom$VirtualDom_Overlay$badMetadata = _elm_lang$virtual_dom$VirtualDom_Overlay$BadMetadata;
var _elm_lang$virtual_dom$VirtualDom_Overlay$None = {ctor: 'None'};
var _elm_lang$virtual_dom$VirtualDom_Overlay$none = _elm_lang$virtual_dom$VirtualDom_Overlay$None;
var _elm_lang$virtual_dom$VirtualDom_Overlay$Proceed = {ctor: 'Proceed'};
var _elm_lang$virtual_dom$VirtualDom_Overlay$Cancel = {ctor: 'Cancel'};
var _elm_lang$virtual_dom$VirtualDom_Overlay$viewButtons = function (buttons) {
	return A2(
		_elm_lang$virtual_dom$VirtualDom_Helpers$div,
		{
			ctor: '::',
			_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('elm-overlay-message-buttons'),
			_1: {ctor: '[]'}
		},
		function () {
			var _p15 = buttons;
			if (_p15.ctor === 'Accept') {
				return {
					ctor: '::',
					_0: A3(
						_elm_lang$virtual_dom$VirtualDom_Helpers$node,
						'button',
						{
							ctor: '::',
							_0: _elm_lang$virtual_dom$VirtualDom_Helpers$onClick(_elm_lang$virtual_dom$VirtualDom_Overlay$Proceed),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(_p15._0),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				};
			} else {
				return {
					ctor: '::',
					_0: A3(
						_elm_lang$virtual_dom$VirtualDom_Helpers$node,
						'button',
						{
							ctor: '::',
							_0: _elm_lang$virtual_dom$VirtualDom_Helpers$onClick(_elm_lang$virtual_dom$VirtualDom_Overlay$Cancel),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(_p15._0),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A3(
							_elm_lang$virtual_dom$VirtualDom_Helpers$node,
							'button',
							{
								ctor: '::',
								_0: _elm_lang$virtual_dom$VirtualDom_Helpers$onClick(_elm_lang$virtual_dom$VirtualDom_Overlay$Proceed),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(_p15._1),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				};
			}
		}());
};
var _elm_lang$virtual_dom$VirtualDom_Overlay$Message = {ctor: 'Message'};
var _elm_lang$virtual_dom$VirtualDom_Overlay$viewMessage = F4(
	function (config, title, details, buttons) {
		return {
			ctor: '_Tuple2',
			_0: _elm_lang$virtual_dom$VirtualDom_Overlay$Message,
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$virtual_dom$VirtualDom_Helpers$div,
					{
						ctor: '::',
						_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('elm-overlay-message'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$virtual_dom$VirtualDom_Helpers$div,
							{
								ctor: '::',
								_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('elm-overlay-message-title'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(title),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$virtual_dom$VirtualDom_Helpers$div,
								{
									ctor: '::',
									_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('elm-overlay-message-details'),
									_1: {ctor: '[]'}
								},
								details),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$virtual_dom$VirtualDom_Helpers$map,
									config.wrap,
									_elm_lang$virtual_dom$VirtualDom_Overlay$viewButtons(buttons)),
								_1: {ctor: '[]'}
							}
						}
					}),
				_1: {ctor: '[]'}
			}
		};
	});
var _elm_lang$virtual_dom$VirtualDom_Overlay$Pause = {ctor: 'Pause'};
var _elm_lang$virtual_dom$VirtualDom_Overlay$Normal = {ctor: 'Normal'};
var _elm_lang$virtual_dom$VirtualDom_Overlay$Choose = F2(
	function (a, b) {
		return {ctor: 'Choose', _0: a, _1: b};
	});
var _elm_lang$virtual_dom$VirtualDom_Overlay$Accept = function (a) {
	return {ctor: 'Accept', _0: a};
};
var _elm_lang$virtual_dom$VirtualDom_Overlay$viewHelp = F5(
	function (config, isPaused, isOpen, numMsgs, state) {
		var _p16 = state;
		switch (_p16.ctor) {
			case 'None':
				var miniControls = isOpen ? {ctor: '[]'} : {
					ctor: '::',
					_0: A2(_elm_lang$virtual_dom$VirtualDom_Overlay$viewMiniControls, config, numMsgs),
					_1: {ctor: '[]'}
				};
				return {
					ctor: '_Tuple2',
					_0: isPaused ? _elm_lang$virtual_dom$VirtualDom_Overlay$Pause : _elm_lang$virtual_dom$VirtualDom_Overlay$Normal,
					_1: (isPaused && (!isOpen)) ? {
						ctor: '::',
						_0: _elm_lang$virtual_dom$VirtualDom_Overlay$viewResume(config),
						_1: miniControls
					} : miniControls
				};
			case 'BadMetadata':
				return A4(
					_elm_lang$virtual_dom$VirtualDom_Overlay$viewMessage,
					config,
					'Cannot use Import or Export',
					_elm_lang$virtual_dom$VirtualDom_Overlay$viewBadMetadata(_p16._0),
					_elm_lang$virtual_dom$VirtualDom_Overlay$Accept('Ok'));
			case 'BadImport':
				return A4(
					_elm_lang$virtual_dom$VirtualDom_Overlay$viewMessage,
					config,
					'Cannot Import History',
					A2(_elm_lang$virtual_dom$VirtualDom_Overlay$viewReport, true, _p16._0),
					_elm_lang$virtual_dom$VirtualDom_Overlay$Accept('Ok'));
			default:
				return A4(
					_elm_lang$virtual_dom$VirtualDom_Overlay$viewMessage,
					config,
					'Warning',
					A2(_elm_lang$virtual_dom$VirtualDom_Overlay$viewReport, false, _p16._0),
					A2(_elm_lang$virtual_dom$VirtualDom_Overlay$Choose, 'Cancel', 'Import Anyway'));
		}
	});
var _elm_lang$virtual_dom$VirtualDom_Overlay$view = F5(
	function (config, isPaused, isOpen, numMsgs, state) {
		var _p17 = A5(_elm_lang$virtual_dom$VirtualDom_Overlay$viewHelp, config, isPaused, isOpen, numMsgs, state);
		var block = _p17._0;
		var nodes = _p17._1;
		return {
			ctor: '_Tuple2',
			_0: block,
			_1: A2(
				_elm_lang$virtual_dom$VirtualDom_Helpers$div,
				{
					ctor: '::',
					_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('elm-overlay'),
					_1: {ctor: '[]'}
				},
				{ctor: '::', _0: _elm_lang$virtual_dom$VirtualDom_Overlay$styles, _1: nodes})
		};
	});

var _elm_lang$virtual_dom$VirtualDom_Debug$styles = A3(
	_elm_lang$virtual_dom$VirtualDom_Helpers$node,
	'style',
	{ctor: '[]'},
	{
		ctor: '::',
		_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('\n\nhtml {\n    overflow: hidden;\n    height: 100%;\n}\n\nbody {\n    height: 100%;\n    overflow: auto;\n}\n\n#debugger {\n  width: 100%\n  height: 100%;\n  font-family: monospace;\n}\n\n#values {\n  display: block;\n  float: left;\n  height: 100%;\n  width: calc(100% - 30ch);\n  margin: 0;\n  overflow: auto;\n  cursor: default;\n}\n\n.debugger-sidebar {\n  display: block;\n  float: left;\n  width: 30ch;\n  height: 100%;\n  color: white;\n  background-color: rgb(61, 61, 61);\n}\n\n.debugger-sidebar-controls {\n  width: 100%;\n  text-align: center;\n  background-color: rgb(50, 50, 50);\n}\n\n.debugger-sidebar-controls-import-export {\n  width: 100%;\n  height: 24px;\n  line-height: 24px;\n  font-size: 12px;\n}\n\n.debugger-sidebar-controls-resume {\n  width: 100%;\n  height: 30px;\n  line-height: 30px;\n  cursor: pointer;\n}\n\n.debugger-sidebar-controls-resume:hover {\n  background-color: rgb(41, 41, 41);\n}\n\n.debugger-sidebar-messages {\n  width: 100%;\n  overflow-y: auto;\n  height: calc(100% - 24px);\n}\n\n.debugger-sidebar-messages-paused {\n  width: 100%;\n  overflow-y: auto;\n  height: calc(100% - 54px);\n}\n\n.messages-entry {\n  cursor: pointer;\n  width: 100%;\n}\n\n.messages-entry:hover {\n  background-color: rgb(41, 41, 41);\n}\n\n.messages-entry-selected, .messages-entry-selected:hover {\n  background-color: rgb(10, 10, 10);\n}\n\n.messages-entry-content {\n  width: calc(100% - 7ch);\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 1ch;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.messages-entry-index {\n  color: #666;\n  width: 5ch;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-right: 1ch;\n  text-align: right;\n  display: block;\n  float: right;\n}\n\n'),
		_1: {ctor: '[]'}
	});
var _elm_lang$virtual_dom$VirtualDom_Debug$button = F2(
	function (msg, label) {
		return A2(
			_elm_lang$virtual_dom$VirtualDom_Helpers$span,
			{
				ctor: '::',
				_0: _elm_lang$virtual_dom$VirtualDom_Helpers$onClick(msg),
				_1: {
					ctor: '::',
					_0: _elm_lang$virtual_dom$VirtualDom_Helpers$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'cursor', _1: 'pointer'},
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(label),
				_1: {ctor: '[]'}
			});
	});
var _elm_lang$virtual_dom$VirtualDom_Debug$getLatestModel = function (state) {
	var _p0 = state;
	if (_p0.ctor === 'Running') {
		return _p0._0;
	} else {
		return _p0._2;
	}
};
var _elm_lang$virtual_dom$VirtualDom_Debug$withGoodMetadata = F2(
	function (model, func) {
		var _p1 = model.metadata;
		if (_p1.ctor === 'Ok') {
			return func(_p1._0);
		} else {
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_elm_lang$core$Native_Utils.update(
					model,
					{
						overlay: _elm_lang$virtual_dom$VirtualDom_Overlay$badMetadata(_p1._0)
					}),
				{ctor: '[]'});
		}
	});
var _elm_lang$virtual_dom$VirtualDom_Debug$Model = F6(
	function (a, b, c, d, e, f) {
		return {history: a, state: b, expando: c, metadata: d, overlay: e, isDebuggerOpen: f};
	});
var _elm_lang$virtual_dom$VirtualDom_Debug$Paused = F3(
	function (a, b, c) {
		return {ctor: 'Paused', _0: a, _1: b, _2: c};
	});
var _elm_lang$virtual_dom$VirtualDom_Debug$Running = function (a) {
	return {ctor: 'Running', _0: a};
};
var _elm_lang$virtual_dom$VirtualDom_Debug$loadNewHistory = F3(
	function (rawHistory, userUpdate, model) {
		var pureUserUpdate = F2(
			function (msg, userModel) {
				return _elm_lang$core$Tuple$first(
					A2(userUpdate, msg, userModel));
			});
		var initialUserModel = _elm_lang$virtual_dom$VirtualDom_History$initialModel(model.history);
		var decoder = A2(_elm_lang$virtual_dom$VirtualDom_History$decoder, initialUserModel, pureUserUpdate);
		var _p2 = A2(_elm_lang$core$Json_Decode$decodeValue, decoder, rawHistory);
		if (_p2.ctor === 'Err') {
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_elm_lang$core$Native_Utils.update(
					model,
					{overlay: _elm_lang$virtual_dom$VirtualDom_Overlay$corruptImport}),
				{ctor: '[]'});
		} else {
			var _p3 = _p2._0._0;
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_elm_lang$core$Native_Utils.update(
					model,
					{
						history: _p2._0._1,
						state: _elm_lang$virtual_dom$VirtualDom_Debug$Running(_p3),
						expando: _elm_lang$virtual_dom$VirtualDom_Expando$init(_p3),
						overlay: _elm_lang$virtual_dom$VirtualDom_Overlay$none
					}),
				{ctor: '[]'});
		}
	});
var _elm_lang$virtual_dom$VirtualDom_Debug$OverlayMsg = function (a) {
	return {ctor: 'OverlayMsg', _0: a};
};
var _elm_lang$virtual_dom$VirtualDom_Debug$Upload = function (a) {
	return {ctor: 'Upload', _0: a};
};
var _elm_lang$virtual_dom$VirtualDom_Debug$upload = A2(_elm_lang$core$Task$perform, _elm_lang$virtual_dom$VirtualDom_Debug$Upload, _elm_lang$virtual_dom$Native_Debug.upload);
var _elm_lang$virtual_dom$VirtualDom_Debug$Export = {ctor: 'Export'};
var _elm_lang$virtual_dom$VirtualDom_Debug$Import = {ctor: 'Import'};
var _elm_lang$virtual_dom$VirtualDom_Debug$Down = {ctor: 'Down'};
var _elm_lang$virtual_dom$VirtualDom_Debug$Up = {ctor: 'Up'};
var _elm_lang$virtual_dom$VirtualDom_Debug$Close = {ctor: 'Close'};
var _elm_lang$virtual_dom$VirtualDom_Debug$Open = {ctor: 'Open'};
var _elm_lang$virtual_dom$VirtualDom_Debug$Jump = function (a) {
	return {ctor: 'Jump', _0: a};
};
var _elm_lang$virtual_dom$VirtualDom_Debug$Resume = {ctor: 'Resume'};
var _elm_lang$virtual_dom$VirtualDom_Debug$overlayConfig = {resume: _elm_lang$virtual_dom$VirtualDom_Debug$Resume, open: _elm_lang$virtual_dom$VirtualDom_Debug$Open, importHistory: _elm_lang$virtual_dom$VirtualDom_Debug$Import, exportHistory: _elm_lang$virtual_dom$VirtualDom_Debug$Export, wrap: _elm_lang$virtual_dom$VirtualDom_Debug$OverlayMsg};
var _elm_lang$virtual_dom$VirtualDom_Debug$viewIn = function (_p4) {
	var _p5 = _p4;
	var isPaused = function () {
		var _p6 = _p5.state;
		if (_p6.ctor === 'Running') {
			return false;
		} else {
			return true;
		}
	}();
	return A5(
		_elm_lang$virtual_dom$VirtualDom_Overlay$view,
		_elm_lang$virtual_dom$VirtualDom_Debug$overlayConfig,
		isPaused,
		_p5.isDebuggerOpen,
		_elm_lang$virtual_dom$VirtualDom_History$size(_p5.history),
		_p5.overlay);
};
var _elm_lang$virtual_dom$VirtualDom_Debug$resumeButton = A2(
	_elm_lang$virtual_dom$VirtualDom_Helpers$div,
	{
		ctor: '::',
		_0: _elm_lang$virtual_dom$VirtualDom_Helpers$onClick(_elm_lang$virtual_dom$VirtualDom_Debug$Resume),
		_1: {
			ctor: '::',
			_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('debugger-sidebar-controls-resume'),
			_1: {ctor: '[]'}
		}
	},
	{
		ctor: '::',
		_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text('Resume'),
		_1: {ctor: '[]'}
	});
var _elm_lang$virtual_dom$VirtualDom_Debug$viewResumeButton = function (maybeIndex) {
	var _p7 = maybeIndex;
	if (_p7.ctor === 'Nothing') {
		return _elm_lang$virtual_dom$VirtualDom_Helpers$text('');
	} else {
		return _elm_lang$virtual_dom$VirtualDom_Debug$resumeButton;
	}
};
var _elm_lang$virtual_dom$VirtualDom_Debug$playButton = function (maybeIndex) {
	return A2(
		_elm_lang$virtual_dom$VirtualDom_Helpers$div,
		{
			ctor: '::',
			_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('debugger-sidebar-controls'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$virtual_dom$VirtualDom_Debug$viewResumeButton(maybeIndex),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$virtual_dom$VirtualDom_Helpers$div,
					{
						ctor: '::',
						_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('debugger-sidebar-controls-import-export'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(_elm_lang$virtual_dom$VirtualDom_Debug$button, _elm_lang$virtual_dom$VirtualDom_Debug$Import, 'Import'),
						_1: {
							ctor: '::',
							_0: _elm_lang$virtual_dom$VirtualDom_Helpers$text(' / '),
							_1: {
								ctor: '::',
								_0: A2(_elm_lang$virtual_dom$VirtualDom_Debug$button, _elm_lang$virtual_dom$VirtualDom_Debug$Export, 'Export'),
								_1: {ctor: '[]'}
							}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _elm_lang$virtual_dom$VirtualDom_Debug$viewSidebar = F2(
	function (state, history) {
		var maybeIndex = function () {
			var _p8 = state;
			if (_p8.ctor === 'Running') {
				return _elm_lang$core$Maybe$Nothing;
			} else {
				return _elm_lang$core$Maybe$Just(_p8._0);
			}
		}();
		return A2(
			_elm_lang$virtual_dom$VirtualDom_Helpers$div,
			{
				ctor: '::',
				_0: _elm_lang$virtual_dom$VirtualDom_Helpers$class('debugger-sidebar'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$virtual_dom$VirtualDom_Helpers$map,
					_elm_lang$virtual_dom$VirtualDom_Debug$Jump,
					A2(_elm_lang$virtual_dom$VirtualDom_History$view, maybeIndex, history)),
				_1: {
					ctor: '::',
					_0: _elm_lang$virtual_dom$VirtualDom_Debug$playButton(maybeIndex),
					_1: {ctor: '[]'}
				}
			});
	});
var _elm_lang$virtual_dom$VirtualDom_Debug$ExpandoMsg = function (a) {
	return {ctor: 'ExpandoMsg', _0: a};
};
var _elm_lang$virtual_dom$VirtualDom_Debug$viewOut = function (_p9) {
	var _p10 = _p9;
	return A2(
		_elm_lang$virtual_dom$VirtualDom_Helpers$div,
		{
			ctor: '::',
			_0: _elm_lang$virtual_dom$VirtualDom_Helpers$id('debugger'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$virtual_dom$VirtualDom_Debug$styles,
			_1: {
				ctor: '::',
				_0: A2(_elm_lang$virtual_dom$VirtualDom_Debug$viewSidebar, _p10.state, _p10.history),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$virtual_dom$VirtualDom_Helpers$map,
						_elm_lang$virtual_dom$VirtualDom_Debug$ExpandoMsg,
						A2(
							_elm_lang$virtual_dom$VirtualDom_Helpers$div,
							{
								ctor: '::',
								_0: _elm_lang$virtual_dom$VirtualDom_Helpers$id('values'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(_elm_lang$virtual_dom$VirtualDom_Expando$view, _elm_lang$core$Maybe$Nothing, _p10.expando),
								_1: {ctor: '[]'}
							})),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _elm_lang$virtual_dom$VirtualDom_Debug$UserMsg = function (a) {
	return {ctor: 'UserMsg', _0: a};
};
var _elm_lang$virtual_dom$VirtualDom_Debug$wrapInit = F2(
	function (metadata, _p11) {
		var _p12 = _p11;
		var _p13 = _p12._0;
		return A2(
			_elm_lang$core$Platform_Cmd_ops['!'],
			{
				history: _elm_lang$virtual_dom$VirtualDom_History$empty(_p13),
				state: _elm_lang$virtual_dom$VirtualDom_Debug$Running(_p13),
				expando: _elm_lang$virtual_dom$VirtualDom_Expando$init(_p13),
				metadata: _elm_lang$virtual_dom$VirtualDom_Metadata$decode(metadata),
				overlay: _elm_lang$virtual_dom$VirtualDom_Overlay$none,
				isDebuggerOpen: false
			},
			{
				ctor: '::',
				_0: A2(_elm_lang$core$Platform_Cmd$map, _elm_lang$virtual_dom$VirtualDom_Debug$UserMsg, _p12._1),
				_1: {ctor: '[]'}
			});
	});
var _elm_lang$virtual_dom$VirtualDom_Debug$wrapSubs = F2(
	function (userSubscriptions, _p14) {
		var _p15 = _p14;
		return A2(
			_elm_lang$core$Platform_Sub$map,
			_elm_lang$virtual_dom$VirtualDom_Debug$UserMsg,
			userSubscriptions(
				_elm_lang$virtual_dom$VirtualDom_Debug$getLatestModel(_p15.state)));
	});
var _elm_lang$virtual_dom$VirtualDom_Debug$wrapView = F2(
	function (userView, _p16) {
		var _p17 = _p16;
		var currentModel = function () {
			var _p18 = _p17.state;
			if (_p18.ctor === 'Running') {
				return _p18._0;
			} else {
				return _p18._1;
			}
		}();
		return A2(
			_elm_lang$virtual_dom$VirtualDom_Helpers$map,
			_elm_lang$virtual_dom$VirtualDom_Debug$UserMsg,
			userView(currentModel));
	});
var _elm_lang$virtual_dom$VirtualDom_Debug$NoOp = {ctor: 'NoOp'};
var _elm_lang$virtual_dom$VirtualDom_Debug$download = F2(
	function (metadata, history) {
		var json = _elm_lang$core$Json_Encode$object(
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'metadata',
					_1: _elm_lang$virtual_dom$VirtualDom_Metadata$encode(metadata)
				},
				_1: {
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'history',
						_1: _elm_lang$virtual_dom$VirtualDom_History$encode(history)
					},
					_1: {ctor: '[]'}
				}
			});
		var historyLength = _elm_lang$virtual_dom$VirtualDom_History$size(history);
		return A2(
			_elm_lang$core$Task$perform,
			function (_p19) {
				return _elm_lang$virtual_dom$VirtualDom_Debug$NoOp;
			},
			A2(_elm_lang$virtual_dom$Native_Debug.download, historyLength, json));
	});
var _elm_lang$virtual_dom$VirtualDom_Debug$runIf = F2(
	function (bool, task) {
		return bool ? A2(
			_elm_lang$core$Task$perform,
			_elm_lang$core$Basics$always(_elm_lang$virtual_dom$VirtualDom_Debug$NoOp),
			task) : _elm_lang$core$Platform_Cmd$none;
	});
var _elm_lang$virtual_dom$VirtualDom_Debug$updateUserMsg = F4(
	function (userUpdate, scrollTask, userMsg, _p20) {
		var _p21 = _p20;
		var _p25 = _p21.state;
		var _p24 = _p21;
		var userModel = _elm_lang$virtual_dom$VirtualDom_Debug$getLatestModel(_p25);
		var newHistory = A3(_elm_lang$virtual_dom$VirtualDom_History$add, userMsg, userModel, _p21.history);
		var _p22 = A2(userUpdate, userMsg, userModel);
		var newUserModel = _p22._0;
		var userCmds = _p22._1;
		var commands = A2(_elm_lang$core$Platform_Cmd$map, _elm_lang$virtual_dom$VirtualDom_Debug$UserMsg, userCmds);
		var _p23 = _p25;
		if (_p23.ctor === 'Running') {
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_elm_lang$core$Native_Utils.update(
					_p24,
					{
						history: newHistory,
						state: _elm_lang$virtual_dom$VirtualDom_Debug$Running(newUserModel),
						expando: A2(_elm_lang$virtual_dom$VirtualDom_Expando$merge, newUserModel, _p21.expando)
					}),
				{
					ctor: '::',
					_0: commands,
					_1: {
						ctor: '::',
						_0: A2(_elm_lang$virtual_dom$VirtualDom_Debug$runIf, _p24.isDebuggerOpen, scrollTask),
						_1: {ctor: '[]'}
					}
				});
		} else {
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_elm_lang$core$Native_Utils.update(
					_p24,
					{
						history: newHistory,
						state: A3(_elm_lang$virtual_dom$VirtualDom_Debug$Paused, _p23._0, _p23._1, newUserModel)
					}),
				{
					ctor: '::',
					_0: commands,
					_1: {ctor: '[]'}
				});
		}
	});
var _elm_lang$virtual_dom$VirtualDom_Debug$wrapUpdate = F4(
	function (userUpdate, scrollTask, msg, model) {
		wrapUpdate:
		while (true) {
			var _p26 = msg;
			switch (_p26.ctor) {
				case 'NoOp':
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						model,
						{ctor: '[]'});
				case 'UserMsg':
					return A4(_elm_lang$virtual_dom$VirtualDom_Debug$updateUserMsg, userUpdate, scrollTask, _p26._0, model);
				case 'ExpandoMsg':
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								expando: A2(_elm_lang$virtual_dom$VirtualDom_Expando$update, _p26._0, model.expando)
							}),
						{ctor: '[]'});
				case 'Resume':
					var _p27 = model.state;
					if (_p27.ctor === 'Running') {
						return A2(
							_elm_lang$core$Platform_Cmd_ops['!'],
							model,
							{ctor: '[]'});
					} else {
						var _p28 = _p27._2;
						return A2(
							_elm_lang$core$Platform_Cmd_ops['!'],
							_elm_lang$core$Native_Utils.update(
								model,
								{
									state: _elm_lang$virtual_dom$VirtualDom_Debug$Running(_p28),
									expando: A2(_elm_lang$virtual_dom$VirtualDom_Expando$merge, _p28, model.expando)
								}),
							{
								ctor: '::',
								_0: A2(_elm_lang$virtual_dom$VirtualDom_Debug$runIf, model.isDebuggerOpen, scrollTask),
								_1: {ctor: '[]'}
							});
					}
				case 'Jump':
					var _p30 = _p26._0;
					var _p29 = A3(_elm_lang$virtual_dom$VirtualDom_History$get, userUpdate, _p30, model.history);
					var indexModel = _p29._0;
					var indexMsg = _p29._1;
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								state: A3(
									_elm_lang$virtual_dom$VirtualDom_Debug$Paused,
									_p30,
									indexModel,
									_elm_lang$virtual_dom$VirtualDom_Debug$getLatestModel(model.state)),
								expando: A2(_elm_lang$virtual_dom$VirtualDom_Expando$merge, indexModel, model.expando)
							}),
						{ctor: '[]'});
				case 'Open':
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{isDebuggerOpen: true}),
						{ctor: '[]'});
				case 'Close':
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{isDebuggerOpen: false}),
						{ctor: '[]'});
				case 'Up':
					var index = function () {
						var _p31 = model.state;
						if (_p31.ctor === 'Paused') {
							return _p31._0;
						} else {
							return _elm_lang$virtual_dom$VirtualDom_History$size(model.history);
						}
					}();
					if (_elm_lang$core$Native_Utils.cmp(index, 0) > 0) {
						var _v17 = userUpdate,
							_v18 = scrollTask,
							_v19 = _elm_lang$virtual_dom$VirtualDom_Debug$Jump(index - 1),
							_v20 = model;
						userUpdate = _v17;
						scrollTask = _v18;
						msg = _v19;
						model = _v20;
						continue wrapUpdate;
					} else {
						return A2(
							_elm_lang$core$Platform_Cmd_ops['!'],
							model,
							{ctor: '[]'});
					}
				case 'Down':
					var _p32 = model.state;
					if (_p32.ctor === 'Running') {
						return A2(
							_elm_lang$core$Platform_Cmd_ops['!'],
							model,
							{ctor: '[]'});
					} else {
						var _p33 = _p32._0;
						if (_elm_lang$core$Native_Utils.eq(
							_p33,
							_elm_lang$virtual_dom$VirtualDom_History$size(model.history) - 1)) {
							var _v22 = userUpdate,
								_v23 = scrollTask,
								_v24 = _elm_lang$virtual_dom$VirtualDom_Debug$Resume,
								_v25 = model;
							userUpdate = _v22;
							scrollTask = _v23;
							msg = _v24;
							model = _v25;
							continue wrapUpdate;
						} else {
							var _v26 = userUpdate,
								_v27 = scrollTask,
								_v28 = _elm_lang$virtual_dom$VirtualDom_Debug$Jump(_p33 + 1),
								_v29 = model;
							userUpdate = _v26;
							scrollTask = _v27;
							msg = _v28;
							model = _v29;
							continue wrapUpdate;
						}
					}
				case 'Import':
					return A2(
						_elm_lang$virtual_dom$VirtualDom_Debug$withGoodMetadata,
						model,
						function (_p34) {
							return A2(
								_elm_lang$core$Platform_Cmd_ops['!'],
								model,
								{
									ctor: '::',
									_0: _elm_lang$virtual_dom$VirtualDom_Debug$upload,
									_1: {ctor: '[]'}
								});
						});
				case 'Export':
					return A2(
						_elm_lang$virtual_dom$VirtualDom_Debug$withGoodMetadata,
						model,
						function (metadata) {
							return A2(
								_elm_lang$core$Platform_Cmd_ops['!'],
								model,
								{
									ctor: '::',
									_0: A2(_elm_lang$virtual_dom$VirtualDom_Debug$download, metadata, model.history),
									_1: {ctor: '[]'}
								});
						});
				case 'Upload':
					return A2(
						_elm_lang$virtual_dom$VirtualDom_Debug$withGoodMetadata,
						model,
						function (metadata) {
							var _p35 = A2(_elm_lang$virtual_dom$VirtualDom_Overlay$assessImport, metadata, _p26._0);
							if (_p35.ctor === 'Err') {
								return A2(
									_elm_lang$core$Platform_Cmd_ops['!'],
									_elm_lang$core$Native_Utils.update(
										model,
										{overlay: _p35._0}),
									{ctor: '[]'});
							} else {
								return A3(_elm_lang$virtual_dom$VirtualDom_Debug$loadNewHistory, _p35._0, userUpdate, model);
							}
						});
				default:
					var _p36 = A2(_elm_lang$virtual_dom$VirtualDom_Overlay$close, _p26._0, model.overlay);
					if (_p36.ctor === 'Nothing') {
						return A2(
							_elm_lang$core$Platform_Cmd_ops['!'],
							_elm_lang$core$Native_Utils.update(
								model,
								{overlay: _elm_lang$virtual_dom$VirtualDom_Overlay$none}),
							{ctor: '[]'});
					} else {
						return A3(_elm_lang$virtual_dom$VirtualDom_Debug$loadNewHistory, _p36._0, userUpdate, model);
					}
			}
		}
	});
var _elm_lang$virtual_dom$VirtualDom_Debug$wrap = F2(
	function (metadata, _p37) {
		var _p38 = _p37;
		return {
			init: A2(_elm_lang$virtual_dom$VirtualDom_Debug$wrapInit, metadata, _p38.init),
			view: _elm_lang$virtual_dom$VirtualDom_Debug$wrapView(_p38.view),
			update: _elm_lang$virtual_dom$VirtualDom_Debug$wrapUpdate(_p38.update),
			viewIn: _elm_lang$virtual_dom$VirtualDom_Debug$viewIn,
			viewOut: _elm_lang$virtual_dom$VirtualDom_Debug$viewOut,
			subscriptions: _elm_lang$virtual_dom$VirtualDom_Debug$wrapSubs(_p38.subscriptions)
		};
	});
var _elm_lang$virtual_dom$VirtualDom_Debug$wrapWithFlags = F2(
	function (metadata, _p39) {
		var _p40 = _p39;
		return {
			init: function (flags) {
				return A2(
					_elm_lang$virtual_dom$VirtualDom_Debug$wrapInit,
					metadata,
					_p40.init(flags));
			},
			view: _elm_lang$virtual_dom$VirtualDom_Debug$wrapView(_p40.view),
			update: _elm_lang$virtual_dom$VirtualDom_Debug$wrapUpdate(_p40.update),
			viewIn: _elm_lang$virtual_dom$VirtualDom_Debug$viewIn,
			viewOut: _elm_lang$virtual_dom$VirtualDom_Debug$viewOut,
			subscriptions: _elm_lang$virtual_dom$VirtualDom_Debug$wrapSubs(_p40.subscriptions)
		};
	});

var _elm_lang$virtual_dom$VirtualDom$programWithFlags = function (impl) {
	return A2(_elm_lang$virtual_dom$Native_VirtualDom.programWithFlags, _elm_lang$virtual_dom$VirtualDom_Debug$wrapWithFlags, impl);
};
var _elm_lang$virtual_dom$VirtualDom$program = function (impl) {
	return A2(_elm_lang$virtual_dom$Native_VirtualDom.program, _elm_lang$virtual_dom$VirtualDom_Debug$wrap, impl);
};
var _elm_lang$virtual_dom$VirtualDom$keyedNode = _elm_lang$virtual_dom$Native_VirtualDom.keyedNode;
var _elm_lang$virtual_dom$VirtualDom$lazy3 = _elm_lang$virtual_dom$Native_VirtualDom.lazy3;
var _elm_lang$virtual_dom$VirtualDom$lazy2 = _elm_lang$virtual_dom$Native_VirtualDom.lazy2;
var _elm_lang$virtual_dom$VirtualDom$lazy = _elm_lang$virtual_dom$Native_VirtualDom.lazy;
var _elm_lang$virtual_dom$VirtualDom$defaultOptions = {stopPropagation: false, preventDefault: false};
var _elm_lang$virtual_dom$VirtualDom$onWithOptions = _elm_lang$virtual_dom$Native_VirtualDom.on;
var _elm_lang$virtual_dom$VirtualDom$on = F2(
	function (eventName, decoder) {
		return A3(_elm_lang$virtual_dom$VirtualDom$onWithOptions, eventName, _elm_lang$virtual_dom$VirtualDom$defaultOptions, decoder);
	});
var _elm_lang$virtual_dom$VirtualDom$style = _elm_lang$virtual_dom$Native_VirtualDom.style;
var _elm_lang$virtual_dom$VirtualDom$mapProperty = _elm_lang$virtual_dom$Native_VirtualDom.mapProperty;
var _elm_lang$virtual_dom$VirtualDom$attributeNS = _elm_lang$virtual_dom$Native_VirtualDom.attributeNS;
var _elm_lang$virtual_dom$VirtualDom$attribute = _elm_lang$virtual_dom$Native_VirtualDom.attribute;
var _elm_lang$virtual_dom$VirtualDom$property = _elm_lang$virtual_dom$Native_VirtualDom.property;
var _elm_lang$virtual_dom$VirtualDom$map = _elm_lang$virtual_dom$Native_VirtualDom.map;
var _elm_lang$virtual_dom$VirtualDom$text = _elm_lang$virtual_dom$Native_VirtualDom.text;
var _elm_lang$virtual_dom$VirtualDom$node = _elm_lang$virtual_dom$Native_VirtualDom.node;
var _elm_lang$virtual_dom$VirtualDom$Options = F2(
	function (a, b) {
		return {stopPropagation: a, preventDefault: b};
	});
var _elm_lang$virtual_dom$VirtualDom$Node = {ctor: 'Node'};
var _elm_lang$virtual_dom$VirtualDom$Property = {ctor: 'Property'};

var _elm_lang$html$Html$programWithFlags = _elm_lang$virtual_dom$VirtualDom$programWithFlags;
var _elm_lang$html$Html$program = _elm_lang$virtual_dom$VirtualDom$program;
var _elm_lang$html$Html$beginnerProgram = function (_p0) {
	var _p1 = _p0;
	return _elm_lang$html$Html$program(
		{
			init: A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_p1.model,
				{ctor: '[]'}),
			update: F2(
				function (msg, model) {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						A2(_p1.update, msg, model),
						{ctor: '[]'});
				}),
			view: _p1.view,
			subscriptions: function (_p2) {
				return _elm_lang$core$Platform_Sub$none;
			}
		});
};
var _elm_lang$html$Html$map = _elm_lang$virtual_dom$VirtualDom$map;
var _elm_lang$html$Html$text = _elm_lang$virtual_dom$VirtualDom$text;
var _elm_lang$html$Html$node = _elm_lang$virtual_dom$VirtualDom$node;
var _elm_lang$html$Html$body = _elm_lang$html$Html$node('body');
var _elm_lang$html$Html$section = _elm_lang$html$Html$node('section');
var _elm_lang$html$Html$nav = _elm_lang$html$Html$node('nav');
var _elm_lang$html$Html$article = _elm_lang$html$Html$node('article');
var _elm_lang$html$Html$aside = _elm_lang$html$Html$node('aside');
var _elm_lang$html$Html$h1 = _elm_lang$html$Html$node('h1');
var _elm_lang$html$Html$h2 = _elm_lang$html$Html$node('h2');
var _elm_lang$html$Html$h3 = _elm_lang$html$Html$node('h3');
var _elm_lang$html$Html$h4 = _elm_lang$html$Html$node('h4');
var _elm_lang$html$Html$h5 = _elm_lang$html$Html$node('h5');
var _elm_lang$html$Html$h6 = _elm_lang$html$Html$node('h6');
var _elm_lang$html$Html$header = _elm_lang$html$Html$node('header');
var _elm_lang$html$Html$footer = _elm_lang$html$Html$node('footer');
var _elm_lang$html$Html$address = _elm_lang$html$Html$node('address');
var _elm_lang$html$Html$main_ = _elm_lang$html$Html$node('main');
var _elm_lang$html$Html$p = _elm_lang$html$Html$node('p');
var _elm_lang$html$Html$hr = _elm_lang$html$Html$node('hr');
var _elm_lang$html$Html$pre = _elm_lang$html$Html$node('pre');
var _elm_lang$html$Html$blockquote = _elm_lang$html$Html$node('blockquote');
var _elm_lang$html$Html$ol = _elm_lang$html$Html$node('ol');
var _elm_lang$html$Html$ul = _elm_lang$html$Html$node('ul');
var _elm_lang$html$Html$li = _elm_lang$html$Html$node('li');
var _elm_lang$html$Html$dl = _elm_lang$html$Html$node('dl');
var _elm_lang$html$Html$dt = _elm_lang$html$Html$node('dt');
var _elm_lang$html$Html$dd = _elm_lang$html$Html$node('dd');
var _elm_lang$html$Html$figure = _elm_lang$html$Html$node('figure');
var _elm_lang$html$Html$figcaption = _elm_lang$html$Html$node('figcaption');
var _elm_lang$html$Html$div = _elm_lang$html$Html$node('div');
var _elm_lang$html$Html$a = _elm_lang$html$Html$node('a');
var _elm_lang$html$Html$em = _elm_lang$html$Html$node('em');
var _elm_lang$html$Html$strong = _elm_lang$html$Html$node('strong');
var _elm_lang$html$Html$small = _elm_lang$html$Html$node('small');
var _elm_lang$html$Html$s = _elm_lang$html$Html$node('s');
var _elm_lang$html$Html$cite = _elm_lang$html$Html$node('cite');
var _elm_lang$html$Html$q = _elm_lang$html$Html$node('q');
var _elm_lang$html$Html$dfn = _elm_lang$html$Html$node('dfn');
var _elm_lang$html$Html$abbr = _elm_lang$html$Html$node('abbr');
var _elm_lang$html$Html$time = _elm_lang$html$Html$node('time');
var _elm_lang$html$Html$code = _elm_lang$html$Html$node('code');
var _elm_lang$html$Html$var = _elm_lang$html$Html$node('var');
var _elm_lang$html$Html$samp = _elm_lang$html$Html$node('samp');
var _elm_lang$html$Html$kbd = _elm_lang$html$Html$node('kbd');
var _elm_lang$html$Html$sub = _elm_lang$html$Html$node('sub');
var _elm_lang$html$Html$sup = _elm_lang$html$Html$node('sup');
var _elm_lang$html$Html$i = _elm_lang$html$Html$node('i');
var _elm_lang$html$Html$b = _elm_lang$html$Html$node('b');
var _elm_lang$html$Html$u = _elm_lang$html$Html$node('u');
var _elm_lang$html$Html$mark = _elm_lang$html$Html$node('mark');
var _elm_lang$html$Html$ruby = _elm_lang$html$Html$node('ruby');
var _elm_lang$html$Html$rt = _elm_lang$html$Html$node('rt');
var _elm_lang$html$Html$rp = _elm_lang$html$Html$node('rp');
var _elm_lang$html$Html$bdi = _elm_lang$html$Html$node('bdi');
var _elm_lang$html$Html$bdo = _elm_lang$html$Html$node('bdo');
var _elm_lang$html$Html$span = _elm_lang$html$Html$node('span');
var _elm_lang$html$Html$br = _elm_lang$html$Html$node('br');
var _elm_lang$html$Html$wbr = _elm_lang$html$Html$node('wbr');
var _elm_lang$html$Html$ins = _elm_lang$html$Html$node('ins');
var _elm_lang$html$Html$del = _elm_lang$html$Html$node('del');
var _elm_lang$html$Html$img = _elm_lang$html$Html$node('img');
var _elm_lang$html$Html$iframe = _elm_lang$html$Html$node('iframe');
var _elm_lang$html$Html$embed = _elm_lang$html$Html$node('embed');
var _elm_lang$html$Html$object = _elm_lang$html$Html$node('object');
var _elm_lang$html$Html$param = _elm_lang$html$Html$node('param');
var _elm_lang$html$Html$video = _elm_lang$html$Html$node('video');
var _elm_lang$html$Html$audio = _elm_lang$html$Html$node('audio');
var _elm_lang$html$Html$source = _elm_lang$html$Html$node('source');
var _elm_lang$html$Html$track = _elm_lang$html$Html$node('track');
var _elm_lang$html$Html$canvas = _elm_lang$html$Html$node('canvas');
var _elm_lang$html$Html$math = _elm_lang$html$Html$node('math');
var _elm_lang$html$Html$table = _elm_lang$html$Html$node('table');
var _elm_lang$html$Html$caption = _elm_lang$html$Html$node('caption');
var _elm_lang$html$Html$colgroup = _elm_lang$html$Html$node('colgroup');
var _elm_lang$html$Html$col = _elm_lang$html$Html$node('col');
var _elm_lang$html$Html$tbody = _elm_lang$html$Html$node('tbody');
var _elm_lang$html$Html$thead = _elm_lang$html$Html$node('thead');
var _elm_lang$html$Html$tfoot = _elm_lang$html$Html$node('tfoot');
var _elm_lang$html$Html$tr = _elm_lang$html$Html$node('tr');
var _elm_lang$html$Html$td = _elm_lang$html$Html$node('td');
var _elm_lang$html$Html$th = _elm_lang$html$Html$node('th');
var _elm_lang$html$Html$form = _elm_lang$html$Html$node('form');
var _elm_lang$html$Html$fieldset = _elm_lang$html$Html$node('fieldset');
var _elm_lang$html$Html$legend = _elm_lang$html$Html$node('legend');
var _elm_lang$html$Html$label = _elm_lang$html$Html$node('label');
var _elm_lang$html$Html$input = _elm_lang$html$Html$node('input');
var _elm_lang$html$Html$button = _elm_lang$html$Html$node('button');
var _elm_lang$html$Html$select = _elm_lang$html$Html$node('select');
var _elm_lang$html$Html$datalist = _elm_lang$html$Html$node('datalist');
var _elm_lang$html$Html$optgroup = _elm_lang$html$Html$node('optgroup');
var _elm_lang$html$Html$option = _elm_lang$html$Html$node('option');
var _elm_lang$html$Html$textarea = _elm_lang$html$Html$node('textarea');
var _elm_lang$html$Html$keygen = _elm_lang$html$Html$node('keygen');
var _elm_lang$html$Html$output = _elm_lang$html$Html$node('output');
var _elm_lang$html$Html$progress = _elm_lang$html$Html$node('progress');
var _elm_lang$html$Html$meter = _elm_lang$html$Html$node('meter');
var _elm_lang$html$Html$details = _elm_lang$html$Html$node('details');
var _elm_lang$html$Html$summary = _elm_lang$html$Html$node('summary');
var _elm_lang$html$Html$menuitem = _elm_lang$html$Html$node('menuitem');
var _elm_lang$html$Html$menu = _elm_lang$html$Html$node('menu');

var _elm_lang$html$Html_Attributes$map = _elm_lang$virtual_dom$VirtualDom$mapProperty;
var _elm_lang$html$Html_Attributes$attribute = _elm_lang$virtual_dom$VirtualDom$attribute;
var _elm_lang$html$Html_Attributes$contextmenu = function (value) {
	return A2(_elm_lang$html$Html_Attributes$attribute, 'contextmenu', value);
};
var _elm_lang$html$Html_Attributes$draggable = function (value) {
	return A2(_elm_lang$html$Html_Attributes$attribute, 'draggable', value);
};
var _elm_lang$html$Html_Attributes$itemprop = function (value) {
	return A2(_elm_lang$html$Html_Attributes$attribute, 'itemprop', value);
};
var _elm_lang$html$Html_Attributes$tabindex = function (n) {
	return A2(
		_elm_lang$html$Html_Attributes$attribute,
		'tabIndex',
		_elm_lang$core$Basics$toString(n));
};
var _elm_lang$html$Html_Attributes$charset = function (value) {
	return A2(_elm_lang$html$Html_Attributes$attribute, 'charset', value);
};
var _elm_lang$html$Html_Attributes$height = function (value) {
	return A2(
		_elm_lang$html$Html_Attributes$attribute,
		'height',
		_elm_lang$core$Basics$toString(value));
};
var _elm_lang$html$Html_Attributes$width = function (value) {
	return A2(
		_elm_lang$html$Html_Attributes$attribute,
		'width',
		_elm_lang$core$Basics$toString(value));
};
var _elm_lang$html$Html_Attributes$formaction = function (value) {
	return A2(_elm_lang$html$Html_Attributes$attribute, 'formAction', value);
};
var _elm_lang$html$Html_Attributes$list = function (value) {
	return A2(_elm_lang$html$Html_Attributes$attribute, 'list', value);
};
var _elm_lang$html$Html_Attributes$minlength = function (n) {
	return A2(
		_elm_lang$html$Html_Attributes$attribute,
		'minLength',
		_elm_lang$core$Basics$toString(n));
};
var _elm_lang$html$Html_Attributes$maxlength = function (n) {
	return A2(
		_elm_lang$html$Html_Attributes$attribute,
		'maxlength',
		_elm_lang$core$Basics$toString(n));
};
var _elm_lang$html$Html_Attributes$size = function (n) {
	return A2(
		_elm_lang$html$Html_Attributes$attribute,
		'size',
		_elm_lang$core$Basics$toString(n));
};
var _elm_lang$html$Html_Attributes$form = function (value) {
	return A2(_elm_lang$html$Html_Attributes$attribute, 'form', value);
};
var _elm_lang$html$Html_Attributes$cols = function (n) {
	return A2(
		_elm_lang$html$Html_Attributes$attribute,
		'cols',
		_elm_lang$core$Basics$toString(n));
};
var _elm_lang$html$Html_Attributes$rows = function (n) {
	return A2(
		_elm_lang$html$Html_Attributes$attribute,
		'rows',
		_elm_lang$core$Basics$toString(n));
};
var _elm_lang$html$Html_Attributes$challenge = function (value) {
	return A2(_elm_lang$html$Html_Attributes$attribute, 'challenge', value);
};
var _elm_lang$html$Html_Attributes$media = function (value) {
	return A2(_elm_lang$html$Html_Attributes$attribute, 'media', value);
};
var _elm_lang$html$Html_Attributes$rel = function (value) {
	return A2(_elm_lang$html$Html_Attributes$attribute, 'rel', value);
};
var _elm_lang$html$Html_Attributes$datetime = function (value) {
	return A2(_elm_lang$html$Html_Attributes$attribute, 'datetime', value);
};
var _elm_lang$html$Html_Attributes$pubdate = function (value) {
	return A2(_elm_lang$html$Html_Attributes$attribute, 'pubdate', value);
};
var _elm_lang$html$Html_Attributes$colspan = function (n) {
	return A2(
		_elm_lang$html$Html_Attributes$attribute,
		'colspan',
		_elm_lang$core$Basics$toString(n));
};
var _elm_lang$html$Html_Attributes$rowspan = function (n) {
	return A2(
		_elm_lang$html$Html_Attributes$attribute,
		'rowspan',
		_elm_lang$core$Basics$toString(n));
};
var _elm_lang$html$Html_Attributes$manifest = function (value) {
	return A2(_elm_lang$html$Html_Attributes$attribute, 'manifest', value);
};
var _elm_lang$html$Html_Attributes$property = _elm_lang$virtual_dom$VirtualDom$property;
var _elm_lang$html$Html_Attributes$stringProperty = F2(
	function (name, string) {
		return A2(
			_elm_lang$html$Html_Attributes$property,
			name,
			_elm_lang$core$Json_Encode$string(string));
	});
var _elm_lang$html$Html_Attributes$class = function (name) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'className', name);
};
var _elm_lang$html$Html_Attributes$id = function (name) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'id', name);
};
var _elm_lang$html$Html_Attributes$title = function (name) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'title', name);
};
var _elm_lang$html$Html_Attributes$accesskey = function ($char) {
	return A2(
		_elm_lang$html$Html_Attributes$stringProperty,
		'accessKey',
		_elm_lang$core$String$fromChar($char));
};
var _elm_lang$html$Html_Attributes$dir = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'dir', value);
};
var _elm_lang$html$Html_Attributes$dropzone = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'dropzone', value);
};
var _elm_lang$html$Html_Attributes$lang = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'lang', value);
};
var _elm_lang$html$Html_Attributes$content = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'content', value);
};
var _elm_lang$html$Html_Attributes$httpEquiv = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'httpEquiv', value);
};
var _elm_lang$html$Html_Attributes$language = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'language', value);
};
var _elm_lang$html$Html_Attributes$src = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'src', value);
};
var _elm_lang$html$Html_Attributes$alt = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'alt', value);
};
var _elm_lang$html$Html_Attributes$preload = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'preload', value);
};
var _elm_lang$html$Html_Attributes$poster = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'poster', value);
};
var _elm_lang$html$Html_Attributes$kind = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'kind', value);
};
var _elm_lang$html$Html_Attributes$srclang = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'srclang', value);
};
var _elm_lang$html$Html_Attributes$sandbox = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'sandbox', value);
};
var _elm_lang$html$Html_Attributes$srcdoc = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'srcdoc', value);
};
var _elm_lang$html$Html_Attributes$type_ = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'type', value);
};
var _elm_lang$html$Html_Attributes$value = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'value', value);
};
var _elm_lang$html$Html_Attributes$defaultValue = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'defaultValue', value);
};
var _elm_lang$html$Html_Attributes$placeholder = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'placeholder', value);
};
var _elm_lang$html$Html_Attributes$accept = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'accept', value);
};
var _elm_lang$html$Html_Attributes$acceptCharset = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'acceptCharset', value);
};
var _elm_lang$html$Html_Attributes$action = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'action', value);
};
var _elm_lang$html$Html_Attributes$autocomplete = function (bool) {
	return A2(
		_elm_lang$html$Html_Attributes$stringProperty,
		'autocomplete',
		bool ? 'on' : 'off');
};
var _elm_lang$html$Html_Attributes$enctype = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'enctype', value);
};
var _elm_lang$html$Html_Attributes$method = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'method', value);
};
var _elm_lang$html$Html_Attributes$name = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'name', value);
};
var _elm_lang$html$Html_Attributes$pattern = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'pattern', value);
};
var _elm_lang$html$Html_Attributes$for = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'htmlFor', value);
};
var _elm_lang$html$Html_Attributes$max = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'max', value);
};
var _elm_lang$html$Html_Attributes$min = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'min', value);
};
var _elm_lang$html$Html_Attributes$step = function (n) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'step', n);
};
var _elm_lang$html$Html_Attributes$wrap = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'wrap', value);
};
var _elm_lang$html$Html_Attributes$usemap = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'useMap', value);
};
var _elm_lang$html$Html_Attributes$shape = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'shape', value);
};
var _elm_lang$html$Html_Attributes$coords = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'coords', value);
};
var _elm_lang$html$Html_Attributes$keytype = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'keytype', value);
};
var _elm_lang$html$Html_Attributes$align = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'align', value);
};
var _elm_lang$html$Html_Attributes$cite = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'cite', value);
};
var _elm_lang$html$Html_Attributes$href = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'href', value);
};
var _elm_lang$html$Html_Attributes$target = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'target', value);
};
var _elm_lang$html$Html_Attributes$downloadAs = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'download', value);
};
var _elm_lang$html$Html_Attributes$hreflang = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'hreflang', value);
};
var _elm_lang$html$Html_Attributes$ping = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'ping', value);
};
var _elm_lang$html$Html_Attributes$start = function (n) {
	return A2(
		_elm_lang$html$Html_Attributes$stringProperty,
		'start',
		_elm_lang$core$Basics$toString(n));
};
var _elm_lang$html$Html_Attributes$headers = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'headers', value);
};
var _elm_lang$html$Html_Attributes$scope = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'scope', value);
};
var _elm_lang$html$Html_Attributes$boolProperty = F2(
	function (name, bool) {
		return A2(
			_elm_lang$html$Html_Attributes$property,
			name,
			_elm_lang$core$Json_Encode$bool(bool));
	});
var _elm_lang$html$Html_Attributes$hidden = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'hidden', bool);
};
var _elm_lang$html$Html_Attributes$contenteditable = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'contentEditable', bool);
};
var _elm_lang$html$Html_Attributes$spellcheck = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'spellcheck', bool);
};
var _elm_lang$html$Html_Attributes$async = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'async', bool);
};
var _elm_lang$html$Html_Attributes$defer = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'defer', bool);
};
var _elm_lang$html$Html_Attributes$scoped = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'scoped', bool);
};
var _elm_lang$html$Html_Attributes$autoplay = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'autoplay', bool);
};
var _elm_lang$html$Html_Attributes$controls = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'controls', bool);
};
var _elm_lang$html$Html_Attributes$loop = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'loop', bool);
};
var _elm_lang$html$Html_Attributes$default = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'default', bool);
};
var _elm_lang$html$Html_Attributes$seamless = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'seamless', bool);
};
var _elm_lang$html$Html_Attributes$checked = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'checked', bool);
};
var _elm_lang$html$Html_Attributes$selected = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'selected', bool);
};
var _elm_lang$html$Html_Attributes$autofocus = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'autofocus', bool);
};
var _elm_lang$html$Html_Attributes$disabled = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'disabled', bool);
};
var _elm_lang$html$Html_Attributes$multiple = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'multiple', bool);
};
var _elm_lang$html$Html_Attributes$novalidate = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'noValidate', bool);
};
var _elm_lang$html$Html_Attributes$readonly = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'readOnly', bool);
};
var _elm_lang$html$Html_Attributes$required = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'required', bool);
};
var _elm_lang$html$Html_Attributes$ismap = function (value) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'isMap', value);
};
var _elm_lang$html$Html_Attributes$download = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'download', bool);
};
var _elm_lang$html$Html_Attributes$reversed = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'reversed', bool);
};
var _elm_lang$html$Html_Attributes$classList = function (list) {
	return _elm_lang$html$Html_Attributes$class(
		A2(
			_elm_lang$core$String$join,
			' ',
			A2(
				_elm_lang$core$List$map,
				_elm_lang$core$Tuple$first,
				A2(_elm_lang$core$List$filter, _elm_lang$core$Tuple$second, list))));
};
var _elm_lang$html$Html_Attributes$style = _elm_lang$virtual_dom$VirtualDom$style;

var _Fresheyeball$elm_font_awesome$FontAwesome_Util$class = function (s) {
	return A2(_elm_lang$core$Basics_ops['++'], 'fa fa-', s);
};
var _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon = function (s) {
	return A2(
		_elm_lang$html$Html$i,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class(
				_Fresheyeball$elm_font_awesome$FontAwesome_Util$class(s)),
			_1: {ctor: '[]'}
		},
		{ctor: '[]'});
};

var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$wrench = 'wrench';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$wifi = 'wifi';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$wheelchair_alt = 'wheelchair-alt';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$wheelchair = 'wheelchair';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$warning = 'warning';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$volume_up = 'volume-up';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$volume_off = 'volume-off';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$volume_down = 'volume-down';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$volume_control_phone = 'volume-control-phone';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$video_camera = 'video-camera';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$users = 'users';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$user_times = 'user-times';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$user_secret = 'user-secret';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$user_plus = 'user-plus';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$user = 'user';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$upload = 'upload';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$unsorted = 'unsorted';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$unlock_alt = 'unlock-alt';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$unlock = 'unlock';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$university = 'university';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$universal_access = 'universal-access';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$umbrella = 'umbrella';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$tv = 'tv';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$tty = 'tty';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$truck = 'truck';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$trophy = 'trophy';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$tree = 'tree';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$trash_o = 'trash-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$trash = 'trash';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$trademark = 'trademark';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$toggle_up = 'toggle-up';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$toggle_right = 'toggle-right';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$toggle_on = 'toggle-on';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$toggle_off = 'toggle-off';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$toggle_left = 'toggle-left';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$toggle_down = 'toggle-down';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$tint = 'tint';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$times_circle_o = 'times-circle-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$times_circle = 'times-circle';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$times = 'times';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$ticket = 'ticket';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$thumbs_up = 'thumbs-up';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$thumbs_o_up = 'thumbs-o-up';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$thumbs_o_down = 'thumbs-o-down';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$thumbs_down = 'thumbs-down';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$thumb_tack = 'thumb-tack';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$terminal = 'terminal';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$television = 'television';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$taxi = 'taxi';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$tasks = 'tasks';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$tags = 'tags';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$tag = 'tag';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$tachometer = 'tachometer';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$tablet = 'tablet';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$support = 'support';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sun_o = 'sun-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$suitcase = 'suitcase';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$street_view = 'street-view';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sticky_note_o = 'sticky-note-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sticky_note = 'sticky-note';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$star_o = 'star-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$star_half_o = 'star-half-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$star_half_full = 'star-half-full';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$star_half_empty = 'star-half-empty';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$star_half = 'star-half';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$star = 'star';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$square_o = 'square-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$square = 'square';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$spoon = 'spoon';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$spinner = 'spinner';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$space_shuttle = 'space-shuttle';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sort_up = 'sort-up';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sort_numeric_desc = 'sort-numeric-desc';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sort_numeric_asc = 'sort-numeric-asc';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sort_down = 'sort-down';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sort_desc = 'sort-desc';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sort_asc = 'sort-asc';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sort_amount_desc = 'sort-amount-desc';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sort_amount_asc = 'sort-amount-asc';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sort_alpha_desc = 'sort-alpha-desc';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sort_alpha_asc = 'sort-alpha-asc';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sort = 'sort';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$soccer_ball_o = 'soccer-ball-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$smile_o = 'smile-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sliders = 'sliders';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sitemap = 'sitemap';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$signing = 'signing';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$signal = 'signal';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sign_out = 'sign-out';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sign_language = 'sign-language';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sign_in = 'sign-in';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$shopping_cart = 'shopping-cart';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$shopping_basket = 'shopping-basket';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$shopping_bag = 'shopping-bag';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$ship = 'ship';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$shield = 'shield';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$share_square_o = 'share-square-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$share_square = 'share-square';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$share_alt_square = 'share-alt-square';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$share_alt = 'share-alt';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$share = 'share';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$server = 'server';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$send_o = 'send-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$send = 'send';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$search_plus = 'search-plus';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$search_minus = 'search-minus';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$search = 'search';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$rss_square = 'rss-square';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$rss = 'rss';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$rocket = 'rocket';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$road = 'road';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$retweet = 'retweet';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$reply_all = 'reply-all';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$reply = 'reply';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$reorder = 'reorder';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$remove = 'remove';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$registered = 'registered';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$refresh = 'refresh';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$recycle = 'recycle';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$random = 'random';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$quote_right = 'quote-right';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$quote_left = 'quote-left';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$question_circle_o = 'question-circle-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$question_circle = 'question-circle';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$question = 'question';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$qrcode = 'qrcode';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$puzzle_piece = 'puzzle-piece';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$print = 'print';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$power_off = 'power-off';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$plus_square_o = 'plus-square-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$plus_square = 'plus-square';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$plus_circle = 'plus-circle';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$plus = 'plus';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$plug = 'plug';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$plane = 'plane';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$pie_chart = 'pie-chart';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$picture_o = 'picture-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$photo = 'photo';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$phone_square = 'phone-square';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$phone = 'phone';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$percent = 'percent';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$pencil_square_o = 'pencil-square-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$pencil_square = 'pencil-square';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$pencil = 'pencil';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$paw = 'paw';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$paper_plane_o = 'paper-plane-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$paper_plane = 'paper-plane';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$paint_brush = 'paint-brush';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$object_ungroup = 'object-ungroup';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$object_group = 'object-group';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$newspaper_o = 'newspaper-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$navicon = 'navicon';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$music = 'music';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$mouse_pointer = 'mouse-pointer';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$motorcycle = 'motorcycle';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$mortar_board = 'mortar-board';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$moon_o = 'moon-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$money = 'money';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$mobile_phone = 'mobile-phone';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$mobile = 'mobile';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$minus_square_o = 'minus-square-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$minus_square = 'minus-square';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$minus_circle = 'minus-circle';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$minus = 'minus';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$microphone_slash = 'microphone-slash';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$microphone = 'microphone';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$meh_o = 'meh-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$map_signs = 'map-signs';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$map_pin = 'map-pin';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$map_o = 'map-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$map_marker = 'map-marker';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$map = 'map';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$male = 'male';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$mail_reply_all = 'mail-reply-all';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$mail_reply = 'mail-reply';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$mail_forward = 'mail-forward';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$magnet = 'magnet';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$magic = 'magic';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$low_vision = 'low-vision';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$lock = 'lock';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$location_arrow = 'location-arrow';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$line_chart = 'line-chart';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$lightbulb_o = 'lightbulb-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$life_saver = 'life-saver';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$life_ring = 'life-ring';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$life_buoy = 'life-buoy';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$life_bouy = 'life-bouy';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$level_up = 'level-up';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$level_down = 'level-down';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$lemon_o = 'lemon-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$legal = 'legal';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$leaf = 'leaf';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$laptop = 'laptop';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$language = 'language';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$keyboard_o = 'keyboard-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$key = 'key';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$institution = 'institution';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$info_circle = 'info-circle';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$info = 'info';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$industry = 'industry';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$inbox = 'inbox';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$image = 'image';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$i_cursor = 'i-cursor';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hourglass_start = 'hourglass-start';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hourglass_o = 'hourglass-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hourglass_half = 'hourglass-half';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hourglass_end = 'hourglass-end';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hourglass_3 = 'hourglass-3';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hourglass_2 = 'hourglass-2';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hourglass_1 = 'hourglass-1';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hourglass = 'hourglass';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hotel = 'hotel';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$home = 'home';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$history = 'history';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$heartbeat = 'heartbeat';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$heart_o = 'heart-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$heart = 'heart';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$headphones = 'headphones';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hdd_o = 'hdd-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hashtag = 'hashtag';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hard_of_hearing = 'hard-of-hearing';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hand_stop_o = 'hand-stop-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hand_spock_o = 'hand-spock-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hand_scissors_o = 'hand-scissors-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hand_rock_o = 'hand-rock-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hand_pointer_o = 'hand-pointer-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hand_peace_o = 'hand-peace-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hand_paper_o = 'hand-paper-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hand_lizard_o = 'hand-lizard-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hand_grab_o = 'hand-grab-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$group = 'group';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$graduation_cap = 'graduation-cap';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$globe = 'globe';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$glass = 'glass';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$gift = 'gift';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$gears = 'gears';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$gear = 'gear';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$gavel = 'gavel';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$gamepad = 'gamepad';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$futbol_o = 'futbol-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$frown_o = 'frown-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$folder_open_o = 'folder-open-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$folder_open = 'folder-open';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$folder_o = 'folder-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$folder = 'folder';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$flask = 'flask';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$flash = 'flash';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$flag_o = 'flag-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$flag_checkered = 'flag-checkered';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$flag = 'flag';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$fire_extinguisher = 'fire-extinguisher';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$fire = 'fire';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$filter = 'filter';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$film = 'film';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_zip_o = 'file-zip-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_word_o = 'file-word-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_video_o = 'file-video-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_sound_o = 'file-sound-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_powerpoint_o = 'file-powerpoint-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_picture_o = 'file-picture-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_photo_o = 'file-photo-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_pdf_o = 'file-pdf-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_movie_o = 'file-movie-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_image_o = 'file-image-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_excel_o = 'file-excel-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_code_o = 'file-code-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_audio_o = 'file-audio-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_archive_o = 'file-archive-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$fighter_jet = 'fighter-jet';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$female = 'female';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$feed = 'feed';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$fax = 'fax';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$eyedropper = 'eyedropper';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$eye_slash = 'eye-slash';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$eye = 'eye';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$external_link_square = 'external-link-square';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$external_link = 'external-link';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$exclamation_triangle = 'exclamation-triangle';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$exclamation_circle = 'exclamation-circle';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$exclamation = 'exclamation';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$exchange = 'exchange';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$eraser = 'eraser';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$envelope_square = 'envelope-square';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$envelope_o = 'envelope-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$envelope = 'envelope';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$ellipsis_v = 'ellipsis-v';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$ellipsis_h = 'ellipsis-h';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$edit = 'edit';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$download = 'download';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$dot_circle_o = 'dot-circle-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$diamond = 'diamond';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$desktop = 'desktop';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$deafness = 'deafness';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$deaf = 'deaf';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$database = 'database';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$dashboard = 'dashboard';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$cutlery = 'cutlery';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$cubes = 'cubes';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$cube = 'cube';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$crosshairs = 'crosshairs';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$crop = 'crop';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$credit_card_alt = 'credit-card-alt';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$credit_card = 'credit-card';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$creative_commons = 'creative-commons';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$copyright = 'copyright';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$compass = 'compass';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$comments_o = 'comments-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$comments = 'comments';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$commenting_o = 'commenting-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$commenting = 'commenting';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$comment_o = 'comment-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$comment = 'comment';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$cogs = 'cogs';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$cog = 'cog';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$coffee = 'coffee';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$code_fork = 'code-fork';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$code = 'code';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$cloud_upload = 'cloud-upload';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$cloud_download = 'cloud-download';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$cloud = 'cloud';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$close = 'close';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$clone = 'clone';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$clock_o = 'clock-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$circle_thin = 'circle-thin';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$circle_o_notch = 'circle-o-notch';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$circle_o = 'circle-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$circle = 'circle';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$child = 'child';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$check_square_o = 'check-square-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$check_square = 'check-square';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$check_circle_o = 'check-circle-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$check_circle = 'check-circle';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$check = 'check';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$certificate = 'certificate';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$cc = 'cc';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$cart_plus = 'cart-plus';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$cart_arrow_down = 'cart-arrow-down';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$caret_square_o_up = 'caret-square-o-up';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$caret_square_o_right = 'caret-square-o-right';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$caret_square_o_left = 'caret-square-o-left';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$caret_square_o_down = 'caret-square-o-down';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$car = 'car';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$camera_retro = 'camera-retro';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$camera = 'camera';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$calendar_times_o = 'calendar-times-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$calendar_plus_o = 'calendar-plus-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$calendar_o = 'calendar-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$calendar_minus_o = 'calendar-minus-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$calendar_check_o = 'calendar-check-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$calendar = 'calendar';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$calculator = 'calculator';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$cab = 'cab';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bus = 'bus';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bullseye = 'bullseye';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bullhorn = 'bullhorn';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$building_o = 'building-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$building = 'building';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bug = 'bug';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$briefcase = 'briefcase';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$braille = 'braille';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bookmark_o = 'bookmark-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bookmark = 'bookmark';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$book = 'book';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bomb = 'bomb';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bolt = 'bolt';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bluetooth_b = 'bluetooth-b';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bluetooth = 'bluetooth';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$blind = 'blind';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$birthday_cake = 'birthday-cake';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$binoculars = 'binoculars';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bicycle = 'bicycle';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bell_slash_o = 'bell-slash-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bell_slash = 'bell-slash';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bell_o = 'bell-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bell = 'bell';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$beer = 'beer';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bed = 'bed';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$battery_three_quarters = 'battery-three-quarters';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$battery_quarter = 'battery-quarter';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$battery_half = 'battery-half';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$battery_full = 'battery-full';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$battery_empty = 'battery-empty';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$battery_4 = 'battery-4';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$battery_3 = 'battery-3';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$battery_2 = 'battery-2';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$battery_1 = 'battery-1';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$battery_0 = 'battery-0';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bars = 'bars';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$barcode = 'barcode';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bar_chart_o = 'bar-chart-o';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bar_chart = 'bar-chart';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bank = 'bank';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$ban = 'ban';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$balance_scale = 'balance-scale';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$automobile = 'automobile';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$audio_description = 'audio-description';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$at = 'at';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$asterisk = 'asterisk';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$assistive_listening_systems = 'assistive-listening-systems';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$asl_interpreting = 'asl-interpreting';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$arrows_v = 'arrows-v';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$arrows_h = 'arrows-h';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$arrows = 'arrows';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$area_chart = 'area-chart';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$archive = 'archive';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$anchor = 'anchor';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$american_sign_language_interpreting = 'american-sign-language-interpreting';
var _Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$adjust = 'adjust';

var _Fresheyeball$elm_font_awesome$FontAwesome_Web$wrench = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$wrench);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$wifi = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$wifi);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$wheelchair_alt = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$wheelchair_alt);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$wheelchair = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$wheelchair);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$warning = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$warning);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$volume_up = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$volume_up);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$volume_off = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$volume_off);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$volume_down = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$volume_down);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$volume_control_phone = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$volume_control_phone);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$video_camera = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$video_camera);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$users = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$users);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$user_times = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$user_times);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$user_secret = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$user_secret);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$user_plus = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$user_plus);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$user = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$user);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$upload = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$upload);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$unsorted = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$unsorted);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$unlock_alt = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$unlock_alt);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$unlock = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$unlock);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$university = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$university);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$universal_access = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$universal_access);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$umbrella = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$umbrella);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$tv = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$tv);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$tty = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$tty);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$truck = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$truck);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$trophy = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$trophy);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$tree = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$tree);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$trash_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$trash_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$trash = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$trash);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$trademark = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$trademark);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$toggle_up = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$toggle_up);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$toggle_right = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$toggle_right);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$toggle_on = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$toggle_on);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$toggle_off = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$toggle_off);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$toggle_left = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$toggle_left);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$toggle_down = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$toggle_down);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$tint = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$tint);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$times_circle_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$times_circle_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$times_circle = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$times_circle);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$times = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$times);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$ticket = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$ticket);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$thumbs_up = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$thumbs_up);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$thumbs_o_up = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$thumbs_o_up);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$thumbs_o_down = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$thumbs_o_down);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$thumbs_down = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$thumbs_down);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$thumb_tack = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$thumb_tack);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$terminal = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$terminal);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$television = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$television);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$taxi = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$taxi);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$tasks = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$tasks);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$tags = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$tags);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$tag = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$tag);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$tachometer = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$tachometer);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$tablet = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$tablet);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$support = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$support);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$sun_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sun_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$suitcase = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$suitcase);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$street_view = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$street_view);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$sticky_note_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sticky_note_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$sticky_note = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sticky_note);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$star_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$star_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$star_half_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$star_half_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$star_half_full = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$star_half_full);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$star_half_empty = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$star_half_empty);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$star_half = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$star_half);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$star = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$star);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$square_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$square_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$square = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$square);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$spoon = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$spoon);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$spinner = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$spinner);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$space_shuttle = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$space_shuttle);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$sort_up = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sort_up);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$sort_numeric_desc = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sort_numeric_desc);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$sort_numeric_asc = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sort_numeric_asc);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$sort_down = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sort_down);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$sort_desc = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sort_desc);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$sort_asc = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sort_asc);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$sort_amount_desc = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sort_amount_desc);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$sort_amount_asc = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sort_amount_asc);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$sort_alpha_desc = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sort_alpha_desc);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$sort_alpha_asc = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sort_alpha_asc);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$sort = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sort);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$soccer_ball_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$soccer_ball_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$smile_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$smile_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$sliders = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sliders);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$sitemap = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sitemap);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$signing = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$signing);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$signal = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$signal);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$sign_out = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sign_out);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$sign_language = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sign_language);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$sign_in = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$sign_in);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$shopping_cart = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$shopping_cart);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$shopping_basket = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$shopping_basket);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$shopping_bag = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$shopping_bag);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$ship = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$ship);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$shield = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$shield);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$share_square_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$share_square_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$share_square = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$share_square);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$share_alt_square = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$share_alt_square);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$share_alt = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$share_alt);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$share = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$share);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$server = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$server);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$send_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$send_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$send = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$send);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$search_plus = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$search_plus);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$search_minus = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$search_minus);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$search = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$search);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$rss_square = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$rss_square);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$rss = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$rss);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$rocket = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$rocket);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$road = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$road);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$retweet = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$retweet);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$reply_all = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$reply_all);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$reply = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$reply);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$reorder = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$reorder);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$remove = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$remove);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$registered = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$registered);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$refresh = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$refresh);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$recycle = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$recycle);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$random = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$random);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$quote_right = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$quote_right);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$quote_left = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$quote_left);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$question_circle_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$question_circle_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$question_circle = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$question_circle);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$question = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$question);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$qrcode = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$qrcode);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$puzzle_piece = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$puzzle_piece);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$print = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$print);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$power_off = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$power_off);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$plus_square_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$plus_square_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$plus_square = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$plus_square);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$plus_circle = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$plus_circle);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$plus = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$plus);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$plug = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$plug);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$plane = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$plane);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$pie_chart = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$pie_chart);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$picture_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$picture_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$photo = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$photo);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$phone_square = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$phone_square);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$phone = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$phone);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$percent = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$percent);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$pencil_square_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$pencil_square_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$pencil_square = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$pencil_square);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$pencil = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$pencil);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$paw = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$paw);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$paper_plane_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$paper_plane_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$paper_plane = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$paper_plane);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$paint_brush = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$paint_brush);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$object_ungroup = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$object_ungroup);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$object_group = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$object_group);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$newspaper_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$newspaper_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$navicon = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$navicon);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$music = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$music);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$mouse_pointer = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$mouse_pointer);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$motorcycle = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$motorcycle);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$mortar_board = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$mortar_board);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$moon_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$moon_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$money = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$money);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$mobile_phone = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$mobile_phone);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$mobile = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$mobile);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$minus_square_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$minus_square_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$minus_square = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$minus_square);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$minus_circle = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$minus_circle);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$minus = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$minus);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$microphone_slash = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$microphone_slash);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$microphone = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$microphone);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$meh_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$meh_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$map_signs = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$map_signs);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$map_pin = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$map_pin);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$map_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$map_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$map_marker = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$map_marker);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$map = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$map);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$male = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$male);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$mail_reply_all = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$mail_reply_all);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$mail_reply = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$mail_reply);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$mail_forward = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$mail_forward);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$magnet = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$magnet);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$magic = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$magic);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$low_vision = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$low_vision);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$lock = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$lock);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$location_arrow = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$location_arrow);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$line_chart = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$line_chart);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$lightbulb_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$lightbulb_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$life_saver = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$life_saver);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$life_ring = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$life_ring);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$life_buoy = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$life_buoy);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$life_bouy = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$life_bouy);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$level_up = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$level_up);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$level_down = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$level_down);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$lemon_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$lemon_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$legal = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$legal);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$leaf = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$leaf);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$laptop = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$laptop);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$language = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$language);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$keyboard_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$keyboard_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$key = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$key);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$institution = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$institution);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$info_circle = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$info_circle);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$info = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$info);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$industry = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$industry);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$inbox = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$inbox);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$image = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$image);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$i_cursor = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$i_cursor);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$hourglass_start = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hourglass_start);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$hourglass_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hourglass_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$hourglass_half = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hourglass_half);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$hourglass_end = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hourglass_end);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$hourglass_3 = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hourglass_3);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$hourglass_2 = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hourglass_2);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$hourglass_1 = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hourglass_1);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$hourglass = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hourglass);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$hotel = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hotel);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$home = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$home);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$history = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$history);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$heartbeat = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$heartbeat);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$heart_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$heart_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$heart = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$heart);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$headphones = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$headphones);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$hdd_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hdd_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$hashtag = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hashtag);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$hard_of_hearing = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hard_of_hearing);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$hand_stop_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hand_stop_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$hand_spock_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hand_spock_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$hand_scissors_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hand_scissors_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$hand_rock_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hand_rock_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$hand_pointer_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hand_pointer_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$hand_peace_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hand_peace_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$hand_paper_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hand_paper_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$hand_lizard_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hand_lizard_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$hand_grab_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$hand_grab_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$group = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$group);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$graduation_cap = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$graduation_cap);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$globe = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$globe);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$glass = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$glass);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$gift = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$gift);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$gears = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$gears);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$gear = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$gear);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$gavel = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$gavel);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$gamepad = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$gamepad);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$futbol_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$futbol_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$frown_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$frown_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$folder_open_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$folder_open_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$folder_open = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$folder_open);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$folder_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$folder_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$folder = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$folder);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$flask = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$flask);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$flash = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$flash);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$flag_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$flag_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$flag_checkered = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$flag_checkered);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$flag = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$flag);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$fire_extinguisher = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$fire_extinguisher);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$fire = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$fire);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$filter = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$filter);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$film = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$film);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$file_zip_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_zip_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$file_word_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_word_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$file_video_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_video_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$file_sound_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_sound_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$file_powerpoint_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_powerpoint_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$file_picture_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_picture_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$file_photo_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_photo_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$file_pdf_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_pdf_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$file_movie_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_movie_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$file_image_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_image_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$file_excel_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_excel_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$file_code_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_code_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$file_audio_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_audio_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$file_archive_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$file_archive_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$fighter_jet = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$fighter_jet);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$female = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$female);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$feed = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$feed);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$fax = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$fax);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$eyedropper = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$eyedropper);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$eye_slash = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$eye_slash);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$eye = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$eye);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$external_link_square = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$external_link_square);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$external_link = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$external_link);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$exclamation_triangle = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$exclamation_triangle);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$exclamation_circle = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$exclamation_circle);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$exclamation = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$exclamation);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$exchange = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$exchange);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$eraser = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$eraser);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$envelope_square = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$envelope_square);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$envelope_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$envelope_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$envelope = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$envelope);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$ellipsis_v = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$ellipsis_v);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$ellipsis_h = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$ellipsis_h);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$edit = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$edit);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$download = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$download);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$dot_circle_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$dot_circle_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$diamond = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$diamond);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$desktop = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$desktop);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$deafness = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$deafness);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$deaf = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$deaf);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$database = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$database);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$dashboard = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$dashboard);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$cutlery = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$cutlery);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$cubes = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$cubes);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$cube = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$cube);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$crosshairs = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$crosshairs);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$crop = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$crop);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$credit_card_alt = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$credit_card_alt);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$credit_card = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$credit_card);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$creative_commons = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$creative_commons);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$copyright = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$copyright);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$compass = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$compass);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$comments_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$comments_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$comments = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$comments);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$commenting_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$commenting_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$commenting = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$commenting);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$comment_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$comment_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$comment = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$comment);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$cogs = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$cogs);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$cog = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$cog);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$coffee = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$coffee);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$code_fork = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$code_fork);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$code = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$code);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$cloud_upload = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$cloud_upload);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$cloud_download = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$cloud_download);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$cloud = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$cloud);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$close = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$close);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$clone = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$clone);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$clock_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$clock_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$circle_thin = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$circle_thin);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$circle_o_notch = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$circle_o_notch);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$circle_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$circle_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$circle = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$circle);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$child = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$child);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$check_square_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$check_square_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$check_square = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$check_square);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$check_circle_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$check_circle_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$check_circle = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$check_circle);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$check = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$check);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$certificate = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$certificate);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$cc = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$cc);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$cart_plus = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$cart_plus);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$cart_arrow_down = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$cart_arrow_down);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$caret_square_o_up = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$caret_square_o_up);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$caret_square_o_right = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$caret_square_o_right);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$caret_square_o_left = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$caret_square_o_left);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$caret_square_o_down = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$caret_square_o_down);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$car = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$car);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$camera_retro = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$camera_retro);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$camera = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$camera);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$calendar_times_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$calendar_times_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$calendar_plus_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$calendar_plus_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$calendar_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$calendar_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$calendar_minus_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$calendar_minus_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$calendar_check_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$calendar_check_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$calendar = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$calendar);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$calculator = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$calculator);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$cab = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$cab);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$bus = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bus);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$bullseye = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bullseye);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$bullhorn = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bullhorn);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$building_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$building_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$building = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$building);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$bug = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bug);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$briefcase = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$briefcase);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$braille = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$braille);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$bookmark_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bookmark_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$bookmark = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bookmark);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$book = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$book);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$bomb = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bomb);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$bolt = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bolt);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$bluetooth_b = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bluetooth_b);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$bluetooth = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bluetooth);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$blind = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$blind);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$birthday_cake = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$birthday_cake);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$binoculars = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$binoculars);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$bicycle = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bicycle);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$bell_slash_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bell_slash_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$bell_slash = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bell_slash);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$bell_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bell_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$bell = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bell);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$beer = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$beer);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$bed = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bed);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$battery_three_quarters = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$battery_three_quarters);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$battery_quarter = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$battery_quarter);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$battery_half = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$battery_half);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$battery_full = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$battery_full);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$battery_empty = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$battery_empty);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$battery_4 = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$battery_4);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$battery_3 = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$battery_3);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$battery_2 = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$battery_2);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$battery_1 = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$battery_1);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$battery_0 = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$battery_0);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$bars = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bars);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$barcode = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$barcode);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$bar_chart_o = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bar_chart_o);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$bar_chart = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bar_chart);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$bank = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$bank);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$ban = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$ban);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$balance_scale = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$balance_scale);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$automobile = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$automobile);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$audio_description = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$audio_description);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$at = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$at);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$asterisk = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$asterisk);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$assistive_listening_systems = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$assistive_listening_systems);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$asl_interpreting = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$asl_interpreting);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$arrows_v = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$arrows_v);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$arrows_h = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$arrows_h);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$arrows = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$arrows);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$area_chart = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$area_chart);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$archive = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$archive);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$anchor = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$anchor);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$american_sign_language_interpreting = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$american_sign_language_interpreting);
var _Fresheyeball$elm_font_awesome$FontAwesome_Web$adjust = _Fresheyeball$elm_font_awesome$FontAwesome_Util$icon(_Fresheyeball$elm_font_awesome$FontAwesome_Web_Class$adjust);

var _NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode = _elm_lang$core$Json_Decode$succeed;
var _NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$resolve = _elm_lang$core$Json_Decode$andThen(_elm_lang$core$Basics$identity);
var _NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$custom = F2(
	function (decoder, wrapped) {
		return A3(
			_elm_lang$core$Json_Decode$map2,
			F2(
				function (x, y) {
					return x(y);
				}),
			wrapped,
			decoder);
	});
var _NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$hardcoded = function (_p0) {
	return _NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$custom(
		_elm_lang$core$Json_Decode$succeed(_p0));
};
var _NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optionalDecoder = F3(
	function (pathDecoder, valDecoder, fallback) {
		var nullOr = function (decoder) {
			return _elm_lang$core$Json_Decode$oneOf(
				{
					ctor: '::',
					_0: decoder,
					_1: {
						ctor: '::',
						_0: _elm_lang$core$Json_Decode$null(fallback),
						_1: {ctor: '[]'}
					}
				});
		};
		var handleResult = function (input) {
			var _p1 = A2(_elm_lang$core$Json_Decode$decodeValue, pathDecoder, input);
			if (_p1.ctor === 'Ok') {
				var _p2 = A2(
					_elm_lang$core$Json_Decode$decodeValue,
					nullOr(valDecoder),
					_p1._0);
				if (_p2.ctor === 'Ok') {
					return _elm_lang$core$Json_Decode$succeed(_p2._0);
				} else {
					return _elm_lang$core$Json_Decode$fail(_p2._0);
				}
			} else {
				var _p3 = A2(
					_elm_lang$core$Json_Decode$decodeValue,
					_elm_lang$core$Json_Decode$keyValuePairs(_elm_lang$core$Json_Decode$value),
					input);
				if (_p3.ctor === 'Ok') {
					return _elm_lang$core$Json_Decode$succeed(fallback);
				} else {
					return _elm_lang$core$Json_Decode$fail(_p3._0);
				}
			}
		};
		return A2(_elm_lang$core$Json_Decode$andThen, handleResult, _elm_lang$core$Json_Decode$value);
	});
var _NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optionalAt = F4(
	function (path, valDecoder, fallback, decoder) {
		return A2(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$custom,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optionalDecoder,
				A2(_elm_lang$core$Json_Decode$at, path, _elm_lang$core$Json_Decode$value),
				valDecoder,
				fallback),
			decoder);
	});
var _NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional = F4(
	function (key, valDecoder, fallback, decoder) {
		return A2(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$custom,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optionalDecoder,
				A2(_elm_lang$core$Json_Decode$field, key, _elm_lang$core$Json_Decode$value),
				valDecoder,
				fallback),
			decoder);
	});
var _NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$requiredAt = F3(
	function (path, valDecoder, decoder) {
		return A2(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$custom,
			A2(_elm_lang$core$Json_Decode$at, path, valDecoder),
			decoder);
	});
var _NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required = F3(
	function (key, valDecoder, decoder) {
		return A2(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$custom,
			A2(_elm_lang$core$Json_Decode$field, key, valDecoder),
			decoder);
	});

var _debois$elm_dom$DOM$className = A2(
	_elm_lang$core$Json_Decode$at,
	{
		ctor: '::',
		_0: 'className',
		_1: {ctor: '[]'}
	},
	_elm_lang$core$Json_Decode$string);
var _debois$elm_dom$DOM$scrollTop = A2(_elm_lang$core$Json_Decode$field, 'scrollTop', _elm_lang$core$Json_Decode$float);
var _debois$elm_dom$DOM$scrollLeft = A2(_elm_lang$core$Json_Decode$field, 'scrollLeft', _elm_lang$core$Json_Decode$float);
var _debois$elm_dom$DOM$offsetTop = A2(_elm_lang$core$Json_Decode$field, 'offsetTop', _elm_lang$core$Json_Decode$float);
var _debois$elm_dom$DOM$offsetLeft = A2(_elm_lang$core$Json_Decode$field, 'offsetLeft', _elm_lang$core$Json_Decode$float);
var _debois$elm_dom$DOM$offsetHeight = A2(_elm_lang$core$Json_Decode$field, 'offsetHeight', _elm_lang$core$Json_Decode$float);
var _debois$elm_dom$DOM$offsetWidth = A2(_elm_lang$core$Json_Decode$field, 'offsetWidth', _elm_lang$core$Json_Decode$float);
var _debois$elm_dom$DOM$childNodes = function (decoder) {
	var loop = F2(
		function (idx, xs) {
			return A2(
				_elm_lang$core$Json_Decode$andThen,
				function (_p0) {
					return A2(
						_elm_lang$core$Maybe$withDefault,
						_elm_lang$core$Json_Decode$succeed(xs),
						A2(
							_elm_lang$core$Maybe$map,
							function (x) {
								return A2(
									loop,
									idx + 1,
									{ctor: '::', _0: x, _1: xs});
							},
							_p0));
				},
				_elm_lang$core$Json_Decode$maybe(
					A2(
						_elm_lang$core$Json_Decode$field,
						_elm_lang$core$Basics$toString(idx),
						decoder)));
		});
	return A2(
		_elm_lang$core$Json_Decode$map,
		_elm_lang$core$List$reverse,
		A2(
			_elm_lang$core$Json_Decode$field,
			'childNodes',
			A2(
				loop,
				0,
				{ctor: '[]'})));
};
var _debois$elm_dom$DOM$childNode = function (idx) {
	return _elm_lang$core$Json_Decode$at(
		{
			ctor: '::',
			_0: 'childNodes',
			_1: {
				ctor: '::',
				_0: _elm_lang$core$Basics$toString(idx),
				_1: {ctor: '[]'}
			}
		});
};
var _debois$elm_dom$DOM$parentElement = function (decoder) {
	return A2(_elm_lang$core$Json_Decode$field, 'parentElement', decoder);
};
var _debois$elm_dom$DOM$previousSibling = function (decoder) {
	return A2(_elm_lang$core$Json_Decode$field, 'previousSibling', decoder);
};
var _debois$elm_dom$DOM$nextSibling = function (decoder) {
	return A2(_elm_lang$core$Json_Decode$field, 'nextSibling', decoder);
};
var _debois$elm_dom$DOM$offsetParent = F2(
	function (x, decoder) {
		return _elm_lang$core$Json_Decode$oneOf(
			{
				ctor: '::',
				_0: A2(
					_elm_lang$core$Json_Decode$field,
					'offsetParent',
					_elm_lang$core$Json_Decode$null(x)),
				_1: {
					ctor: '::',
					_0: A2(_elm_lang$core$Json_Decode$field, 'offsetParent', decoder),
					_1: {ctor: '[]'}
				}
			});
	});
var _debois$elm_dom$DOM$position = F2(
	function (x, y) {
		return A2(
			_elm_lang$core$Json_Decode$andThen,
			function (_p1) {
				var _p2 = _p1;
				var _p4 = _p2._1;
				var _p3 = _p2._0;
				return A2(
					_debois$elm_dom$DOM$offsetParent,
					{ctor: '_Tuple2', _0: _p3, _1: _p4},
					A2(_debois$elm_dom$DOM$position, _p3, _p4));
			},
			A5(
				_elm_lang$core$Json_Decode$map4,
				F4(
					function (scrollLeft, scrollTop, offsetLeft, offsetTop) {
						return {ctor: '_Tuple2', _0: (x + offsetLeft) - scrollLeft, _1: (y + offsetTop) - scrollTop};
					}),
				_debois$elm_dom$DOM$scrollLeft,
				_debois$elm_dom$DOM$scrollTop,
				_debois$elm_dom$DOM$offsetLeft,
				_debois$elm_dom$DOM$offsetTop));
	});
var _debois$elm_dom$DOM$boundingClientRect = A4(
	_elm_lang$core$Json_Decode$map3,
	F3(
		function (_p5, width, height) {
			var _p6 = _p5;
			return {top: _p6._1, left: _p6._0, width: width, height: height};
		}),
	A2(_debois$elm_dom$DOM$position, 0, 0),
	_debois$elm_dom$DOM$offsetWidth,
	_debois$elm_dom$DOM$offsetHeight);
var _debois$elm_dom$DOM$target = function (decoder) {
	return A2(_elm_lang$core$Json_Decode$field, 'target', decoder);
};
var _debois$elm_dom$DOM$Rectangle = F4(
	function (a, b, c, d) {
		return {top: a, left: b, width: c, height: d};
	});

//import Result //

var _elm_lang$core$Native_Date = function() {

function fromString(str)
{
	var date = new Date(str);
	return isNaN(date.getTime())
		? _elm_lang$core$Result$Err('Unable to parse \'' + str + '\' as a date. Dates must be in the ISO 8601 format.')
		: _elm_lang$core$Result$Ok(date);
}

var dayTable = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
var monthTable =
	['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
	 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];


return {
	fromString: fromString,
	year: function(d) { return d.getFullYear(); },
	month: function(d) { return { ctor: monthTable[d.getMonth()] }; },
	day: function(d) { return d.getDate(); },
	hour: function(d) { return d.getHours(); },
	minute: function(d) { return d.getMinutes(); },
	second: function(d) { return d.getSeconds(); },
	millisecond: function(d) { return d.getMilliseconds(); },
	toTime: function(d) { return d.getTime(); },
	fromTime: function(t) { return new Date(t); },
	dayOfWeek: function(d) { return { ctor: dayTable[d.getDay()] }; }
};

}();
//import Native.Scheduler //

var _elm_lang$core$Native_Time = function() {

var now = _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
{
	callback(_elm_lang$core$Native_Scheduler.succeed(Date.now()));
});

function setInterval_(interval, task)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		var id = setInterval(function() {
			_elm_lang$core$Native_Scheduler.rawSpawn(task);
		}, interval);

		return function() { clearInterval(id); };
	});
}

return {
	now: now,
	setInterval_: F2(setInterval_)
};

}();
var _elm_lang$core$Time$setInterval = _elm_lang$core$Native_Time.setInterval_;
var _elm_lang$core$Time$spawnHelp = F3(
	function (router, intervals, processes) {
		var _p0 = intervals;
		if (_p0.ctor === '[]') {
			return _elm_lang$core$Task$succeed(processes);
		} else {
			var _p1 = _p0._0;
			var spawnRest = function (id) {
				return A3(
					_elm_lang$core$Time$spawnHelp,
					router,
					_p0._1,
					A3(_elm_lang$core$Dict$insert, _p1, id, processes));
			};
			var spawnTimer = _elm_lang$core$Native_Scheduler.spawn(
				A2(
					_elm_lang$core$Time$setInterval,
					_p1,
					A2(_elm_lang$core$Platform$sendToSelf, router, _p1)));
			return A2(_elm_lang$core$Task$andThen, spawnRest, spawnTimer);
		}
	});
var _elm_lang$core$Time$addMySub = F2(
	function (_p2, state) {
		var _p3 = _p2;
		var _p6 = _p3._1;
		var _p5 = _p3._0;
		var _p4 = A2(_elm_lang$core$Dict$get, _p5, state);
		if (_p4.ctor === 'Nothing') {
			return A3(
				_elm_lang$core$Dict$insert,
				_p5,
				{
					ctor: '::',
					_0: _p6,
					_1: {ctor: '[]'}
				},
				state);
		} else {
			return A3(
				_elm_lang$core$Dict$insert,
				_p5,
				{ctor: '::', _0: _p6, _1: _p4._0},
				state);
		}
	});
var _elm_lang$core$Time$inMilliseconds = function (t) {
	return t;
};
var _elm_lang$core$Time$millisecond = 1;
var _elm_lang$core$Time$second = 1000 * _elm_lang$core$Time$millisecond;
var _elm_lang$core$Time$minute = 60 * _elm_lang$core$Time$second;
var _elm_lang$core$Time$hour = 60 * _elm_lang$core$Time$minute;
var _elm_lang$core$Time$inHours = function (t) {
	return t / _elm_lang$core$Time$hour;
};
var _elm_lang$core$Time$inMinutes = function (t) {
	return t / _elm_lang$core$Time$minute;
};
var _elm_lang$core$Time$inSeconds = function (t) {
	return t / _elm_lang$core$Time$second;
};
var _elm_lang$core$Time$now = _elm_lang$core$Native_Time.now;
var _elm_lang$core$Time$onSelfMsg = F3(
	function (router, interval, state) {
		var _p7 = A2(_elm_lang$core$Dict$get, interval, state.taggers);
		if (_p7.ctor === 'Nothing') {
			return _elm_lang$core$Task$succeed(state);
		} else {
			var tellTaggers = function (time) {
				return _elm_lang$core$Task$sequence(
					A2(
						_elm_lang$core$List$map,
						function (tagger) {
							return A2(
								_elm_lang$core$Platform$sendToApp,
								router,
								tagger(time));
						},
						_p7._0));
			};
			return A2(
				_elm_lang$core$Task$andThen,
				function (_p8) {
					return _elm_lang$core$Task$succeed(state);
				},
				A2(_elm_lang$core$Task$andThen, tellTaggers, _elm_lang$core$Time$now));
		}
	});
var _elm_lang$core$Time$subscription = _elm_lang$core$Native_Platform.leaf('Time');
var _elm_lang$core$Time$State = F2(
	function (a, b) {
		return {taggers: a, processes: b};
	});
var _elm_lang$core$Time$init = _elm_lang$core$Task$succeed(
	A2(_elm_lang$core$Time$State, _elm_lang$core$Dict$empty, _elm_lang$core$Dict$empty));
var _elm_lang$core$Time$onEffects = F3(
	function (router, subs, _p9) {
		var _p10 = _p9;
		var rightStep = F3(
			function (_p12, id, _p11) {
				var _p13 = _p11;
				return {
					ctor: '_Tuple3',
					_0: _p13._0,
					_1: _p13._1,
					_2: A2(
						_elm_lang$core$Task$andThen,
						function (_p14) {
							return _p13._2;
						},
						_elm_lang$core$Native_Scheduler.kill(id))
				};
			});
		var bothStep = F4(
			function (interval, taggers, id, _p15) {
				var _p16 = _p15;
				return {
					ctor: '_Tuple3',
					_0: _p16._0,
					_1: A3(_elm_lang$core$Dict$insert, interval, id, _p16._1),
					_2: _p16._2
				};
			});
		var leftStep = F3(
			function (interval, taggers, _p17) {
				var _p18 = _p17;
				return {
					ctor: '_Tuple3',
					_0: {ctor: '::', _0: interval, _1: _p18._0},
					_1: _p18._1,
					_2: _p18._2
				};
			});
		var newTaggers = A3(_elm_lang$core$List$foldl, _elm_lang$core$Time$addMySub, _elm_lang$core$Dict$empty, subs);
		var _p19 = A6(
			_elm_lang$core$Dict$merge,
			leftStep,
			bothStep,
			rightStep,
			newTaggers,
			_p10.processes,
			{
				ctor: '_Tuple3',
				_0: {ctor: '[]'},
				_1: _elm_lang$core$Dict$empty,
				_2: _elm_lang$core$Task$succeed(
					{ctor: '_Tuple0'})
			});
		var spawnList = _p19._0;
		var existingDict = _p19._1;
		var killTask = _p19._2;
		return A2(
			_elm_lang$core$Task$andThen,
			function (newProcesses) {
				return _elm_lang$core$Task$succeed(
					A2(_elm_lang$core$Time$State, newTaggers, newProcesses));
			},
			A2(
				_elm_lang$core$Task$andThen,
				function (_p20) {
					return A3(_elm_lang$core$Time$spawnHelp, router, spawnList, existingDict);
				},
				killTask));
	});
var _elm_lang$core$Time$Every = F2(
	function (a, b) {
		return {ctor: 'Every', _0: a, _1: b};
	});
var _elm_lang$core$Time$every = F2(
	function (interval, tagger) {
		return _elm_lang$core$Time$subscription(
			A2(_elm_lang$core$Time$Every, interval, tagger));
	});
var _elm_lang$core$Time$subMap = F2(
	function (f, _p21) {
		var _p22 = _p21;
		return A2(
			_elm_lang$core$Time$Every,
			_p22._0,
			function (_p23) {
				return f(
					_p22._1(_p23));
			});
	});
_elm_lang$core$Native_Platform.effectManagers['Time'] = {pkg: 'elm-lang/core', init: _elm_lang$core$Time$init, onEffects: _elm_lang$core$Time$onEffects, onSelfMsg: _elm_lang$core$Time$onSelfMsg, tag: 'sub', subMap: _elm_lang$core$Time$subMap};

var _elm_lang$core$Date$millisecond = _elm_lang$core$Native_Date.millisecond;
var _elm_lang$core$Date$second = _elm_lang$core$Native_Date.second;
var _elm_lang$core$Date$minute = _elm_lang$core$Native_Date.minute;
var _elm_lang$core$Date$hour = _elm_lang$core$Native_Date.hour;
var _elm_lang$core$Date$dayOfWeek = _elm_lang$core$Native_Date.dayOfWeek;
var _elm_lang$core$Date$day = _elm_lang$core$Native_Date.day;
var _elm_lang$core$Date$month = _elm_lang$core$Native_Date.month;
var _elm_lang$core$Date$year = _elm_lang$core$Native_Date.year;
var _elm_lang$core$Date$fromTime = _elm_lang$core$Native_Date.fromTime;
var _elm_lang$core$Date$toTime = _elm_lang$core$Native_Date.toTime;
var _elm_lang$core$Date$fromString = _elm_lang$core$Native_Date.fromString;
var _elm_lang$core$Date$now = A2(_elm_lang$core$Task$map, _elm_lang$core$Date$fromTime, _elm_lang$core$Time$now);
var _elm_lang$core$Date$Date = {ctor: 'Date'};
var _elm_lang$core$Date$Sun = {ctor: 'Sun'};
var _elm_lang$core$Date$Sat = {ctor: 'Sat'};
var _elm_lang$core$Date$Fri = {ctor: 'Fri'};
var _elm_lang$core$Date$Thu = {ctor: 'Thu'};
var _elm_lang$core$Date$Wed = {ctor: 'Wed'};
var _elm_lang$core$Date$Tue = {ctor: 'Tue'};
var _elm_lang$core$Date$Mon = {ctor: 'Mon'};
var _elm_lang$core$Date$Dec = {ctor: 'Dec'};
var _elm_lang$core$Date$Nov = {ctor: 'Nov'};
var _elm_lang$core$Date$Oct = {ctor: 'Oct'};
var _elm_lang$core$Date$Sep = {ctor: 'Sep'};
var _elm_lang$core$Date$Aug = {ctor: 'Aug'};
var _elm_lang$core$Date$Jul = {ctor: 'Jul'};
var _elm_lang$core$Date$Jun = {ctor: 'Jun'};
var _elm_lang$core$Date$May = {ctor: 'May'};
var _elm_lang$core$Date$Apr = {ctor: 'Apr'};
var _elm_lang$core$Date$Mar = {ctor: 'Mar'};
var _elm_lang$core$Date$Feb = {ctor: 'Feb'};
var _elm_lang$core$Date$Jan = {ctor: 'Jan'};

var _elm_community$elm_datepicker$DatePicker_Date$yearRange = F2(
	function (_p0, range) {
		var _p1 = _p0;
		var _p5 = _p1.today;
		var _p4 = _p1.currentMonth;
		var _p2 = range;
		switch (_p2.ctor) {
			case 'MoreOrLess':
				var _p3 = _p2._0;
				return A2(
					_elm_lang$core$List$range,
					_elm_lang$core$Date$year(_p4) - _p3,
					_elm_lang$core$Date$year(_p4) + _p3);
			case 'Between':
				return A2(_elm_lang$core$List$range, _p2._0, _p2._1);
			case 'From':
				return A2(
					_elm_lang$core$List$range,
					_p2._0,
					_elm_lang$core$Date$year(_p5));
			case 'To':
				return A2(
					_elm_lang$core$List$range,
					_elm_lang$core$Date$year(_p5),
					_p2._0);
			default:
				return {ctor: '[]'};
		}
	});
var _elm_community$elm_datepicker$DatePicker_Date$unsafeDate = function (date) {
	var _p6 = _elm_lang$core$Date$fromString(date);
	if (_p6.ctor === 'Err') {
		return _elm_lang$core$Native_Utils.crashCase(
			'DatePicker.Date',
			{
				start: {line: 552, column: 5},
				end: {line: 557, column: 17}
			},
			_p6)(
			A2(_elm_lang$core$Basics_ops['++'], 'unsafeDate: failed to parse date:', _p6._0));
	} else {
		return _p6._0;
	}
};
var _elm_community$elm_datepicker$DatePicker_Date$isLeapYear = function (y) {
	return _elm_lang$core$Native_Utils.eq(
		A2(_elm_lang$core$Basics_ops['%'], y, 400),
		0) || ((!_elm_lang$core$Native_Utils.eq(
		A2(_elm_lang$core$Basics_ops['%'], y, 100),
		0)) && _elm_lang$core$Native_Utils.eq(
		A2(_elm_lang$core$Basics_ops['%'], y, 4),
		0));
};
var _elm_community$elm_datepicker$DatePicker_Date$daysInMonth = F2(
	function (year, month) {
		var _p8 = month;
		switch (_p8.ctor) {
			case 'Jan':
				return 31;
			case 'Feb':
				return _elm_community$elm_datepicker$DatePicker_Date$isLeapYear(year) ? 29 : 28;
			case 'Mar':
				return 31;
			case 'Apr':
				return 30;
			case 'May':
				return 31;
			case 'Jun':
				return 30;
			case 'Jul':
				return 31;
			case 'Aug':
				return 31;
			case 'Sep':
				return 30;
			case 'Oct':
				return 31;
			case 'Nov':
				return 30;
			default:
				return 31;
		}
	});
var _elm_community$elm_datepicker$DatePicker_Date$monthFromInt = function (month) {
	var _p9 = month;
	switch (_p9) {
		case 1:
			return _elm_lang$core$Date$Jan;
		case 2:
			return _elm_lang$core$Date$Feb;
		case 3:
			return _elm_lang$core$Date$Mar;
		case 4:
			return _elm_lang$core$Date$Apr;
		case 5:
			return _elm_lang$core$Date$May;
		case 6:
			return _elm_lang$core$Date$Jun;
		case 7:
			return _elm_lang$core$Date$Jul;
		case 8:
			return _elm_lang$core$Date$Aug;
		case 9:
			return _elm_lang$core$Date$Sep;
		case 10:
			return _elm_lang$core$Date$Oct;
		case 11:
			return _elm_lang$core$Date$Nov;
		case 12:
			return _elm_lang$core$Date$Dec;
		default:
			return _elm_lang$core$Native_Utils.crashCase(
				'DatePicker.Date',
				{
					start: {line: 451, column: 5},
					end: {line: 489, column: 72}
				},
				_p9)(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'monthFromInt: invalid month: ',
					_elm_lang$core$Basics$toString(_p9)));
	}
};
var _elm_community$elm_datepicker$DatePicker_Date$monthToInt = function (month) {
	var _p11 = month;
	switch (_p11.ctor) {
		case 'Jan':
			return 1;
		case 'Feb':
			return 2;
		case 'Mar':
			return 3;
		case 'Apr':
			return 4;
		case 'May':
			return 5;
		case 'Jun':
			return 6;
		case 'Jul':
			return 7;
		case 'Aug':
			return 8;
		case 'Sep':
			return 9;
		case 'Oct':
			return 10;
		case 'Nov':
			return 11;
		default:
			return 12;
	}
};
var _elm_community$elm_datepicker$DatePicker_Date$succMonth = function (month) {
	return _elm_community$elm_datepicker$DatePicker_Date$monthFromInt(
		A2(
			F2(
				function (x, y) {
					return x + y;
				}),
			1,
			A3(
				_elm_lang$core$Basics$flip,
				_elm_lang$core$Basics$rem,
				12,
				_elm_community$elm_datepicker$DatePicker_Date$monthToInt(month))));
};
var _elm_community$elm_datepicker$DatePicker_Date$predMonth = function (month) {
	var prev = A3(
		_elm_lang$core$Basics$flip,
		_elm_lang$core$Basics$rem,
		12,
		_elm_community$elm_datepicker$DatePicker_Date$monthToInt(month) - 1);
	return _elm_lang$core$Native_Utils.eq(prev, 0) ? _elm_lang$core$Date$Dec : _elm_community$elm_datepicker$DatePicker_Date$monthFromInt(prev);
};
var _elm_community$elm_datepicker$DatePicker_Date$monthToString = function (month) {
	var $int = _elm_community$elm_datepicker$DatePicker_Date$monthToInt(month);
	return (_elm_lang$core$Native_Utils.cmp($int, 10) < 0) ? A2(
		_elm_lang$core$Basics_ops['++'],
		'0',
		_elm_lang$core$Basics$toString($int)) : _elm_lang$core$Basics$toString($int);
};
var _elm_community$elm_datepicker$DatePicker_Date$dayFromInt = function (day) {
	var _p12 = day;
	switch (_p12) {
		case 1:
			return _elm_lang$core$Date$Mon;
		case 2:
			return _elm_lang$core$Date$Tue;
		case 3:
			return _elm_lang$core$Date$Wed;
		case 4:
			return _elm_lang$core$Date$Thu;
		case 5:
			return _elm_lang$core$Date$Fri;
		case 6:
			return _elm_lang$core$Date$Sat;
		case 7:
			return _elm_lang$core$Date$Sun;
		default:
			return _elm_lang$core$Native_Utils.crashCase(
				'DatePicker.Date',
				{
					start: {line: 350, column: 5},
					end: {line: 373, column: 70}
				},
				_p12)(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'dayFromInt: invalid day: ',
					_elm_lang$core$Basics$toString(day)));
	}
};
var _elm_community$elm_datepicker$DatePicker_Date$dayToInt = function (day) {
	var _p14 = day;
	switch (_p14.ctor) {
		case 'Mon':
			return 1;
		case 'Tue':
			return 2;
		case 'Wed':
			return 3;
		case 'Thu':
			return 4;
		case 'Fri':
			return 5;
		case 'Sat':
			return 6;
		default:
			return 7;
	}
};
var _elm_community$elm_datepicker$DatePicker_Date$dayToString = function (day) {
	return (_elm_lang$core$Native_Utils.cmp(day, 10) < 0) ? A2(
		_elm_lang$core$Basics_ops['++'],
		'0',
		_elm_lang$core$Basics$toString(day)) : _elm_lang$core$Basics$toString(day);
};
var _elm_community$elm_datepicker$DatePicker_Date$mkDate = F3(
	function (year, month, day) {
		return _elm_community$elm_datepicker$DatePicker_Date$unsafeDate(
			A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(year),
				A2(
					_elm_lang$core$Basics_ops['++'],
					'/',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_community$elm_datepicker$DatePicker_Date$monthToString(month),
						A2(
							_elm_lang$core$Basics_ops['++'],
							'/',
							_elm_community$elm_datepicker$DatePicker_Date$dayToString(day))))));
	});
var _elm_community$elm_datepicker$DatePicker_Date$newYear = F2(
	function (currentMonth, newYear) {
		var _p15 = _elm_lang$core$String$toInt(newYear);
		if (_p15.ctor === 'Ok') {
			return A3(
				_elm_community$elm_datepicker$DatePicker_Date$mkDate,
				_p15._0,
				_elm_lang$core$Date$month(currentMonth),
				_elm_lang$core$Date$day(currentMonth));
		} else {
			return _elm_lang$core$Native_Utils.crashCase(
				'DatePicker.Date',
				{
					start: {line: 562, column: 5},
					end: {line: 567, column: 70}
				},
				_p15)(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Unknown Month ',
					_elm_lang$core$Basics$toString(currentMonth)));
		}
	});
var _elm_community$elm_datepicker$DatePicker_Date$predDow = function (day) {
	var prev = A3(
		_elm_lang$core$Basics$flip,
		_elm_lang$core$Basics$rem,
		7,
		_elm_community$elm_datepicker$DatePicker_Date$dayToInt(day) - 1);
	return _elm_lang$core$Native_Utils.eq(prev, 0) ? _elm_lang$core$Date$Sun : _elm_community$elm_datepicker$DatePicker_Date$dayFromInt(prev);
};
var _elm_community$elm_datepicker$DatePicker_Date$succDow = function (day) {
	return _elm_community$elm_datepicker$DatePicker_Date$dayFromInt(
		A2(
			F2(
				function (x, y) {
					return x + y;
				}),
			1,
			A3(
				_elm_lang$core$Basics$flip,
				_elm_lang$core$Basics$rem,
				7,
				_elm_community$elm_datepicker$DatePicker_Date$dayToInt(day))));
};
var _elm_community$elm_datepicker$DatePicker_Date$subDay = function (date) {
	var day = _elm_lang$core$Date$day(date) - 1;
	var year = _elm_lang$core$Date$year(date);
	var month = _elm_lang$core$Date$month(date);
	var pred = _elm_community$elm_datepicker$DatePicker_Date$predMonth(month);
	var predYear = _elm_lang$core$Native_Utils.eq(pred, _elm_lang$core$Date$Dec) ? (year - 1) : year;
	return (_elm_lang$core$Native_Utils.cmp(day, 1) < 0) ? A3(
		_elm_community$elm_datepicker$DatePicker_Date$mkDate,
		predYear,
		pred,
		A2(_elm_community$elm_datepicker$DatePicker_Date$daysInMonth, predYear, pred)) : A3(_elm_community$elm_datepicker$DatePicker_Date$mkDate, year, month, day);
};
var _elm_community$elm_datepicker$DatePicker_Date$addDay = function (date) {
	var day = _elm_lang$core$Date$day(date) + 1;
	var year = _elm_lang$core$Date$year(date);
	var month = _elm_lang$core$Date$month(date);
	var dim = A2(_elm_community$elm_datepicker$DatePicker_Date$daysInMonth, year, month);
	var succ = _elm_community$elm_datepicker$DatePicker_Date$succMonth(month);
	var succYear = _elm_lang$core$Native_Utils.eq(succ, _elm_lang$core$Date$Jan) ? (year + 1) : year;
	return (_elm_lang$core$Native_Utils.cmp(day, dim) > 0) ? A3(_elm_community$elm_datepicker$DatePicker_Date$mkDate, succYear, succ, 1) : A3(_elm_community$elm_datepicker$DatePicker_Date$mkDate, year, month, day);
};
var _elm_community$elm_datepicker$DatePicker_Date$prevMonth = function (date) {
	var prevMonth = _elm_community$elm_datepicker$DatePicker_Date$predMonth(
		_elm_lang$core$Date$month(date));
	var prevYear = _elm_lang$core$Native_Utils.eq(prevMonth, _elm_lang$core$Date$Dec) ? (_elm_lang$core$Date$year(date) - 1) : _elm_lang$core$Date$year(date);
	return A3(_elm_community$elm_datepicker$DatePicker_Date$mkDate, prevYear, prevMonth, 1);
};
var _elm_community$elm_datepicker$DatePicker_Date$nextMonth = function (date) {
	var nextMonth = _elm_community$elm_datepicker$DatePicker_Date$succMonth(
		_elm_lang$core$Date$month(date));
	var nextYear = _elm_lang$core$Native_Utils.eq(nextMonth, _elm_lang$core$Date$Jan) ? (_elm_lang$core$Date$year(date) + 1) : _elm_lang$core$Date$year(date);
	return A3(_elm_community$elm_datepicker$DatePicker_Date$mkDate, nextYear, nextMonth, 1);
};
var _elm_community$elm_datepicker$DatePicker_Date$firstOfMonth = function (date) {
	return A3(
		_elm_community$elm_datepicker$DatePicker_Date$mkDate,
		_elm_lang$core$Date$year(date),
		_elm_lang$core$Date$month(date),
		1);
};
var _elm_community$elm_datepicker$DatePicker_Date$repeat = function (f) {
	var go = F2(
		function (n, x) {
			go:
			while (true) {
				if (_elm_lang$core$Native_Utils.eq(n, 0)) {
					return x;
				} else {
					var _v9 = n - 1,
						_v10 = f(x);
					n = _v9;
					x = _v10;
					continue go;
				}
			}
		});
	return go;
};
var _elm_community$elm_datepicker$DatePicker_Date$addDays = _elm_community$elm_datepicker$DatePicker_Date$repeat(_elm_community$elm_datepicker$DatePicker_Date$addDay);
var _elm_community$elm_datepicker$DatePicker_Date$subDays = _elm_community$elm_datepicker$DatePicker_Date$repeat(_elm_community$elm_datepicker$DatePicker_Date$subDay);
var _elm_community$elm_datepicker$DatePicker_Date$addDows = _elm_community$elm_datepicker$DatePicker_Date$repeat(_elm_community$elm_datepicker$DatePicker_Date$succDow);
var _elm_community$elm_datepicker$DatePicker_Date$subDows = _elm_community$elm_datepicker$DatePicker_Date$repeat(_elm_community$elm_datepicker$DatePicker_Date$succDow);
var _elm_community$elm_datepicker$DatePicker_Date$dateTuple = function (date) {
	return {
		ctor: '_Tuple3',
		_0: _elm_lang$core$Date$year(date),
		_1: _elm_community$elm_datepicker$DatePicker_Date$monthToInt(
			_elm_lang$core$Date$month(date)),
		_2: _elm_lang$core$Date$day(date)
	};
};
var _elm_community$elm_datepicker$DatePicker_Date$trimDates = F2(
	function (firstDay, dates) {
		var dl = function (dates) {
			dl:
			while (true) {
				var _p17 = dates;
				if (_p17.ctor === '[]') {
					return {ctor: '[]'};
				} else {
					if (_elm_lang$core$Native_Utils.eq(
						_elm_lang$core$Date$dayOfWeek(_p17._0),
						firstDay)) {
						return dates;
					} else {
						var _v12 = _p17._1;
						dates = _v12;
						continue dl;
					}
				}
			}
		};
		var lastDay = _elm_community$elm_datepicker$DatePicker_Date$predDow(firstDay);
		var dr = function (dates) {
			dr:
			while (true) {
				var _p18 = dates;
				if (_p18.ctor === '[]') {
					return {ctor: '[]'};
				} else {
					if (_elm_lang$core$Native_Utils.eq(
						_elm_lang$core$Date$dayOfWeek(_p18._0),
						lastDay)) {
						return dates;
					} else {
						var _v14 = _p18._1;
						dates = _v14;
						continue dr;
					}
				}
			}
		};
		return _elm_lang$core$List$reverse(
			dr(
				_elm_lang$core$List$reverse(
					dl(dates))));
	});
var _elm_community$elm_datepicker$DatePicker_Date$datesInRange = F3(
	function (firstDay, min, max) {
		var go = F2(
			function (x, acc) {
				go:
				while (true) {
					var y = _elm_community$elm_datepicker$DatePicker_Date$subDay(x);
					if (_elm_lang$core$Native_Utils.eq(
						_elm_community$elm_datepicker$DatePicker_Date$dateTuple(y),
						_elm_community$elm_datepicker$DatePicker_Date$dateTuple(min))) {
						return {ctor: '::', _0: y, _1: acc};
					} else {
						var _v15 = y,
							_v16 = {ctor: '::', _0: y, _1: acc};
						x = _v15;
						acc = _v16;
						continue go;
					}
				}
			});
		return A2(
			_elm_community$elm_datepicker$DatePicker_Date$trimDates,
			firstDay,
			A2(
				go,
				max,
				{ctor: '[]'}));
	});
var _elm_community$elm_datepicker$DatePicker_Date$formatMonth = function (month) {
	var _p19 = month;
	switch (_p19.ctor) {
		case 'Jan':
			return 'January';
		case 'Feb':
			return 'February';
		case 'Mar':
			return 'March';
		case 'Apr':
			return 'April';
		case 'May':
			return 'May';
		case 'Jun':
			return 'June';
		case 'Jul':
			return 'July';
		case 'Aug':
			return 'August';
		case 'Sep':
			return 'September';
		case 'Oct':
			return 'October';
		case 'Nov':
			return 'November';
		default:
			return 'December';
	}
};
var _elm_community$elm_datepicker$DatePicker_Date$formatDay = function (day) {
	var _p20 = day;
	switch (_p20.ctor) {
		case 'Mon':
			return 'Mo';
		case 'Tue':
			return 'Tu';
		case 'Wed':
			return 'We';
		case 'Thu':
			return 'Th';
		case 'Fri':
			return 'Fr';
		case 'Sat':
			return 'Sa';
		default:
			return 'Su';
	}
};
var _elm_community$elm_datepicker$DatePicker_Date$formatDate = function (date) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		_elm_lang$core$Basics$toString(
			_elm_lang$core$Date$year(date)),
		A2(
			_elm_lang$core$Basics_ops['++'],
			'/',
			A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_community$elm_datepicker$DatePicker_Date$monthToString(
					_elm_lang$core$Date$month(date)),
				A2(
					_elm_lang$core$Basics_ops['++'],
					'/',
					_elm_community$elm_datepicker$DatePicker_Date$dayToString(
						_elm_lang$core$Date$day(date))))));
};
var _elm_community$elm_datepicker$DatePicker_Date$initDate = A3(_elm_community$elm_datepicker$DatePicker_Date$mkDate, 1992, _elm_lang$core$Date$May, 29);
var _elm_community$elm_datepicker$DatePicker_Date$To = function (a) {
	return {ctor: 'To', _0: a};
};
var _elm_community$elm_datepicker$DatePicker_Date$From = function (a) {
	return {ctor: 'From', _0: a};
};
var _elm_community$elm_datepicker$DatePicker_Date$Between = F2(
	function (a, b) {
		return {ctor: 'Between', _0: a, _1: b};
	});
var _elm_community$elm_datepicker$DatePicker_Date$MoreOrLess = function (a) {
	return {ctor: 'MoreOrLess', _0: a};
};
var _elm_community$elm_datepicker$DatePicker_Date$Off = {ctor: 'Off'};

var _elm_lang$html$Html_Events$keyCode = A2(_elm_lang$core$Json_Decode$field, 'keyCode', _elm_lang$core$Json_Decode$int);
var _elm_lang$html$Html_Events$targetChecked = A2(
	_elm_lang$core$Json_Decode$at,
	{
		ctor: '::',
		_0: 'target',
		_1: {
			ctor: '::',
			_0: 'checked',
			_1: {ctor: '[]'}
		}
	},
	_elm_lang$core$Json_Decode$bool);
var _elm_lang$html$Html_Events$targetValue = A2(
	_elm_lang$core$Json_Decode$at,
	{
		ctor: '::',
		_0: 'target',
		_1: {
			ctor: '::',
			_0: 'value',
			_1: {ctor: '[]'}
		}
	},
	_elm_lang$core$Json_Decode$string);
var _elm_lang$html$Html_Events$defaultOptions = _elm_lang$virtual_dom$VirtualDom$defaultOptions;
var _elm_lang$html$Html_Events$onWithOptions = _elm_lang$virtual_dom$VirtualDom$onWithOptions;
var _elm_lang$html$Html_Events$on = _elm_lang$virtual_dom$VirtualDom$on;
var _elm_lang$html$Html_Events$onFocus = function (msg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'focus',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _elm_lang$html$Html_Events$onBlur = function (msg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'blur',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _elm_lang$html$Html_Events$onSubmitOptions = _elm_lang$core$Native_Utils.update(
	_elm_lang$html$Html_Events$defaultOptions,
	{preventDefault: true});
var _elm_lang$html$Html_Events$onSubmit = function (msg) {
	return A3(
		_elm_lang$html$Html_Events$onWithOptions,
		'submit',
		_elm_lang$html$Html_Events$onSubmitOptions,
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _elm_lang$html$Html_Events$onCheck = function (tagger) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'change',
		A2(_elm_lang$core$Json_Decode$map, tagger, _elm_lang$html$Html_Events$targetChecked));
};
var _elm_lang$html$Html_Events$onInput = function (tagger) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'input',
		A2(_elm_lang$core$Json_Decode$map, tagger, _elm_lang$html$Html_Events$targetValue));
};
var _elm_lang$html$Html_Events$onMouseOut = function (msg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'mouseout',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _elm_lang$html$Html_Events$onMouseOver = function (msg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'mouseover',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _elm_lang$html$Html_Events$onMouseLeave = function (msg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'mouseleave',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _elm_lang$html$Html_Events$onMouseEnter = function (msg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'mouseenter',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _elm_lang$html$Html_Events$onMouseUp = function (msg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'mouseup',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _elm_lang$html$Html_Events$onMouseDown = function (msg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'mousedown',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _elm_lang$html$Html_Events$onDoubleClick = function (msg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'dblclick',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _elm_lang$html$Html_Events$onClick = function (msg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'click',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _elm_lang$html$Html_Events$Options = F2(
	function (a, b) {
		return {stopPropagation: a, preventDefault: b};
	});

var _elm_lang$html$Html_Keyed$node = _elm_lang$virtual_dom$VirtualDom$keyedNode;
var _elm_lang$html$Html_Keyed$ol = _elm_lang$html$Html_Keyed$node('ol');
var _elm_lang$html$Html_Keyed$ul = _elm_lang$html$Html_Keyed$node('ul');

var _elm_community$elm_datepicker$DatePicker_ops = _elm_community$elm_datepicker$DatePicker_ops || {};
_elm_community$elm_datepicker$DatePicker_ops['??>'] = F2(
	function (first, $default) {
		var _p0 = first;
		if (_p0.ctor === 'Just') {
			return _elm_lang$core$Maybe$Just(_p0._0);
		} else {
			return $default;
		}
	});
var _elm_community$elm_datepicker$DatePicker_ops = _elm_community$elm_datepicker$DatePicker_ops || {};
_elm_community$elm_datepicker$DatePicker_ops['?>'] = _elm_lang$core$Basics$flip(_elm_lang$core$Maybe$withDefault);
var _elm_community$elm_datepicker$DatePicker$mkClassList = F2(
	function (_p1, cs) {
		var _p2 = _p1;
		return _elm_lang$html$Html_Attributes$classList(
			A2(
				_elm_lang$core$List$map,
				function (_p3) {
					var _p4 = _p3;
					return {
						ctor: '_Tuple2',
						_0: A2(_elm_lang$core$Basics_ops['++'], _p2.classNamespace, _p4._0),
						_1: _p4._1
					};
				},
				cs));
	});
var _elm_community$elm_datepicker$DatePicker$mkClass = F2(
	function (_p5, c) {
		var _p6 = _p5;
		return _elm_lang$html$Html_Attributes$class(
			A2(_elm_lang$core$Basics_ops['++'], _p6.classNamespace, c));
	});
var _elm_community$elm_datepicker$DatePicker$groupDates = function (dates) {
	var go = F4(
		function (i, xs, racc, acc) {
			go:
			while (true) {
				var _p7 = xs;
				if (_p7.ctor === '[]') {
					return _elm_lang$core$List$reverse(acc);
				} else {
					var _p9 = _p7._1;
					var _p8 = _p7._0;
					if (_elm_lang$core$Native_Utils.eq(i, 6)) {
						var _v5 = 0,
							_v6 = _p9,
							_v7 = {ctor: '[]'},
							_v8 = {
							ctor: '::',
							_0: _elm_lang$core$List$reverse(
								{ctor: '::', _0: _p8, _1: racc}),
							_1: acc
						};
						i = _v5;
						xs = _v6;
						racc = _v7;
						acc = _v8;
						continue go;
					} else {
						var _v9 = i + 1,
							_v10 = _p9,
							_v11 = {ctor: '::', _0: _p8, _1: racc},
							_v12 = acc;
						i = _v9;
						xs = _v10;
						racc = _v11;
						acc = _v12;
						continue go;
					}
				}
			}
		});
	return A4(
		go,
		0,
		dates,
		{ctor: '[]'},
		{ctor: '[]'});
};
var _elm_community$elm_datepicker$DatePicker$focusedDate = function (_p10) {
	var _p11 = _p10;
	return _p11._0.focused;
};
var _elm_community$elm_datepicker$DatePicker$isOpen = function (_p12) {
	var _p13 = _p12;
	return _p13._0.open;
};
var _elm_community$elm_datepicker$DatePicker$prepareDates = F2(
	function (date, firstDayOfWeek) {
		var end = A2(
			_elm_community$elm_datepicker$DatePicker_Date$addDays,
			6,
			_elm_community$elm_datepicker$DatePicker_Date$nextMonth(date));
		var start = A2(
			_elm_community$elm_datepicker$DatePicker_Date$subDays,
			6,
			_elm_community$elm_datepicker$DatePicker_Date$firstOfMonth(date));
		return {
			currentMonth: date,
			currentDates: A3(_elm_community$elm_datepicker$DatePicker_Date$datesInRange, firstDayOfWeek, start, end)
		};
	});
var _elm_community$elm_datepicker$DatePicker$formatCell = function (day) {
	return _elm_lang$html$Html$text(day);
};
var _elm_community$elm_datepicker$DatePicker$off = _elm_community$elm_datepicker$DatePicker_Date$Off;
var _elm_community$elm_datepicker$DatePicker$to = function (year) {
	return _elm_community$elm_datepicker$DatePicker_Date$To(year);
};
var _elm_community$elm_datepicker$DatePicker$from = function (year) {
	return _elm_community$elm_datepicker$DatePicker_Date$From(year);
};
var _elm_community$elm_datepicker$DatePicker$moreOrLess = function (range) {
	return _elm_community$elm_datepicker$DatePicker_Date$MoreOrLess(range);
};
var _elm_community$elm_datepicker$DatePicker$between = F2(
	function (start, end) {
		return (_elm_lang$core$Native_Utils.cmp(start, end) > 0) ? A2(_elm_community$elm_datepicker$DatePicker_Date$Between, end, start) : A2(_elm_community$elm_datepicker$DatePicker_Date$Between, start, end);
	});
var _elm_community$elm_datepicker$DatePicker$yearRangeActive = function (yearRange) {
	return !_elm_lang$core$Native_Utils.eq(yearRange, _elm_community$elm_datepicker$DatePicker_Date$Off);
};
var _elm_community$elm_datepicker$DatePicker$defaultSettings = {
	placeholder: 'Please pick a date...',
	classNamespace: 'elm-datepicker--',
	inputClassList: {ctor: '[]'},
	inputName: _elm_lang$core$Maybe$Nothing,
	inputId: _elm_lang$core$Maybe$Nothing,
	inputAttributes: {
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$required(false),
		_1: {ctor: '[]'}
	},
	isDisabled: _elm_lang$core$Basics$always(false),
	parser: _elm_lang$core$Date$fromString,
	dateFormatter: _elm_community$elm_datepicker$DatePicker_Date$formatDate,
	dayFormatter: _elm_community$elm_datepicker$DatePicker_Date$formatDay,
	monthFormatter: _elm_community$elm_datepicker$DatePicker_Date$formatMonth,
	yearFormatter: _elm_lang$core$Basics$toString,
	cellFormatter: _elm_community$elm_datepicker$DatePicker$formatCell,
	firstDayOfWeek: _elm_lang$core$Date$Sun,
	changeYear: _elm_community$elm_datepicker$DatePicker$off
};
var _elm_community$elm_datepicker$DatePicker$Settings = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return function (o) {
															return {placeholder: a, classNamespace: b, inputClassList: c, inputName: d, inputId: e, inputAttributes: f, isDisabled: g, parser: h, dateFormatter: i, dayFormatter: j, monthFormatter: k, yearFormatter: l, cellFormatter: m, firstDayOfWeek: n, changeYear: o};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _elm_community$elm_datepicker$DatePicker$Model = F5(
	function (a, b, c, d, e) {
		return {open: a, forceOpen: b, focused: c, inputText: d, today: e};
	});
var _elm_community$elm_datepicker$DatePicker$MouseUp = {ctor: 'MouseUp'};
var _elm_community$elm_datepicker$DatePicker$MouseDown = {ctor: 'MouseDown'};
var _elm_community$elm_datepicker$DatePicker$Blur = {ctor: 'Blur'};
var _elm_community$elm_datepicker$DatePicker$Focus = {ctor: 'Focus'};
var _elm_community$elm_datepicker$DatePicker$SubmitText = {ctor: 'SubmitText'};
var _elm_community$elm_datepicker$DatePicker$Text = function (a) {
	return {ctor: 'Text', _0: a};
};
var _elm_community$elm_datepicker$DatePicker$Pick = function (a) {
	return {ctor: 'Pick', _0: a};
};
var _elm_community$elm_datepicker$DatePicker$pick = _elm_community$elm_datepicker$DatePicker$Pick;
var _elm_community$elm_datepicker$DatePicker$ChangeFocus = function (a) {
	return {ctor: 'ChangeFocus', _0: a};
};
var _elm_community$elm_datepicker$DatePicker$datePicker = F3(
	function (pickedDate, settings, _p14) {
		var _p15 = _p14;
		var _p20 = _p15.today;
		var onChange = function (handler) {
			return A2(
				_elm_lang$html$Html_Events$on,
				'change',
				A2(_elm_lang$core$Json_Decode$map, handler, _elm_lang$html$Html_Events$targetValue));
		};
		var onPicker = function (ev) {
			return function (_p16) {
				return A3(
					_elm_lang$html$Html_Events$onWithOptions,
					ev,
					{preventDefault: false, stopPropagation: true},
					_elm_lang$core$Json_Decode$succeed(_p16));
			};
		};
		var picked = function (d) {
			return A2(
				_elm_lang$core$Maybe$withDefault,
				false,
				A2(
					_elm_lang$core$Maybe$map,
					function (_p17) {
						return A2(
							F2(
								function (x, y) {
									return _elm_lang$core$Native_Utils.eq(x, y);
								}),
							_elm_community$elm_datepicker$DatePicker_Date$dateTuple(d),
							_elm_community$elm_datepicker$DatePicker_Date$dateTuple(_p17));
					},
					pickedDate));
		};
		var firstDay = settings.firstDayOfWeek;
		var classList = _elm_community$elm_datepicker$DatePicker$mkClassList(settings);
		var $class = _elm_community$elm_datepicker$DatePicker$mkClass(settings);
		var arrow = F2(
			function (className, message) {
				return A2(
					_elm_lang$html$Html$a,
					{
						ctor: '::',
						_0: $class(className),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$href('javascript:;'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(message),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$tabindex(-1),
									_1: {ctor: '[]'}
								}
							}
						}
					},
					{ctor: '[]'});
			});
		var dow = function (d) {
			return A2(
				_elm_lang$html$Html$td,
				{
					ctor: '::',
					_0: $class('dow'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						settings.dayFormatter(d)),
					_1: {ctor: '[]'}
				});
		};
		var currentDate = A2(
			_elm_community$elm_datepicker$DatePicker_ops['?>'],
			A2(_elm_community$elm_datepicker$DatePicker_ops['??>'], _p15.focused, pickedDate),
			_p20);
		var _p18 = A2(_elm_community$elm_datepicker$DatePicker$prepareDates, currentDate, settings.firstDayOfWeek);
		var currentMonth = _p18.currentMonth;
		var currentDates = _p18.currentDates;
		var isCurrentYear = function (selectedYear) {
			return _elm_lang$core$Native_Utils.eq(
				_elm_lang$core$Date$year(currentMonth),
				selectedYear);
		};
		var yearOption = F2(
			function (index, selectedYear) {
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Basics$toString(index),
					_1: A2(
						_elm_lang$html$Html$option,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$value(
								_elm_lang$core$Basics$toString(selectedYear)),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$selected(
									isCurrentYear(selectedYear)),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								_elm_lang$core$Basics$toString(selectedYear)),
							_1: {ctor: '[]'}
						})
				};
			});
		var day = function (d) {
			var disabled = settings.isDisabled(d);
			var props = (!disabled) ? {
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(
					_elm_community$elm_datepicker$DatePicker$Pick(
						_elm_lang$core$Maybe$Just(d))),
				_1: {ctor: '[]'}
			} : {ctor: '[]'};
			return A2(
				_elm_lang$html$Html$td,
				A2(
					_elm_lang$core$Basics_ops['++'],
					{
						ctor: '::',
						_0: classList(
							{
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'day', _1: true},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'disabled', _1: disabled},
									_1: {
										ctor: '::',
										_0: {
											ctor: '_Tuple2',
											_0: 'picked',
											_1: picked(d)
										},
										_1: {
											ctor: '::',
											_0: {
												ctor: '_Tuple2',
												_0: 'today',
												_1: _elm_lang$core$Native_Utils.eq(
													_elm_community$elm_datepicker$DatePicker_Date$dateTuple(d),
													_elm_community$elm_datepicker$DatePicker_Date$dateTuple(currentDate))
											},
											_1: {
												ctor: '::',
												_0: {
													ctor: '_Tuple2',
													_0: 'other-month',
													_1: !_elm_lang$core$Native_Utils.eq(
														_elm_lang$core$Date$month(currentMonth),
														_elm_lang$core$Date$month(d))
												},
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}),
						_1: {ctor: '[]'}
					},
					props),
				{
					ctor: '::',
					_0: settings.cellFormatter(
						_elm_lang$core$Basics$toString(
							_elm_lang$core$Date$day(d))),
					_1: {ctor: '[]'}
				});
		};
		var row = function (days) {
			return A2(
				_elm_lang$html$Html$tr,
				{
					ctor: '::',
					_0: $class('row'),
					_1: {ctor: '[]'}
				},
				A2(_elm_lang$core$List$map, day, days));
		};
		var days = A2(
			_elm_lang$core$List$map,
			row,
			_elm_community$elm_datepicker$DatePicker$groupDates(currentDates));
		var dropdownYear = A3(
			_elm_lang$html$Html_Keyed$node,
			'select',
			{
				ctor: '::',
				_0: onChange(
					function (_p19) {
						return _elm_community$elm_datepicker$DatePicker$ChangeFocus(
							A2(_elm_community$elm_datepicker$DatePicker_Date$newYear, currentDate, _p19));
					}),
				_1: {
					ctor: '::',
					_0: $class('year-menu'),
					_1: {ctor: '[]'}
				}
			},
			A2(
				_elm_lang$core$List$indexedMap,
				yearOption,
				A2(
					_elm_community$elm_datepicker$DatePicker_Date$yearRange,
					{currentMonth: currentMonth, today: _p20},
					settings.changeYear)));
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: $class('picker'),
				_1: {
					ctor: '::',
					_0: A2(onPicker, 'mousedown', _elm_community$elm_datepicker$DatePicker$MouseDown),
					_1: {
						ctor: '::',
						_0: A2(onPicker, 'mouseup', _elm_community$elm_datepicker$DatePicker$MouseUp),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: $class('picker-header'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: $class('prev-container'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									arrow,
									'prev',
									_elm_community$elm_datepicker$DatePicker$ChangeFocus(
										_elm_community$elm_datepicker$DatePicker_Date$prevMonth(currentDate))),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: $class('month-container'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$span,
										{
											ctor: '::',
											_0: $class('month'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text(
												settings.monthFormatter(
													_elm_lang$core$Date$month(currentMonth))),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$span,
											{
												ctor: '::',
												_0: $class('year'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: (!_elm_community$elm_datepicker$DatePicker$yearRangeActive(settings.changeYear)) ? _elm_lang$html$Html$text(
													settings.yearFormatter(
														_elm_lang$core$Date$year(currentMonth))) : A3(
													_elm_lang$html$Html_Keyed$node,
													'span',
													{ctor: '[]'},
													{
														ctor: '::',
														_0: {
															ctor: '_Tuple2',
															_0: _elm_lang$core$Basics$toString(
																_elm_lang$core$Date$year(currentMonth)),
															_1: dropdownYear
														},
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: $class('next-container'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: A2(
											arrow,
											'next',
											_elm_community$elm_datepicker$DatePicker$ChangeFocus(
												_elm_community$elm_datepicker$DatePicker_Date$nextMonth(currentDate))),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$table,
						{
							ctor: '::',
							_0: $class('table'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$thead,
								{
									ctor: '::',
									_0: $class('weekdays'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$tr,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: dow(firstDay),
											_1: {
												ctor: '::',
												_0: dow(
													A2(_elm_community$elm_datepicker$DatePicker_Date$addDows, 1, firstDay)),
												_1: {
													ctor: '::',
													_0: dow(
														A2(_elm_community$elm_datepicker$DatePicker_Date$addDows, 2, firstDay)),
													_1: {
														ctor: '::',
														_0: dow(
															A2(_elm_community$elm_datepicker$DatePicker_Date$addDows, 3, firstDay)),
														_1: {
															ctor: '::',
															_0: dow(
																A2(_elm_community$elm_datepicker$DatePicker_Date$addDows, 4, firstDay)),
															_1: {
																ctor: '::',
																_0: dow(
																	A2(_elm_community$elm_datepicker$DatePicker_Date$addDows, 5, firstDay)),
																_1: {
																	ctor: '::',
																	_0: dow(
																		A2(_elm_community$elm_datepicker$DatePicker_Date$addDows, 6, firstDay)),
																	_1: {ctor: '[]'}
																}
															}
														}
													}
												}
											}
										}),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$tbody,
									{
										ctor: '::',
										_0: $class('days'),
										_1: {ctor: '[]'}
									},
									days),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _elm_community$elm_datepicker$DatePicker$view = F3(
	function (pickedDate, settings, _p21) {
		var _p22 = _p21;
		var _p24 = _p22._0;
		var inputClasses = A2(
			_elm_lang$core$Basics_ops['++'],
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: A2(_elm_lang$core$Basics_ops['++'], settings.classNamespace, 'input'),
					_1: true
				},
				_1: {ctor: '[]'}
			},
			settings.inputClassList);
		var potentialInputId = function (_p23) {
			return A2(
				_elm_lang$core$List$filterMap,
				_elm_lang$core$Basics$identity,
				_elm_lang$core$List$singleton(_p23));
		}(
			A2(_elm_lang$core$Maybe$map, _elm_lang$html$Html_Attributes$id, settings.inputId));
		var inputCommon = function (xs) {
			return A2(
				_elm_lang$html$Html$input,
				A2(
					_elm_lang$core$Basics_ops['++'],
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$classList(inputClasses),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$name(
								A2(_elm_community$elm_datepicker$DatePicker_ops['?>'], settings.inputName, '')),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$type_('text'),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html_Events$on,
										'change',
										_elm_lang$core$Json_Decode$succeed(_elm_community$elm_datepicker$DatePicker$SubmitText)),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onInput(_elm_community$elm_datepicker$DatePicker$Text),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onBlur(_elm_community$elm_datepicker$DatePicker$Blur),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Events$onClick(_elm_community$elm_datepicker$DatePicker$Focus),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Events$onFocus(_elm_community$elm_datepicker$DatePicker$Focus),
													_1: {ctor: '[]'}
												}
											}
										}
									}
								}
							}
						}
					},
					A2(
						_elm_lang$core$Basics_ops['++'],
						settings.inputAttributes,
						A2(_elm_lang$core$Basics_ops['++'], potentialInputId, xs))),
				{ctor: '[]'});
		};
		var dateInput = inputCommon(
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$placeholder(settings.placeholder),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$value(
						A2(
							_elm_lang$core$Maybe$withDefault,
							A2(
								_elm_lang$core$Maybe$withDefault,
								'',
								A2(_elm_lang$core$Maybe$map, settings.dateFormatter, pickedDate)),
							_p24.inputText)),
					_1: {ctor: '[]'}
				}
			});
		var $class = _elm_community$elm_datepicker$DatePicker$mkClass(settings);
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: $class('container'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: dateInput,
				_1: {
					ctor: '::',
					_0: _p22._0.open ? A3(_elm_community$elm_datepicker$DatePicker$datePicker, pickedDate, settings, _p24) : _elm_lang$html$Html$text(''),
					_1: {ctor: '[]'}
				}
			});
	});
var _elm_community$elm_datepicker$DatePicker$CurrentDate = function (a) {
	return {ctor: 'CurrentDate', _0: a};
};
var _elm_community$elm_datepicker$DatePicker$DatePicker = function (a) {
	return {ctor: 'DatePicker', _0: a};
};
var _elm_community$elm_datepicker$DatePicker$init = {
	ctor: '_Tuple2',
	_0: _elm_community$elm_datepicker$DatePicker$DatePicker(
		{
			open: false,
			forceOpen: false,
			focused: _elm_lang$core$Maybe$Just(_elm_community$elm_datepicker$DatePicker_Date$initDate),
			inputText: _elm_lang$core$Maybe$Nothing,
			today: _elm_community$elm_datepicker$DatePicker_Date$initDate
		}),
	_1: A2(_elm_lang$core$Task$perform, _elm_community$elm_datepicker$DatePicker$CurrentDate, _elm_lang$core$Date$now)
};
var _elm_community$elm_datepicker$DatePicker$initFromDate = function (date) {
	return _elm_community$elm_datepicker$DatePicker$DatePicker(
		{
			open: false,
			forceOpen: false,
			focused: _elm_lang$core$Maybe$Just(date),
			inputText: _elm_lang$core$Maybe$Nothing,
			today: date
		});
};
var _elm_community$elm_datepicker$DatePicker$initFromDates = F2(
	function (today, date) {
		return _elm_community$elm_datepicker$DatePicker$DatePicker(
			{open: false, forceOpen: false, focused: date, inputText: _elm_lang$core$Maybe$Nothing, today: today});
	});
var _elm_community$elm_datepicker$DatePicker$Changed = function (a) {
	return {ctor: 'Changed', _0: a};
};
var _elm_community$elm_datepicker$DatePicker$NoChange = {ctor: 'NoChange'};
var _elm_community$elm_datepicker$DatePicker_ops = _elm_community$elm_datepicker$DatePicker_ops || {};
_elm_community$elm_datepicker$DatePicker_ops['!'] = F2(
	function (m, cs) {
		return {
			ctor: '_Tuple3',
			_0: _elm_community$elm_datepicker$DatePicker$DatePicker(m),
			_1: _elm_lang$core$Platform_Cmd$batch(cs),
			_2: _elm_community$elm_datepicker$DatePicker$NoChange
		};
	});
var _elm_community$elm_datepicker$DatePicker$update = F3(
	function (settings, msg, _p25) {
		var _p26 = _p25;
		var _p34 = _p26._0;
		var _p27 = msg;
		switch (_p27.ctor) {
			case 'CurrentDate':
				var _p28 = _p27._0;
				return A2(
					_elm_community$elm_datepicker$DatePicker_ops['!'],
					_elm_lang$core$Native_Utils.update(
						_p34,
						{
							focused: _elm_lang$core$Maybe$Just(_p28),
							today: _p28
						}),
					{ctor: '[]'});
			case 'ChangeFocus':
				return A2(
					_elm_community$elm_datepicker$DatePicker_ops['!'],
					_elm_lang$core$Native_Utils.update(
						_p34,
						{
							focused: _elm_lang$core$Maybe$Just(_p27._0)
						}),
					{ctor: '[]'});
			case 'Pick':
				return {
					ctor: '_Tuple3',
					_0: _elm_community$elm_datepicker$DatePicker$DatePicker(
						_elm_lang$core$Native_Utils.update(
							_p34,
							{open: false, inputText: _elm_lang$core$Maybe$Nothing, focused: _elm_lang$core$Maybe$Nothing})),
					_1: _elm_lang$core$Platform_Cmd$none,
					_2: _elm_community$elm_datepicker$DatePicker$Changed(_p27._0)
				};
			case 'Text':
				return A2(
					_elm_community$elm_datepicker$DatePicker_ops['!'],
					_elm_lang$core$Native_Utils.update(
						_p34,
						{
							inputText: _elm_lang$core$Maybe$Just(_p27._0)
						}),
					{ctor: '[]'});
			case 'SubmitText':
				var isWhitespace = function (_p29) {
					return _elm_lang$core$String$isEmpty(
						_elm_lang$core$String$trim(_p29));
				};
				var dateEvent = function () {
					var text = A2(_elm_community$elm_datepicker$DatePicker_ops['?>'], _p34.inputText, '');
					return isWhitespace(text) ? _elm_community$elm_datepicker$DatePicker$Changed(_elm_lang$core$Maybe$Nothing) : A2(
						_elm_lang$core$Result$withDefault,
						_elm_community$elm_datepicker$DatePicker$NoChange,
						A2(
							_elm_lang$core$Result$map,
							function (_p30) {
								return _elm_community$elm_datepicker$DatePicker$Changed(
									function (date) {
										return settings.isDisabled(date) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(date);
									}(_p30));
							},
							settings.parser(text)));
				}();
				return {
					ctor: '_Tuple3',
					_0: _elm_community$elm_datepicker$DatePicker$DatePicker(
						_elm_lang$core$Native_Utils.update(
							_p34,
							{
								inputText: function () {
									var _p31 = dateEvent;
									if (_p31.ctor === 'Changed') {
										return _elm_lang$core$Maybe$Nothing;
									} else {
										return _p34.inputText;
									}
								}(),
								focused: function () {
									var _p32 = dateEvent;
									if (_p32.ctor === 'Changed') {
										var _p33 = _p32._0;
										if (_p33.ctor === 'Just') {
											return _elm_lang$core$Maybe$Just(_p33._0);
										} else {
											return _elm_lang$core$Maybe$Nothing;
										}
									} else {
										return _p34.focused;
									}
								}()
							})),
					_1: _elm_lang$core$Platform_Cmd$none,
					_2: dateEvent
				};
			case 'Focus':
				return A2(
					_elm_community$elm_datepicker$DatePicker_ops['!'],
					_elm_lang$core$Native_Utils.update(
						_p34,
						{open: true, forceOpen: false}),
					{ctor: '[]'});
			case 'Blur':
				return A2(
					_elm_community$elm_datepicker$DatePicker_ops['!'],
					_elm_lang$core$Native_Utils.update(
						_p34,
						{open: _p26._0.forceOpen}),
					{ctor: '[]'});
			case 'MouseDown':
				return A2(
					_elm_community$elm_datepicker$DatePicker_ops['!'],
					_elm_lang$core$Native_Utils.update(
						_p34,
						{forceOpen: true}),
					{ctor: '[]'});
			default:
				return A2(
					_elm_community$elm_datepicker$DatePicker_ops['!'],
					_elm_lang$core$Native_Utils.update(
						_p34,
						{forceOpen: false}),
					{ctor: '[]'});
		}
	});

var _elm_lang$lazy$Native_Lazy = function() {

function memoize(thunk)
{
    var value;
    var isForced = false;
    return function(tuple0) {
        if (!isForced) {
            value = thunk(tuple0);
            isForced = true;
        }
        return value;
    };
}

return {
    memoize: memoize
};

}();

var _elm_lang$lazy$Lazy$force = function (_p0) {
	var _p1 = _p0;
	return _p1._0(
		{ctor: '_Tuple0'});
};
var _elm_lang$lazy$Lazy$Lazy = function (a) {
	return {ctor: 'Lazy', _0: a};
};
var _elm_lang$lazy$Lazy$lazy = function (thunk) {
	return _elm_lang$lazy$Lazy$Lazy(
		_elm_lang$lazy$Native_Lazy.memoize(thunk));
};
var _elm_lang$lazy$Lazy$map = F2(
	function (f, a) {
		return _elm_lang$lazy$Lazy$lazy(
			function (_p2) {
				var _p3 = _p2;
				return f(
					_elm_lang$lazy$Lazy$force(a));
			});
	});
var _elm_lang$lazy$Lazy$map2 = F3(
	function (f, a, b) {
		return _elm_lang$lazy$Lazy$lazy(
			function (_p4) {
				var _p5 = _p4;
				return A2(
					f,
					_elm_lang$lazy$Lazy$force(a),
					_elm_lang$lazy$Lazy$force(b));
			});
	});
var _elm_lang$lazy$Lazy$map3 = F4(
	function (f, a, b, c) {
		return _elm_lang$lazy$Lazy$lazy(
			function (_p6) {
				var _p7 = _p6;
				return A3(
					f,
					_elm_lang$lazy$Lazy$force(a),
					_elm_lang$lazy$Lazy$force(b),
					_elm_lang$lazy$Lazy$force(c));
			});
	});
var _elm_lang$lazy$Lazy$map4 = F5(
	function (f, a, b, c, d) {
		return _elm_lang$lazy$Lazy$lazy(
			function (_p8) {
				var _p9 = _p8;
				return A4(
					f,
					_elm_lang$lazy$Lazy$force(a),
					_elm_lang$lazy$Lazy$force(b),
					_elm_lang$lazy$Lazy$force(c),
					_elm_lang$lazy$Lazy$force(d));
			});
	});
var _elm_lang$lazy$Lazy$map5 = F6(
	function (f, a, b, c, d, e) {
		return _elm_lang$lazy$Lazy$lazy(
			function (_p10) {
				var _p11 = _p10;
				return A5(
					f,
					_elm_lang$lazy$Lazy$force(a),
					_elm_lang$lazy$Lazy$force(b),
					_elm_lang$lazy$Lazy$force(c),
					_elm_lang$lazy$Lazy$force(d),
					_elm_lang$lazy$Lazy$force(e));
			});
	});
var _elm_lang$lazy$Lazy$apply = F2(
	function (f, x) {
		return _elm_lang$lazy$Lazy$lazy(
			function (_p12) {
				var _p13 = _p12;
				return A2(
					_elm_lang$lazy$Lazy$force,
					f,
					_elm_lang$lazy$Lazy$force(x));
			});
	});
var _elm_lang$lazy$Lazy$andThen = F2(
	function (callback, a) {
		return _elm_lang$lazy$Lazy$lazy(
			function (_p14) {
				var _p15 = _p14;
				return _elm_lang$lazy$Lazy$force(
					callback(
						_elm_lang$lazy$Lazy$force(a)));
			});
	});

//import Maybe, Native.List //

var _elm_lang$core$Native_Regex = function() {

function escape(str)
{
	return str.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
}
function caseInsensitive(re)
{
	return new RegExp(re.source, 'gi');
}
function regex(raw)
{
	return new RegExp(raw, 'g');
}

function contains(re, string)
{
	return string.match(re) !== null;
}

function find(n, re, str)
{
	n = n.ctor === 'All' ? Infinity : n._0;
	var out = [];
	var number = 0;
	var string = str;
	var lastIndex = re.lastIndex;
	var prevLastIndex = -1;
	var result;
	while (number++ < n && (result = re.exec(string)))
	{
		if (prevLastIndex === re.lastIndex) break;
		var i = result.length - 1;
		var subs = new Array(i);
		while (i > 0)
		{
			var submatch = result[i];
			subs[--i] = submatch === undefined
				? _elm_lang$core$Maybe$Nothing
				: _elm_lang$core$Maybe$Just(submatch);
		}
		out.push({
			match: result[0],
			submatches: _elm_lang$core$Native_List.fromArray(subs),
			index: result.index,
			number: number
		});
		prevLastIndex = re.lastIndex;
	}
	re.lastIndex = lastIndex;
	return _elm_lang$core$Native_List.fromArray(out);
}

function replace(n, re, replacer, string)
{
	n = n.ctor === 'All' ? Infinity : n._0;
	var count = 0;
	function jsReplacer(match)
	{
		if (count++ >= n)
		{
			return match;
		}
		var i = arguments.length - 3;
		var submatches = new Array(i);
		while (i > 0)
		{
			var submatch = arguments[i];
			submatches[--i] = submatch === undefined
				? _elm_lang$core$Maybe$Nothing
				: _elm_lang$core$Maybe$Just(submatch);
		}
		return replacer({
			match: match,
			submatches: _elm_lang$core$Native_List.fromArray(submatches),
			index: arguments[arguments.length - 2],
			number: count
		});
	}
	return string.replace(re, jsReplacer);
}

function split(n, re, str)
{
	n = n.ctor === 'All' ? Infinity : n._0;
	if (n === Infinity)
	{
		return _elm_lang$core$Native_List.fromArray(str.split(re));
	}
	var string = str;
	var result;
	var out = [];
	var start = re.lastIndex;
	var restoreLastIndex = re.lastIndex;
	while (n--)
	{
		if (!(result = re.exec(string))) break;
		out.push(string.slice(start, result.index));
		start = re.lastIndex;
	}
	out.push(string.slice(start));
	re.lastIndex = restoreLastIndex;
	return _elm_lang$core$Native_List.fromArray(out);
}

return {
	regex: regex,
	caseInsensitive: caseInsensitive,
	escape: escape,

	contains: F2(contains),
	find: F3(find),
	replace: F4(replace),
	split: F3(split)
};

}();

var _elm_lang$core$Regex$split = _elm_lang$core$Native_Regex.split;
var _elm_lang$core$Regex$replace = _elm_lang$core$Native_Regex.replace;
var _elm_lang$core$Regex$find = _elm_lang$core$Native_Regex.find;
var _elm_lang$core$Regex$contains = _elm_lang$core$Native_Regex.contains;
var _elm_lang$core$Regex$caseInsensitive = _elm_lang$core$Native_Regex.caseInsensitive;
var _elm_lang$core$Regex$regex = _elm_lang$core$Native_Regex.regex;
var _elm_lang$core$Regex$escape = _elm_lang$core$Native_Regex.escape;
var _elm_lang$core$Regex$Match = F4(
	function (a, b, c, d) {
		return {match: a, submatches: b, index: c, number: d};
	});
var _elm_lang$core$Regex$Regex = {ctor: 'Regex'};
var _elm_lang$core$Regex$AtMost = function (a) {
	return {ctor: 'AtMost', _0: a};
};
var _elm_lang$core$Regex$All = {ctor: 'All'};

var _elm_community$parser_combinators$Combine$app = function (p) {
	var _p0 = p;
	if (_p0.ctor === 'Parser') {
		return _p0._0;
	} else {
		return _elm_lang$lazy$Lazy$force(_p0._0);
	}
};
var _elm_community$parser_combinators$Combine$InputStream = F3(
	function (a, b, c) {
		return {data: a, input: b, position: c};
	});
var _elm_community$parser_combinators$Combine$initStream = function (s) {
	return A3(_elm_community$parser_combinators$Combine$InputStream, s, s, 0);
};
var _elm_community$parser_combinators$Combine$runParser = F3(
	function (p, st, s) {
		var _p1 = A3(
			_elm_community$parser_combinators$Combine$app,
			p,
			st,
			_elm_community$parser_combinators$Combine$initStream(s));
		if (_p1._2.ctor === 'Ok') {
			return _elm_lang$core$Result$Ok(
				{ctor: '_Tuple3', _0: _p1._0, _1: _p1._1, _2: _p1._2._0});
		} else {
			return _elm_lang$core$Result$Err(
				{ctor: '_Tuple3', _0: _p1._0, _1: _p1._1, _2: _p1._2._0});
		}
	});
var _elm_community$parser_combinators$Combine$parse = function (p) {
	return A2(
		_elm_community$parser_combinators$Combine$runParser,
		p,
		{ctor: '_Tuple0'});
};
var _elm_community$parser_combinators$Combine$ParseLocation = F3(
	function (a, b, c) {
		return {source: a, line: b, column: c};
	});
var _elm_community$parser_combinators$Combine$currentLocation = function (stream) {
	var find = F3(
		function (position, currentLine, lines) {
			find:
			while (true) {
				var _p2 = lines;
				if (_p2.ctor === '[]') {
					return A3(_elm_community$parser_combinators$Combine$ParseLocation, '', currentLine, position);
				} else {
					var _p3 = _p2._0;
					var length = _elm_lang$core$String$length(_p3);
					var lengthPlusNL = length + 1;
					if (_elm_lang$core$Native_Utils.eq(position, length)) {
						return A3(_elm_community$parser_combinators$Combine$ParseLocation, _p3, currentLine, position);
					} else {
						if (_elm_lang$core$Native_Utils.cmp(position, length) > 0) {
							var _v3 = position - lengthPlusNL,
								_v4 = currentLine + 1,
								_v5 = _p2._1;
							position = _v3;
							currentLine = _v4;
							lines = _v5;
							continue find;
						} else {
							return A3(_elm_community$parser_combinators$Combine$ParseLocation, _p3, currentLine, position);
						}
					}
				}
			}
		});
	return A3(
		find,
		stream.position,
		0,
		A2(_elm_lang$core$String$split, '\n', stream.data));
};
var _elm_community$parser_combinators$Combine$currentSourceLine = function (_p4) {
	return function (_) {
		return _.source;
	}(
		_elm_community$parser_combinators$Combine$currentLocation(_p4));
};
var _elm_community$parser_combinators$Combine$currentLine = function (_p5) {
	return function (_) {
		return _.line;
	}(
		_elm_community$parser_combinators$Combine$currentLocation(_p5));
};
var _elm_community$parser_combinators$Combine$currentColumn = function (_p6) {
	return function (_) {
		return _.column;
	}(
		_elm_community$parser_combinators$Combine$currentLocation(_p6));
};
var _elm_community$parser_combinators$Combine$RecursiveParser = function (a) {
	return {ctor: 'RecursiveParser', _0: a};
};
var _elm_community$parser_combinators$Combine$lazy = function (t) {
	return _elm_community$parser_combinators$Combine$RecursiveParser(
		_elm_lang$lazy$Lazy$lazy(
			function (_p7) {
				var _p8 = _p7;
				return _elm_community$parser_combinators$Combine$app(
					t(
						{ctor: '_Tuple0'}));
			}));
};
var _elm_community$parser_combinators$Combine$Parser = function (a) {
	return {ctor: 'Parser', _0: a};
};
var _elm_community$parser_combinators$Combine$primitive = _elm_community$parser_combinators$Combine$Parser;
var _elm_community$parser_combinators$Combine$bimap = F3(
	function (fok, ferr, p) {
		return _elm_community$parser_combinators$Combine$Parser(
			F2(
				function (state, stream) {
					var _p9 = A3(_elm_community$parser_combinators$Combine$app, p, state, stream);
					if (_p9._2.ctor === 'Ok') {
						return {
							ctor: '_Tuple3',
							_0: _p9._0,
							_1: _p9._1,
							_2: _elm_lang$core$Result$Ok(
								fok(_p9._2._0))
						};
					} else {
						return {
							ctor: '_Tuple3',
							_0: _p9._0,
							_1: _p9._1,
							_2: _elm_lang$core$Result$Err(
								ferr(_p9._2._0))
						};
					}
				}));
	});
var _elm_community$parser_combinators$Combine$map = F2(
	function (f, p) {
		return A3(_elm_community$parser_combinators$Combine$bimap, f, _elm_lang$core$Basics$identity, p);
	});
var _elm_community$parser_combinators$Combine_ops = _elm_community$parser_combinators$Combine_ops || {};
_elm_community$parser_combinators$Combine_ops['<$>'] = _elm_community$parser_combinators$Combine$map;
var _elm_community$parser_combinators$Combine_ops = _elm_community$parser_combinators$Combine_ops || {};
_elm_community$parser_combinators$Combine_ops['<$'] = function (res) {
	return _elm_community$parser_combinators$Combine$map(
		_elm_lang$core$Basics$always(res));
};
var _elm_community$parser_combinators$Combine$skip = function (p) {
	return A2(
		_elm_community$parser_combinators$Combine_ops['<$'],
		{ctor: '_Tuple0'},
		p);
};
var _elm_community$parser_combinators$Combine_ops = _elm_community$parser_combinators$Combine_ops || {};
_elm_community$parser_combinators$Combine_ops['$>'] = _elm_lang$core$Basics$flip(
	F2(
		function (x, y) {
			return A2(_elm_community$parser_combinators$Combine_ops['<$'], x, y);
		}));
var _elm_community$parser_combinators$Combine$mapError = _elm_community$parser_combinators$Combine$bimap(_elm_lang$core$Basics$identity);
var _elm_community$parser_combinators$Combine_ops = _elm_community$parser_combinators$Combine_ops || {};
_elm_community$parser_combinators$Combine_ops['<?>'] = F2(
	function (p, m) {
		return A2(
			_elm_community$parser_combinators$Combine$mapError,
			_elm_lang$core$Basics$always(
				{
					ctor: '::',
					_0: m,
					_1: {ctor: '[]'}
				}),
			p);
	});
var _elm_community$parser_combinators$Combine$withState = function (f) {
	return _elm_community$parser_combinators$Combine$Parser(
		F2(
			function (state, stream) {
				return A3(
					_elm_community$parser_combinators$Combine$app,
					f(state),
					state,
					stream);
			}));
};
var _elm_community$parser_combinators$Combine$withLocation = function (f) {
	return _elm_community$parser_combinators$Combine$Parser(
		F2(
			function (state, stream) {
				return A3(
					_elm_community$parser_combinators$Combine$app,
					f(
						_elm_community$parser_combinators$Combine$currentLocation(stream)),
					state,
					stream);
			}));
};
var _elm_community$parser_combinators$Combine$withLine = function (f) {
	return _elm_community$parser_combinators$Combine$Parser(
		F2(
			function (state, stream) {
				return A3(
					_elm_community$parser_combinators$Combine$app,
					f(
						_elm_community$parser_combinators$Combine$currentLine(stream)),
					state,
					stream);
			}));
};
var _elm_community$parser_combinators$Combine$withColumn = function (f) {
	return _elm_community$parser_combinators$Combine$Parser(
		F2(
			function (state, stream) {
				return A3(
					_elm_community$parser_combinators$Combine$app,
					f(
						_elm_community$parser_combinators$Combine$currentColumn(stream)),
					state,
					stream);
			}));
};
var _elm_community$parser_combinators$Combine$andThen = F2(
	function (f, p) {
		return _elm_community$parser_combinators$Combine$Parser(
			F2(
				function (state, stream) {
					var _p10 = A3(_elm_community$parser_combinators$Combine$app, p, state, stream);
					if (_p10._2.ctor === 'Ok') {
						return A3(
							_elm_community$parser_combinators$Combine$app,
							f(_p10._2._0),
							_p10._0,
							_p10._1);
					} else {
						return {
							ctor: '_Tuple3',
							_0: _p10._0,
							_1: _p10._1,
							_2: _elm_lang$core$Result$Err(_p10._2._0)
						};
					}
				}));
	});
var _elm_community$parser_combinators$Combine_ops = _elm_community$parser_combinators$Combine_ops || {};
_elm_community$parser_combinators$Combine_ops['>>='] = _elm_lang$core$Basics$flip(_elm_community$parser_combinators$Combine$andThen);
var _elm_community$parser_combinators$Combine$andMap = F2(
	function (rp, lp) {
		return A2(
			_elm_community$parser_combinators$Combine_ops['>>='],
			lp,
			A2(_elm_lang$core$Basics$flip, _elm_community$parser_combinators$Combine$map, rp));
	});
var _elm_community$parser_combinators$Combine_ops = _elm_community$parser_combinators$Combine_ops || {};
_elm_community$parser_combinators$Combine_ops['<*>'] = _elm_lang$core$Basics$flip(_elm_community$parser_combinators$Combine$andMap);
var _elm_community$parser_combinators$Combine_ops = _elm_community$parser_combinators$Combine_ops || {};
_elm_community$parser_combinators$Combine_ops['<*'] = F2(
	function (lp, rp) {
		return A2(
			_elm_community$parser_combinators$Combine$andMap,
			rp,
			A2(_elm_community$parser_combinators$Combine$map, _elm_lang$core$Basics$always, lp));
	});
var _elm_community$parser_combinators$Combine_ops = _elm_community$parser_combinators$Combine_ops || {};
_elm_community$parser_combinators$Combine_ops['*>'] = F2(
	function (lp, rp) {
		return A2(
			_elm_community$parser_combinators$Combine$andMap,
			rp,
			A2(
				_elm_community$parser_combinators$Combine$map,
				_elm_lang$core$Basics$flip(_elm_lang$core$Basics$always),
				lp));
	});
var _elm_community$parser_combinators$Combine$between = F3(
	function (lp, rp, p) {
		return A2(
			_elm_community$parser_combinators$Combine_ops['<*'],
			A2(_elm_community$parser_combinators$Combine_ops['*>'], lp, p),
			rp);
	});
var _elm_community$parser_combinators$Combine$sequence = function (parsers) {
	var accumulate = F4(
		function (acc, ps, state, stream) {
			accumulate:
			while (true) {
				var _p11 = ps;
				if (_p11.ctor === '[]') {
					return {
						ctor: '_Tuple3',
						_0: state,
						_1: stream,
						_2: _elm_lang$core$Result$Ok(
							_elm_lang$core$List$reverse(acc))
					};
				} else {
					var _p12 = A3(_elm_community$parser_combinators$Combine$app, _p11._0, state, stream);
					if (_p12._2.ctor === 'Ok') {
						var _v11 = {ctor: '::', _0: _p12._2._0, _1: acc},
							_v12 = _p11._1,
							_v13 = _p12._0,
							_v14 = _p12._1;
						acc = _v11;
						ps = _v12;
						state = _v13;
						stream = _v14;
						continue accumulate;
					} else {
						return {
							ctor: '_Tuple3',
							_0: _p12._0,
							_1: _p12._1,
							_2: _elm_lang$core$Result$Err(_p12._2._0)
						};
					}
				}
			}
		});
	return _elm_community$parser_combinators$Combine$Parser(
		F2(
			function (state, stream) {
				return A4(
					accumulate,
					{ctor: '[]'},
					parsers,
					state,
					stream);
			}));
};
var _elm_community$parser_combinators$Combine$fail = function (m) {
	return _elm_community$parser_combinators$Combine$Parser(
		F2(
			function (state, stream) {
				return {
					ctor: '_Tuple3',
					_0: state,
					_1: stream,
					_2: _elm_lang$core$Result$Err(
						{
							ctor: '::',
							_0: m,
							_1: {ctor: '[]'}
						})
				};
			}));
};
var _elm_community$parser_combinators$Combine$emptyErr = _elm_community$parser_combinators$Combine$Parser(
	F2(
		function (state, stream) {
			return {
				ctor: '_Tuple3',
				_0: state,
				_1: stream,
				_2: _elm_lang$core$Result$Err(
					{ctor: '[]'})
			};
		}));
var _elm_community$parser_combinators$Combine$succeed = function (res) {
	return _elm_community$parser_combinators$Combine$Parser(
		F2(
			function (state, stream) {
				return {
					ctor: '_Tuple3',
					_0: state,
					_1: stream,
					_2: _elm_lang$core$Result$Ok(res)
				};
			}));
};
var _elm_community$parser_combinators$Combine$putState = function (state) {
	return _elm_community$parser_combinators$Combine$Parser(
		F2(
			function (_p13, stream) {
				return A3(
					_elm_community$parser_combinators$Combine$app,
					_elm_community$parser_combinators$Combine$succeed(
						{ctor: '_Tuple0'}),
					state,
					stream);
			}));
};
var _elm_community$parser_combinators$Combine$modifyState = function (f) {
	return _elm_community$parser_combinators$Combine$Parser(
		F2(
			function (state, stream) {
				return A3(
					_elm_community$parser_combinators$Combine$app,
					_elm_community$parser_combinators$Combine$succeed(
						{ctor: '_Tuple0'}),
					f(state),
					stream);
			}));
};
var _elm_community$parser_combinators$Combine$count = F2(
	function (n, p) {
		var accumulate = F2(
			function (x, acc) {
				return (_elm_lang$core$Native_Utils.cmp(x, 0) < 1) ? _elm_community$parser_combinators$Combine$succeed(
					_elm_lang$core$List$reverse(acc)) : A2(
					_elm_community$parser_combinators$Combine$andThen,
					function (res) {
						return A2(
							accumulate,
							x - 1,
							{ctor: '::', _0: res, _1: acc});
					},
					p);
			});
		return A2(
			accumulate,
			n,
			{ctor: '[]'});
	});
var _elm_community$parser_combinators$Combine$string = function (s) {
	return _elm_community$parser_combinators$Combine$Parser(
		F2(
			function (state, stream) {
				if (A2(_elm_lang$core$String$startsWith, s, stream.input)) {
					var len = _elm_lang$core$String$length(s);
					var rem = A2(_elm_lang$core$String$dropLeft, len, stream.input);
					var pos = stream.position + len;
					return {
						ctor: '_Tuple3',
						_0: state,
						_1: _elm_lang$core$Native_Utils.update(
							stream,
							{input: rem, position: pos}),
						_2: _elm_lang$core$Result$Ok(s)
					};
				} else {
					return {
						ctor: '_Tuple3',
						_0: state,
						_1: stream,
						_2: _elm_lang$core$Result$Err(
							{
								ctor: '::',
								_0: A2(
									_elm_lang$core$Basics_ops['++'],
									'expected ',
									_elm_lang$core$Basics$toString(s)),
								_1: {ctor: '[]'}
							})
					};
				}
			}));
};
var _elm_community$parser_combinators$Combine$parens = A2(
	_elm_community$parser_combinators$Combine$between,
	_elm_community$parser_combinators$Combine$string('('),
	_elm_community$parser_combinators$Combine$string(')'));
var _elm_community$parser_combinators$Combine$braces = A2(
	_elm_community$parser_combinators$Combine$between,
	_elm_community$parser_combinators$Combine$string('{'),
	_elm_community$parser_combinators$Combine$string('}'));
var _elm_community$parser_combinators$Combine$brackets = A2(
	_elm_community$parser_combinators$Combine$between,
	_elm_community$parser_combinators$Combine$string('['),
	_elm_community$parser_combinators$Combine$string(']'));
var _elm_community$parser_combinators$Combine$regex = function (pat) {
	var pattern = A2(_elm_lang$core$String$startsWith, '^', pat) ? pat : A2(_elm_lang$core$Basics_ops['++'], '^', pat);
	return _elm_community$parser_combinators$Combine$Parser(
		F2(
			function (state, stream) {
				var _p14 = A3(
					_elm_lang$core$Regex$find,
					_elm_lang$core$Regex$AtMost(1),
					_elm_lang$core$Regex$regex(pattern),
					stream.input);
				if ((_p14.ctor === '::') && (_p14._1.ctor === '[]')) {
					var _p15 = _p14._0;
					var len = _elm_lang$core$String$length(_p15.match);
					var rem = A2(_elm_lang$core$String$dropLeft, len, stream.input);
					var pos = stream.position + len;
					return {
						ctor: '_Tuple3',
						_0: state,
						_1: _elm_lang$core$Native_Utils.update(
							stream,
							{input: rem, position: pos}),
						_2: _elm_lang$core$Result$Ok(_p15.match)
					};
				} else {
					return {
						ctor: '_Tuple3',
						_0: state,
						_1: stream,
						_2: _elm_lang$core$Result$Err(
							{
								ctor: '::',
								_0: A2(
									_elm_lang$core$Basics_ops['++'],
									'expected input matching Regexp /',
									A2(_elm_lang$core$Basics_ops['++'], pattern, '/')),
								_1: {ctor: '[]'}
							})
					};
				}
			}));
};
var _elm_community$parser_combinators$Combine$whitespace = A2(
	_elm_community$parser_combinators$Combine_ops['<?>'],
	_elm_community$parser_combinators$Combine$regex('[ \t\r\n]*'),
	'whitespace');
var _elm_community$parser_combinators$Combine$whitespace1 = A2(
	_elm_community$parser_combinators$Combine_ops['<?>'],
	_elm_community$parser_combinators$Combine$regex('[ \t\r\n]+'),
	'whitespace');
var _elm_community$parser_combinators$Combine$while = function (pred) {
	var accumulate = F3(
		function (acc, state, stream) {
			accumulate:
			while (true) {
				var _p16 = _elm_lang$core$String$uncons(stream.input);
				if (_p16.ctor === 'Just') {
					var _p17 = _p16._0._0;
					if (pred(_p17)) {
						var pos = stream.position + 1;
						var c = A2(_elm_lang$core$String$cons, _p17, '');
						var _v17 = A2(_elm_lang$core$Basics_ops['++'], acc, c),
							_v18 = state,
							_v19 = _elm_lang$core$Native_Utils.update(
							stream,
							{input: _p16._0._1, position: pos});
						acc = _v17;
						state = _v18;
						stream = _v19;
						continue accumulate;
					} else {
						return {ctor: '_Tuple3', _0: state, _1: stream, _2: acc};
					}
				} else {
					return {ctor: '_Tuple3', _0: state, _1: stream, _2: acc};
				}
			}
		});
	return _elm_community$parser_combinators$Combine$Parser(
		F2(
			function (state, stream) {
				var _p18 = A3(accumulate, '', state, stream);
				var rstate = _p18._0;
				var rstream = _p18._1;
				var res = _p18._2;
				return {
					ctor: '_Tuple3',
					_0: rstate,
					_1: rstream,
					_2: _elm_lang$core$Result$Ok(res)
				};
			}));
};
var _elm_community$parser_combinators$Combine$end = _elm_community$parser_combinators$Combine$Parser(
	F2(
		function (state, stream) {
			return _elm_lang$core$Native_Utils.eq(stream.input, '') ? {
				ctor: '_Tuple3',
				_0: state,
				_1: stream,
				_2: _elm_lang$core$Result$Ok(
					{ctor: '_Tuple0'})
			} : {
				ctor: '_Tuple3',
				_0: state,
				_1: stream,
				_2: _elm_lang$core$Result$Err(
					{
						ctor: '::',
						_0: 'expected end of input',
						_1: {ctor: '[]'}
					})
			};
		}));
var _elm_community$parser_combinators$Combine$lookAhead = function (p) {
	return _elm_community$parser_combinators$Combine$Parser(
		F2(
			function (state, stream) {
				var _p19 = A3(_elm_community$parser_combinators$Combine$app, p, state, stream);
				if ((_p19.ctor === '_Tuple3') && (_p19._2.ctor === 'Ok')) {
					return {
						ctor: '_Tuple3',
						_0: _p19._0,
						_1: stream,
						_2: _elm_lang$core$Result$Ok(_p19._2._0)
					};
				} else {
					return _p19;
				}
			}));
};
var _elm_community$parser_combinators$Combine$or = F2(
	function (lp, rp) {
		return _elm_community$parser_combinators$Combine$Parser(
			F2(
				function (state, stream) {
					var _p20 = A3(_elm_community$parser_combinators$Combine$app, lp, state, stream);
					if (_p20._2.ctor === 'Ok') {
						return _p20;
					} else {
						var _p21 = A3(_elm_community$parser_combinators$Combine$app, rp, state, stream);
						if (_p21._2.ctor === 'Ok') {
							return _p21;
						} else {
							return {
								ctor: '_Tuple3',
								_0: state,
								_1: stream,
								_2: _elm_lang$core$Result$Err(
									A2(_elm_lang$core$Basics_ops['++'], _p20._2._0, _p21._2._0))
							};
						}
					}
				}));
	});
var _elm_community$parser_combinators$Combine$choice = function (xs) {
	return A3(_elm_lang$core$List$foldr, _elm_community$parser_combinators$Combine$or, _elm_community$parser_combinators$Combine$emptyErr, xs);
};
var _elm_community$parser_combinators$Combine_ops = _elm_community$parser_combinators$Combine_ops || {};
_elm_community$parser_combinators$Combine_ops['<|>'] = _elm_community$parser_combinators$Combine$or;
var _elm_community$parser_combinators$Combine$optional = F2(
	function (res, p) {
		return A2(
			_elm_community$parser_combinators$Combine_ops['<|>'],
			p,
			_elm_community$parser_combinators$Combine$succeed(res));
	});
var _elm_community$parser_combinators$Combine$chainl = F2(
	function (op, p) {
		var accumulate = function (x) {
			return A2(
				_elm_community$parser_combinators$Combine_ops['<|>'],
				A2(
					_elm_community$parser_combinators$Combine$andThen,
					function (f) {
						return A2(
							_elm_community$parser_combinators$Combine$andThen,
							function (y) {
								return accumulate(
									A2(f, x, y));
							},
							p);
					},
					op),
				_elm_community$parser_combinators$Combine$succeed(x));
		};
		return A2(_elm_community$parser_combinators$Combine$andThen, accumulate, p);
	});
var _elm_community$parser_combinators$Combine$chainr = F2(
	function (op, p) {
		var accumulate = function (x) {
			return A2(
				_elm_community$parser_combinators$Combine_ops['<|>'],
				A2(
					_elm_community$parser_combinators$Combine$andThen,
					function (f) {
						return A2(
							_elm_community$parser_combinators$Combine$andThen,
							function (y) {
								return _elm_community$parser_combinators$Combine$succeed(
									A2(f, x, y));
							},
							A2(_elm_community$parser_combinators$Combine$andThen, accumulate, p));
					},
					op),
				_elm_community$parser_combinators$Combine$succeed(x));
		};
		return A2(_elm_community$parser_combinators$Combine$andThen, accumulate, p);
	});
var _elm_community$parser_combinators$Combine$maybe = function (p) {
	return _elm_community$parser_combinators$Combine$Parser(
		F2(
			function (state, stream) {
				var _p22 = A3(_elm_community$parser_combinators$Combine$app, p, state, stream);
				if ((_p22.ctor === '_Tuple3') && (_p22._2.ctor === 'Ok')) {
					return {
						ctor: '_Tuple3',
						_0: _p22._0,
						_1: _p22._1,
						_2: _elm_lang$core$Result$Ok(
							_elm_lang$core$Maybe$Just(_p22._2._0))
					};
				} else {
					return {
						ctor: '_Tuple3',
						_0: state,
						_1: stream,
						_2: _elm_lang$core$Result$Ok(_elm_lang$core$Maybe$Nothing)
					};
				}
			}));
};
var _elm_community$parser_combinators$Combine$many = function (p) {
	var accumulate = F3(
		function (acc, state, stream) {
			accumulate:
			while (true) {
				var _p23 = A3(_elm_community$parser_combinators$Combine$app, p, state, stream);
				if ((_p23.ctor === '_Tuple3') && (_p23._2.ctor === 'Ok')) {
					var _p25 = _p23._1;
					var _p24 = _p23._0;
					if (_elm_lang$core$Native_Utils.eq(stream, _p25)) {
						return {
							ctor: '_Tuple3',
							_0: _p24,
							_1: _p25,
							_2: _elm_lang$core$List$reverse(acc)
						};
					} else {
						var _v25 = {ctor: '::', _0: _p23._2._0, _1: acc},
							_v26 = _p24,
							_v27 = _p25;
						acc = _v25;
						state = _v26;
						stream = _v27;
						continue accumulate;
					}
				} else {
					return {
						ctor: '_Tuple3',
						_0: state,
						_1: stream,
						_2: _elm_lang$core$List$reverse(acc)
					};
				}
			}
		});
	return _elm_community$parser_combinators$Combine$Parser(
		F2(
			function (state, stream) {
				var _p26 = A3(
					accumulate,
					{ctor: '[]'},
					state,
					stream);
				var rstate = _p26._0;
				var rstream = _p26._1;
				var res = _p26._2;
				return {
					ctor: '_Tuple3',
					_0: rstate,
					_1: rstream,
					_2: _elm_lang$core$Result$Ok(res)
				};
			}));
};
var _elm_community$parser_combinators$Combine$many1 = function (p) {
	return A2(
		_elm_community$parser_combinators$Combine_ops['<*>'],
		A2(
			_elm_community$parser_combinators$Combine_ops['<$>'],
			F2(
				function (x, y) {
					return {ctor: '::', _0: x, _1: y};
				}),
			p),
		_elm_community$parser_combinators$Combine$many(p));
};
var _elm_community$parser_combinators$Combine$skipMany1 = function (p) {
	return A2(
		_elm_community$parser_combinators$Combine_ops['<$'],
		{ctor: '_Tuple0'},
		_elm_community$parser_combinators$Combine$many1(
			_elm_community$parser_combinators$Combine$skip(p)));
};
var _elm_community$parser_combinators$Combine$sepBy1 = F2(
	function (sep, p) {
		return A2(
			_elm_community$parser_combinators$Combine_ops['<*>'],
			A2(
				_elm_community$parser_combinators$Combine_ops['<$>'],
				F2(
					function (x, y) {
						return {ctor: '::', _0: x, _1: y};
					}),
				p),
			_elm_community$parser_combinators$Combine$many(
				A2(_elm_community$parser_combinators$Combine_ops['*>'], sep, p)));
	});
var _elm_community$parser_combinators$Combine$sepBy = F2(
	function (sep, p) {
		return A2(
			_elm_community$parser_combinators$Combine_ops['<|>'],
			A2(_elm_community$parser_combinators$Combine$sepBy1, sep, p),
			_elm_community$parser_combinators$Combine$succeed(
				{ctor: '[]'}));
	});
var _elm_community$parser_combinators$Combine$sepEndBy1 = F2(
	function (sep, p) {
		return A2(
			_elm_community$parser_combinators$Combine_ops['<*'],
			A2(_elm_community$parser_combinators$Combine$sepBy1, sep, p),
			_elm_community$parser_combinators$Combine$maybe(sep));
	});
var _elm_community$parser_combinators$Combine$sepEndBy = F2(
	function (sep, p) {
		return A2(
			_elm_community$parser_combinators$Combine_ops['<|>'],
			A2(_elm_community$parser_combinators$Combine$sepEndBy1, sep, p),
			_elm_community$parser_combinators$Combine$succeed(
				{ctor: '[]'}));
	});
var _elm_community$parser_combinators$Combine$skipMany = function (p) {
	return A2(
		_elm_community$parser_combinators$Combine_ops['<$'],
		{ctor: '_Tuple0'},
		_elm_community$parser_combinators$Combine$many(
			_elm_community$parser_combinators$Combine$skip(p)));
};
var _elm_community$parser_combinators$Combine$manyTill = F2(
	function (p, end) {
		var accumulate = F3(
			function (acc, state, stream) {
				accumulate:
				while (true) {
					var _p27 = A3(_elm_community$parser_combinators$Combine$app, end, state, stream);
					if (_p27._2.ctor === 'Ok') {
						return {
							ctor: '_Tuple3',
							_0: _p27._0,
							_1: _p27._1,
							_2: _elm_lang$core$Result$Ok(
								_elm_lang$core$List$reverse(acc))
						};
					} else {
						var _p28 = A3(_elm_community$parser_combinators$Combine$app, p, state, stream);
						if ((_p28.ctor === '_Tuple3') && (_p28._2.ctor === 'Ok')) {
							var _v30 = {ctor: '::', _0: _p28._2._0, _1: acc},
								_v31 = _p28._0,
								_v32 = _p28._1;
							acc = _v30;
							state = _v31;
							stream = _v32;
							continue accumulate;
						} else {
							return {
								ctor: '_Tuple3',
								_0: _p27._0,
								_1: _p27._1,
								_2: _elm_lang$core$Result$Err(_p27._2._0)
							};
						}
					}
				}
			});
		return _elm_community$parser_combinators$Combine$Parser(
			accumulate(
				{ctor: '[]'}));
	});

var _elm_community$parser_combinators$Combine_Char$crlf = A2(
	_elm_community$parser_combinators$Combine_ops['<$'],
	_elm_lang$core$Native_Utils.chr('\n'),
	A2(
		_elm_community$parser_combinators$Combine_ops['<?>'],
		_elm_community$parser_combinators$Combine$regex('\r\n'),
		'expected crlf'));
var _elm_community$parser_combinators$Combine_Char$satisfy = function (pred) {
	return _elm_community$parser_combinators$Combine$primitive(
		F2(
			function (state, stream) {
				var message = 'could not satisfy predicate';
				var _p0 = _elm_lang$core$String$uncons(stream.input);
				if (_p0.ctor === 'Just') {
					var _p1 = _p0._0._0;
					return pred(_p1) ? {
						ctor: '_Tuple3',
						_0: state,
						_1: _elm_lang$core$Native_Utils.update(
							stream,
							{input: _p0._0._1, position: stream.position + 1}),
						_2: _elm_lang$core$Result$Ok(_p1)
					} : {
						ctor: '_Tuple3',
						_0: state,
						_1: stream,
						_2: _elm_lang$core$Result$Err(
							{
								ctor: '::',
								_0: message,
								_1: {ctor: '[]'}
							})
					};
				} else {
					return {
						ctor: '_Tuple3',
						_0: state,
						_1: stream,
						_2: _elm_lang$core$Result$Err(
							{
								ctor: '::',
								_0: message,
								_1: {ctor: '[]'}
							})
					};
				}
			}));
};
var _elm_community$parser_combinators$Combine_Char$char = function (c) {
	return A2(
		_elm_community$parser_combinators$Combine_ops['<?>'],
		_elm_community$parser_combinators$Combine_Char$satisfy(
			F2(
				function (x, y) {
					return _elm_lang$core$Native_Utils.eq(x, y);
				})(c)),
		A2(
			_elm_lang$core$Basics_ops['++'],
			'expected ',
			_elm_lang$core$Basics$toString(c)));
};
var _elm_community$parser_combinators$Combine_Char$anyChar = A2(
	_elm_community$parser_combinators$Combine_ops['<?>'],
	_elm_community$parser_combinators$Combine_Char$satisfy(
		_elm_lang$core$Basics$always(true)),
	'expected any character');
var _elm_community$parser_combinators$Combine_Char$oneOf = function (cs) {
	return A2(
		_elm_community$parser_combinators$Combine_ops['<?>'],
		_elm_community$parser_combinators$Combine_Char$satisfy(
			A2(_elm_lang$core$Basics$flip, _elm_lang$core$List$member, cs)),
		A2(
			_elm_lang$core$Basics_ops['++'],
			'expected one of ',
			_elm_lang$core$Basics$toString(cs)));
};
var _elm_community$parser_combinators$Combine_Char$noneOf = function (cs) {
	return A2(
		_elm_community$parser_combinators$Combine_ops['<?>'],
		_elm_community$parser_combinators$Combine_Char$satisfy(
			function (_p2) {
				return !A3(_elm_lang$core$Basics$flip, _elm_lang$core$List$member, cs, _p2);
			}),
		A2(
			_elm_lang$core$Basics_ops['++'],
			'expected none of ',
			_elm_lang$core$Basics$toString(cs)));
};
var _elm_community$parser_combinators$Combine_Char$space = A2(
	_elm_community$parser_combinators$Combine_ops['<?>'],
	_elm_community$parser_combinators$Combine_Char$satisfy(
		F2(
			function (x, y) {
				return _elm_lang$core$Native_Utils.eq(x, y);
			})(
			_elm_lang$core$Native_Utils.chr(' '))),
	'expected space');
var _elm_community$parser_combinators$Combine_Char$tab = A2(
	_elm_community$parser_combinators$Combine_ops['<?>'],
	_elm_community$parser_combinators$Combine_Char$satisfy(
		F2(
			function (x, y) {
				return _elm_lang$core$Native_Utils.eq(x, y);
			})(
			_elm_lang$core$Native_Utils.chr('\t'))),
	'expected tab');
var _elm_community$parser_combinators$Combine_Char$newline = A2(
	_elm_community$parser_combinators$Combine_ops['<?>'],
	_elm_community$parser_combinators$Combine_Char$satisfy(
		F2(
			function (x, y) {
				return _elm_lang$core$Native_Utils.eq(x, y);
			})(
			_elm_lang$core$Native_Utils.chr('\n'))),
	'expected newline');
var _elm_community$parser_combinators$Combine_Char$eol = A2(_elm_community$parser_combinators$Combine_ops['<|>'], _elm_community$parser_combinators$Combine_Char$newline, _elm_community$parser_combinators$Combine_Char$crlf);
var _elm_community$parser_combinators$Combine_Char$lower = A2(
	_elm_community$parser_combinators$Combine_ops['<?>'],
	_elm_community$parser_combinators$Combine_Char$satisfy(_elm_lang$core$Char$isLower),
	'expected a lowercase character');
var _elm_community$parser_combinators$Combine_Char$upper = A2(
	_elm_community$parser_combinators$Combine_ops['<?>'],
	_elm_community$parser_combinators$Combine_Char$satisfy(_elm_lang$core$Char$isUpper),
	'expected an uppercase character');
var _elm_community$parser_combinators$Combine_Char$digit = A2(
	_elm_community$parser_combinators$Combine_ops['<?>'],
	_elm_community$parser_combinators$Combine_Char$satisfy(_elm_lang$core$Char$isDigit),
	'expected a digit');
var _elm_community$parser_combinators$Combine_Char$octDigit = A2(
	_elm_community$parser_combinators$Combine_ops['<?>'],
	_elm_community$parser_combinators$Combine_Char$satisfy(_elm_lang$core$Char$isOctDigit),
	'expected an octal digit');
var _elm_community$parser_combinators$Combine_Char$hexDigit = A2(
	_elm_community$parser_combinators$Combine_ops['<?>'],
	_elm_community$parser_combinators$Combine_Char$satisfy(_elm_lang$core$Char$isHexDigit),
	'expected a hexadecimal digit');

var _elm_community$parser_combinators$Combine_Num$digit = function () {
	var toDigit = function (c) {
		return _elm_lang$core$Char$toCode(c) - _elm_lang$core$Char$toCode(
			_elm_lang$core$Native_Utils.chr('0'));
	};
	return A2(
		_elm_community$parser_combinators$Combine_ops['<$>'],
		toDigit,
		A2(_elm_community$parser_combinators$Combine_ops['<?>'], _elm_community$parser_combinators$Combine_Char$digit, 'expected a digit'));
}();
var _elm_community$parser_combinators$Combine_Num$sign = A2(
	_elm_community$parser_combinators$Combine$optional,
	1,
	_elm_community$parser_combinators$Combine$choice(
		{
			ctor: '::',
			_0: A2(
				_elm_community$parser_combinators$Combine_ops['<$'],
				1,
				_elm_community$parser_combinators$Combine$string('+')),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_community$parser_combinators$Combine_ops['<$'],
					-1,
					_elm_community$parser_combinators$Combine$string('-')),
				_1: {ctor: '[]'}
			}
		}));
var _elm_community$parser_combinators$Combine_Num$unwrap = F2(
	function (f, s) {
		var _p0 = f(s);
		if (_p0.ctor === 'Ok') {
			return _p0._0;
		} else {
			return _elm_lang$core$Native_Utils.crashCase(
				'Combine.Num',
				{
					start: {line: 23, column: 5},
					end: {line: 28, column: 83}
				},
				_p0)(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'impossible state in Combine.Num.unwrap: ',
					_elm_lang$core$Basics$toString(_p0._0)));
		}
	});
var _elm_community$parser_combinators$Combine_Num$toInt = _elm_community$parser_combinators$Combine_Num$unwrap(_elm_lang$core$String$toInt);
var _elm_community$parser_combinators$Combine_Num$int = A2(
	_elm_community$parser_combinators$Combine_ops['<*>'],
	A2(
		_elm_community$parser_combinators$Combine_ops['<$>'],
		F2(
			function (x, y) {
				return x * y;
			}),
		_elm_community$parser_combinators$Combine_Num$sign),
	A2(
		_elm_community$parser_combinators$Combine_ops['<?>'],
		A2(
			_elm_community$parser_combinators$Combine_ops['<$>'],
			_elm_community$parser_combinators$Combine_Num$toInt,
			_elm_community$parser_combinators$Combine$regex('(0|[1-9][0-9]*)')),
		'expected an integer'));
var _elm_community$parser_combinators$Combine_Num$toFloat = _elm_community$parser_combinators$Combine_Num$unwrap(_elm_lang$core$String$toFloat);
var _elm_community$parser_combinators$Combine_Num$float = A2(
	_elm_community$parser_combinators$Combine_ops['<*>'],
	A2(
		_elm_community$parser_combinators$Combine_ops['<$>'],
		function (_p2) {
			return F2(
				function (x, y) {
					return x * y;
				})(
				_elm_lang$core$Basics$toFloat(_p2));
		},
		_elm_community$parser_combinators$Combine_Num$sign),
	A2(
		_elm_community$parser_combinators$Combine_ops['<?>'],
		A2(
			_elm_community$parser_combinators$Combine_ops['<$>'],
			_elm_community$parser_combinators$Combine_Num$toFloat,
			_elm_community$parser_combinators$Combine$regex('(0|[1-9][0-9]*)(\\.[0-9]+)')),
		'expected a float'));

var _elm_community$elm_time$Time_Internal$digitsInRange = F3(
	function (digitsToParse, lo, hi) {
		var failure = _elm_community$parser_combinators$Combine$fail(
			A2(
				_elm_lang$core$Basics_ops['++'],
				'expected ',
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$Basics$toString(digitsToParse),
					A2(
						_elm_lang$core$Basics_ops['++'],
						' digits in the range [',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(lo),
							A2(
								_elm_lang$core$Basics_ops['++'],
								', ',
								A2(
									_elm_lang$core$Basics_ops['++'],
									_elm_lang$core$Basics$toString(hi),
									']')))))));
		return A2(
			_elm_community$parser_combinators$Combine$andThen,
			function (digits) {
				var _p0 = _elm_lang$core$String$toInt(digits);
				if (_p0.ctor === 'Ok') {
					var _p1 = _p0._0;
					return ((_elm_lang$core$Native_Utils.cmp(_p1, lo) > -1) && (_elm_lang$core$Native_Utils.cmp(_p1, hi) < 1)) ? _elm_community$parser_combinators$Combine$succeed(_p1) : failure;
				} else {
					return failure;
				}
			},
			_elm_community$parser_combinators$Combine$regex(
				A2(_elm_lang$core$String$repeat, digitsToParse, '\\d')));
	});
var _elm_community$elm_time$Time_Internal$paddedInt = A2(
	_elm_community$parser_combinators$Combine_ops['*>'],
	A2(
		_elm_community$parser_combinators$Combine$optional,
		'',
		_elm_community$parser_combinators$Combine$string('0')),
	_elm_community$parser_combinators$Combine_Num$int);
var _elm_community$elm_time$Time_Internal$intRange = F2(
	function (lo, hi) {
		var validate = function (n) {
			return ((_elm_lang$core$Native_Utils.cmp(n, lo) > -1) && (_elm_lang$core$Native_Utils.cmp(n, hi) < 1)) ? _elm_community$parser_combinators$Combine$succeed(n) : _elm_community$parser_combinators$Combine$fail(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'expected an integer in the range [',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(lo),
						A2(
							_elm_lang$core$Basics_ops['++'],
							', ',
							A2(
								_elm_lang$core$Basics_ops['++'],
								_elm_lang$core$Basics$toString(hi),
								']')))));
		};
		return A2(_elm_community$parser_combinators$Combine_ops['>>='], _elm_community$elm_time$Time_Internal$paddedInt, validate);
	});
var _elm_community$elm_time$Time_Internal$secondMs = 1000;
var _elm_community$elm_time$Time_Internal$minuteMs = 60000;
var _elm_community$elm_time$Time_Internal$hourMs = 3600000;
var _elm_community$elm_time$Time_Internal$dayMs = 86400000;
var _elm_community$elm_time$Time_Internal$padded3 = function (n) {
	return A3(
		_elm_lang$core$String$padLeft,
		3,
		_elm_lang$core$Native_Utils.chr('0'),
		_elm_lang$core$Basics$toString(n));
};
var _elm_community$elm_time$Time_Internal$padded = function (n) {
	return (_elm_lang$core$Native_Utils.cmp(n, 10) < 0) ? A2(
		_elm_lang$core$Basics_ops['++'],
		'0',
		_elm_lang$core$Basics$toString(n)) : _elm_lang$core$Basics$toString(n);
};
var _elm_community$elm_time$Time_Internal$zero = {year: 0, month: 1, day: 1, hour: 0, minute: 0, second: 0, millisecond: 0};
var _elm_community$elm_time$Time_Internal$offsetFromTimeData = function (_p2) {
	var _p3 = _p2;
	return (((A3(_elm_lang$core$Basics$clamp, 0, 23, _p3.hour) * _elm_community$elm_time$Time_Internal$hourMs) + (A3(_elm_lang$core$Basics$clamp, 0, 59, _p3.minute) * _elm_community$elm_time$Time_Internal$minuteMs)) + (A3(_elm_lang$core$Basics$clamp, 0, 59, _p3.second) * _elm_community$elm_time$Time_Internal$secondMs)) + A3(_elm_lang$core$Basics$clamp, 0, 999, _p3.millisecond);
};
var _elm_community$elm_time$Time_Internal$DateTimeData = F7(
	function (a, b, c, d, e, f, g) {
		return {year: a, month: b, day: c, hour: d, minute: e, second: f, millisecond: g};
	});

var _elm_community$elm_time$Time_Date$clampDay = function (day) {
	return A3(_elm_lang$core$Basics$clamp, 1, 31, day);
};
var _elm_community$elm_time$Time_Date$clampMonth = function (month) {
	return A3(_elm_lang$core$Basics$clamp, 1, 12, month);
};
var _elm_community$elm_time$Time_Date$daysFromYear = function (y) {
	return (_elm_lang$core$Native_Utils.cmp(y, 0) > 0) ? ((((366 + ((y - 1) * 365)) + (((y - 1) / 4) | 0)) - (((y - 1) / 100) | 0)) + (((y - 1) / 400) | 0)) : ((_elm_lang$core$Native_Utils.cmp(y, 0) < 0) ? ((((y * 365) + ((y / 4) | 0)) - ((y / 100) | 0)) + ((y / 400) | 0)) : 0);
};
var _elm_community$elm_time$Time_Date$yearFromDays = function (ds) {
	var y = (ds / 365) | 0;
	var d = _elm_community$elm_time$Time_Date$daysFromYear(y);
	return (_elm_lang$core$Native_Utils.cmp(ds, d) < 1) ? (y - 1) : y;
};
var _elm_community$elm_time$Time_Date$isLeapYear = function (y) {
	return _elm_lang$core$Native_Utils.eq(
		A2(_elm_lang$core$Basics_ops['%'], y, 400),
		0) || ((!_elm_lang$core$Native_Utils.eq(
		A2(_elm_lang$core$Basics_ops['%'], y, 100),
		0)) && _elm_lang$core$Native_Utils.eq(
		A2(_elm_lang$core$Basics_ops['%'], y, 4),
		0));
};
var _elm_community$elm_time$Time_Date$unsafeDaysInMonth = F2(
	function (y, m) {
		return _elm_lang$core$Native_Utils.eq(m, 1) ? 31 : ((_elm_lang$core$Native_Utils.eq(m, 2) && _elm_community$elm_time$Time_Date$isLeapYear(y)) ? 29 : (_elm_lang$core$Native_Utils.eq(m, 2) ? 28 : (_elm_lang$core$Native_Utils.eq(m, 3) ? 31 : (_elm_lang$core$Native_Utils.eq(m, 4) ? 30 : (_elm_lang$core$Native_Utils.eq(m, 5) ? 31 : (_elm_lang$core$Native_Utils.eq(m, 6) ? 30 : (_elm_lang$core$Native_Utils.eq(m, 7) ? 31 : (_elm_lang$core$Native_Utils.eq(m, 8) ? 31 : (_elm_lang$core$Native_Utils.eq(m, 9) ? 30 : (_elm_lang$core$Native_Utils.eq(m, 10) ? 31 : (_elm_lang$core$Native_Utils.eq(m, 11) ? 30 : (_elm_lang$core$Native_Utils.eq(m, 12) ? 31 : _elm_lang$core$Native_Utils.crash(
			'Time.Date',
			{
				start: {line: 343, column: 9},
				end: {line: 343, column: 20}
			})(
			A2(
				_elm_lang$core$Basics_ops['++'],
				'invalid call to unsafeDaysInMonth: year=',
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$Basics$toString(y),
					A2(
						_elm_lang$core$Basics_ops['++'],
						' month=',
						_elm_lang$core$Basics$toString(m)))))))))))))))));
	});
var _elm_community$elm_time$Time_Date$daysInMonth = F2(
	function (y, m) {
		return ((_elm_lang$core$Native_Utils.cmp(m, 1) > -1) && (_elm_lang$core$Native_Utils.cmp(m, 12) < 1)) ? _elm_lang$core$Maybe$Just(
			A2(_elm_community$elm_time$Time_Date$unsafeDaysInMonth, y, m)) : _elm_lang$core$Maybe$Nothing;
	});
var _elm_community$elm_time$Time_Date$daysFromYearMonth = F2(
	function (year, month) {
		var go = F3(
			function (year, month, acc) {
				go:
				while (true) {
					if (_elm_lang$core$Native_Utils.eq(month, 0)) {
						return acc;
					} else {
						var _v0 = year,
							_v1 = month - 1,
							_v2 = acc + A2(_elm_community$elm_time$Time_Date$unsafeDaysInMonth, year, month);
						year = _v0;
						month = _v1;
						acc = _v2;
						continue go;
					}
				}
			});
		return A3(go, year, month - 1, 0);
	});
var _elm_community$elm_time$Time_Date$daysFromYearMonthDay = F3(
	function (year, month, day) {
		var dds = day - 1;
		var mds = A2(_elm_community$elm_time$Time_Date$daysFromYearMonth, year, month);
		var yds = _elm_community$elm_time$Time_Date$daysFromYear(year);
		return (yds + mds) + dds;
	});
var _elm_community$elm_time$Time_Date$isValidDate = F3(
	function (year, month, day) {
		return A2(
			_elm_lang$core$Maybe$withDefault,
			false,
			A2(
				_elm_lang$core$Maybe$map,
				function (days) {
					return (_elm_lang$core$Native_Utils.cmp(day, 1) > -1) && (_elm_lang$core$Native_Utils.cmp(day, days) < 1);
				},
				A2(_elm_community$elm_time$Time_Date$daysInMonth, year, month)));
	});
var _elm_community$elm_time$Time_Date$toTuple = function (_p0) {
	var _p1 = _p0;
	return {ctor: '_Tuple3', _0: _p1._0.year, _1: _p1._0.month, _2: _p1._0.day};
};
var _elm_community$elm_time$Time_Date$delta = F2(
	function (_p3, _p2) {
		var _p4 = _p3;
		var _p7 = _p4._0;
		var _p5 = _p2;
		var _p6 = _p5._0;
		return {
			years: _p7.year - _p6.year,
			months: ((_elm_lang$core$Basics$abs(_p7.year) * 12) + _p7.month) - ((_elm_lang$core$Basics$abs(_p6.year) * 12) + _p6.month),
			days: A3(_elm_community$elm_time$Time_Date$daysFromYearMonthDay, _p7.year, _p7.month, _p7.day) - A3(_elm_community$elm_time$Time_Date$daysFromYearMonthDay, _p6.year, _p6.month, _p6.day)
		};
	});
var _elm_community$elm_time$Time_Date$compare = F2(
	function (d1, d2) {
		return A2(
			_elm_lang$core$Basics$compare,
			_elm_community$elm_time$Time_Date$toTuple(d1),
			_elm_community$elm_time$Time_Date$toTuple(d2));
	});
var _elm_community$elm_time$Time_Date$day = function (_p8) {
	var _p9 = _p8;
	return _p9._0.day;
};
var _elm_community$elm_time$Time_Date$month = function (_p10) {
	var _p11 = _p10;
	return _p11._0.month;
};
var _elm_community$elm_time$Time_Date$year = function (_p12) {
	var _p13 = _p12;
	return _p13._0.year;
};
var _elm_community$elm_time$Time_Date$toISO8601 = function (d) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		_elm_lang$core$Basics$toString(
			_elm_community$elm_time$Time_Date$year(d)),
		A2(
			_elm_lang$core$Basics_ops['++'],
			'-',
			A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_community$elm_time$Time_Internal$padded(
					_elm_community$elm_time$Time_Date$month(d)),
				A2(
					_elm_lang$core$Basics_ops['++'],
					'-',
					_elm_community$elm_time$Time_Internal$padded(
						_elm_community$elm_time$Time_Date$day(d))))));
};
var _elm_community$elm_time$Time_Date$DateDelta = F3(
	function (a, b, c) {
		return {years: a, months: b, days: c};
	});
var _elm_community$elm_time$Time_Date$Date = function (a) {
	return {ctor: 'Date', _0: a};
};
var _elm_community$elm_time$Time_Date$firstValid = F3(
	function (year, month, day) {
		var _p14 = A3(_elm_community$elm_time$Time_Date$isValidDate, year, month, day) ? {ctor: '_Tuple3', _0: year, _1: month, _2: day} : (A3(_elm_community$elm_time$Time_Date$isValidDate, year, month, day - 1) ? {ctor: '_Tuple3', _0: year, _1: month, _2: day - 1} : (A3(_elm_community$elm_time$Time_Date$isValidDate, year, month, day - 2) ? {ctor: '_Tuple3', _0: year, _1: month, _2: day - 2} : {ctor: '_Tuple3', _0: year, _1: month, _2: day - 3}));
		var y = _p14._0;
		var m = _p14._1;
		var d = _p14._2;
		return _elm_community$elm_time$Time_Date$Date(
			{year: y, month: m, day: d});
	});
var _elm_community$elm_time$Time_Date$date = F3(
	function (year, month, day) {
		return A3(
			_elm_community$elm_time$Time_Date$firstValid,
			year,
			_elm_community$elm_time$Time_Date$clampMonth(month),
			_elm_community$elm_time$Time_Date$clampDay(day));
	});
var _elm_community$elm_time$Time_Date$addMonths = F2(
	function (months, _p15) {
		var _p16 = _p15;
		var ms = (((_p16._0.year * 12) + _p16._0.month) - 1) + months;
		var yo = (_elm_lang$core$Native_Utils.cmp(ms, 0) < 0) ? -1 : 0;
		return A3(
			_elm_community$elm_time$Time_Date$date,
			(((ms - yo) / 12) | 0) + yo,
			A2(_elm_lang$core$Basics_ops['%'], ms, 12) + 1,
			_p16._0.day);
	});
var _elm_community$elm_time$Time_Date$fromTuple = function (_p17) {
	var _p18 = _p17;
	return A3(_elm_community$elm_time$Time_Date$date, _p18._0, _p18._1, _p18._2);
};
var _elm_community$elm_time$Time_Date$fromISO8601 = function (input) {
	var convert = function (_p19) {
		var _p20 = _p19;
		var _p23 = _p20._0;
		var _p22 = _p20._1;
		var _p21 = _p20._2;
		return A3(_elm_community$elm_time$Time_Date$isValidDate, _p23, _p22, _p21) ? _elm_community$parser_combinators$Combine$succeed(
			A3(_elm_community$elm_time$Time_Date$date, _p23, _p22, _p21)) : _elm_community$parser_combinators$Combine$fail('invalid date');
	};
	var dateTuple = A2(
		_elm_community$parser_combinators$Combine_ops['<*>'],
		A2(
			_elm_community$parser_combinators$Combine_ops['<*>'],
			A2(
				_elm_community$parser_combinators$Combine_ops['<$>'],
				F3(
					function (v0, v1, v2) {
						return {ctor: '_Tuple3', _0: v0, _1: v1, _2: v2};
					}),
				_elm_community$parser_combinators$Combine_Num$int),
			A2(
				_elm_community$parser_combinators$Combine_ops['*>'],
				_elm_community$parser_combinators$Combine$string('-'),
				A2(_elm_community$elm_time$Time_Internal$intRange, 1, 12))),
		A2(
			_elm_community$parser_combinators$Combine_ops['*>'],
			_elm_community$parser_combinators$Combine$string('-'),
			A2(_elm_community$elm_time$Time_Internal$intRange, 1, 31)));
	var _p24 = A2(
		_elm_community$parser_combinators$Combine$parse,
		A2(_elm_community$parser_combinators$Combine_ops['>>='], dateTuple, convert),
		input);
	if (_p24.ctor === 'Ok') {
		return _elm_lang$core$Result$Ok(_p24._0._2);
	} else {
		var messages = A2(_elm_lang$core$String$join, ' or ', _p24._0._2);
		return _elm_lang$core$Result$Err(
			A2(
				_elm_lang$core$Basics_ops['++'],
				'Errors encountered at position ',
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$Basics$toString(_p24._0._1.position),
					A2(_elm_lang$core$Basics_ops['++'], ': ', messages))));
	}
};
var _elm_community$elm_time$Time_Date$setYear = F2(
	function (year, _p25) {
		var _p26 = _p25;
		return A3(_elm_community$elm_time$Time_Date$firstValid, year, _p26._0.month, _p26._0.day);
	});
var _elm_community$elm_time$Time_Date$setMonth = F2(
	function (month, _p27) {
		var _p28 = _p27;
		return A3(
			_elm_community$elm_time$Time_Date$firstValid,
			_p28._0.year,
			_elm_community$elm_time$Time_Date$clampMonth(month),
			_p28._0.day);
	});
var _elm_community$elm_time$Time_Date$setDay = F2(
	function (day, _p29) {
		var _p30 = _p29;
		return A3(
			_elm_community$elm_time$Time_Date$firstValid,
			_p30._0.year,
			_p30._0.month,
			_elm_community$elm_time$Time_Date$clampDay(day));
	});
var _elm_community$elm_time$Time_Date$addYears = F2(
	function (years, _p31) {
		var _p32 = _p31;
		return A3(_elm_community$elm_time$Time_Date$firstValid, _p32._0.year + years, _p32._0.month, _p32._0.day);
	});
var _elm_community$elm_time$Time_Date$dateFromDays = function (ds) {
	var d400 = _elm_community$elm_time$Time_Date$daysFromYear(400);
	var y400 = (ds / d400) | 0;
	var d = A2(_elm_lang$core$Basics$rem, ds, d400);
	var year = _elm_community$elm_time$Time_Date$yearFromDays(d + 1);
	var leap = _elm_community$elm_time$Time_Date$isLeapYear(year) ? F2(
		function (x, y) {
			return x + y;
		})(1) : _elm_lang$core$Basics$identity;
	var doy = d - _elm_community$elm_time$Time_Date$daysFromYear(year);
	var _p33 = (_elm_lang$core$Native_Utils.cmp(doy, 31) < 0) ? {ctor: '_Tuple2', _0: 1, _1: doy + 1} : ((_elm_lang$core$Native_Utils.cmp(
		doy,
		leap(59)) < 0) ? {ctor: '_Tuple2', _0: 2, _1: (doy - 31) + 1} : ((_elm_lang$core$Native_Utils.cmp(
		doy,
		leap(90)) < 0) ? {
		ctor: '_Tuple2',
		_0: 3,
		_1: (doy - leap(59)) + 1
	} : ((_elm_lang$core$Native_Utils.cmp(
		doy,
		leap(120)) < 0) ? {
		ctor: '_Tuple2',
		_0: 4,
		_1: (doy - leap(90)) + 1
	} : ((_elm_lang$core$Native_Utils.cmp(
		doy,
		leap(151)) < 0) ? {
		ctor: '_Tuple2',
		_0: 5,
		_1: (doy - leap(120)) + 1
	} : ((_elm_lang$core$Native_Utils.cmp(
		doy,
		leap(181)) < 0) ? {
		ctor: '_Tuple2',
		_0: 6,
		_1: (doy - leap(151)) + 1
	} : ((_elm_lang$core$Native_Utils.cmp(
		doy,
		leap(212)) < 0) ? {
		ctor: '_Tuple2',
		_0: 7,
		_1: (doy - leap(181)) + 1
	} : ((_elm_lang$core$Native_Utils.cmp(
		doy,
		leap(243)) < 0) ? {
		ctor: '_Tuple2',
		_0: 8,
		_1: (doy - leap(212)) + 1
	} : ((_elm_lang$core$Native_Utils.cmp(
		doy,
		leap(273)) < 0) ? {
		ctor: '_Tuple2',
		_0: 9,
		_1: (doy - leap(243)) + 1
	} : ((_elm_lang$core$Native_Utils.cmp(
		doy,
		leap(304)) < 0) ? {
		ctor: '_Tuple2',
		_0: 10,
		_1: (doy - leap(273)) + 1
	} : ((_elm_lang$core$Native_Utils.cmp(
		doy,
		leap(334)) < 0) ? {
		ctor: '_Tuple2',
		_0: 11,
		_1: (doy - leap(304)) + 1
	} : {
		ctor: '_Tuple2',
		_0: 12,
		_1: (doy - leap(334)) + 1
	}))))))))));
	var month = _p33._0;
	var day = _p33._1;
	return _elm_community$elm_time$Time_Date$Date(
		{year: year + (y400 * 400), month: month, day: day});
};
var _elm_community$elm_time$Time_Date$addDays = F2(
	function (days, _p34) {
		var _p35 = _p34;
		return _elm_community$elm_time$Time_Date$dateFromDays(
			A2(
				F2(
					function (x, y) {
						return x + y;
					}),
				days,
				A3(_elm_community$elm_time$Time_Date$daysFromYearMonthDay, _p35._0.year, _p35._0.month, _p35._0.day)));
	});
var _elm_community$elm_time$Time_Date$Sun = {ctor: 'Sun'};
var _elm_community$elm_time$Time_Date$Sat = {ctor: 'Sat'};
var _elm_community$elm_time$Time_Date$Fri = {ctor: 'Fri'};
var _elm_community$elm_time$Time_Date$Thu = {ctor: 'Thu'};
var _elm_community$elm_time$Time_Date$Wed = {ctor: 'Wed'};
var _elm_community$elm_time$Time_Date$Tue = {ctor: 'Tue'};
var _elm_community$elm_time$Time_Date$Mon = {ctor: 'Mon'};
var _elm_community$elm_time$Time_Date$weekday = function (_p36) {
	var _p37 = _p36;
	var _p39 = _p37._0.year;
	var _p38 = _p37._0.month;
	var y = (_elm_lang$core$Native_Utils.cmp(_p38, 3) < 0) ? (_p39 - 1) : _p39;
	var m = _elm_lang$core$Native_Utils.eq(_p38, 1) ? 0 : (_elm_lang$core$Native_Utils.eq(_p38, 2) ? 3 : (_elm_lang$core$Native_Utils.eq(_p38, 3) ? 2 : (_elm_lang$core$Native_Utils.eq(_p38, 4) ? 5 : (_elm_lang$core$Native_Utils.eq(_p38, 5) ? 0 : (_elm_lang$core$Native_Utils.eq(_p38, 6) ? 3 : (_elm_lang$core$Native_Utils.eq(_p38, 7) ? 5 : (_elm_lang$core$Native_Utils.eq(_p38, 8) ? 1 : (_elm_lang$core$Native_Utils.eq(_p38, 9) ? 4 : (_elm_lang$core$Native_Utils.eq(_p38, 10) ? 6 : (_elm_lang$core$Native_Utils.eq(_p38, 11) ? 2 : 4))))))))));
	var d = A2(_elm_lang$core$Basics_ops['%'], ((((y + ((y / 4) | 0)) - ((y / 100) | 0)) + ((y / 400) | 0)) + m) + _p37._0.day, 7);
	return _elm_lang$core$Native_Utils.eq(d, 0) ? _elm_community$elm_time$Time_Date$Sun : (_elm_lang$core$Native_Utils.eq(d, 1) ? _elm_community$elm_time$Time_Date$Mon : (_elm_lang$core$Native_Utils.eq(d, 2) ? _elm_community$elm_time$Time_Date$Tue : (_elm_lang$core$Native_Utils.eq(d, 3) ? _elm_community$elm_time$Time_Date$Wed : (_elm_lang$core$Native_Utils.eq(d, 4) ? _elm_community$elm_time$Time_Date$Thu : (_elm_lang$core$Native_Utils.eq(d, 5) ? _elm_community$elm_time$Time_Date$Fri : _elm_community$elm_time$Time_Date$Sat)))));
};

var _elm_lang$core$Set$foldr = F3(
	function (f, b, _p0) {
		var _p1 = _p0;
		return A3(
			_elm_lang$core$Dict$foldr,
			F3(
				function (k, _p2, b) {
					return A2(f, k, b);
				}),
			b,
			_p1._0);
	});
var _elm_lang$core$Set$foldl = F3(
	function (f, b, _p3) {
		var _p4 = _p3;
		return A3(
			_elm_lang$core$Dict$foldl,
			F3(
				function (k, _p5, b) {
					return A2(f, k, b);
				}),
			b,
			_p4._0);
	});
var _elm_lang$core$Set$toList = function (_p6) {
	var _p7 = _p6;
	return _elm_lang$core$Dict$keys(_p7._0);
};
var _elm_lang$core$Set$size = function (_p8) {
	var _p9 = _p8;
	return _elm_lang$core$Dict$size(_p9._0);
};
var _elm_lang$core$Set$member = F2(
	function (k, _p10) {
		var _p11 = _p10;
		return A2(_elm_lang$core$Dict$member, k, _p11._0);
	});
var _elm_lang$core$Set$isEmpty = function (_p12) {
	var _p13 = _p12;
	return _elm_lang$core$Dict$isEmpty(_p13._0);
};
var _elm_lang$core$Set$Set_elm_builtin = function (a) {
	return {ctor: 'Set_elm_builtin', _0: a};
};
var _elm_lang$core$Set$empty = _elm_lang$core$Set$Set_elm_builtin(_elm_lang$core$Dict$empty);
var _elm_lang$core$Set$singleton = function (k) {
	return _elm_lang$core$Set$Set_elm_builtin(
		A2(
			_elm_lang$core$Dict$singleton,
			k,
			{ctor: '_Tuple0'}));
};
var _elm_lang$core$Set$insert = F2(
	function (k, _p14) {
		var _p15 = _p14;
		return _elm_lang$core$Set$Set_elm_builtin(
			A3(
				_elm_lang$core$Dict$insert,
				k,
				{ctor: '_Tuple0'},
				_p15._0));
	});
var _elm_lang$core$Set$fromList = function (xs) {
	return A3(_elm_lang$core$List$foldl, _elm_lang$core$Set$insert, _elm_lang$core$Set$empty, xs);
};
var _elm_lang$core$Set$map = F2(
	function (f, s) {
		return _elm_lang$core$Set$fromList(
			A2(
				_elm_lang$core$List$map,
				f,
				_elm_lang$core$Set$toList(s)));
	});
var _elm_lang$core$Set$remove = F2(
	function (k, _p16) {
		var _p17 = _p16;
		return _elm_lang$core$Set$Set_elm_builtin(
			A2(_elm_lang$core$Dict$remove, k, _p17._0));
	});
var _elm_lang$core$Set$union = F2(
	function (_p19, _p18) {
		var _p20 = _p19;
		var _p21 = _p18;
		return _elm_lang$core$Set$Set_elm_builtin(
			A2(_elm_lang$core$Dict$union, _p20._0, _p21._0));
	});
var _elm_lang$core$Set$intersect = F2(
	function (_p23, _p22) {
		var _p24 = _p23;
		var _p25 = _p22;
		return _elm_lang$core$Set$Set_elm_builtin(
			A2(_elm_lang$core$Dict$intersect, _p24._0, _p25._0));
	});
var _elm_lang$core$Set$diff = F2(
	function (_p27, _p26) {
		var _p28 = _p27;
		var _p29 = _p26;
		return _elm_lang$core$Set$Set_elm_builtin(
			A2(_elm_lang$core$Dict$diff, _p28._0, _p29._0));
	});
var _elm_lang$core$Set$filter = F2(
	function (p, _p30) {
		var _p31 = _p30;
		return _elm_lang$core$Set$Set_elm_builtin(
			A2(
				_elm_lang$core$Dict$filter,
				F2(
					function (k, _p32) {
						return p(k);
					}),
				_p31._0));
	});
var _elm_lang$core$Set$partition = F2(
	function (p, _p33) {
		var _p34 = _p33;
		var _p35 = A2(
			_elm_lang$core$Dict$partition,
			F2(
				function (k, _p36) {
					return p(k);
				}),
			_p34._0);
		var p1 = _p35._0;
		var p2 = _p35._1;
		return {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Set$Set_elm_builtin(p1),
			_1: _elm_lang$core$Set$Set_elm_builtin(p2)
		};
	});

var _elm_community$json_extra$Json_Encode_Extra$dict = F3(
	function (toKey, toValue, dict) {
		return _elm_lang$core$Json_Encode$object(
			A2(
				_elm_lang$core$List$map,
				function (_p0) {
					var _p1 = _p0;
					return {
						ctor: '_Tuple2',
						_0: toKey(_p1._0),
						_1: toValue(_p1._1)
					};
				},
				_elm_lang$core$Dict$toList(dict)));
	});
var _elm_community$json_extra$Json_Encode_Extra$maybe = function (encoder) {
	return function (_p2) {
		return A2(
			_elm_lang$core$Maybe$withDefault,
			_elm_lang$core$Json_Encode$null,
			A2(_elm_lang$core$Maybe$map, encoder, _p2));
	};
};

var _elm_community$maybe_extra$Maybe_Extra$foldrValues = F2(
	function (item, list) {
		var _p0 = item;
		if (_p0.ctor === 'Nothing') {
			return list;
		} else {
			return {ctor: '::', _0: _p0._0, _1: list};
		}
	});
var _elm_community$maybe_extra$Maybe_Extra$values = A2(
	_elm_lang$core$List$foldr,
	_elm_community$maybe_extra$Maybe_Extra$foldrValues,
	{ctor: '[]'});
var _elm_community$maybe_extra$Maybe_Extra$filter = F2(
	function (f, m) {
		var _p1 = A2(_elm_lang$core$Maybe$map, f, m);
		if ((_p1.ctor === 'Just') && (_p1._0 === true)) {
			return m;
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _elm_community$maybe_extra$Maybe_Extra$traverseArray = function (f) {
	var step = F2(
		function (e, acc) {
			var _p2 = f(e);
			if (_p2.ctor === 'Nothing') {
				return _elm_lang$core$Maybe$Nothing;
			} else {
				return A2(
					_elm_lang$core$Maybe$map,
					_elm_lang$core$Array$push(_p2._0),
					acc);
			}
		});
	return A2(
		_elm_lang$core$Array$foldl,
		step,
		_elm_lang$core$Maybe$Just(_elm_lang$core$Array$empty));
};
var _elm_community$maybe_extra$Maybe_Extra$combineArray = _elm_community$maybe_extra$Maybe_Extra$traverseArray(_elm_lang$core$Basics$identity);
var _elm_community$maybe_extra$Maybe_Extra$traverse = function (f) {
	var step = F2(
		function (e, acc) {
			var _p3 = f(e);
			if (_p3.ctor === 'Nothing') {
				return _elm_lang$core$Maybe$Nothing;
			} else {
				return A2(
					_elm_lang$core$Maybe$map,
					F2(
						function (x, y) {
							return {ctor: '::', _0: x, _1: y};
						})(_p3._0),
					acc);
			}
		});
	return A2(
		_elm_lang$core$List$foldr,
		step,
		_elm_lang$core$Maybe$Just(
			{ctor: '[]'}));
};
var _elm_community$maybe_extra$Maybe_Extra$combine = _elm_community$maybe_extra$Maybe_Extra$traverse(_elm_lang$core$Basics$identity);
var _elm_community$maybe_extra$Maybe_Extra$toArray = function (m) {
	var _p4 = m;
	if (_p4.ctor === 'Nothing') {
		return _elm_lang$core$Array$empty;
	} else {
		return A2(_elm_lang$core$Array$repeat, 1, _p4._0);
	}
};
var _elm_community$maybe_extra$Maybe_Extra$toList = function (m) {
	var _p5 = m;
	if (_p5.ctor === 'Nothing') {
		return {ctor: '[]'};
	} else {
		return {
			ctor: '::',
			_0: _p5._0,
			_1: {ctor: '[]'}
		};
	}
};
var _elm_community$maybe_extra$Maybe_Extra$orElse = F2(
	function (ma, mb) {
		var _p6 = mb;
		if (_p6.ctor === 'Nothing') {
			return ma;
		} else {
			return mb;
		}
	});
var _elm_community$maybe_extra$Maybe_Extra$orElseLazy = F2(
	function (fma, mb) {
		var _p7 = mb;
		if (_p7.ctor === 'Nothing') {
			return fma(
				{ctor: '_Tuple0'});
		} else {
			return mb;
		}
	});
var _elm_community$maybe_extra$Maybe_Extra$orLazy = F2(
	function (ma, fmb) {
		var _p8 = ma;
		if (_p8.ctor === 'Nothing') {
			return fmb(
				{ctor: '_Tuple0'});
		} else {
			return ma;
		}
	});
var _elm_community$maybe_extra$Maybe_Extra$or = F2(
	function (ma, mb) {
		var _p9 = ma;
		if (_p9.ctor === 'Nothing') {
			return mb;
		} else {
			return ma;
		}
	});
var _elm_community$maybe_extra$Maybe_Extra$prev = _elm_lang$core$Maybe$map2(_elm_lang$core$Basics$always);
var _elm_community$maybe_extra$Maybe_Extra$next = _elm_lang$core$Maybe$map2(
	_elm_lang$core$Basics$flip(_elm_lang$core$Basics$always));
var _elm_community$maybe_extra$Maybe_Extra$andMap = _elm_lang$core$Maybe$map2(
	F2(
		function (x, y) {
			return y(x);
		}));
var _elm_community$maybe_extra$Maybe_Extra$unpack = F3(
	function (d, f, m) {
		var _p10 = m;
		if (_p10.ctor === 'Nothing') {
			return d(
				{ctor: '_Tuple0'});
		} else {
			return f(_p10._0);
		}
	});
var _elm_community$maybe_extra$Maybe_Extra$unwrap = F3(
	function (d, f, m) {
		var _p11 = m;
		if (_p11.ctor === 'Nothing') {
			return d;
		} else {
			return f(_p11._0);
		}
	});
var _elm_community$maybe_extra$Maybe_Extra$isJust = function (m) {
	var _p12 = m;
	if (_p12.ctor === 'Nothing') {
		return false;
	} else {
		return true;
	}
};
var _elm_community$maybe_extra$Maybe_Extra$isNothing = function (m) {
	var _p13 = m;
	if (_p13.ctor === 'Nothing') {
		return true;
	} else {
		return false;
	}
};
var _elm_community$maybe_extra$Maybe_Extra$join = function (mx) {
	var _p14 = mx;
	if (_p14.ctor === 'Just') {
		return _p14._0;
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _elm_community$maybe_extra$Maybe_Extra_ops = _elm_community$maybe_extra$Maybe_Extra_ops || {};
_elm_community$maybe_extra$Maybe_Extra_ops['?'] = F2(
	function (mx, x) {
		return A2(_elm_lang$core$Maybe$withDefault, x, mx);
	});

var _elm_lang$core$Native_Bitwise = function() {

return {
	and: F2(function and(a, b) { return a & b; }),
	or: F2(function or(a, b) { return a | b; }),
	xor: F2(function xor(a, b) { return a ^ b; }),
	complement: function complement(a) { return ~a; },
	shiftLeftBy: F2(function(offset, a) { return a << offset; }),
	shiftRightBy: F2(function(offset, a) { return a >> offset; }),
	shiftRightZfBy: F2(function(offset, a) { return a >>> offset; })
};

}();

var _elm_lang$core$Bitwise$shiftRightZfBy = _elm_lang$core$Native_Bitwise.shiftRightZfBy;
var _elm_lang$core$Bitwise$shiftRightBy = _elm_lang$core$Native_Bitwise.shiftRightBy;
var _elm_lang$core$Bitwise$shiftLeftBy = _elm_lang$core$Native_Bitwise.shiftLeftBy;
var _elm_lang$core$Bitwise$complement = _elm_lang$core$Native_Bitwise.complement;
var _elm_lang$core$Bitwise$xor = _elm_lang$core$Native_Bitwise.xor;
var _elm_lang$core$Bitwise$or = _elm_lang$core$Native_Bitwise.or;
var _elm_lang$core$Bitwise$and = _elm_lang$core$Native_Bitwise.and;

var _elm_community$string_extra$String_Extra$accentRegex = function () {
	var matches = {
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: '[à-æ]', _1: 'a'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: '[À-Æ]', _1: 'A'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'ç', _1: 'c'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'Ç', _1: 'C'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: '[è-ë]', _1: 'e'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: '[È-Ë]', _1: 'E'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: '[ì-ï]', _1: 'i'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: '[Ì-Ï]', _1: 'I'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'ñ', _1: 'n'},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'Ñ', _1: 'N'},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: '[ò-ö]', _1: 'o'},
												_1: {
													ctor: '::',
													_0: {ctor: '_Tuple2', _0: '[Ò-Ö]', _1: 'O'},
													_1: {
														ctor: '::',
														_0: {ctor: '_Tuple2', _0: '[ù-ü]', _1: 'u'},
														_1: {
															ctor: '::',
															_0: {ctor: '_Tuple2', _0: '[Ù-Ü]', _1: 'U'},
															_1: {
																ctor: '::',
																_0: {ctor: '_Tuple2', _0: 'ý', _1: 'y'},
																_1: {
																	ctor: '::',
																	_0: {ctor: '_Tuple2', _0: 'ÿ', _1: 'y'},
																	_1: {
																		ctor: '::',
																		_0: {ctor: '_Tuple2', _0: 'Ý', _1: 'Y'},
																		_1: {ctor: '[]'}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	};
	return A2(
		_elm_lang$core$List$map,
		function (_p0) {
			var _p1 = _p0;
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Regex$regex(_p1._0),
				_1: _p1._1
			};
		},
		matches);
}();
var _elm_community$string_extra$String_Extra$removeAccents = function (string) {
	if (_elm_lang$core$String$isEmpty(string)) {
		return string;
	} else {
		var do_regex_to_remove_acents = function (_p2) {
			var _p3 = _p2;
			return A3(
				_elm_lang$core$Regex$replace,
				_elm_lang$core$Regex$All,
				_p3._0,
				function (_p4) {
					return _p3._1;
				});
		};
		return A3(_elm_lang$core$List$foldl, do_regex_to_remove_acents, string, _elm_community$string_extra$String_Extra$accentRegex);
	}
};
var _elm_community$string_extra$String_Extra$nonEmpty = function (string) {
	return _elm_lang$core$String$isEmpty(string) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(string);
};
var _elm_community$string_extra$String_Extra$replacementCodePoint = 65533;
var _elm_community$string_extra$String_Extra$toCodePoints = function (string) {
	var allCodeUnits = A2(
		_elm_lang$core$List$map,
		_elm_lang$core$Char$toCode,
		_elm_lang$core$String$toList(string));
	var combineAndReverse = F2(
		function (codeUnits, accumulated) {
			combineAndReverse:
			while (true) {
				var _p5 = codeUnits;
				if (_p5.ctor === '[]') {
					return accumulated;
				} else {
					var _p9 = _p5._0;
					var _p8 = _p5._1;
					if ((_elm_lang$core$Native_Utils.cmp(_p9, 0) > -1) && (_elm_lang$core$Native_Utils.cmp(_p9, 55295) < 1)) {
						var _v3 = _p8,
							_v4 = {ctor: '::', _0: _p9, _1: accumulated};
						codeUnits = _v3;
						accumulated = _v4;
						continue combineAndReverse;
					} else {
						if ((_elm_lang$core$Native_Utils.cmp(_p9, 55296) > -1) && (_elm_lang$core$Native_Utils.cmp(_p9, 56319) < 1)) {
							var _p6 = _p8;
							if (_p6.ctor === '[]') {
								return {ctor: '::', _0: _elm_community$string_extra$String_Extra$replacementCodePoint, _1: accumulated};
							} else {
								var _p7 = _p6._0;
								if ((_elm_lang$core$Native_Utils.cmp(_p7, 56320) > -1) && (_elm_lang$core$Native_Utils.cmp(_p7, 57343) < 1)) {
									var codePoint = (65536 + ((_p9 - 55296) * 1024)) + (_p7 - 56320);
									var _v6 = _p6._1,
										_v7 = {ctor: '::', _0: codePoint, _1: accumulated};
									codeUnits = _v6;
									accumulated = _v7;
									continue combineAndReverse;
								} else {
									var _v8 = _p8,
										_v9 = {ctor: '::', _0: _elm_community$string_extra$String_Extra$replacementCodePoint, _1: accumulated};
									codeUnits = _v8;
									accumulated = _v9;
									continue combineAndReverse;
								}
							}
						} else {
							if ((_elm_lang$core$Native_Utils.cmp(_p9, 57344) > -1) && (_elm_lang$core$Native_Utils.cmp(_p9, 65535) < 1)) {
								var _v10 = _p8,
									_v11 = {ctor: '::', _0: _p9, _1: accumulated};
								codeUnits = _v10;
								accumulated = _v11;
								continue combineAndReverse;
							} else {
								var _v12 = _p8,
									_v13 = {ctor: '::', _0: _elm_community$string_extra$String_Extra$replacementCodePoint, _1: accumulated};
								codeUnits = _v12;
								accumulated = _v13;
								continue combineAndReverse;
							}
						}
					}
				}
			}
		});
	return _elm_lang$core$List$reverse(
		A2(
			combineAndReverse,
			allCodeUnits,
			{ctor: '[]'}));
};
var _elm_community$string_extra$String_Extra$fromCodePoints = function (allCodePoints) {
	var splitAndReverse = F2(
		function (codePoints, accumulated) {
			splitAndReverse:
			while (true) {
				var _p10 = codePoints;
				if (_p10.ctor === '[]') {
					return accumulated;
				} else {
					var _p12 = _p10._1;
					var _p11 = _p10._0;
					if ((_elm_lang$core$Native_Utils.cmp(_p11, 0) > -1) && (_elm_lang$core$Native_Utils.cmp(_p11, 55295) < 1)) {
						var _v15 = _p12,
							_v16 = {ctor: '::', _0: _p11, _1: accumulated};
						codePoints = _v15;
						accumulated = _v16;
						continue splitAndReverse;
					} else {
						if ((_elm_lang$core$Native_Utils.cmp(_p11, 65536) > -1) && (_elm_lang$core$Native_Utils.cmp(_p11, 1114111) < 1)) {
							var subtracted = _p11 - 65536;
							var leading = (subtracted >> 10) + 55296;
							var trailing = (subtracted & 1023) + 56320;
							var _v17 = _p12,
								_v18 = {
								ctor: '::',
								_0: trailing,
								_1: {ctor: '::', _0: leading, _1: accumulated}
							};
							codePoints = _v17;
							accumulated = _v18;
							continue splitAndReverse;
						} else {
							if ((_elm_lang$core$Native_Utils.cmp(_p11, 57344) > -1) && (_elm_lang$core$Native_Utils.cmp(_p11, 65535) < 1)) {
								var _v19 = _p12,
									_v20 = {ctor: '::', _0: _p11, _1: accumulated};
								codePoints = _v19;
								accumulated = _v20;
								continue splitAndReverse;
							} else {
								var _v21 = _p12,
									_v22 = {ctor: '::', _0: _elm_community$string_extra$String_Extra$replacementCodePoint, _1: accumulated};
								codePoints = _v21;
								accumulated = _v22;
								continue splitAndReverse;
							}
						}
					}
				}
			}
		});
	var allCodeUnits = _elm_lang$core$List$reverse(
		A2(
			splitAndReverse,
			allCodePoints,
			{ctor: '[]'}));
	return _elm_lang$core$String$fromList(
		A2(_elm_lang$core$List$map, _elm_lang$core$Char$fromCode, allCodeUnits));
};
var _elm_community$string_extra$String_Extra$fromFloat = _elm_lang$core$Basics$toString;
var _elm_community$string_extra$String_Extra$fromInt = _elm_lang$core$Basics$toString;
var _elm_community$string_extra$String_Extra$leftOfBack = F2(
	function (pattern, string) {
		return A2(
			_elm_lang$core$Maybe$withDefault,
			'',
			A2(
				_elm_lang$core$Maybe$map,
				A2(_elm_lang$core$Basics$flip, _elm_lang$core$String$left, string),
				_elm_lang$core$List$head(
					_elm_lang$core$List$reverse(
						A2(_elm_lang$core$String$indexes, pattern, string)))));
	});
var _elm_community$string_extra$String_Extra$rightOfBack = F2(
	function (pattern, string) {
		return A2(
			_elm_lang$core$Maybe$withDefault,
			'',
			A2(
				_elm_lang$core$Maybe$map,
				function (_p13) {
					return A3(
						_elm_lang$core$Basics$flip,
						_elm_lang$core$String$dropLeft,
						string,
						A2(
							F2(
								function (x, y) {
									return x + y;
								}),
							_elm_lang$core$String$length(pattern),
							_p13));
				},
				_elm_lang$core$List$head(
					_elm_lang$core$List$reverse(
						A2(_elm_lang$core$String$indexes, pattern, string)))));
	});
var _elm_community$string_extra$String_Extra$firstResultHelp = F2(
	function ($default, list) {
		firstResultHelp:
		while (true) {
			var _p14 = list;
			if (_p14.ctor === '[]') {
				return $default;
			} else {
				if (_p14._0.ctor === 'Just') {
					return _p14._0._0;
				} else {
					var _v24 = $default,
						_v25 = _p14._1;
					$default = _v24;
					list = _v25;
					continue firstResultHelp;
				}
			}
		}
	});
var _elm_community$string_extra$String_Extra$firstResult = function (list) {
	return A2(_elm_community$string_extra$String_Extra$firstResultHelp, '', list);
};
var _elm_community$string_extra$String_Extra$leftOf = F2(
	function (pattern, string) {
		return A2(
			_elm_lang$core$String$join,
			'',
			A2(
				_elm_lang$core$List$map,
				function (_p15) {
					return _elm_community$string_extra$String_Extra$firstResult(
						function (_) {
							return _.submatches;
						}(_p15));
				},
				A3(
					_elm_lang$core$Regex$find,
					_elm_lang$core$Regex$AtMost(1),
					_elm_lang$core$Regex$regex(
						A2(
							_elm_lang$core$Basics_ops['++'],
							'^(.*?)',
							_elm_lang$core$Regex$escape(pattern))),
					string)));
	});
var _elm_community$string_extra$String_Extra$rightOf = F2(
	function (pattern, string) {
		return A2(
			_elm_lang$core$String$join,
			'',
			A2(
				_elm_lang$core$List$map,
				function (_p16) {
					return _elm_community$string_extra$String_Extra$firstResult(
						function (_) {
							return _.submatches;
						}(_p16));
				},
				A3(
					_elm_lang$core$Regex$find,
					_elm_lang$core$Regex$AtMost(1),
					_elm_lang$core$Regex$regex(
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Regex$escape(pattern),
							'(.*)$')),
					string)));
	});
var _elm_community$string_extra$String_Extra$pluralize = F3(
	function (singular, plural, count) {
		return _elm_lang$core$Native_Utils.eq(count, 1) ? A2(_elm_lang$core$Basics_ops['++'], '1 ', singular) : A2(
			_elm_lang$core$Basics_ops['++'],
			_elm_lang$core$Basics$toString(count),
			A2(_elm_lang$core$Basics_ops['++'], ' ', plural));
	});
var _elm_community$string_extra$String_Extra$stripTags = function (string) {
	return A4(
		_elm_lang$core$Regex$replace,
		_elm_lang$core$Regex$All,
		_elm_lang$core$Regex$regex('<\\/?[^>]+>'),
		_elm_lang$core$Basics$always(''),
		string);
};
var _elm_community$string_extra$String_Extra$toSentenceHelper = F3(
	function (lastPart, sentence, list) {
		toSentenceHelper:
		while (true) {
			var _p17 = list;
			if (_p17.ctor === '[]') {
				return sentence;
			} else {
				if (_p17._1.ctor === '[]') {
					return A2(
						_elm_lang$core$Basics_ops['++'],
						sentence,
						A2(_elm_lang$core$Basics_ops['++'], lastPart, _p17._0));
				} else {
					var _v27 = lastPart,
						_v28 = A2(
						_elm_lang$core$Basics_ops['++'],
						sentence,
						A2(_elm_lang$core$Basics_ops['++'], ', ', _p17._0)),
						_v29 = _p17._1;
					lastPart = _v27;
					sentence = _v28;
					list = _v29;
					continue toSentenceHelper;
				}
			}
		}
	});
var _elm_community$string_extra$String_Extra$toSentenceBaseCase = function (list) {
	var _p18 = list;
	_v30_2:
	do {
		if (_p18.ctor === '::') {
			if (_p18._1.ctor === '[]') {
				return _p18._0;
			} else {
				if (_p18._1._1.ctor === '[]') {
					return A2(
						_elm_lang$core$Basics_ops['++'],
						_p18._0,
						A2(_elm_lang$core$Basics_ops['++'], ' and ', _p18._1._0));
				} else {
					break _v30_2;
				}
			}
		} else {
			break _v30_2;
		}
	} while(false);
	return '';
};
var _elm_community$string_extra$String_Extra$toSentenceOxford = function (list) {
	var _p19 = list;
	if (((_p19.ctor === '::') && (_p19._1.ctor === '::')) && (_p19._1._1.ctor === '::')) {
		return A3(
			_elm_community$string_extra$String_Extra$toSentenceHelper,
			', and ',
			A2(
				_elm_lang$core$Basics_ops['++'],
				_p19._0,
				A2(_elm_lang$core$Basics_ops['++'], ', ', _p19._1._0)),
			{ctor: '::', _0: _p19._1._1._0, _1: _p19._1._1._1});
	} else {
		return _elm_community$string_extra$String_Extra$toSentenceBaseCase(list);
	}
};
var _elm_community$string_extra$String_Extra$toSentence = function (list) {
	var _p20 = list;
	if (((_p20.ctor === '::') && (_p20._1.ctor === '::')) && (_p20._1._1.ctor === '::')) {
		return A3(
			_elm_community$string_extra$String_Extra$toSentenceHelper,
			' and ',
			A2(
				_elm_lang$core$Basics_ops['++'],
				_p20._0,
				A2(_elm_lang$core$Basics_ops['++'], ', ', _p20._1._0)),
			{ctor: '::', _0: _p20._1._1._0, _1: _p20._1._1._1});
	} else {
		return _elm_community$string_extra$String_Extra$toSentenceBaseCase(list);
	}
};
var _elm_community$string_extra$String_Extra$ellipsisWith = F3(
	function (howLong, append, string) {
		return (_elm_lang$core$Native_Utils.cmp(
			_elm_lang$core$String$length(string),
			howLong) < 1) ? string : A2(
			_elm_lang$core$Basics_ops['++'],
			A2(
				_elm_lang$core$String$left,
				howLong - _elm_lang$core$String$length(append),
				string),
			append);
	});
var _elm_community$string_extra$String_Extra$ellipsis = F2(
	function (howLong, string) {
		return A3(_elm_community$string_extra$String_Extra$ellipsisWith, howLong, '...', string);
	});
var _elm_community$string_extra$String_Extra$countOccurrences = F2(
	function (needle, haystack) {
		return (_elm_lang$core$Native_Utils.eq(
			_elm_lang$core$String$length(needle),
			0) || _elm_lang$core$Native_Utils.eq(
			_elm_lang$core$String$length(haystack),
			0)) ? 0 : _elm_lang$core$List$length(
			A2(_elm_lang$core$String$indexes, needle, haystack));
	});
var _elm_community$string_extra$String_Extra$unindent = function (multilineSting) {
	var isNotWhitespace = function ($char) {
		return (!_elm_lang$core$Native_Utils.eq(
			$char,
			_elm_lang$core$Native_Utils.chr(' '))) && (!_elm_lang$core$Native_Utils.eq(
			$char,
			_elm_lang$core$Native_Utils.chr('\t')));
	};
	var countLeadingWhitespace = F2(
		function (count, line) {
			countLeadingWhitespace:
			while (true) {
				var _p21 = _elm_lang$core$String$uncons(line);
				if (_p21.ctor === 'Nothing') {
					return count;
				} else {
					var _p23 = _p21._0._1;
					var _p22 = _p21._0._0;
					switch (_p22.valueOf()) {
						case ' ':
							var _v35 = count + 1,
								_v36 = _p23;
							count = _v35;
							line = _v36;
							continue countLeadingWhitespace;
						case '\t':
							var _v37 = count + 1,
								_v38 = _p23;
							count = _v37;
							line = _v38;
							continue countLeadingWhitespace;
						default:
							return count;
					}
				}
			}
		});
	var lines = _elm_lang$core$String$lines(multilineSting);
	var minLead = A2(
		_elm_lang$core$Maybe$withDefault,
		0,
		_elm_lang$core$List$minimum(
			A2(
				_elm_lang$core$List$map,
				countLeadingWhitespace(0),
				A2(
					_elm_lang$core$List$filter,
					_elm_lang$core$String$any(isNotWhitespace),
					lines))));
	return A2(
		_elm_lang$core$String$join,
		'\n',
		A2(
			_elm_lang$core$List$map,
			_elm_lang$core$String$dropLeft(minLead),
			lines));
};
var _elm_community$string_extra$String_Extra$dasherize = function (string) {
	return _elm_lang$core$String$toLower(
		A4(
			_elm_lang$core$Regex$replace,
			_elm_lang$core$Regex$All,
			_elm_lang$core$Regex$regex('[_-\\s]+'),
			_elm_lang$core$Basics$always('-'),
			A4(
				_elm_lang$core$Regex$replace,
				_elm_lang$core$Regex$All,
				_elm_lang$core$Regex$regex('([A-Z])'),
				function (_p24) {
					return A2(
						_elm_lang$core$String$append,
						'-',
						function (_) {
							return _.match;
						}(_p24));
				},
				_elm_lang$core$String$trim(string))));
};
var _elm_community$string_extra$String_Extra$underscored = function (string) {
	return _elm_lang$core$String$toLower(
		A4(
			_elm_lang$core$Regex$replace,
			_elm_lang$core$Regex$All,
			_elm_lang$core$Regex$regex('[_-\\s]+'),
			_elm_lang$core$Basics$always('_'),
			A4(
				_elm_lang$core$Regex$replace,
				_elm_lang$core$Regex$All,
				_elm_lang$core$Regex$regex('([a-z\\d])([A-Z]+)'),
				function (_p25) {
					return A2(
						_elm_lang$core$String$join,
						'_',
						A2(
							_elm_lang$core$List$filterMap,
							_elm_lang$core$Basics$identity,
							function (_) {
								return _.submatches;
							}(_p25)));
				},
				_elm_lang$core$String$trim(string))));
};
var _elm_community$string_extra$String_Extra$unsurround = F2(
	function (wrap, string) {
		if (A2(_elm_lang$core$String$startsWith, wrap, string) && A2(_elm_lang$core$String$endsWith, wrap, string)) {
			var length = _elm_lang$core$String$length(wrap);
			return A2(
				_elm_lang$core$String$dropRight,
				length,
				A2(_elm_lang$core$String$dropLeft, length, string));
		} else {
			return string;
		}
	});
var _elm_community$string_extra$String_Extra$unquote = function (string) {
	return A2(_elm_community$string_extra$String_Extra$unsurround, '\"', string);
};
var _elm_community$string_extra$String_Extra$surround = F2(
	function (wrap, string) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			wrap,
			A2(_elm_lang$core$Basics_ops['++'], string, wrap));
	});
var _elm_community$string_extra$String_Extra$quote = function (string) {
	return A2(_elm_community$string_extra$String_Extra$surround, '\"', string);
};
var _elm_community$string_extra$String_Extra$camelize = function (string) {
	return A4(
		_elm_lang$core$Regex$replace,
		_elm_lang$core$Regex$All,
		_elm_lang$core$Regex$regex('[-_\\s]+(.)?'),
		function (_p26) {
			var _p27 = _p26;
			var _p28 = _p27.submatches;
			if ((_p28.ctor === '::') && (_p28._0.ctor === 'Just')) {
				return _elm_lang$core$String$toUpper(_p28._0._0);
			} else {
				return '';
			}
		},
		_elm_lang$core$String$trim(string));
};
var _elm_community$string_extra$String_Extra$isBlank = function (string) {
	return A2(
		_elm_lang$core$Regex$contains,
		_elm_lang$core$Regex$regex('^\\s*$'),
		string);
};
var _elm_community$string_extra$String_Extra$nonBlank = function (string) {
	return _elm_community$string_extra$String_Extra$isBlank(string) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(string);
};
var _elm_community$string_extra$String_Extra$clean = function (string) {
	return _elm_lang$core$String$trim(
		A4(
			_elm_lang$core$Regex$replace,
			_elm_lang$core$Regex$All,
			_elm_lang$core$Regex$regex('\\s\\s+'),
			_elm_lang$core$Basics$always(' '),
			string));
};
var _elm_community$string_extra$String_Extra$softBreakRegexp = function (width) {
	return _elm_lang$core$Regex$regex(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'.{1,',
			A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(width),
				'}(\\s+|$)|\\S+?(\\s+|$)')));
};
var _elm_community$string_extra$String_Extra$softEllipsis = F2(
	function (howLong, string) {
		return (_elm_lang$core$Native_Utils.cmp(
			_elm_lang$core$String$length(string),
			howLong) < 1) ? string : A3(
			_elm_lang$core$Basics$flip,
			_elm_lang$core$String$append,
			'...',
			A4(
				_elm_lang$core$Regex$replace,
				_elm_lang$core$Regex$All,
				_elm_lang$core$Regex$regex('([\\.,;:\\s])+$'),
				_elm_lang$core$Basics$always(''),
				A2(
					_elm_lang$core$String$join,
					'',
					A2(
						_elm_lang$core$List$map,
						function (_) {
							return _.match;
						},
						A3(
							_elm_lang$core$Regex$find,
							_elm_lang$core$Regex$AtMost(1),
							_elm_community$string_extra$String_Extra$softBreakRegexp(howLong),
							string)))));
	});
var _elm_community$string_extra$String_Extra$softBreak = F2(
	function (width, string) {
		return (_elm_lang$core$Native_Utils.cmp(width, 0) < 1) ? {ctor: '[]'} : A2(
			_elm_lang$core$List$map,
			function (_) {
				return _.match;
			},
			A3(
				_elm_lang$core$Regex$find,
				_elm_lang$core$Regex$All,
				_elm_community$string_extra$String_Extra$softBreakRegexp(width),
				string));
	});
var _elm_community$string_extra$String_Extra$softWrapWith = F3(
	function (width, separator, string) {
		return A2(
			_elm_lang$core$String$join,
			separator,
			A2(_elm_community$string_extra$String_Extra$softBreak, width, string));
	});
var _elm_community$string_extra$String_Extra$softWrap = F2(
	function (width, string) {
		return A3(_elm_community$string_extra$String_Extra$softWrapWith, width, '\n', string);
	});
var _elm_community$string_extra$String_Extra$breaker = F3(
	function (width, string, acc) {
		breaker:
		while (true) {
			var _p29 = string;
			if (_p29 === '') {
				return _elm_lang$core$List$reverse(acc);
			} else {
				var _v42 = width,
					_v43 = A2(_elm_lang$core$String$dropLeft, width, string),
					_v44 = {
					ctor: '::',
					_0: A3(_elm_lang$core$String$slice, 0, width, string),
					_1: acc
				};
				width = _v42;
				string = _v43;
				acc = _v44;
				continue breaker;
			}
		}
	});
var _elm_community$string_extra$String_Extra$break = F2(
	function (width, string) {
		return (_elm_lang$core$Native_Utils.eq(width, 0) || _elm_lang$core$Native_Utils.eq(string, '')) ? {
			ctor: '::',
			_0: string,
			_1: {ctor: '[]'}
		} : A3(
			_elm_community$string_extra$String_Extra$breaker,
			width,
			string,
			{ctor: '[]'});
	});
var _elm_community$string_extra$String_Extra$wrapWith = F3(
	function (width, separator, string) {
		return A2(
			_elm_lang$core$String$join,
			separator,
			A2(_elm_community$string_extra$String_Extra$break, width, string));
	});
var _elm_community$string_extra$String_Extra$wrap = F2(
	function (width, string) {
		return A3(_elm_community$string_extra$String_Extra$wrapWith, width, '\n', string);
	});
var _elm_community$string_extra$String_Extra$replaceSlice = F4(
	function (substitution, start, end, string) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			A3(_elm_lang$core$String$slice, 0, start, string),
			A2(
				_elm_lang$core$Basics_ops['++'],
				substitution,
				A3(
					_elm_lang$core$String$slice,
					end,
					_elm_lang$core$String$length(string),
					string)));
	});
var _elm_community$string_extra$String_Extra$insertAt = F3(
	function (insert, pos, string) {
		return A4(_elm_community$string_extra$String_Extra$replaceSlice, insert, pos, pos, string);
	});
var _elm_community$string_extra$String_Extra$replace = F3(
	function (search, substitution, string) {
		return A4(
			_elm_lang$core$Regex$replace,
			_elm_lang$core$Regex$All,
			_elm_lang$core$Regex$regex(
				_elm_lang$core$Regex$escape(search)),
			function (_p30) {
				return substitution;
			},
			string);
	});
var _elm_community$string_extra$String_Extra$changeCase = F2(
	function (mutator, word) {
		return A2(
			_elm_lang$core$Maybe$withDefault,
			'',
			A2(
				_elm_lang$core$Maybe$map,
				function (_p31) {
					var _p32 = _p31;
					return A2(
						_elm_lang$core$String$cons,
						mutator(_p32._0),
						_p32._1);
				},
				_elm_lang$core$String$uncons(word)));
	});
var _elm_community$string_extra$String_Extra$toSentenceCase = function (word) {
	return A2(_elm_community$string_extra$String_Extra$changeCase, _elm_lang$core$Char$toUpper, word);
};
var _elm_community$string_extra$String_Extra$toTitleCase = function (ws) {
	var uppercaseMatch = A3(
		_elm_lang$core$Regex$replace,
		_elm_lang$core$Regex$All,
		_elm_lang$core$Regex$regex('\\w+'),
		function (_p33) {
			return _elm_community$string_extra$String_Extra$toSentenceCase(
				function (_) {
					return _.match;
				}(_p33));
		});
	return A4(
		_elm_lang$core$Regex$replace,
		_elm_lang$core$Regex$All,
		_elm_lang$core$Regex$regex('^([a-z])|\\s+([a-z])'),
		function (_p34) {
			return uppercaseMatch(
				function (_) {
					return _.match;
				}(_p34));
		},
		ws);
};
var _elm_community$string_extra$String_Extra$classify = function (string) {
	return _elm_community$string_extra$String_Extra$toSentenceCase(
		A3(
			_elm_community$string_extra$String_Extra$replace,
			' ',
			'',
			_elm_community$string_extra$String_Extra$camelize(
				A4(
					_elm_lang$core$Regex$replace,
					_elm_lang$core$Regex$All,
					_elm_lang$core$Regex$regex('[\\W_]'),
					_elm_lang$core$Basics$always(' '),
					string))));
};
var _elm_community$string_extra$String_Extra$humanize = function (string) {
	return _elm_community$string_extra$String_Extra$toSentenceCase(
		_elm_lang$core$String$toLower(
			_elm_lang$core$String$trim(
				A4(
					_elm_lang$core$Regex$replace,
					_elm_lang$core$Regex$All,
					_elm_lang$core$Regex$regex('_id$|[-_\\s]+'),
					_elm_lang$core$Basics$always(' '),
					A4(
						_elm_lang$core$Regex$replace,
						_elm_lang$core$Regex$All,
						_elm_lang$core$Regex$regex('[A-Z]'),
						function (_p35) {
							return A2(
								_elm_lang$core$String$append,
								'-',
								function (_) {
									return _.match;
								}(_p35));
						},
						string)))));
};
var _elm_community$string_extra$String_Extra$decapitalize = function (word) {
	return A2(_elm_community$string_extra$String_Extra$changeCase, _elm_lang$core$Char$toLower, word);
};

var _elm_lang$animation_frame$Native_AnimationFrame = function()
{

function create()
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		var id = requestAnimationFrame(function() {
			callback(_elm_lang$core$Native_Scheduler.succeed(Date.now()));
		});

		return function() {
			cancelAnimationFrame(id);
		};
	});
}

return {
	create: create
};

}();

var _elm_lang$core$Process$kill = _elm_lang$core$Native_Scheduler.kill;
var _elm_lang$core$Process$sleep = _elm_lang$core$Native_Scheduler.sleep;
var _elm_lang$core$Process$spawn = _elm_lang$core$Native_Scheduler.spawn;

var _elm_lang$animation_frame$AnimationFrame$rAF = _elm_lang$animation_frame$Native_AnimationFrame.create(
	{ctor: '_Tuple0'});
var _elm_lang$animation_frame$AnimationFrame$subscription = _elm_lang$core$Native_Platform.leaf('AnimationFrame');
var _elm_lang$animation_frame$AnimationFrame$State = F3(
	function (a, b, c) {
		return {subs: a, request: b, oldTime: c};
	});
var _elm_lang$animation_frame$AnimationFrame$init = _elm_lang$core$Task$succeed(
	A3(
		_elm_lang$animation_frame$AnimationFrame$State,
		{ctor: '[]'},
		_elm_lang$core$Maybe$Nothing,
		0));
var _elm_lang$animation_frame$AnimationFrame$onEffects = F3(
	function (router, subs, _p0) {
		var _p1 = _p0;
		var _p5 = _p1.request;
		var _p4 = _p1.oldTime;
		var _p2 = {ctor: '_Tuple2', _0: _p5, _1: subs};
		if (_p2._0.ctor === 'Nothing') {
			if (_p2._1.ctor === '[]') {
				return _elm_lang$core$Task$succeed(
					A3(
						_elm_lang$animation_frame$AnimationFrame$State,
						{ctor: '[]'},
						_elm_lang$core$Maybe$Nothing,
						_p4));
			} else {
				return A2(
					_elm_lang$core$Task$andThen,
					function (pid) {
						return A2(
							_elm_lang$core$Task$andThen,
							function (time) {
								return _elm_lang$core$Task$succeed(
									A3(
										_elm_lang$animation_frame$AnimationFrame$State,
										subs,
										_elm_lang$core$Maybe$Just(pid),
										time));
							},
							_elm_lang$core$Time$now);
					},
					_elm_lang$core$Process$spawn(
						A2(
							_elm_lang$core$Task$andThen,
							_elm_lang$core$Platform$sendToSelf(router),
							_elm_lang$animation_frame$AnimationFrame$rAF)));
			}
		} else {
			if (_p2._1.ctor === '[]') {
				return A2(
					_elm_lang$core$Task$andThen,
					function (_p3) {
						return _elm_lang$core$Task$succeed(
							A3(
								_elm_lang$animation_frame$AnimationFrame$State,
								{ctor: '[]'},
								_elm_lang$core$Maybe$Nothing,
								_p4));
					},
					_elm_lang$core$Process$kill(_p2._0._0));
			} else {
				return _elm_lang$core$Task$succeed(
					A3(_elm_lang$animation_frame$AnimationFrame$State, subs, _p5, _p4));
			}
		}
	});
var _elm_lang$animation_frame$AnimationFrame$onSelfMsg = F3(
	function (router, newTime, _p6) {
		var _p7 = _p6;
		var _p10 = _p7.subs;
		var diff = newTime - _p7.oldTime;
		var send = function (sub) {
			var _p8 = sub;
			if (_p8.ctor === 'Time') {
				return A2(
					_elm_lang$core$Platform$sendToApp,
					router,
					_p8._0(newTime));
			} else {
				return A2(
					_elm_lang$core$Platform$sendToApp,
					router,
					_p8._0(diff));
			}
		};
		return A2(
			_elm_lang$core$Task$andThen,
			function (pid) {
				return A2(
					_elm_lang$core$Task$andThen,
					function (_p9) {
						return _elm_lang$core$Task$succeed(
							A3(
								_elm_lang$animation_frame$AnimationFrame$State,
								_p10,
								_elm_lang$core$Maybe$Just(pid),
								newTime));
					},
					_elm_lang$core$Task$sequence(
						A2(_elm_lang$core$List$map, send, _p10)));
			},
			_elm_lang$core$Process$spawn(
				A2(
					_elm_lang$core$Task$andThen,
					_elm_lang$core$Platform$sendToSelf(router),
					_elm_lang$animation_frame$AnimationFrame$rAF)));
	});
var _elm_lang$animation_frame$AnimationFrame$Diff = function (a) {
	return {ctor: 'Diff', _0: a};
};
var _elm_lang$animation_frame$AnimationFrame$diffs = function (tagger) {
	return _elm_lang$animation_frame$AnimationFrame$subscription(
		_elm_lang$animation_frame$AnimationFrame$Diff(tagger));
};
var _elm_lang$animation_frame$AnimationFrame$Time = function (a) {
	return {ctor: 'Time', _0: a};
};
var _elm_lang$animation_frame$AnimationFrame$times = function (tagger) {
	return _elm_lang$animation_frame$AnimationFrame$subscription(
		_elm_lang$animation_frame$AnimationFrame$Time(tagger));
};
var _elm_lang$animation_frame$AnimationFrame$subMap = F2(
	function (func, sub) {
		var _p11 = sub;
		if (_p11.ctor === 'Time') {
			return _elm_lang$animation_frame$AnimationFrame$Time(
				function (_p12) {
					return func(
						_p11._0(_p12));
				});
		} else {
			return _elm_lang$animation_frame$AnimationFrame$Diff(
				function (_p13) {
					return func(
						_p11._0(_p13));
				});
		}
	});
_elm_lang$core$Native_Platform.effectManagers['AnimationFrame'] = {pkg: 'elm-lang/animation-frame', init: _elm_lang$animation_frame$AnimationFrame$init, onEffects: _elm_lang$animation_frame$AnimationFrame$onEffects, onSelfMsg: _elm_lang$animation_frame$AnimationFrame$onSelfMsg, tag: 'sub', subMap: _elm_lang$animation_frame$AnimationFrame$subMap};

var _elm_lang$core$Color$fmod = F2(
	function (f, n) {
		var integer = _elm_lang$core$Basics$floor(f);
		return (_elm_lang$core$Basics$toFloat(
			A2(_elm_lang$core$Basics_ops['%'], integer, n)) + f) - _elm_lang$core$Basics$toFloat(integer);
	});
var _elm_lang$core$Color$rgbToHsl = F3(
	function (red, green, blue) {
		var b = _elm_lang$core$Basics$toFloat(blue) / 255;
		var g = _elm_lang$core$Basics$toFloat(green) / 255;
		var r = _elm_lang$core$Basics$toFloat(red) / 255;
		var cMax = A2(
			_elm_lang$core$Basics$max,
			A2(_elm_lang$core$Basics$max, r, g),
			b);
		var cMin = A2(
			_elm_lang$core$Basics$min,
			A2(_elm_lang$core$Basics$min, r, g),
			b);
		var c = cMax - cMin;
		var lightness = (cMax + cMin) / 2;
		var saturation = _elm_lang$core$Native_Utils.eq(lightness, 0) ? 0 : (c / (1 - _elm_lang$core$Basics$abs((2 * lightness) - 1)));
		var hue = _elm_lang$core$Basics$degrees(60) * (_elm_lang$core$Native_Utils.eq(cMax, r) ? A2(_elm_lang$core$Color$fmod, (g - b) / c, 6) : (_elm_lang$core$Native_Utils.eq(cMax, g) ? (((b - r) / c) + 2) : (((r - g) / c) + 4)));
		return {ctor: '_Tuple3', _0: hue, _1: saturation, _2: lightness};
	});
var _elm_lang$core$Color$hslToRgb = F3(
	function (hue, saturation, lightness) {
		var normHue = hue / _elm_lang$core$Basics$degrees(60);
		var chroma = (1 - _elm_lang$core$Basics$abs((2 * lightness) - 1)) * saturation;
		var x = chroma * (1 - _elm_lang$core$Basics$abs(
			A2(_elm_lang$core$Color$fmod, normHue, 2) - 1));
		var _p0 = (_elm_lang$core$Native_Utils.cmp(normHue, 0) < 0) ? {ctor: '_Tuple3', _0: 0, _1: 0, _2: 0} : ((_elm_lang$core$Native_Utils.cmp(normHue, 1) < 0) ? {ctor: '_Tuple3', _0: chroma, _1: x, _2: 0} : ((_elm_lang$core$Native_Utils.cmp(normHue, 2) < 0) ? {ctor: '_Tuple3', _0: x, _1: chroma, _2: 0} : ((_elm_lang$core$Native_Utils.cmp(normHue, 3) < 0) ? {ctor: '_Tuple3', _0: 0, _1: chroma, _2: x} : ((_elm_lang$core$Native_Utils.cmp(normHue, 4) < 0) ? {ctor: '_Tuple3', _0: 0, _1: x, _2: chroma} : ((_elm_lang$core$Native_Utils.cmp(normHue, 5) < 0) ? {ctor: '_Tuple3', _0: x, _1: 0, _2: chroma} : ((_elm_lang$core$Native_Utils.cmp(normHue, 6) < 0) ? {ctor: '_Tuple3', _0: chroma, _1: 0, _2: x} : {ctor: '_Tuple3', _0: 0, _1: 0, _2: 0}))))));
		var r = _p0._0;
		var g = _p0._1;
		var b = _p0._2;
		var m = lightness - (chroma / 2);
		return {ctor: '_Tuple3', _0: r + m, _1: g + m, _2: b + m};
	});
var _elm_lang$core$Color$toRgb = function (color) {
	var _p1 = color;
	if (_p1.ctor === 'RGBA') {
		return {red: _p1._0, green: _p1._1, blue: _p1._2, alpha: _p1._3};
	} else {
		var _p2 = A3(_elm_lang$core$Color$hslToRgb, _p1._0, _p1._1, _p1._2);
		var r = _p2._0;
		var g = _p2._1;
		var b = _p2._2;
		return {
			red: _elm_lang$core$Basics$round(255 * r),
			green: _elm_lang$core$Basics$round(255 * g),
			blue: _elm_lang$core$Basics$round(255 * b),
			alpha: _p1._3
		};
	}
};
var _elm_lang$core$Color$toHsl = function (color) {
	var _p3 = color;
	if (_p3.ctor === 'HSLA') {
		return {hue: _p3._0, saturation: _p3._1, lightness: _p3._2, alpha: _p3._3};
	} else {
		var _p4 = A3(_elm_lang$core$Color$rgbToHsl, _p3._0, _p3._1, _p3._2);
		var h = _p4._0;
		var s = _p4._1;
		var l = _p4._2;
		return {hue: h, saturation: s, lightness: l, alpha: _p3._3};
	}
};
var _elm_lang$core$Color$HSLA = F4(
	function (a, b, c, d) {
		return {ctor: 'HSLA', _0: a, _1: b, _2: c, _3: d};
	});
var _elm_lang$core$Color$hsla = F4(
	function (hue, saturation, lightness, alpha) {
		return A4(
			_elm_lang$core$Color$HSLA,
			hue - _elm_lang$core$Basics$turns(
				_elm_lang$core$Basics$toFloat(
					_elm_lang$core$Basics$floor(hue / (2 * _elm_lang$core$Basics$pi)))),
			saturation,
			lightness,
			alpha);
	});
var _elm_lang$core$Color$hsl = F3(
	function (hue, saturation, lightness) {
		return A4(_elm_lang$core$Color$hsla, hue, saturation, lightness, 1);
	});
var _elm_lang$core$Color$complement = function (color) {
	var _p5 = color;
	if (_p5.ctor === 'HSLA') {
		return A4(
			_elm_lang$core$Color$hsla,
			_p5._0 + _elm_lang$core$Basics$degrees(180),
			_p5._1,
			_p5._2,
			_p5._3);
	} else {
		var _p6 = A3(_elm_lang$core$Color$rgbToHsl, _p5._0, _p5._1, _p5._2);
		var h = _p6._0;
		var s = _p6._1;
		var l = _p6._2;
		return A4(
			_elm_lang$core$Color$hsla,
			h + _elm_lang$core$Basics$degrees(180),
			s,
			l,
			_p5._3);
	}
};
var _elm_lang$core$Color$grayscale = function (p) {
	return A4(_elm_lang$core$Color$HSLA, 0, 0, 1 - p, 1);
};
var _elm_lang$core$Color$greyscale = function (p) {
	return A4(_elm_lang$core$Color$HSLA, 0, 0, 1 - p, 1);
};
var _elm_lang$core$Color$RGBA = F4(
	function (a, b, c, d) {
		return {ctor: 'RGBA', _0: a, _1: b, _2: c, _3: d};
	});
var _elm_lang$core$Color$rgba = _elm_lang$core$Color$RGBA;
var _elm_lang$core$Color$rgb = F3(
	function (r, g, b) {
		return A4(_elm_lang$core$Color$RGBA, r, g, b, 1);
	});
var _elm_lang$core$Color$lightRed = A4(_elm_lang$core$Color$RGBA, 239, 41, 41, 1);
var _elm_lang$core$Color$red = A4(_elm_lang$core$Color$RGBA, 204, 0, 0, 1);
var _elm_lang$core$Color$darkRed = A4(_elm_lang$core$Color$RGBA, 164, 0, 0, 1);
var _elm_lang$core$Color$lightOrange = A4(_elm_lang$core$Color$RGBA, 252, 175, 62, 1);
var _elm_lang$core$Color$orange = A4(_elm_lang$core$Color$RGBA, 245, 121, 0, 1);
var _elm_lang$core$Color$darkOrange = A4(_elm_lang$core$Color$RGBA, 206, 92, 0, 1);
var _elm_lang$core$Color$lightYellow = A4(_elm_lang$core$Color$RGBA, 255, 233, 79, 1);
var _elm_lang$core$Color$yellow = A4(_elm_lang$core$Color$RGBA, 237, 212, 0, 1);
var _elm_lang$core$Color$darkYellow = A4(_elm_lang$core$Color$RGBA, 196, 160, 0, 1);
var _elm_lang$core$Color$lightGreen = A4(_elm_lang$core$Color$RGBA, 138, 226, 52, 1);
var _elm_lang$core$Color$green = A4(_elm_lang$core$Color$RGBA, 115, 210, 22, 1);
var _elm_lang$core$Color$darkGreen = A4(_elm_lang$core$Color$RGBA, 78, 154, 6, 1);
var _elm_lang$core$Color$lightBlue = A4(_elm_lang$core$Color$RGBA, 114, 159, 207, 1);
var _elm_lang$core$Color$blue = A4(_elm_lang$core$Color$RGBA, 52, 101, 164, 1);
var _elm_lang$core$Color$darkBlue = A4(_elm_lang$core$Color$RGBA, 32, 74, 135, 1);
var _elm_lang$core$Color$lightPurple = A4(_elm_lang$core$Color$RGBA, 173, 127, 168, 1);
var _elm_lang$core$Color$purple = A4(_elm_lang$core$Color$RGBA, 117, 80, 123, 1);
var _elm_lang$core$Color$darkPurple = A4(_elm_lang$core$Color$RGBA, 92, 53, 102, 1);
var _elm_lang$core$Color$lightBrown = A4(_elm_lang$core$Color$RGBA, 233, 185, 110, 1);
var _elm_lang$core$Color$brown = A4(_elm_lang$core$Color$RGBA, 193, 125, 17, 1);
var _elm_lang$core$Color$darkBrown = A4(_elm_lang$core$Color$RGBA, 143, 89, 2, 1);
var _elm_lang$core$Color$black = A4(_elm_lang$core$Color$RGBA, 0, 0, 0, 1);
var _elm_lang$core$Color$white = A4(_elm_lang$core$Color$RGBA, 255, 255, 255, 1);
var _elm_lang$core$Color$lightGrey = A4(_elm_lang$core$Color$RGBA, 238, 238, 236, 1);
var _elm_lang$core$Color$grey = A4(_elm_lang$core$Color$RGBA, 211, 215, 207, 1);
var _elm_lang$core$Color$darkGrey = A4(_elm_lang$core$Color$RGBA, 186, 189, 182, 1);
var _elm_lang$core$Color$lightGray = A4(_elm_lang$core$Color$RGBA, 238, 238, 236, 1);
var _elm_lang$core$Color$gray = A4(_elm_lang$core$Color$RGBA, 211, 215, 207, 1);
var _elm_lang$core$Color$darkGray = A4(_elm_lang$core$Color$RGBA, 186, 189, 182, 1);
var _elm_lang$core$Color$lightCharcoal = A4(_elm_lang$core$Color$RGBA, 136, 138, 133, 1);
var _elm_lang$core$Color$charcoal = A4(_elm_lang$core$Color$RGBA, 85, 87, 83, 1);
var _elm_lang$core$Color$darkCharcoal = A4(_elm_lang$core$Color$RGBA, 46, 52, 54, 1);
var _elm_lang$core$Color$Radial = F5(
	function (a, b, c, d, e) {
		return {ctor: 'Radial', _0: a, _1: b, _2: c, _3: d, _4: e};
	});
var _elm_lang$core$Color$radial = _elm_lang$core$Color$Radial;
var _elm_lang$core$Color$Linear = F3(
	function (a, b, c) {
		return {ctor: 'Linear', _0: a, _1: b, _2: c};
	});
var _elm_lang$core$Color$linear = _elm_lang$core$Color$Linear;

var _elm_lang$core$Random$onSelfMsg = F3(
	function (_p1, _p0, seed) {
		return _elm_lang$core$Task$succeed(seed);
	});
var _elm_lang$core$Random$magicNum8 = 2147483562;
var _elm_lang$core$Random$range = function (_p2) {
	return {ctor: '_Tuple2', _0: 0, _1: _elm_lang$core$Random$magicNum8};
};
var _elm_lang$core$Random$magicNum7 = 2147483399;
var _elm_lang$core$Random$magicNum6 = 2147483563;
var _elm_lang$core$Random$magicNum5 = 3791;
var _elm_lang$core$Random$magicNum4 = 40692;
var _elm_lang$core$Random$magicNum3 = 52774;
var _elm_lang$core$Random$magicNum2 = 12211;
var _elm_lang$core$Random$magicNum1 = 53668;
var _elm_lang$core$Random$magicNum0 = 40014;
var _elm_lang$core$Random$step = F2(
	function (_p3, seed) {
		var _p4 = _p3;
		return _p4._0(seed);
	});
var _elm_lang$core$Random$onEffects = F3(
	function (router, commands, seed) {
		var _p5 = commands;
		if (_p5.ctor === '[]') {
			return _elm_lang$core$Task$succeed(seed);
		} else {
			var _p6 = A2(_elm_lang$core$Random$step, _p5._0._0, seed);
			var value = _p6._0;
			var newSeed = _p6._1;
			return A2(
				_elm_lang$core$Task$andThen,
				function (_p7) {
					return A3(_elm_lang$core$Random$onEffects, router, _p5._1, newSeed);
				},
				A2(_elm_lang$core$Platform$sendToApp, router, value));
		}
	});
var _elm_lang$core$Random$listHelp = F4(
	function (list, n, generate, seed) {
		listHelp:
		while (true) {
			if (_elm_lang$core$Native_Utils.cmp(n, 1) < 0) {
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$List$reverse(list),
					_1: seed
				};
			} else {
				var _p8 = generate(seed);
				var value = _p8._0;
				var newSeed = _p8._1;
				var _v2 = {ctor: '::', _0: value, _1: list},
					_v3 = n - 1,
					_v4 = generate,
					_v5 = newSeed;
				list = _v2;
				n = _v3;
				generate = _v4;
				seed = _v5;
				continue listHelp;
			}
		}
	});
var _elm_lang$core$Random$minInt = -2147483648;
var _elm_lang$core$Random$maxInt = 2147483647;
var _elm_lang$core$Random$iLogBase = F2(
	function (b, i) {
		return (_elm_lang$core$Native_Utils.cmp(i, b) < 0) ? 1 : (1 + A2(_elm_lang$core$Random$iLogBase, b, (i / b) | 0));
	});
var _elm_lang$core$Random$command = _elm_lang$core$Native_Platform.leaf('Random');
var _elm_lang$core$Random$Generator = function (a) {
	return {ctor: 'Generator', _0: a};
};
var _elm_lang$core$Random$list = F2(
	function (n, _p9) {
		var _p10 = _p9;
		return _elm_lang$core$Random$Generator(
			function (seed) {
				return A4(
					_elm_lang$core$Random$listHelp,
					{ctor: '[]'},
					n,
					_p10._0,
					seed);
			});
	});
var _elm_lang$core$Random$map = F2(
	function (func, _p11) {
		var _p12 = _p11;
		return _elm_lang$core$Random$Generator(
			function (seed0) {
				var _p13 = _p12._0(seed0);
				var a = _p13._0;
				var seed1 = _p13._1;
				return {
					ctor: '_Tuple2',
					_0: func(a),
					_1: seed1
				};
			});
	});
var _elm_lang$core$Random$map2 = F3(
	function (func, _p15, _p14) {
		var _p16 = _p15;
		var _p17 = _p14;
		return _elm_lang$core$Random$Generator(
			function (seed0) {
				var _p18 = _p16._0(seed0);
				var a = _p18._0;
				var seed1 = _p18._1;
				var _p19 = _p17._0(seed1);
				var b = _p19._0;
				var seed2 = _p19._1;
				return {
					ctor: '_Tuple2',
					_0: A2(func, a, b),
					_1: seed2
				};
			});
	});
var _elm_lang$core$Random$pair = F2(
	function (genA, genB) {
		return A3(
			_elm_lang$core$Random$map2,
			F2(
				function (v0, v1) {
					return {ctor: '_Tuple2', _0: v0, _1: v1};
				}),
			genA,
			genB);
	});
var _elm_lang$core$Random$map3 = F4(
	function (func, _p22, _p21, _p20) {
		var _p23 = _p22;
		var _p24 = _p21;
		var _p25 = _p20;
		return _elm_lang$core$Random$Generator(
			function (seed0) {
				var _p26 = _p23._0(seed0);
				var a = _p26._0;
				var seed1 = _p26._1;
				var _p27 = _p24._0(seed1);
				var b = _p27._0;
				var seed2 = _p27._1;
				var _p28 = _p25._0(seed2);
				var c = _p28._0;
				var seed3 = _p28._1;
				return {
					ctor: '_Tuple2',
					_0: A3(func, a, b, c),
					_1: seed3
				};
			});
	});
var _elm_lang$core$Random$map4 = F5(
	function (func, _p32, _p31, _p30, _p29) {
		var _p33 = _p32;
		var _p34 = _p31;
		var _p35 = _p30;
		var _p36 = _p29;
		return _elm_lang$core$Random$Generator(
			function (seed0) {
				var _p37 = _p33._0(seed0);
				var a = _p37._0;
				var seed1 = _p37._1;
				var _p38 = _p34._0(seed1);
				var b = _p38._0;
				var seed2 = _p38._1;
				var _p39 = _p35._0(seed2);
				var c = _p39._0;
				var seed3 = _p39._1;
				var _p40 = _p36._0(seed3);
				var d = _p40._0;
				var seed4 = _p40._1;
				return {
					ctor: '_Tuple2',
					_0: A4(func, a, b, c, d),
					_1: seed4
				};
			});
	});
var _elm_lang$core$Random$map5 = F6(
	function (func, _p45, _p44, _p43, _p42, _p41) {
		var _p46 = _p45;
		var _p47 = _p44;
		var _p48 = _p43;
		var _p49 = _p42;
		var _p50 = _p41;
		return _elm_lang$core$Random$Generator(
			function (seed0) {
				var _p51 = _p46._0(seed0);
				var a = _p51._0;
				var seed1 = _p51._1;
				var _p52 = _p47._0(seed1);
				var b = _p52._0;
				var seed2 = _p52._1;
				var _p53 = _p48._0(seed2);
				var c = _p53._0;
				var seed3 = _p53._1;
				var _p54 = _p49._0(seed3);
				var d = _p54._0;
				var seed4 = _p54._1;
				var _p55 = _p50._0(seed4);
				var e = _p55._0;
				var seed5 = _p55._1;
				return {
					ctor: '_Tuple2',
					_0: A5(func, a, b, c, d, e),
					_1: seed5
				};
			});
	});
var _elm_lang$core$Random$andThen = F2(
	function (callback, _p56) {
		var _p57 = _p56;
		return _elm_lang$core$Random$Generator(
			function (seed) {
				var _p58 = _p57._0(seed);
				var result = _p58._0;
				var newSeed = _p58._1;
				var _p59 = callback(result);
				var genB = _p59._0;
				return genB(newSeed);
			});
	});
var _elm_lang$core$Random$State = F2(
	function (a, b) {
		return {ctor: 'State', _0: a, _1: b};
	});
var _elm_lang$core$Random$initState = function (seed) {
	var s = A2(_elm_lang$core$Basics$max, seed, 0 - seed);
	var q = (s / (_elm_lang$core$Random$magicNum6 - 1)) | 0;
	var s2 = A2(_elm_lang$core$Basics_ops['%'], q, _elm_lang$core$Random$magicNum7 - 1);
	var s1 = A2(_elm_lang$core$Basics_ops['%'], s, _elm_lang$core$Random$magicNum6 - 1);
	return A2(_elm_lang$core$Random$State, s1 + 1, s2 + 1);
};
var _elm_lang$core$Random$next = function (_p60) {
	var _p61 = _p60;
	var _p63 = _p61._1;
	var _p62 = _p61._0;
	var k2 = (_p63 / _elm_lang$core$Random$magicNum3) | 0;
	var rawState2 = (_elm_lang$core$Random$magicNum4 * (_p63 - (k2 * _elm_lang$core$Random$magicNum3))) - (k2 * _elm_lang$core$Random$magicNum5);
	var newState2 = (_elm_lang$core$Native_Utils.cmp(rawState2, 0) < 0) ? (rawState2 + _elm_lang$core$Random$magicNum7) : rawState2;
	var k1 = (_p62 / _elm_lang$core$Random$magicNum1) | 0;
	var rawState1 = (_elm_lang$core$Random$magicNum0 * (_p62 - (k1 * _elm_lang$core$Random$magicNum1))) - (k1 * _elm_lang$core$Random$magicNum2);
	var newState1 = (_elm_lang$core$Native_Utils.cmp(rawState1, 0) < 0) ? (rawState1 + _elm_lang$core$Random$magicNum6) : rawState1;
	var z = newState1 - newState2;
	var newZ = (_elm_lang$core$Native_Utils.cmp(z, 1) < 0) ? (z + _elm_lang$core$Random$magicNum8) : z;
	return {
		ctor: '_Tuple2',
		_0: newZ,
		_1: A2(_elm_lang$core$Random$State, newState1, newState2)
	};
};
var _elm_lang$core$Random$split = function (_p64) {
	var _p65 = _p64;
	var _p68 = _p65._1;
	var _p67 = _p65._0;
	var _p66 = _elm_lang$core$Tuple$second(
		_elm_lang$core$Random$next(_p65));
	var t1 = _p66._0;
	var t2 = _p66._1;
	var new_s2 = _elm_lang$core$Native_Utils.eq(_p68, 1) ? (_elm_lang$core$Random$magicNum7 - 1) : (_p68 - 1);
	var new_s1 = _elm_lang$core$Native_Utils.eq(_p67, _elm_lang$core$Random$magicNum6 - 1) ? 1 : (_p67 + 1);
	return {
		ctor: '_Tuple2',
		_0: A2(_elm_lang$core$Random$State, new_s1, t2),
		_1: A2(_elm_lang$core$Random$State, t1, new_s2)
	};
};
var _elm_lang$core$Random$Seed = function (a) {
	return {ctor: 'Seed', _0: a};
};
var _elm_lang$core$Random$int = F2(
	function (a, b) {
		return _elm_lang$core$Random$Generator(
			function (_p69) {
				var _p70 = _p69;
				var _p75 = _p70._0;
				var base = 2147483561;
				var f = F3(
					function (n, acc, state) {
						f:
						while (true) {
							var _p71 = n;
							if (_p71 === 0) {
								return {ctor: '_Tuple2', _0: acc, _1: state};
							} else {
								var _p72 = _p75.next(state);
								var x = _p72._0;
								var nextState = _p72._1;
								var _v27 = n - 1,
									_v28 = x + (acc * base),
									_v29 = nextState;
								n = _v27;
								acc = _v28;
								state = _v29;
								continue f;
							}
						}
					});
				var _p73 = (_elm_lang$core$Native_Utils.cmp(a, b) < 0) ? {ctor: '_Tuple2', _0: a, _1: b} : {ctor: '_Tuple2', _0: b, _1: a};
				var lo = _p73._0;
				var hi = _p73._1;
				var k = (hi - lo) + 1;
				var n = A2(_elm_lang$core$Random$iLogBase, base, k);
				var _p74 = A3(f, n, 1, _p75.state);
				var v = _p74._0;
				var nextState = _p74._1;
				return {
					ctor: '_Tuple2',
					_0: lo + A2(_elm_lang$core$Basics_ops['%'], v, k),
					_1: _elm_lang$core$Random$Seed(
						_elm_lang$core$Native_Utils.update(
							_p75,
							{state: nextState}))
				};
			});
	});
var _elm_lang$core$Random$bool = A2(
	_elm_lang$core$Random$map,
	F2(
		function (x, y) {
			return _elm_lang$core$Native_Utils.eq(x, y);
		})(1),
	A2(_elm_lang$core$Random$int, 0, 1));
var _elm_lang$core$Random$float = F2(
	function (a, b) {
		return _elm_lang$core$Random$Generator(
			function (seed) {
				var _p76 = A2(
					_elm_lang$core$Random$step,
					A2(_elm_lang$core$Random$int, _elm_lang$core$Random$minInt, _elm_lang$core$Random$maxInt),
					seed);
				var number = _p76._0;
				var newSeed = _p76._1;
				var negativeOneToOne = _elm_lang$core$Basics$toFloat(number) / _elm_lang$core$Basics$toFloat(_elm_lang$core$Random$maxInt - _elm_lang$core$Random$minInt);
				var _p77 = (_elm_lang$core$Native_Utils.cmp(a, b) < 0) ? {ctor: '_Tuple2', _0: a, _1: b} : {ctor: '_Tuple2', _0: b, _1: a};
				var lo = _p77._0;
				var hi = _p77._1;
				var scaled = ((lo + hi) / 2) + ((hi - lo) * negativeOneToOne);
				return {ctor: '_Tuple2', _0: scaled, _1: newSeed};
			});
	});
var _elm_lang$core$Random$initialSeed = function (n) {
	return _elm_lang$core$Random$Seed(
		{
			state: _elm_lang$core$Random$initState(n),
			next: _elm_lang$core$Random$next,
			split: _elm_lang$core$Random$split,
			range: _elm_lang$core$Random$range
		});
};
var _elm_lang$core$Random$init = A2(
	_elm_lang$core$Task$andThen,
	function (t) {
		return _elm_lang$core$Task$succeed(
			_elm_lang$core$Random$initialSeed(
				_elm_lang$core$Basics$round(t)));
	},
	_elm_lang$core$Time$now);
var _elm_lang$core$Random$Generate = function (a) {
	return {ctor: 'Generate', _0: a};
};
var _elm_lang$core$Random$generate = F2(
	function (tagger, generator) {
		return _elm_lang$core$Random$command(
			_elm_lang$core$Random$Generate(
				A2(_elm_lang$core$Random$map, tagger, generator)));
	});
var _elm_lang$core$Random$cmdMap = F2(
	function (func, _p78) {
		var _p79 = _p78;
		return _elm_lang$core$Random$Generate(
			A2(_elm_lang$core$Random$map, func, _p79._0));
	});
_elm_lang$core$Native_Platform.effectManagers['Random'] = {pkg: 'elm-lang/core', init: _elm_lang$core$Random$init, onEffects: _elm_lang$core$Random$onEffects, onSelfMsg: _elm_lang$core$Random$onSelfMsg, tag: 'cmd', cmdMap: _elm_lang$core$Random$cmdMap};

var _elm_lang$dom$Native_Dom = function() {

var fakeNode = {
	addEventListener: function() {},
	removeEventListener: function() {}
};

var onDocument = on(typeof document !== 'undefined' ? document : fakeNode);
var onWindow = on(typeof window !== 'undefined' ? window : fakeNode);

function on(node)
{
	return function(eventName, decoder, toTask)
	{
		return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback) {

			function performTask(event)
			{
				var result = A2(_elm_lang$core$Json_Decode$decodeValue, decoder, event);
				if (result.ctor === 'Ok')
				{
					_elm_lang$core$Native_Scheduler.rawSpawn(toTask(result._0));
				}
			}

			node.addEventListener(eventName, performTask);

			return function()
			{
				node.removeEventListener(eventName, performTask);
			};
		});
	};
}

var rAF = typeof requestAnimationFrame !== 'undefined'
	? requestAnimationFrame
	: function(callback) { callback(); };

function withNode(id, doStuff)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		rAF(function()
		{
			var node = document.getElementById(id);
			if (node === null)
			{
				callback(_elm_lang$core$Native_Scheduler.fail({ ctor: 'NotFound', _0: id }));
				return;
			}
			callback(_elm_lang$core$Native_Scheduler.succeed(doStuff(node)));
		});
	});
}


// FOCUS

function focus(id)
{
	return withNode(id, function(node) {
		node.focus();
		return _elm_lang$core$Native_Utils.Tuple0;
	});
}

function blur(id)
{
	return withNode(id, function(node) {
		node.blur();
		return _elm_lang$core$Native_Utils.Tuple0;
	});
}


// SCROLLING

function getScrollTop(id)
{
	return withNode(id, function(node) {
		return node.scrollTop;
	});
}

function setScrollTop(id, desiredScrollTop)
{
	return withNode(id, function(node) {
		node.scrollTop = desiredScrollTop;
		return _elm_lang$core$Native_Utils.Tuple0;
	});
}

function toBottom(id)
{
	return withNode(id, function(node) {
		node.scrollTop = node.scrollHeight;
		return _elm_lang$core$Native_Utils.Tuple0;
	});
}

function getScrollLeft(id)
{
	return withNode(id, function(node) {
		return node.scrollLeft;
	});
}

function setScrollLeft(id, desiredScrollLeft)
{
	return withNode(id, function(node) {
		node.scrollLeft = desiredScrollLeft;
		return _elm_lang$core$Native_Utils.Tuple0;
	});
}

function toRight(id)
{
	return withNode(id, function(node) {
		node.scrollLeft = node.scrollWidth;
		return _elm_lang$core$Native_Utils.Tuple0;
	});
}


// SIZE

function width(options, id)
{
	return withNode(id, function(node) {
		switch (options.ctor)
		{
			case 'Content':
				return node.scrollWidth;
			case 'VisibleContent':
				return node.clientWidth;
			case 'VisibleContentWithBorders':
				return node.offsetWidth;
			case 'VisibleContentWithBordersAndMargins':
				var rect = node.getBoundingClientRect();
				return rect.right - rect.left;
		}
	});
}

function height(options, id)
{
	return withNode(id, function(node) {
		switch (options.ctor)
		{
			case 'Content':
				return node.scrollHeight;
			case 'VisibleContent':
				return node.clientHeight;
			case 'VisibleContentWithBorders':
				return node.offsetHeight;
			case 'VisibleContentWithBordersAndMargins':
				var rect = node.getBoundingClientRect();
				return rect.bottom - rect.top;
		}
	});
}

return {
	onDocument: F3(onDocument),
	onWindow: F3(onWindow),

	focus: focus,
	blur: blur,

	getScrollTop: getScrollTop,
	setScrollTop: F2(setScrollTop),
	getScrollLeft: getScrollLeft,
	setScrollLeft: F2(setScrollLeft),
	toBottom: toBottom,
	toRight: toRight,

	height: F2(height),
	width: F2(width)
};

}();

var _elm_lang$dom$Dom_LowLevel$onWindow = _elm_lang$dom$Native_Dom.onWindow;
var _elm_lang$dom$Dom_LowLevel$onDocument = _elm_lang$dom$Native_Dom.onDocument;

var _elm_lang$http$Native_Http = function() {


// ENCODING AND DECODING

function encodeUri(string)
{
	return encodeURIComponent(string);
}

function decodeUri(string)
{
	try
	{
		return _elm_lang$core$Maybe$Just(decodeURIComponent(string));
	}
	catch(e)
	{
		return _elm_lang$core$Maybe$Nothing;
	}
}


// SEND REQUEST

function toTask(request, maybeProgress)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		var xhr = new XMLHttpRequest();

		configureProgress(xhr, maybeProgress);

		xhr.addEventListener('error', function() {
			callback(_elm_lang$core$Native_Scheduler.fail({ ctor: 'NetworkError' }));
		});
		xhr.addEventListener('timeout', function() {
			callback(_elm_lang$core$Native_Scheduler.fail({ ctor: 'Timeout' }));
		});
		xhr.addEventListener('load', function() {
			callback(handleResponse(xhr, request.expect.responseToResult));
		});

		try
		{
			xhr.open(request.method, request.url, true);
		}
		catch (e)
		{
			return callback(_elm_lang$core$Native_Scheduler.fail({ ctor: 'BadUrl', _0: request.url }));
		}

		configureRequest(xhr, request);
		send(xhr, request.body);

		return function() { xhr.abort(); };
	});
}

function configureProgress(xhr, maybeProgress)
{
	if (maybeProgress.ctor === 'Nothing')
	{
		return;
	}

	xhr.addEventListener('progress', function(event) {
		if (!event.lengthComputable)
		{
			return;
		}
		_elm_lang$core$Native_Scheduler.rawSpawn(maybeProgress._0({
			bytes: event.loaded,
			bytesExpected: event.total
		}));
	});
}

function configureRequest(xhr, request)
{
	function setHeader(pair)
	{
		xhr.setRequestHeader(pair._0, pair._1);
	}

	A2(_elm_lang$core$List$map, setHeader, request.headers);
	xhr.responseType = request.expect.responseType;
	xhr.withCredentials = request.withCredentials;

	if (request.timeout.ctor === 'Just')
	{
		xhr.timeout = request.timeout._0;
	}
}

function send(xhr, body)
{
	switch (body.ctor)
	{
		case 'EmptyBody':
			xhr.send();
			return;

		case 'StringBody':
			xhr.setRequestHeader('Content-Type', body._0);
			xhr.send(body._1);
			return;

		case 'FormDataBody':
			xhr.send(body._0);
			return;
	}
}


// RESPONSES

function handleResponse(xhr, responseToResult)
{
	var response = toResponse(xhr);

	if (xhr.status < 200 || 300 <= xhr.status)
	{
		response.body = xhr.responseText;
		return _elm_lang$core$Native_Scheduler.fail({
			ctor: 'BadStatus',
			_0: response
		});
	}

	var result = responseToResult(response);

	if (result.ctor === 'Ok')
	{
		return _elm_lang$core$Native_Scheduler.succeed(result._0);
	}
	else
	{
		response.body = xhr.responseText;
		return _elm_lang$core$Native_Scheduler.fail({
			ctor: 'BadPayload',
			_0: result._0,
			_1: response
		});
	}
}

function toResponse(xhr)
{
	return {
		status: { code: xhr.status, message: xhr.statusText },
		headers: parseHeaders(xhr.getAllResponseHeaders()),
		url: xhr.responseURL,
		body: xhr.response
	};
}

function parseHeaders(rawHeaders)
{
	var headers = _elm_lang$core$Dict$empty;

	if (!rawHeaders)
	{
		return headers;
	}

	var headerPairs = rawHeaders.split('\u000d\u000a');
	for (var i = headerPairs.length; i--; )
	{
		var headerPair = headerPairs[i];
		var index = headerPair.indexOf('\u003a\u0020');
		if (index > 0)
		{
			var key = headerPair.substring(0, index);
			var value = headerPair.substring(index + 2);

			headers = A3(_elm_lang$core$Dict$update, key, function(oldValue) {
				if (oldValue.ctor === 'Just')
				{
					return _elm_lang$core$Maybe$Just(value + ', ' + oldValue._0);
				}
				return _elm_lang$core$Maybe$Just(value);
			}, headers);
		}
	}

	return headers;
}


// EXPECTORS

function expectStringResponse(responseToResult)
{
	return {
		responseType: 'text',
		responseToResult: responseToResult
	};
}

function mapExpect(func, expect)
{
	return {
		responseType: expect.responseType,
		responseToResult: function(response) {
			var convertedResponse = expect.responseToResult(response);
			return A2(_elm_lang$core$Result$map, func, convertedResponse);
		}
	};
}


// BODY

function multipart(parts)
{
	var formData = new FormData();

	while (parts.ctor !== '[]')
	{
		var part = parts._0;
		formData.append(part._0, part._1);
		parts = parts._1;
	}

	return { ctor: 'FormDataBody', _0: formData };
}

return {
	toTask: F2(toTask),
	expectStringResponse: expectStringResponse,
	mapExpect: F2(mapExpect),
	multipart: multipart,
	encodeUri: encodeUri,
	decodeUri: decodeUri
};

}();

var _elm_lang$http$Http_Internal$map = F2(
	function (func, request) {
		return _elm_lang$core$Native_Utils.update(
			request,
			{
				expect: A2(_elm_lang$http$Native_Http.mapExpect, func, request.expect)
			});
	});
var _elm_lang$http$Http_Internal$RawRequest = F7(
	function (a, b, c, d, e, f, g) {
		return {method: a, headers: b, url: c, body: d, expect: e, timeout: f, withCredentials: g};
	});
var _elm_lang$http$Http_Internal$Request = function (a) {
	return {ctor: 'Request', _0: a};
};
var _elm_lang$http$Http_Internal$Expect = {ctor: 'Expect'};
var _elm_lang$http$Http_Internal$FormDataBody = {ctor: 'FormDataBody'};
var _elm_lang$http$Http_Internal$StringBody = F2(
	function (a, b) {
		return {ctor: 'StringBody', _0: a, _1: b};
	});
var _elm_lang$http$Http_Internal$EmptyBody = {ctor: 'EmptyBody'};
var _elm_lang$http$Http_Internal$Header = F2(
	function (a, b) {
		return {ctor: 'Header', _0: a, _1: b};
	});

var _elm_lang$http$Http$decodeUri = _elm_lang$http$Native_Http.decodeUri;
var _elm_lang$http$Http$encodeUri = _elm_lang$http$Native_Http.encodeUri;
var _elm_lang$http$Http$expectStringResponse = _elm_lang$http$Native_Http.expectStringResponse;
var _elm_lang$http$Http$expectJson = function (decoder) {
	return _elm_lang$http$Http$expectStringResponse(
		function (response) {
			return A2(_elm_lang$core$Json_Decode$decodeString, decoder, response.body);
		});
};
var _elm_lang$http$Http$expectString = _elm_lang$http$Http$expectStringResponse(
	function (response) {
		return _elm_lang$core$Result$Ok(response.body);
	});
var _elm_lang$http$Http$multipartBody = _elm_lang$http$Native_Http.multipart;
var _elm_lang$http$Http$stringBody = _elm_lang$http$Http_Internal$StringBody;
var _elm_lang$http$Http$jsonBody = function (value) {
	return A2(
		_elm_lang$http$Http_Internal$StringBody,
		'application/json',
		A2(_elm_lang$core$Json_Encode$encode, 0, value));
};
var _elm_lang$http$Http$emptyBody = _elm_lang$http$Http_Internal$EmptyBody;
var _elm_lang$http$Http$header = _elm_lang$http$Http_Internal$Header;
var _elm_lang$http$Http$request = _elm_lang$http$Http_Internal$Request;
var _elm_lang$http$Http$post = F3(
	function (url, body, decoder) {
		return _elm_lang$http$Http$request(
			{
				method: 'POST',
				headers: {ctor: '[]'},
				url: url,
				body: body,
				expect: _elm_lang$http$Http$expectJson(decoder),
				timeout: _elm_lang$core$Maybe$Nothing,
				withCredentials: false
			});
	});
var _elm_lang$http$Http$get = F2(
	function (url, decoder) {
		return _elm_lang$http$Http$request(
			{
				method: 'GET',
				headers: {ctor: '[]'},
				url: url,
				body: _elm_lang$http$Http$emptyBody,
				expect: _elm_lang$http$Http$expectJson(decoder),
				timeout: _elm_lang$core$Maybe$Nothing,
				withCredentials: false
			});
	});
var _elm_lang$http$Http$getString = function (url) {
	return _elm_lang$http$Http$request(
		{
			method: 'GET',
			headers: {ctor: '[]'},
			url: url,
			body: _elm_lang$http$Http$emptyBody,
			expect: _elm_lang$http$Http$expectString,
			timeout: _elm_lang$core$Maybe$Nothing,
			withCredentials: false
		});
};
var _elm_lang$http$Http$toTask = function (_p0) {
	var _p1 = _p0;
	return A2(_elm_lang$http$Native_Http.toTask, _p1._0, _elm_lang$core$Maybe$Nothing);
};
var _elm_lang$http$Http$send = F2(
	function (resultToMessage, request) {
		return A2(
			_elm_lang$core$Task$attempt,
			resultToMessage,
			_elm_lang$http$Http$toTask(request));
	});
var _elm_lang$http$Http$Response = F4(
	function (a, b, c, d) {
		return {url: a, status: b, headers: c, body: d};
	});
var _elm_lang$http$Http$BadPayload = F2(
	function (a, b) {
		return {ctor: 'BadPayload', _0: a, _1: b};
	});
var _elm_lang$http$Http$BadStatus = function (a) {
	return {ctor: 'BadStatus', _0: a};
};
var _elm_lang$http$Http$NetworkError = {ctor: 'NetworkError'};
var _elm_lang$http$Http$Timeout = {ctor: 'Timeout'};
var _elm_lang$http$Http$BadUrl = function (a) {
	return {ctor: 'BadUrl', _0: a};
};
var _elm_lang$http$Http$StringPart = F2(
	function (a, b) {
		return {ctor: 'StringPart', _0: a, _1: b};
	});
var _elm_lang$http$Http$stringPart = _elm_lang$http$Http$StringPart;

var _elm_lang$keyboard$Keyboard$onSelfMsg = F3(
	function (router, _p0, state) {
		var _p1 = _p0;
		var _p2 = A2(_elm_lang$core$Dict$get, _p1.category, state);
		if (_p2.ctor === 'Nothing') {
			return _elm_lang$core$Task$succeed(state);
		} else {
			var send = function (tagger) {
				return A2(
					_elm_lang$core$Platform$sendToApp,
					router,
					tagger(_p1.keyCode));
			};
			return A2(
				_elm_lang$core$Task$andThen,
				function (_p3) {
					return _elm_lang$core$Task$succeed(state);
				},
				_elm_lang$core$Task$sequence(
					A2(_elm_lang$core$List$map, send, _p2._0.taggers)));
		}
	});
var _elm_lang$keyboard$Keyboard_ops = _elm_lang$keyboard$Keyboard_ops || {};
_elm_lang$keyboard$Keyboard_ops['&>'] = F2(
	function (task1, task2) {
		return A2(
			_elm_lang$core$Task$andThen,
			function (_p4) {
				return task2;
			},
			task1);
	});
var _elm_lang$keyboard$Keyboard$init = _elm_lang$core$Task$succeed(_elm_lang$core$Dict$empty);
var _elm_lang$keyboard$Keyboard$categorizeHelpHelp = F2(
	function (value, maybeValues) {
		var _p5 = maybeValues;
		if (_p5.ctor === 'Nothing') {
			return _elm_lang$core$Maybe$Just(
				{
					ctor: '::',
					_0: value,
					_1: {ctor: '[]'}
				});
		} else {
			return _elm_lang$core$Maybe$Just(
				{ctor: '::', _0: value, _1: _p5._0});
		}
	});
var _elm_lang$keyboard$Keyboard$categorizeHelp = F2(
	function (subs, subDict) {
		categorizeHelp:
		while (true) {
			var _p6 = subs;
			if (_p6.ctor === '[]') {
				return subDict;
			} else {
				var _v4 = _p6._1,
					_v5 = A3(
					_elm_lang$core$Dict$update,
					_p6._0._0,
					_elm_lang$keyboard$Keyboard$categorizeHelpHelp(_p6._0._1),
					subDict);
				subs = _v4;
				subDict = _v5;
				continue categorizeHelp;
			}
		}
	});
var _elm_lang$keyboard$Keyboard$categorize = function (subs) {
	return A2(_elm_lang$keyboard$Keyboard$categorizeHelp, subs, _elm_lang$core$Dict$empty);
};
var _elm_lang$keyboard$Keyboard$keyCode = A2(_elm_lang$core$Json_Decode$field, 'keyCode', _elm_lang$core$Json_Decode$int);
var _elm_lang$keyboard$Keyboard$subscription = _elm_lang$core$Native_Platform.leaf('Keyboard');
var _elm_lang$keyboard$Keyboard$Watcher = F2(
	function (a, b) {
		return {taggers: a, pid: b};
	});
var _elm_lang$keyboard$Keyboard$Msg = F2(
	function (a, b) {
		return {category: a, keyCode: b};
	});
var _elm_lang$keyboard$Keyboard$onEffects = F3(
	function (router, newSubs, oldState) {
		var rightStep = F3(
			function (category, taggers, task) {
				return A2(
					_elm_lang$core$Task$andThen,
					function (state) {
						return A2(
							_elm_lang$core$Task$andThen,
							function (pid) {
								return _elm_lang$core$Task$succeed(
									A3(
										_elm_lang$core$Dict$insert,
										category,
										A2(_elm_lang$keyboard$Keyboard$Watcher, taggers, pid),
										state));
							},
							_elm_lang$core$Process$spawn(
								A3(
									_elm_lang$dom$Dom_LowLevel$onDocument,
									category,
									_elm_lang$keyboard$Keyboard$keyCode,
									function (_p7) {
										return A2(
											_elm_lang$core$Platform$sendToSelf,
											router,
											A2(_elm_lang$keyboard$Keyboard$Msg, category, _p7));
									})));
					},
					task);
			});
		var bothStep = F4(
			function (category, _p8, taggers, task) {
				var _p9 = _p8;
				return A2(
					_elm_lang$core$Task$map,
					A2(
						_elm_lang$core$Dict$insert,
						category,
						A2(_elm_lang$keyboard$Keyboard$Watcher, taggers, _p9.pid)),
					task);
			});
		var leftStep = F3(
			function (category, _p10, task) {
				var _p11 = _p10;
				return A2(
					_elm_lang$keyboard$Keyboard_ops['&>'],
					_elm_lang$core$Process$kill(_p11.pid),
					task);
			});
		return A6(
			_elm_lang$core$Dict$merge,
			leftStep,
			bothStep,
			rightStep,
			oldState,
			_elm_lang$keyboard$Keyboard$categorize(newSubs),
			_elm_lang$core$Task$succeed(_elm_lang$core$Dict$empty));
	});
var _elm_lang$keyboard$Keyboard$MySub = F2(
	function (a, b) {
		return {ctor: 'MySub', _0: a, _1: b};
	});
var _elm_lang$keyboard$Keyboard$presses = function (tagger) {
	return _elm_lang$keyboard$Keyboard$subscription(
		A2(_elm_lang$keyboard$Keyboard$MySub, 'keypress', tagger));
};
var _elm_lang$keyboard$Keyboard$downs = function (tagger) {
	return _elm_lang$keyboard$Keyboard$subscription(
		A2(_elm_lang$keyboard$Keyboard$MySub, 'keydown', tagger));
};
var _elm_lang$keyboard$Keyboard$ups = function (tagger) {
	return _elm_lang$keyboard$Keyboard$subscription(
		A2(_elm_lang$keyboard$Keyboard$MySub, 'keyup', tagger));
};
var _elm_lang$keyboard$Keyboard$subMap = F2(
	function (func, _p12) {
		var _p13 = _p12;
		return A2(
			_elm_lang$keyboard$Keyboard$MySub,
			_p13._0,
			function (_p14) {
				return func(
					_p13._1(_p14));
			});
	});
_elm_lang$core$Native_Platform.effectManagers['Keyboard'] = {pkg: 'elm-lang/keyboard', init: _elm_lang$keyboard$Keyboard$init, onEffects: _elm_lang$keyboard$Keyboard$onEffects, onSelfMsg: _elm_lang$keyboard$Keyboard$onSelfMsg, tag: 'sub', subMap: _elm_lang$keyboard$Keyboard$subMap};

var _elm_lang$mouse$Mouse_ops = _elm_lang$mouse$Mouse_ops || {};
_elm_lang$mouse$Mouse_ops['&>'] = F2(
	function (t1, t2) {
		return A2(
			_elm_lang$core$Task$andThen,
			function (_p0) {
				return t2;
			},
			t1);
	});
var _elm_lang$mouse$Mouse$onSelfMsg = F3(
	function (router, _p1, state) {
		var _p2 = _p1;
		var _p3 = A2(_elm_lang$core$Dict$get, _p2.category, state);
		if (_p3.ctor === 'Nothing') {
			return _elm_lang$core$Task$succeed(state);
		} else {
			var send = function (tagger) {
				return A2(
					_elm_lang$core$Platform$sendToApp,
					router,
					tagger(_p2.position));
			};
			return A2(
				_elm_lang$mouse$Mouse_ops['&>'],
				_elm_lang$core$Task$sequence(
					A2(_elm_lang$core$List$map, send, _p3._0.taggers)),
				_elm_lang$core$Task$succeed(state));
		}
	});
var _elm_lang$mouse$Mouse$init = _elm_lang$core$Task$succeed(_elm_lang$core$Dict$empty);
var _elm_lang$mouse$Mouse$categorizeHelpHelp = F2(
	function (value, maybeValues) {
		var _p4 = maybeValues;
		if (_p4.ctor === 'Nothing') {
			return _elm_lang$core$Maybe$Just(
				{
					ctor: '::',
					_0: value,
					_1: {ctor: '[]'}
				});
		} else {
			return _elm_lang$core$Maybe$Just(
				{ctor: '::', _0: value, _1: _p4._0});
		}
	});
var _elm_lang$mouse$Mouse$categorizeHelp = F2(
	function (subs, subDict) {
		categorizeHelp:
		while (true) {
			var _p5 = subs;
			if (_p5.ctor === '[]') {
				return subDict;
			} else {
				var _v4 = _p5._1,
					_v5 = A3(
					_elm_lang$core$Dict$update,
					_p5._0._0,
					_elm_lang$mouse$Mouse$categorizeHelpHelp(_p5._0._1),
					subDict);
				subs = _v4;
				subDict = _v5;
				continue categorizeHelp;
			}
		}
	});
var _elm_lang$mouse$Mouse$categorize = function (subs) {
	return A2(_elm_lang$mouse$Mouse$categorizeHelp, subs, _elm_lang$core$Dict$empty);
};
var _elm_lang$mouse$Mouse$subscription = _elm_lang$core$Native_Platform.leaf('Mouse');
var _elm_lang$mouse$Mouse$Position = F2(
	function (a, b) {
		return {x: a, y: b};
	});
var _elm_lang$mouse$Mouse$position = A3(
	_elm_lang$core$Json_Decode$map2,
	_elm_lang$mouse$Mouse$Position,
	A2(_elm_lang$core$Json_Decode$field, 'pageX', _elm_lang$core$Json_Decode$int),
	A2(_elm_lang$core$Json_Decode$field, 'pageY', _elm_lang$core$Json_Decode$int));
var _elm_lang$mouse$Mouse$Watcher = F2(
	function (a, b) {
		return {taggers: a, pid: b};
	});
var _elm_lang$mouse$Mouse$Msg = F2(
	function (a, b) {
		return {category: a, position: b};
	});
var _elm_lang$mouse$Mouse$onEffects = F3(
	function (router, newSubs, oldState) {
		var rightStep = F3(
			function (category, taggers, task) {
				var tracker = A3(
					_elm_lang$dom$Dom_LowLevel$onDocument,
					category,
					_elm_lang$mouse$Mouse$position,
					function (_p6) {
						return A2(
							_elm_lang$core$Platform$sendToSelf,
							router,
							A2(_elm_lang$mouse$Mouse$Msg, category, _p6));
					});
				return A2(
					_elm_lang$core$Task$andThen,
					function (state) {
						return A2(
							_elm_lang$core$Task$andThen,
							function (pid) {
								return _elm_lang$core$Task$succeed(
									A3(
										_elm_lang$core$Dict$insert,
										category,
										A2(_elm_lang$mouse$Mouse$Watcher, taggers, pid),
										state));
							},
							_elm_lang$core$Process$spawn(tracker));
					},
					task);
			});
		var bothStep = F4(
			function (category, _p7, taggers, task) {
				var _p8 = _p7;
				return A2(
					_elm_lang$core$Task$andThen,
					function (state) {
						return _elm_lang$core$Task$succeed(
							A3(
								_elm_lang$core$Dict$insert,
								category,
								A2(_elm_lang$mouse$Mouse$Watcher, taggers, _p8.pid),
								state));
					},
					task);
			});
		var leftStep = F3(
			function (category, _p9, task) {
				var _p10 = _p9;
				return A2(
					_elm_lang$mouse$Mouse_ops['&>'],
					_elm_lang$core$Process$kill(_p10.pid),
					task);
			});
		return A6(
			_elm_lang$core$Dict$merge,
			leftStep,
			bothStep,
			rightStep,
			oldState,
			_elm_lang$mouse$Mouse$categorize(newSubs),
			_elm_lang$core$Task$succeed(_elm_lang$core$Dict$empty));
	});
var _elm_lang$mouse$Mouse$MySub = F2(
	function (a, b) {
		return {ctor: 'MySub', _0: a, _1: b};
	});
var _elm_lang$mouse$Mouse$clicks = function (tagger) {
	return _elm_lang$mouse$Mouse$subscription(
		A2(_elm_lang$mouse$Mouse$MySub, 'click', tagger));
};
var _elm_lang$mouse$Mouse$moves = function (tagger) {
	return _elm_lang$mouse$Mouse$subscription(
		A2(_elm_lang$mouse$Mouse$MySub, 'mousemove', tagger));
};
var _elm_lang$mouse$Mouse$downs = function (tagger) {
	return _elm_lang$mouse$Mouse$subscription(
		A2(_elm_lang$mouse$Mouse$MySub, 'mousedown', tagger));
};
var _elm_lang$mouse$Mouse$ups = function (tagger) {
	return _elm_lang$mouse$Mouse$subscription(
		A2(_elm_lang$mouse$Mouse$MySub, 'mouseup', tagger));
};
var _elm_lang$mouse$Mouse$subMap = F2(
	function (func, _p11) {
		var _p12 = _p11;
		return A2(
			_elm_lang$mouse$Mouse$MySub,
			_p12._0,
			function (_p13) {
				return func(
					_p12._1(_p13));
			});
	});
_elm_lang$core$Native_Platform.effectManagers['Mouse'] = {pkg: 'elm-lang/mouse', init: _elm_lang$mouse$Mouse$init, onEffects: _elm_lang$mouse$Mouse$onEffects, onSelfMsg: _elm_lang$mouse$Mouse$onSelfMsg, tag: 'sub', subMap: _elm_lang$mouse$Mouse$subMap};

var _elm_lang$navigation$Native_Navigation = function() {


// FAKE NAVIGATION

function go(n)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		if (n !== 0)
		{
			history.go(n);
		}
		callback(_elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Native_Utils.Tuple0));
	});
}

function pushState(url)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		history.pushState({}, '', url);
		callback(_elm_lang$core$Native_Scheduler.succeed(getLocation()));
	});
}

function replaceState(url)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		history.replaceState({}, '', url);
		callback(_elm_lang$core$Native_Scheduler.succeed(getLocation()));
	});
}


// REAL NAVIGATION

function reloadPage(skipCache)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		document.location.reload(skipCache);
		callback(_elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Native_Utils.Tuple0));
	});
}

function setLocation(url)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		try
		{
			window.location = url;
		}
		catch(err)
		{
			// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.
			// Other browsers reload the page, so let's be consistent about that.
			document.location.reload(false);
		}
		callback(_elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Native_Utils.Tuple0));
	});
}


// GET LOCATION

function getLocation()
{
	var location = document.location;

	return {
		href: location.href,
		host: location.host,
		hostname: location.hostname,
		protocol: location.protocol,
		origin: location.origin,
		port_: location.port,
		pathname: location.pathname,
		search: location.search,
		hash: location.hash,
		username: location.username,
		password: location.password
	};
}


// DETECT IE11 PROBLEMS

function isInternetExplorer11()
{
	return window.navigator.userAgent.indexOf('Trident') !== -1;
}


return {
	go: go,
	setLocation: setLocation,
	reloadPage: reloadPage,
	pushState: pushState,
	replaceState: replaceState,
	getLocation: getLocation,
	isInternetExplorer11: isInternetExplorer11
};

}();

var _elm_lang$navigation$Navigation$replaceState = _elm_lang$navigation$Native_Navigation.replaceState;
var _elm_lang$navigation$Navigation$pushState = _elm_lang$navigation$Native_Navigation.pushState;
var _elm_lang$navigation$Navigation$go = _elm_lang$navigation$Native_Navigation.go;
var _elm_lang$navigation$Navigation$reloadPage = _elm_lang$navigation$Native_Navigation.reloadPage;
var _elm_lang$navigation$Navigation$setLocation = _elm_lang$navigation$Native_Navigation.setLocation;
var _elm_lang$navigation$Navigation_ops = _elm_lang$navigation$Navigation_ops || {};
_elm_lang$navigation$Navigation_ops['&>'] = F2(
	function (task1, task2) {
		return A2(
			_elm_lang$core$Task$andThen,
			function (_p0) {
				return task2;
			},
			task1);
	});
var _elm_lang$navigation$Navigation$notify = F3(
	function (router, subs, location) {
		var send = function (_p1) {
			var _p2 = _p1;
			return A2(
				_elm_lang$core$Platform$sendToApp,
				router,
				_p2._0(location));
		};
		return A2(
			_elm_lang$navigation$Navigation_ops['&>'],
			_elm_lang$core$Task$sequence(
				A2(_elm_lang$core$List$map, send, subs)),
			_elm_lang$core$Task$succeed(
				{ctor: '_Tuple0'}));
	});
var _elm_lang$navigation$Navigation$cmdHelp = F3(
	function (router, subs, cmd) {
		var _p3 = cmd;
		switch (_p3.ctor) {
			case 'Jump':
				return _elm_lang$navigation$Navigation$go(_p3._0);
			case 'New':
				return A2(
					_elm_lang$core$Task$andThen,
					A2(_elm_lang$navigation$Navigation$notify, router, subs),
					_elm_lang$navigation$Navigation$pushState(_p3._0));
			case 'Modify':
				return A2(
					_elm_lang$core$Task$andThen,
					A2(_elm_lang$navigation$Navigation$notify, router, subs),
					_elm_lang$navigation$Navigation$replaceState(_p3._0));
			case 'Visit':
				return _elm_lang$navigation$Navigation$setLocation(_p3._0);
			default:
				return _elm_lang$navigation$Navigation$reloadPage(_p3._0);
		}
	});
var _elm_lang$navigation$Navigation$killPopWatcher = function (popWatcher) {
	var _p4 = popWatcher;
	if (_p4.ctor === 'Normal') {
		return _elm_lang$core$Process$kill(_p4._0);
	} else {
		return A2(
			_elm_lang$navigation$Navigation_ops['&>'],
			_elm_lang$core$Process$kill(_p4._0),
			_elm_lang$core$Process$kill(_p4._1));
	}
};
var _elm_lang$navigation$Navigation$onSelfMsg = F3(
	function (router, location, state) {
		return A2(
			_elm_lang$navigation$Navigation_ops['&>'],
			A3(_elm_lang$navigation$Navigation$notify, router, state.subs, location),
			_elm_lang$core$Task$succeed(state));
	});
var _elm_lang$navigation$Navigation$subscription = _elm_lang$core$Native_Platform.leaf('Navigation');
var _elm_lang$navigation$Navigation$command = _elm_lang$core$Native_Platform.leaf('Navigation');
var _elm_lang$navigation$Navigation$Location = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return {href: a, host: b, hostname: c, protocol: d, origin: e, port_: f, pathname: g, search: h, hash: i, username: j, password: k};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _elm_lang$navigation$Navigation$State = F2(
	function (a, b) {
		return {subs: a, popWatcher: b};
	});
var _elm_lang$navigation$Navigation$init = _elm_lang$core$Task$succeed(
	A2(
		_elm_lang$navigation$Navigation$State,
		{ctor: '[]'},
		_elm_lang$core$Maybe$Nothing));
var _elm_lang$navigation$Navigation$Reload = function (a) {
	return {ctor: 'Reload', _0: a};
};
var _elm_lang$navigation$Navigation$reload = _elm_lang$navigation$Navigation$command(
	_elm_lang$navigation$Navigation$Reload(false));
var _elm_lang$navigation$Navigation$reloadAndSkipCache = _elm_lang$navigation$Navigation$command(
	_elm_lang$navigation$Navigation$Reload(true));
var _elm_lang$navigation$Navigation$Visit = function (a) {
	return {ctor: 'Visit', _0: a};
};
var _elm_lang$navigation$Navigation$load = function (url) {
	return _elm_lang$navigation$Navigation$command(
		_elm_lang$navigation$Navigation$Visit(url));
};
var _elm_lang$navigation$Navigation$Modify = function (a) {
	return {ctor: 'Modify', _0: a};
};
var _elm_lang$navigation$Navigation$modifyUrl = function (url) {
	return _elm_lang$navigation$Navigation$command(
		_elm_lang$navigation$Navigation$Modify(url));
};
var _elm_lang$navigation$Navigation$New = function (a) {
	return {ctor: 'New', _0: a};
};
var _elm_lang$navigation$Navigation$newUrl = function (url) {
	return _elm_lang$navigation$Navigation$command(
		_elm_lang$navigation$Navigation$New(url));
};
var _elm_lang$navigation$Navigation$Jump = function (a) {
	return {ctor: 'Jump', _0: a};
};
var _elm_lang$navigation$Navigation$back = function (n) {
	return _elm_lang$navigation$Navigation$command(
		_elm_lang$navigation$Navigation$Jump(0 - n));
};
var _elm_lang$navigation$Navigation$forward = function (n) {
	return _elm_lang$navigation$Navigation$command(
		_elm_lang$navigation$Navigation$Jump(n));
};
var _elm_lang$navigation$Navigation$cmdMap = F2(
	function (_p5, myCmd) {
		var _p6 = myCmd;
		switch (_p6.ctor) {
			case 'Jump':
				return _elm_lang$navigation$Navigation$Jump(_p6._0);
			case 'New':
				return _elm_lang$navigation$Navigation$New(_p6._0);
			case 'Modify':
				return _elm_lang$navigation$Navigation$Modify(_p6._0);
			case 'Visit':
				return _elm_lang$navigation$Navigation$Visit(_p6._0);
			default:
				return _elm_lang$navigation$Navigation$Reload(_p6._0);
		}
	});
var _elm_lang$navigation$Navigation$Monitor = function (a) {
	return {ctor: 'Monitor', _0: a};
};
var _elm_lang$navigation$Navigation$program = F2(
	function (locationToMessage, stuff) {
		var init = stuff.init(
			_elm_lang$navigation$Native_Navigation.getLocation(
				{ctor: '_Tuple0'}));
		var subs = function (model) {
			return _elm_lang$core$Platform_Sub$batch(
				{
					ctor: '::',
					_0: _elm_lang$navigation$Navigation$subscription(
						_elm_lang$navigation$Navigation$Monitor(locationToMessage)),
					_1: {
						ctor: '::',
						_0: stuff.subscriptions(model),
						_1: {ctor: '[]'}
					}
				});
		};
		return _elm_lang$html$Html$program(
			{init: init, view: stuff.view, update: stuff.update, subscriptions: subs});
	});
var _elm_lang$navigation$Navigation$programWithFlags = F2(
	function (locationToMessage, stuff) {
		var init = function (flags) {
			return A2(
				stuff.init,
				flags,
				_elm_lang$navigation$Native_Navigation.getLocation(
					{ctor: '_Tuple0'}));
		};
		var subs = function (model) {
			return _elm_lang$core$Platform_Sub$batch(
				{
					ctor: '::',
					_0: _elm_lang$navigation$Navigation$subscription(
						_elm_lang$navigation$Navigation$Monitor(locationToMessage)),
					_1: {
						ctor: '::',
						_0: stuff.subscriptions(model),
						_1: {ctor: '[]'}
					}
				});
		};
		return _elm_lang$html$Html$programWithFlags(
			{init: init, view: stuff.view, update: stuff.update, subscriptions: subs});
	});
var _elm_lang$navigation$Navigation$subMap = F2(
	function (func, _p7) {
		var _p8 = _p7;
		return _elm_lang$navigation$Navigation$Monitor(
			function (_p9) {
				return func(
					_p8._0(_p9));
			});
	});
var _elm_lang$navigation$Navigation$InternetExplorer = F2(
	function (a, b) {
		return {ctor: 'InternetExplorer', _0: a, _1: b};
	});
var _elm_lang$navigation$Navigation$Normal = function (a) {
	return {ctor: 'Normal', _0: a};
};
var _elm_lang$navigation$Navigation$spawnPopWatcher = function (router) {
	var reportLocation = function (_p10) {
		return A2(
			_elm_lang$core$Platform$sendToSelf,
			router,
			_elm_lang$navigation$Native_Navigation.getLocation(
				{ctor: '_Tuple0'}));
	};
	return _elm_lang$navigation$Native_Navigation.isInternetExplorer11(
		{ctor: '_Tuple0'}) ? A3(
		_elm_lang$core$Task$map2,
		_elm_lang$navigation$Navigation$InternetExplorer,
		_elm_lang$core$Process$spawn(
			A3(_elm_lang$dom$Dom_LowLevel$onWindow, 'popstate', _elm_lang$core$Json_Decode$value, reportLocation)),
		_elm_lang$core$Process$spawn(
			A3(_elm_lang$dom$Dom_LowLevel$onWindow, 'hashchange', _elm_lang$core$Json_Decode$value, reportLocation))) : A2(
		_elm_lang$core$Task$map,
		_elm_lang$navigation$Navigation$Normal,
		_elm_lang$core$Process$spawn(
			A3(_elm_lang$dom$Dom_LowLevel$onWindow, 'popstate', _elm_lang$core$Json_Decode$value, reportLocation)));
};
var _elm_lang$navigation$Navigation$onEffects = F4(
	function (router, cmds, subs, _p11) {
		var _p12 = _p11;
		var _p15 = _p12.popWatcher;
		var stepState = function () {
			var _p13 = {ctor: '_Tuple2', _0: subs, _1: _p15};
			_v6_2:
			do {
				if (_p13._0.ctor === '[]') {
					if (_p13._1.ctor === 'Just') {
						return A2(
							_elm_lang$navigation$Navigation_ops['&>'],
							_elm_lang$navigation$Navigation$killPopWatcher(_p13._1._0),
							_elm_lang$core$Task$succeed(
								A2(_elm_lang$navigation$Navigation$State, subs, _elm_lang$core$Maybe$Nothing)));
					} else {
						break _v6_2;
					}
				} else {
					if (_p13._1.ctor === 'Nothing') {
						return A2(
							_elm_lang$core$Task$map,
							function (_p14) {
								return A2(
									_elm_lang$navigation$Navigation$State,
									subs,
									_elm_lang$core$Maybe$Just(_p14));
							},
							_elm_lang$navigation$Navigation$spawnPopWatcher(router));
					} else {
						break _v6_2;
					}
				}
			} while(false);
			return _elm_lang$core$Task$succeed(
				A2(_elm_lang$navigation$Navigation$State, subs, _p15));
		}();
		return A2(
			_elm_lang$navigation$Navigation_ops['&>'],
			_elm_lang$core$Task$sequence(
				A2(
					_elm_lang$core$List$map,
					A2(_elm_lang$navigation$Navigation$cmdHelp, router, subs),
					cmds)),
			stepState);
	});
_elm_lang$core$Native_Platform.effectManagers['Navigation'] = {pkg: 'elm-lang/navigation', init: _elm_lang$navigation$Navigation$init, onEffects: _elm_lang$navigation$Navigation$onEffects, onSelfMsg: _elm_lang$navigation$Navigation$onSelfMsg, tag: 'fx', cmdMap: _elm_lang$navigation$Navigation$cmdMap, subMap: _elm_lang$navigation$Navigation$subMap};

var _elm_lang$trampoline$Trampoline$evaluate = function (trampoline) {
	evaluate:
	while (true) {
		var _p0 = trampoline;
		if (_p0.ctor === 'Done') {
			return _p0._0;
		} else {
			var _v1 = _p0._0(
				{ctor: '_Tuple0'});
			trampoline = _v1;
			continue evaluate;
		}
	}
};
var _elm_lang$trampoline$Trampoline$Jump = function (a) {
	return {ctor: 'Jump', _0: a};
};
var _elm_lang$trampoline$Trampoline$jump = _elm_lang$trampoline$Trampoline$Jump;
var _elm_lang$trampoline$Trampoline$Done = function (a) {
	return {ctor: 'Done', _0: a};
};
var _elm_lang$trampoline$Trampoline$done = _elm_lang$trampoline$Trampoline$Done;

var _elm_lang$websocket$Native_WebSocket = function() {

function open(url, settings)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		try
		{
			var socket = new WebSocket(url);
			socket.elm_web_socket = true;
		}
		catch(err)
		{
			return callback(_elm_lang$core$Native_Scheduler.fail({
				ctor: err.name === 'SecurityError' ? 'BadSecurity' : 'BadArgs',
				_0: err.message
			}));
		}

		socket.addEventListener("open", function(event) {
			callback(_elm_lang$core$Native_Scheduler.succeed(socket));
		});

		socket.addEventListener("message", function(event) {
			_elm_lang$core$Native_Scheduler.rawSpawn(A2(settings.onMessage, socket, event.data));
		});

		socket.addEventListener("close", function(event) {
			_elm_lang$core$Native_Scheduler.rawSpawn(settings.onClose({
				code: event.code,
				reason: event.reason,
				wasClean: event.wasClean
			}));
		});

		return function()
		{
			if (socket && socket.close)
			{
				socket.close();
			}
		};
	});
}

function send(socket, string)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		var result =
			socket.readyState === WebSocket.OPEN
				? _elm_lang$core$Maybe$Nothing
				: _elm_lang$core$Maybe$Just({ ctor: 'NotOpen' });

		try
		{
			socket.send(string);
		}
		catch(err)
		{
			result = _elm_lang$core$Maybe$Just({ ctor: 'BadString' });
		}

		callback(_elm_lang$core$Native_Scheduler.succeed(result));
	});
}

function close(code, reason, socket)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback) {
		try
		{
			socket.close(code, reason);
		}
		catch(err)
		{
			return callback(_elm_lang$core$Native_Scheduler.fail(_elm_lang$core$Maybe$Just({
				ctor: err.name === 'SyntaxError' ? 'BadReason' : 'BadCode'
			})));
		}
		callback(_elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Maybe$Nothing));
	});
}

function bytesQueued(socket)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback) {
		callback(_elm_lang$core$Native_Scheduler.succeed(socket.bufferedAmount));
	});
}

return {
	open: F2(open),
	send: F2(send),
	close: F3(close),
	bytesQueued: bytesQueued
};

}();

var _elm_lang$websocket$WebSocket_LowLevel$bytesQueued = _elm_lang$websocket$Native_WebSocket.bytesQueued;
var _elm_lang$websocket$WebSocket_LowLevel$send = _elm_lang$websocket$Native_WebSocket.send;
var _elm_lang$websocket$WebSocket_LowLevel$closeWith = _elm_lang$websocket$Native_WebSocket.close;
var _elm_lang$websocket$WebSocket_LowLevel$close = function (socket) {
	return A2(
		_elm_lang$core$Task$map,
		_elm_lang$core$Basics$always(
			{ctor: '_Tuple0'}),
		A3(_elm_lang$websocket$WebSocket_LowLevel$closeWith, 1000, '', socket));
};
var _elm_lang$websocket$WebSocket_LowLevel$open = _elm_lang$websocket$Native_WebSocket.open;
var _elm_lang$websocket$WebSocket_LowLevel$Settings = F2(
	function (a, b) {
		return {onMessage: a, onClose: b};
	});
var _elm_lang$websocket$WebSocket_LowLevel$WebSocket = {ctor: 'WebSocket'};
var _elm_lang$websocket$WebSocket_LowLevel$BadArgs = {ctor: 'BadArgs'};
var _elm_lang$websocket$WebSocket_LowLevel$BadSecurity = {ctor: 'BadSecurity'};
var _elm_lang$websocket$WebSocket_LowLevel$BadReason = {ctor: 'BadReason'};
var _elm_lang$websocket$WebSocket_LowLevel$BadCode = {ctor: 'BadCode'};
var _elm_lang$websocket$WebSocket_LowLevel$BadString = {ctor: 'BadString'};
var _elm_lang$websocket$WebSocket_LowLevel$NotOpen = {ctor: 'NotOpen'};

var _elm_lang$window$Native_Window = function()
{

var size = _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)	{
	callback(_elm_lang$core$Native_Scheduler.succeed({
		width: window.innerWidth,
		height: window.innerHeight
	}));
});

return {
	size: size
};

}();
var _elm_lang$window$Window_ops = _elm_lang$window$Window_ops || {};
_elm_lang$window$Window_ops['&>'] = F2(
	function (task1, task2) {
		return A2(
			_elm_lang$core$Task$andThen,
			function (_p0) {
				return task2;
			},
			task1);
	});
var _elm_lang$window$Window$onSelfMsg = F3(
	function (router, dimensions, state) {
		var _p1 = state;
		if (_p1.ctor === 'Nothing') {
			return _elm_lang$core$Task$succeed(state);
		} else {
			var send = function (_p2) {
				var _p3 = _p2;
				return A2(
					_elm_lang$core$Platform$sendToApp,
					router,
					_p3._0(dimensions));
			};
			return A2(
				_elm_lang$window$Window_ops['&>'],
				_elm_lang$core$Task$sequence(
					A2(_elm_lang$core$List$map, send, _p1._0.subs)),
				_elm_lang$core$Task$succeed(state));
		}
	});
var _elm_lang$window$Window$init = _elm_lang$core$Task$succeed(_elm_lang$core$Maybe$Nothing);
var _elm_lang$window$Window$size = _elm_lang$window$Native_Window.size;
var _elm_lang$window$Window$width = A2(
	_elm_lang$core$Task$map,
	function (_) {
		return _.width;
	},
	_elm_lang$window$Window$size);
var _elm_lang$window$Window$height = A2(
	_elm_lang$core$Task$map,
	function (_) {
		return _.height;
	},
	_elm_lang$window$Window$size);
var _elm_lang$window$Window$onEffects = F3(
	function (router, newSubs, oldState) {
		var _p4 = {ctor: '_Tuple2', _0: oldState, _1: newSubs};
		if (_p4._0.ctor === 'Nothing') {
			if (_p4._1.ctor === '[]') {
				return _elm_lang$core$Task$succeed(_elm_lang$core$Maybe$Nothing);
			} else {
				return A2(
					_elm_lang$core$Task$andThen,
					function (pid) {
						return _elm_lang$core$Task$succeed(
							_elm_lang$core$Maybe$Just(
								{subs: newSubs, pid: pid}));
					},
					_elm_lang$core$Process$spawn(
						A3(
							_elm_lang$dom$Dom_LowLevel$onWindow,
							'resize',
							_elm_lang$core$Json_Decode$succeed(
								{ctor: '_Tuple0'}),
							function (_p5) {
								return A2(
									_elm_lang$core$Task$andThen,
									_elm_lang$core$Platform$sendToSelf(router),
									_elm_lang$window$Window$size);
							})));
			}
		} else {
			if (_p4._1.ctor === '[]') {
				return A2(
					_elm_lang$window$Window_ops['&>'],
					_elm_lang$core$Process$kill(_p4._0._0.pid),
					_elm_lang$core$Task$succeed(_elm_lang$core$Maybe$Nothing));
			} else {
				return _elm_lang$core$Task$succeed(
					_elm_lang$core$Maybe$Just(
						{subs: newSubs, pid: _p4._0._0.pid}));
			}
		}
	});
var _elm_lang$window$Window$subscription = _elm_lang$core$Native_Platform.leaf('Window');
var _elm_lang$window$Window$Size = F2(
	function (a, b) {
		return {width: a, height: b};
	});
var _elm_lang$window$Window$MySub = function (a) {
	return {ctor: 'MySub', _0: a};
};
var _elm_lang$window$Window$resizes = function (tagger) {
	return _elm_lang$window$Window$subscription(
		_elm_lang$window$Window$MySub(tagger));
};
var _elm_lang$window$Window$subMap = F2(
	function (func, _p6) {
		var _p7 = _p6;
		return _elm_lang$window$Window$MySub(
			function (_p8) {
				return func(
					_p7._0(_p8));
			});
	});
_elm_lang$core$Native_Platform.effectManagers['Window'] = {pkg: 'elm-lang/window', init: _elm_lang$window$Window$init, onEffects: _elm_lang$window$Window$onEffects, onSelfMsg: _elm_lang$window$Window$onSelfMsg, tag: 'sub', subMap: _elm_lang$window$Window$subMap};

var _ericgj$elm_validation$Validation$isInvalid = function (validation) {
	var _p0 = validation;
	if (_p0.ctor === 'Invalid') {
		return true;
	} else {
		return false;
	}
};
var _ericgj$elm_validation$Validation$isValid = function (validation) {
	var _p1 = validation;
	if (_p1.ctor === 'Valid') {
		return true;
	} else {
		return false;
	}
};
var _ericgj$elm_validation$Validation$message = function (validation) {
	var _p2 = validation;
	if (_p2.ctor === 'Invalid') {
		return _elm_lang$core$Maybe$Just(_p2._0);
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _ericgj$elm_validation$Validation$toString = F2(
	function (fn, validation) {
		var _p3 = validation;
		switch (_p3.ctor) {
			case 'Initial':
				return '';
			case 'Valid':
				return fn(_p3._0);
			default:
				return _p3._1;
		}
	});
var _ericgj$elm_validation$Validation$toMaybe = function (validation) {
	var _p4 = validation;
	if (_p4.ctor === 'Valid') {
		return _elm_lang$core$Maybe$Just(_p4._0);
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _ericgj$elm_validation$Validation$withDefault = F2(
	function ($default, validation) {
		var _p5 = validation;
		if (_p5.ctor === 'Valid') {
			return _p5._0;
		} else {
			return $default;
		}
	});
var _ericgj$elm_validation$Validation$Invalid = F2(
	function (a, b) {
		return {ctor: 'Invalid', _0: a, _1: b};
	});
var _ericgj$elm_validation$Validation$mapMessage = F2(
	function (fn, validation) {
		var _p6 = validation;
		if (_p6.ctor === 'Invalid') {
			return A2(
				_ericgj$elm_validation$Validation$Invalid,
				fn(_p6._0),
				_p6._1);
		} else {
			return validation;
		}
	});
var _ericgj$elm_validation$Validation$Valid = function (a) {
	return {ctor: 'Valid', _0: a};
};
var _ericgj$elm_validation$Validation$valid = _ericgj$elm_validation$Validation$Valid;
var _ericgj$elm_validation$Validation$fromMaybe = F3(
	function (msg, input, maybe) {
		var _p7 = maybe;
		if (_p7.ctor === 'Nothing') {
			return A2(_ericgj$elm_validation$Validation$Invalid, msg, input);
		} else {
			return _ericgj$elm_validation$Validation$Valid(_p7._0);
		}
	});
var _ericgj$elm_validation$Validation$fromResult = F3(
	function (fn, input, result) {
		var _p8 = result;
		if (_p8.ctor === 'Ok') {
			return _ericgj$elm_validation$Validation$Valid(_p8._0);
		} else {
			return A2(
				_ericgj$elm_validation$Validation$Invalid,
				fn(_p8._0),
				input);
		}
	});
var _ericgj$elm_validation$Validation$validate = F2(
	function (fn, input) {
		var _p9 = fn(input);
		if (_p9.ctor === 'Err') {
			return A2(_ericgj$elm_validation$Validation$Invalid, _p9._0, input);
		} else {
			return _ericgj$elm_validation$Validation$Valid(_p9._0);
		}
	});
var _ericgj$elm_validation$Validation$Initial = {ctor: 'Initial'};
var _ericgj$elm_validation$Validation$map = F2(
	function (fn, validation) {
		var _p10 = validation;
		switch (_p10.ctor) {
			case 'Initial':
				return _ericgj$elm_validation$Validation$Initial;
			case 'Valid':
				return _ericgj$elm_validation$Validation$Valid(
					fn(_p10._0));
			default:
				return A2(_ericgj$elm_validation$Validation$Invalid, _p10._0, _p10._1);
		}
	});
var _ericgj$elm_validation$Validation$andThen = F2(
	function (fn, validation) {
		var _p11 = validation;
		switch (_p11.ctor) {
			case 'Initial':
				return _ericgj$elm_validation$Validation$Initial;
			case 'Valid':
				return fn(_p11._0);
			default:
				return A2(_ericgj$elm_validation$Validation$Invalid, _p11._0, _p11._1);
		}
	});
var _ericgj$elm_validation$Validation$andMap = F2(
	function (validation, validationFn) {
		var _p12 = validationFn;
		switch (_p12.ctor) {
			case 'Initial':
				return _ericgj$elm_validation$Validation$Initial;
			case 'Valid':
				return A2(_ericgj$elm_validation$Validation$map, _p12._0, validation);
			default:
				return A2(_ericgj$elm_validation$Validation$Invalid, _p12._0, _p12._1);
		}
	});
var _ericgj$elm_validation$Validation$initial = _ericgj$elm_validation$Validation$Initial;
var _ericgj$elm_validation$Validation$fromMaybeInitial = function (maybe) {
	var _p13 = maybe;
	if (_p13.ctor === 'Nothing') {
		return _ericgj$elm_validation$Validation$Initial;
	} else {
		return _ericgj$elm_validation$Validation$Valid(_p13._0);
	}
};
var _ericgj$elm_validation$Validation$fromResultInitial = function (result) {
	var _p14 = result;
	if (_p14.ctor === 'Ok') {
		return _ericgj$elm_validation$Validation$Valid(_p14._0);
	} else {
		return _ericgj$elm_validation$Validation$Initial;
	}
};

var _evancz$url_parser$UrlParser$toKeyValuePair = function (segment) {
	var _p0 = A2(_elm_lang$core$String$split, '=', segment);
	if (((_p0.ctor === '::') && (_p0._1.ctor === '::')) && (_p0._1._1.ctor === '[]')) {
		return A3(
			_elm_lang$core$Maybe$map2,
			F2(
				function (v0, v1) {
					return {ctor: '_Tuple2', _0: v0, _1: v1};
				}),
			_elm_lang$http$Http$decodeUri(_p0._0),
			_elm_lang$http$Http$decodeUri(_p0._1._0));
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _evancz$url_parser$UrlParser$parseParams = function (queryString) {
	return _elm_lang$core$Dict$fromList(
		A2(
			_elm_lang$core$List$filterMap,
			_evancz$url_parser$UrlParser$toKeyValuePair,
			A2(
				_elm_lang$core$String$split,
				'&',
				A2(_elm_lang$core$String$dropLeft, 1, queryString))));
};
var _evancz$url_parser$UrlParser$splitUrl = function (url) {
	var _p1 = A2(_elm_lang$core$String$split, '/', url);
	if ((_p1.ctor === '::') && (_p1._0 === '')) {
		return _p1._1;
	} else {
		return _p1;
	}
};
var _evancz$url_parser$UrlParser$parseHelp = function (states) {
	parseHelp:
	while (true) {
		var _p2 = states;
		if (_p2.ctor === '[]') {
			return _elm_lang$core$Maybe$Nothing;
		} else {
			var _p4 = _p2._0;
			var _p3 = _p4.unvisited;
			if (_p3.ctor === '[]') {
				return _elm_lang$core$Maybe$Just(_p4.value);
			} else {
				if ((_p3._0 === '') && (_p3._1.ctor === '[]')) {
					return _elm_lang$core$Maybe$Just(_p4.value);
				} else {
					var _v4 = _p2._1;
					states = _v4;
					continue parseHelp;
				}
			}
		}
	}
};
var _evancz$url_parser$UrlParser$parse = F3(
	function (_p5, url, params) {
		var _p6 = _p5;
		return _evancz$url_parser$UrlParser$parseHelp(
			_p6._0(
				{
					visited: {ctor: '[]'},
					unvisited: _evancz$url_parser$UrlParser$splitUrl(url),
					params: params,
					value: _elm_lang$core$Basics$identity
				}));
	});
var _evancz$url_parser$UrlParser$parseHash = F2(
	function (parser, location) {
		return A3(
			_evancz$url_parser$UrlParser$parse,
			parser,
			A2(_elm_lang$core$String$dropLeft, 1, location.hash),
			_evancz$url_parser$UrlParser$parseParams(location.search));
	});
var _evancz$url_parser$UrlParser$parsePath = F2(
	function (parser, location) {
		return A3(
			_evancz$url_parser$UrlParser$parse,
			parser,
			location.pathname,
			_evancz$url_parser$UrlParser$parseParams(location.search));
	});
var _evancz$url_parser$UrlParser$intParamHelp = function (maybeValue) {
	var _p7 = maybeValue;
	if (_p7.ctor === 'Nothing') {
		return _elm_lang$core$Maybe$Nothing;
	} else {
		return _elm_lang$core$Result$toMaybe(
			_elm_lang$core$String$toInt(_p7._0));
	}
};
var _evancz$url_parser$UrlParser$mapHelp = F2(
	function (func, _p8) {
		var _p9 = _p8;
		return {
			visited: _p9.visited,
			unvisited: _p9.unvisited,
			params: _p9.params,
			value: func(_p9.value)
		};
	});
var _evancz$url_parser$UrlParser$State = F4(
	function (a, b, c, d) {
		return {visited: a, unvisited: b, params: c, value: d};
	});
var _evancz$url_parser$UrlParser$Parser = function (a) {
	return {ctor: 'Parser', _0: a};
};
var _evancz$url_parser$UrlParser$s = function (str) {
	return _evancz$url_parser$UrlParser$Parser(
		function (_p10) {
			var _p11 = _p10;
			var _p12 = _p11.unvisited;
			if (_p12.ctor === '[]') {
				return {ctor: '[]'};
			} else {
				var _p13 = _p12._0;
				return _elm_lang$core$Native_Utils.eq(_p13, str) ? {
					ctor: '::',
					_0: A4(
						_evancz$url_parser$UrlParser$State,
						{ctor: '::', _0: _p13, _1: _p11.visited},
						_p12._1,
						_p11.params,
						_p11.value),
					_1: {ctor: '[]'}
				} : {ctor: '[]'};
			}
		});
};
var _evancz$url_parser$UrlParser$custom = F2(
	function (tipe, stringToSomething) {
		return _evancz$url_parser$UrlParser$Parser(
			function (_p14) {
				var _p15 = _p14;
				var _p16 = _p15.unvisited;
				if (_p16.ctor === '[]') {
					return {ctor: '[]'};
				} else {
					var _p18 = _p16._0;
					var _p17 = stringToSomething(_p18);
					if (_p17.ctor === 'Ok') {
						return {
							ctor: '::',
							_0: A4(
								_evancz$url_parser$UrlParser$State,
								{ctor: '::', _0: _p18, _1: _p15.visited},
								_p16._1,
								_p15.params,
								_p15.value(_p17._0)),
							_1: {ctor: '[]'}
						};
					} else {
						return {ctor: '[]'};
					}
				}
			});
	});
var _evancz$url_parser$UrlParser$string = A2(_evancz$url_parser$UrlParser$custom, 'STRING', _elm_lang$core$Result$Ok);
var _evancz$url_parser$UrlParser$int = A2(_evancz$url_parser$UrlParser$custom, 'NUMBER', _elm_lang$core$String$toInt);
var _evancz$url_parser$UrlParser_ops = _evancz$url_parser$UrlParser_ops || {};
_evancz$url_parser$UrlParser_ops['</>'] = F2(
	function (_p20, _p19) {
		var _p21 = _p20;
		var _p22 = _p19;
		return _evancz$url_parser$UrlParser$Parser(
			function (state) {
				return A2(
					_elm_lang$core$List$concatMap,
					_p22._0,
					_p21._0(state));
			});
	});
var _evancz$url_parser$UrlParser$map = F2(
	function (subValue, _p23) {
		var _p24 = _p23;
		return _evancz$url_parser$UrlParser$Parser(
			function (_p25) {
				var _p26 = _p25;
				return A2(
					_elm_lang$core$List$map,
					_evancz$url_parser$UrlParser$mapHelp(_p26.value),
					_p24._0(
						{visited: _p26.visited, unvisited: _p26.unvisited, params: _p26.params, value: subValue}));
			});
	});
var _evancz$url_parser$UrlParser$oneOf = function (parsers) {
	return _evancz$url_parser$UrlParser$Parser(
		function (state) {
			return A2(
				_elm_lang$core$List$concatMap,
				function (_p27) {
					var _p28 = _p27;
					return _p28._0(state);
				},
				parsers);
		});
};
var _evancz$url_parser$UrlParser$top = _evancz$url_parser$UrlParser$Parser(
	function (state) {
		return {
			ctor: '::',
			_0: state,
			_1: {ctor: '[]'}
		};
	});
var _evancz$url_parser$UrlParser_ops = _evancz$url_parser$UrlParser_ops || {};
_evancz$url_parser$UrlParser_ops['<?>'] = F2(
	function (_p30, _p29) {
		var _p31 = _p30;
		var _p32 = _p29;
		return _evancz$url_parser$UrlParser$Parser(
			function (state) {
				return A2(
					_elm_lang$core$List$concatMap,
					_p32._0,
					_p31._0(state));
			});
	});
var _evancz$url_parser$UrlParser$QueryParser = function (a) {
	return {ctor: 'QueryParser', _0: a};
};
var _evancz$url_parser$UrlParser$customParam = F2(
	function (key, func) {
		return _evancz$url_parser$UrlParser$QueryParser(
			function (_p33) {
				var _p34 = _p33;
				var _p35 = _p34.params;
				return {
					ctor: '::',
					_0: A4(
						_evancz$url_parser$UrlParser$State,
						_p34.visited,
						_p34.unvisited,
						_p35,
						_p34.value(
							func(
								A2(_elm_lang$core$Dict$get, key, _p35)))),
					_1: {ctor: '[]'}
				};
			});
	});
var _evancz$url_parser$UrlParser$stringParam = function (name) {
	return A2(_evancz$url_parser$UrlParser$customParam, name, _elm_lang$core$Basics$identity);
};
var _evancz$url_parser$UrlParser$intParam = function (name) {
	return A2(_evancz$url_parser$UrlParser$customParam, name, _evancz$url_parser$UrlParser$intParamHelp);
};

var _krisajenkins$elm_exts$Exts_Basics$on = F4(
	function (f, g, a, b) {
		return A2(
			g,
			f(a),
			f(b));
	});
var _krisajenkins$elm_exts$Exts_Basics$compareBy = function (f) {
	return A2(_krisajenkins$elm_exts$Exts_Basics$on, f, _elm_lang$core$Basics$compare);
};
var _krisajenkins$elm_exts$Exts_Basics$maxBy = F3(
	function (toComparable, x, y) {
		return _elm_lang$core$Native_Utils.eq(
			A3(_krisajenkins$elm_exts$Exts_Basics$compareBy, toComparable, x, y),
			_elm_lang$core$Basics$LT) ? y : x;
	});
var _krisajenkins$elm_exts$Exts_Basics$minBy = F3(
	function (toComparable, x, y) {
		return _elm_lang$core$Native_Utils.eq(
			A3(_krisajenkins$elm_exts$Exts_Basics$compareBy, toComparable, x, y),
			_elm_lang$core$Basics$LT) ? x : y;
	});

var _krisajenkins$elm_exts$Exts_List$unfoldInternal = F2(
	function (f, _p0) {
		unfoldInternal:
		while (true) {
			var _p1 = _p0;
			var _p3 = _p1._1;
			var _p2 = f(_p1._0);
			if (_p2.ctor === 'Nothing') {
				return _elm_lang$trampoline$Trampoline$done(
					_elm_lang$core$Array$toList(_p3));
			} else {
				var _v2 = f,
					_v3 = {
					ctor: '_Tuple2',
					_0: _p2._0._0,
					_1: A2(_elm_lang$core$Array$push, _p2._0._1, _p3)
				};
				f = _v2;
				_p0 = _v3;
				continue unfoldInternal;
			}
		}
	});
var _krisajenkins$elm_exts$Exts_List$unfold = F2(
	function (f, seed) {
		return _elm_lang$trampoline$Trampoline$evaluate(
			A2(
				_krisajenkins$elm_exts$Exts_List$unfoldInternal,
				f,
				{ctor: '_Tuple2', _0: seed, _1: _elm_lang$core$Array$empty}));
	});
var _krisajenkins$elm_exts$Exts_List$minimumBy = F2(
	function (toComparable, list) {
		var _p4 = list;
		if (_p4.ctor === '::') {
			return _elm_lang$core$Maybe$Just(
				A3(
					_elm_lang$core$List$foldl,
					_krisajenkins$elm_exts$Exts_Basics$minBy(toComparable),
					_p4._0,
					_p4._1));
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _krisajenkins$elm_exts$Exts_List$maximumBy = F2(
	function (toComparable, list) {
		var _p5 = list;
		if (_p5.ctor === '::') {
			return _elm_lang$core$Maybe$Just(
				A3(
					_elm_lang$core$List$foldl,
					_krisajenkins$elm_exts$Exts_Basics$maxBy(toComparable),
					_p5._0,
					_p5._1));
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _krisajenkins$elm_exts$Exts_List$exactlyOne = function (xs) {
	var _p6 = xs;
	if (_p6.ctor === '[]') {
		return _elm_lang$core$Result$Err('Expected a list with one item. Got an empty list.');
	} else {
		if (_p6._1.ctor === '[]') {
			return _elm_lang$core$Result$Ok(_p6._0);
		} else {
			return _elm_lang$core$Result$Err(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Expected a list with one item. Got ',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(
							_elm_lang$core$List$length(_p6._1)),
						' items.')));
		}
	}
};
var _krisajenkins$elm_exts$Exts_List$unique = function () {
	var f = F2(
		function (x, _p7) {
			var _p8 = _p7;
			var _p10 = _p8._0;
			var _p9 = _p8._1;
			return A2(_elm_lang$core$Set$member, x, _p10) ? {ctor: '_Tuple2', _0: _p10, _1: _p9} : {
				ctor: '_Tuple2',
				_0: A2(_elm_lang$core$Set$insert, x, _p10),
				_1: {ctor: '::', _0: x, _1: _p9}
			};
		});
	return function (_p11) {
		return _elm_lang$core$List$reverse(
			_elm_lang$core$Tuple$second(
				A3(
					_elm_lang$core$List$foldl,
					f,
					{
						ctor: '_Tuple2',
						_0: _elm_lang$core$Set$empty,
						_1: {ctor: '[]'}
					},
					_p11)));
	};
}();
var _krisajenkins$elm_exts$Exts_List$rest = function (_p12) {
	return A2(
		_elm_lang$core$Maybe$withDefault,
		{ctor: '[]'},
		_elm_lang$core$List$tail(_p12));
};
var _krisajenkins$elm_exts$Exts_List$firstMatch = function (predicate) {
	return A2(
		_elm_lang$core$List$foldl,
		F2(
			function (item, acc) {
				var _p13 = acc;
				if (_p13.ctor === 'Just') {
					return acc;
				} else {
					return predicate(item) ? _elm_lang$core$Maybe$Just(item) : _elm_lang$core$Maybe$Nothing;
				}
			}),
		_elm_lang$core$Maybe$Nothing);
};
var _krisajenkins$elm_exts$Exts_List$singleton = function (x) {
	return {
		ctor: '::',
		_0: x,
		_1: {ctor: '[]'}
	};
};
var _krisajenkins$elm_exts$Exts_List$maybeSingleton = function (_p14) {
	return A2(
		_elm_lang$core$Maybe$withDefault,
		{ctor: '[]'},
		A2(_elm_lang$core$Maybe$map, _krisajenkins$elm_exts$Exts_List$singleton, _p14));
};
var _krisajenkins$elm_exts$Exts_List$mergeBy = F3(
	function (f, xs, ys) {
		var reducer = F2(
			function (v, acc) {
				return A3(
					_elm_lang$core$Dict$insert,
					f(v),
					v,
					acc);
			});
		return _elm_lang$core$Dict$values(
			A3(
				_elm_lang$core$List$foldl,
				reducer,
				_elm_lang$core$Dict$empty,
				A2(_elm_lang$core$Basics_ops['++'], xs, ys)));
	});
var _krisajenkins$elm_exts$Exts_List$chunkInternal = F3(
	function (n, xs, accum) {
		return _elm_lang$core$List$isEmpty(xs) ? _elm_lang$trampoline$Trampoline$done(
			_elm_lang$core$Array$toList(accum)) : _elm_lang$trampoline$Trampoline$jump(
			function (_p15) {
				var _p16 = _p15;
				return A3(
					_krisajenkins$elm_exts$Exts_List$chunkInternal,
					n,
					A2(_elm_lang$core$List$drop, n, xs),
					A2(
						_elm_lang$core$Array$push,
						A2(_elm_lang$core$List$take, n, xs),
						accum));
			});
	});
var _krisajenkins$elm_exts$Exts_List$chunk = F2(
	function (n, xs) {
		return (_elm_lang$core$Native_Utils.cmp(n, 1) < 0) ? _krisajenkins$elm_exts$Exts_List$singleton(xs) : _elm_lang$trampoline$Trampoline$evaluate(
			A3(_krisajenkins$elm_exts$Exts_List$chunkInternal, n, xs, _elm_lang$core$Array$empty));
	});

var _krisajenkins$elm_exts$Exts_Html$nbsp = ' ';
var _krisajenkins$elm_exts$Exts_Html$matchText = F3(
	function (attributes, search, string) {
		var sliceSegments = F2(
			function (_p1, _p0) {
				var _p2 = _p1;
				var _p3 = _p0;
				return A2(
					_elm_lang$html$Html$span,
					_p2._1 ? attributes : {ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							A3(_elm_lang$core$String$slice, _p2._0, _p3._0, string)),
						_1: {ctor: '[]'}
					});
			});
		var matchStringEnd = {
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: _elm_lang$core$String$length(string),
				_1: false
			},
			_1: {ctor: '[]'}
		};
		var matchStringStart = {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 0, _1: false},
			_1: {ctor: '[]'}
		};
		var matchBoundaries = function (place) {
			return {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: place.index, _1: true},
				_1: {
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: place.index + _elm_lang$core$String$length(place.match),
						_1: false
					},
					_1: {ctor: '[]'}
				}
			};
		};
		var matches = A3(_elm_lang$core$Regex$find, _elm_lang$core$Regex$All, search, string);
		var allSegmentBoundaries = A2(
			_elm_lang$core$Basics_ops['++'],
			matchStringStart,
			A2(
				_elm_lang$core$Basics_ops['++'],
				A2(_elm_lang$core$List$concatMap, matchBoundaries, matches),
				matchStringEnd));
		return A3(
			_elm_lang$core$List$map2,
			sliceSegments,
			allSegmentBoundaries,
			_krisajenkins$elm_exts$Exts_List$rest(allSegmentBoundaries));
	});

var _krisajenkins$elm_exts$Exts_Json_Encode$maybe = F2(
	function (encoder, value) {
		var _p0 = value;
		if (_p0.ctor === 'Nothing') {
			return _elm_lang$core$Json_Encode$null;
		} else {
			return encoder(_p0._0);
		}
	});
var _krisajenkins$elm_exts$Exts_Json_Encode$tuple2 = F3(
	function (encodeKey, encodeValue, _p1) {
		var _p2 = _p1;
		return _elm_lang$core$Json_Encode$list(
			{
				ctor: '::',
				_0: encodeKey(_p2._0),
				_1: {
					ctor: '::',
					_0: encodeValue(_p2._1),
					_1: {ctor: '[]'}
				}
			});
	});
var _krisajenkins$elm_exts$Exts_Json_Encode$dict = F2(
	function (encodeKey, encodeValue) {
		return function (_p3) {
			return _elm_lang$core$Json_Encode$list(
				A2(
					_elm_lang$core$List$map,
					A2(_krisajenkins$elm_exts$Exts_Json_Encode$tuple2, encodeKey, encodeValue),
					_elm_lang$core$Dict$toList(_p3)));
		};
	});
var _krisajenkins$elm_exts$Exts_Json_Encode$set = function (encodeElement) {
	return function (_p4) {
		return _elm_lang$core$Json_Encode$list(
			A2(
				_elm_lang$core$List$map,
				encodeElement,
				_elm_lang$core$List$sort(
					_elm_lang$core$Set$toList(_p4))));
	};
};

var _krisajenkins$remotedata$RemoteData$isNotAsked = function (data) {
	var _p0 = data;
	if (_p0.ctor === 'NotAsked') {
		return true;
	} else {
		return false;
	}
};
var _krisajenkins$remotedata$RemoteData$isLoading = function (data) {
	var _p1 = data;
	if (_p1.ctor === 'Loading') {
		return true;
	} else {
		return false;
	}
};
var _krisajenkins$remotedata$RemoteData$isFailure = function (data) {
	var _p2 = data;
	if (_p2.ctor === 'Failure') {
		return true;
	} else {
		return false;
	}
};
var _krisajenkins$remotedata$RemoteData$isSuccess = function (data) {
	var _p3 = data;
	if (_p3.ctor === 'Success') {
		return true;
	} else {
		return false;
	}
};
var _krisajenkins$remotedata$RemoteData$withDefault = F2(
	function ($default, data) {
		var _p4 = data;
		if (_p4.ctor === 'Success') {
			return _p4._0;
		} else {
			return $default;
		}
	});
var _krisajenkins$remotedata$RemoteData$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _krisajenkins$remotedata$RemoteData$succeed = _krisajenkins$remotedata$RemoteData$Success;
var _krisajenkins$remotedata$RemoteData$prism = {
	reverseGet: _krisajenkins$remotedata$RemoteData$Success,
	getOption: function (data) {
		var _p5 = data;
		if (_p5.ctor === 'Success') {
			return _elm_lang$core$Maybe$Just(_p5._0);
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	}
};
var _krisajenkins$remotedata$RemoteData$Failure = function (a) {
	return {ctor: 'Failure', _0: a};
};
var _krisajenkins$remotedata$RemoteData$fromMaybe = F2(
	function (error, maybe) {
		var _p6 = maybe;
		if (_p6.ctor === 'Nothing') {
			return _krisajenkins$remotedata$RemoteData$Failure(error);
		} else {
			return _krisajenkins$remotedata$RemoteData$Success(_p6._0);
		}
	});
var _krisajenkins$remotedata$RemoteData$fromResult = function (result) {
	var _p7 = result;
	if (_p7.ctor === 'Err') {
		return _krisajenkins$remotedata$RemoteData$Failure(_p7._0);
	} else {
		return _krisajenkins$remotedata$RemoteData$Success(_p7._0);
	}
};
var _krisajenkins$remotedata$RemoteData$asCmd = _elm_lang$core$Task$attempt(_krisajenkins$remotedata$RemoteData$fromResult);
var _krisajenkins$remotedata$RemoteData$sendRequest = _elm_lang$http$Http$send(_krisajenkins$remotedata$RemoteData$fromResult);
var _krisajenkins$remotedata$RemoteData$fromTask = function (_p8) {
	return A2(
		_elm_lang$core$Task$onError,
		function (_p9) {
			return _elm_lang$core$Task$succeed(
				_krisajenkins$remotedata$RemoteData$Failure(_p9));
		},
		A2(_elm_lang$core$Task$map, _krisajenkins$remotedata$RemoteData$Success, _p8));
};
var _krisajenkins$remotedata$RemoteData$Loading = {ctor: 'Loading'};
var _krisajenkins$remotedata$RemoteData$NotAsked = {ctor: 'NotAsked'};
var _krisajenkins$remotedata$RemoteData$map = F2(
	function (f, data) {
		var _p10 = data;
		switch (_p10.ctor) {
			case 'Success':
				return _krisajenkins$remotedata$RemoteData$Success(
					f(_p10._0));
			case 'Loading':
				return _krisajenkins$remotedata$RemoteData$Loading;
			case 'NotAsked':
				return _krisajenkins$remotedata$RemoteData$NotAsked;
			default:
				return _krisajenkins$remotedata$RemoteData$Failure(_p10._0);
		}
	});
var _krisajenkins$remotedata$RemoteData$toMaybe = function (_p11) {
	return A2(
		_krisajenkins$remotedata$RemoteData$withDefault,
		_elm_lang$core$Maybe$Nothing,
		A2(_krisajenkins$remotedata$RemoteData$map, _elm_lang$core$Maybe$Just, _p11));
};
var _krisajenkins$remotedata$RemoteData$mapError = F2(
	function (f, data) {
		var _p12 = data;
		switch (_p12.ctor) {
			case 'Success':
				return _krisajenkins$remotedata$RemoteData$Success(_p12._0);
			case 'Failure':
				return _krisajenkins$remotedata$RemoteData$Failure(
					f(_p12._0));
			case 'Loading':
				return _krisajenkins$remotedata$RemoteData$Loading;
			default:
				return _krisajenkins$remotedata$RemoteData$NotAsked;
		}
	});
var _krisajenkins$remotedata$RemoteData$mapBoth = F2(
	function (successFn, errorFn) {
		return function (_p13) {
			return A2(
				_krisajenkins$remotedata$RemoteData$mapError,
				errorFn,
				A2(_krisajenkins$remotedata$RemoteData$map, successFn, _p13));
		};
	});
var _krisajenkins$remotedata$RemoteData$andThen = F2(
	function (f, data) {
		var _p14 = data;
		switch (_p14.ctor) {
			case 'Success':
				return f(_p14._0);
			case 'Failure':
				return _krisajenkins$remotedata$RemoteData$Failure(_p14._0);
			case 'NotAsked':
				return _krisajenkins$remotedata$RemoteData$NotAsked;
			default:
				return _krisajenkins$remotedata$RemoteData$Loading;
		}
	});
var _krisajenkins$remotedata$RemoteData$andMap = F2(
	function (wrappedValue, wrappedFunction) {
		var _p15 = {ctor: '_Tuple2', _0: wrappedFunction, _1: wrappedValue};
		_v11_5:
		do {
			_v11_4:
			do {
				_v11_3:
				do {
					_v11_2:
					do {
						switch (_p15._0.ctor) {
							case 'Success':
								switch (_p15._1.ctor) {
									case 'Success':
										return _krisajenkins$remotedata$RemoteData$Success(
											_p15._0._0(_p15._1._0));
									case 'Failure':
										break _v11_2;
									case 'Loading':
										break _v11_4;
									default:
										return _krisajenkins$remotedata$RemoteData$NotAsked;
								}
							case 'Failure':
								return _krisajenkins$remotedata$RemoteData$Failure(_p15._0._0);
							case 'Loading':
								switch (_p15._1.ctor) {
									case 'Failure':
										break _v11_2;
									case 'Loading':
										break _v11_3;
									case 'NotAsked':
										break _v11_3;
									default:
										break _v11_3;
								}
							default:
								switch (_p15._1.ctor) {
									case 'Failure':
										break _v11_2;
									case 'Loading':
										break _v11_4;
									case 'NotAsked':
										break _v11_5;
									default:
										break _v11_5;
								}
						}
					} while(false);
					return _krisajenkins$remotedata$RemoteData$Failure(_p15._1._0);
				} while(false);
				return _krisajenkins$remotedata$RemoteData$Loading;
			} while(false);
			return _krisajenkins$remotedata$RemoteData$Loading;
		} while(false);
		return _krisajenkins$remotedata$RemoteData$NotAsked;
	});
var _krisajenkins$remotedata$RemoteData$map2 = F3(
	function (f, a, b) {
		return A2(
			_krisajenkins$remotedata$RemoteData$andMap,
			b,
			A2(_krisajenkins$remotedata$RemoteData$map, f, a));
	});
var _krisajenkins$remotedata$RemoteData$fromList = A2(
	_elm_lang$core$List$foldr,
	_krisajenkins$remotedata$RemoteData$map2(
		F2(
			function (x, y) {
				return {ctor: '::', _0: x, _1: y};
			})),
	_krisajenkins$remotedata$RemoteData$Success(
		{ctor: '[]'}));
var _krisajenkins$remotedata$RemoteData$map3 = F4(
	function (f, a, b, c) {
		return A2(
			_krisajenkins$remotedata$RemoteData$andMap,
			c,
			A2(
				_krisajenkins$remotedata$RemoteData$andMap,
				b,
				A2(_krisajenkins$remotedata$RemoteData$map, f, a)));
	});
var _krisajenkins$remotedata$RemoteData$append = F2(
	function (a, b) {
		return A2(
			_krisajenkins$remotedata$RemoteData$andMap,
			b,
			A2(
				_krisajenkins$remotedata$RemoteData$map,
				F2(
					function (v0, v1) {
						return {ctor: '_Tuple2', _0: v0, _1: v1};
					}),
				a));
	});
var _krisajenkins$remotedata$RemoteData$update = F2(
	function (f, remoteData) {
		var _p16 = remoteData;
		switch (_p16.ctor) {
			case 'Success':
				var _p17 = f(_p16._0);
				var first = _p17._0;
				var second = _p17._1;
				return {
					ctor: '_Tuple2',
					_0: _krisajenkins$remotedata$RemoteData$Success(first),
					_1: second
				};
			case 'NotAsked':
				return {ctor: '_Tuple2', _0: _krisajenkins$remotedata$RemoteData$NotAsked, _1: _elm_lang$core$Platform_Cmd$none};
			case 'Loading':
				return {ctor: '_Tuple2', _0: _krisajenkins$remotedata$RemoteData$Loading, _1: _elm_lang$core$Platform_Cmd$none};
			default:
				return {
					ctor: '_Tuple2',
					_0: _krisajenkins$remotedata$RemoteData$Failure(_p16._0),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});

var _mpizenberg$elm_debounce$StateMonad$when = F4(
	function (predicate, modifier, processor, s) {
		return predicate(s) ? A2(modifier, processor, s) : processor(s);
	});
var _mpizenberg$elm_debounce$StateMonad$condition = F4(
	function (predicate, processor1, processor2, s) {
		return predicate(s) ? processor1(s) : processor2(s);
	});
var _mpizenberg$elm_debounce$StateMonad$modifyAndGet = F2(
	function (f, s) {
		return {
			ctor: '_Tuple2',
			_0: f(s),
			_1: f(s)
		};
	});
var _mpizenberg$elm_debounce$StateMonad$modify = F2(
	function (f, s) {
		return {
			ctor: '_Tuple2',
			_0: f(s),
			_1: {ctor: '_Tuple0'}
		};
	});
var _mpizenberg$elm_debounce$StateMonad$put = F2(
	function (s, _p0) {
		return {
			ctor: '_Tuple2',
			_0: s,
			_1: {ctor: '_Tuple0'}
		};
	});
var _mpizenberg$elm_debounce$StateMonad$get = function (s) {
	return {ctor: '_Tuple2', _0: s, _1: s};
};
var _mpizenberg$elm_debounce$StateMonad$set = F3(
	function (s, a, _p1) {
		return {ctor: '_Tuple2', _0: s, _1: a};
	});
var _mpizenberg$elm_debounce$StateMonad$embed = F2(
	function (f, s) {
		return {
			ctor: '_Tuple2',
			_0: s,
			_1: f(s)
		};
	});
var _mpizenberg$elm_debounce$StateMonad$return = F2(
	function (a, s) {
		return {ctor: '_Tuple2', _0: s, _1: a};
	});
var _mpizenberg$elm_debounce$StateMonad$run = F2(
	function (s, processor) {
		return processor(s);
	});
var _mpizenberg$elm_debounce$StateMonad$andThen = F3(
	function (k, processor, s0) {
		var _p2 = A2(_mpizenberg$elm_debounce$StateMonad$run, s0, processor);
		var s1 = _p2._0;
		var a = _p2._1;
		return A2(
			_mpizenberg$elm_debounce$StateMonad$run,
			s1,
			k(a));
	});
var _mpizenberg$elm_debounce$StateMonad$map = F3(
	function (k, processor, s0) {
		var _p3 = A2(_mpizenberg$elm_debounce$StateMonad$run, s0, processor);
		var s1 = _p3._0;
		var a = _p3._1;
		return {
			ctor: '_Tuple2',
			_0: s1,
			_1: k(a)
		};
	});
var _mpizenberg$elm_debounce$StateMonad$mapState = F3(
	function (f, processor, s0) {
		var _p4 = A2(_mpizenberg$elm_debounce$StateMonad$run, s0, processor);
		var s1 = _p4._0;
		var a = _p4._1;
		return {
			ctor: '_Tuple2',
			_0: f(s1),
			_1: a
		};
	});

var _mpizenberg$elm_debounce$Helpers$mkDeferredCmd = F2(
	function (delay, a) {
		return A2(
			_elm_lang$core$Task$perform,
			_elm_lang$core$Basics$always(a),
			_elm_lang$core$Process$sleep(delay));
	});
var _mpizenberg$elm_debounce$Helpers$mkCmd = function (a) {
	return A2(
		_elm_lang$core$Task$perform,
		_elm_lang$core$Basics$always(a),
		_elm_lang$core$Task$succeed(_elm_lang$core$Basics$never));
};

var _mpizenberg$elm_debounce$State$cmd = function (_p0) {
	var _p1 = _p0;
	var _p2 = _p1._1;
	if (_p2.ctor === 'Nothing') {
		return _elm_lang$core$Platform_Cmd$none;
	} else {
		return _mpizenberg$elm_debounce$Helpers$mkCmd(_p2._0);
	}
};
var _mpizenberg$elm_debounce$State$isSame = F2(
	function (_p4, _p3) {
		var _p5 = _p4;
		var _p6 = _p3;
		return _elm_lang$core$Native_Utils.eq(_p5._0, _p6._0);
	});
var _mpizenberg$elm_debounce$State$isN = F2(
	function (n, _p7) {
		var _p8 = _p7;
		return _elm_lang$core$Native_Utils.eq(n, _p8._0);
	});
var _mpizenberg$elm_debounce$State$isUnique = _mpizenberg$elm_debounce$State$isN(1);
var _mpizenberg$elm_debounce$State$isEmpty = _mpizenberg$elm_debounce$State$isN(0);
var _mpizenberg$elm_debounce$State$get = function (_p9) {
	var _p10 = _p9;
	return {ctor: '_Tuple2', _0: _p10._0, _1: _p10._1};
};
var _mpizenberg$elm_debounce$State$State = F2(
	function (a, b) {
		return {ctor: 'State', _0: a, _1: b};
	});
var _mpizenberg$elm_debounce$State$set = F2(
	function ($int, maybeMsg) {
		return A2(_mpizenberg$elm_debounce$State$State, $int, maybeMsg);
	});
var _mpizenberg$elm_debounce$State$init = A2(_mpizenberg$elm_debounce$State$State, 0, _elm_lang$core$Maybe$Nothing);
var _mpizenberg$elm_debounce$State$increment = F2(
	function (msg, _p11) {
		var _p12 = _p11;
		return A2(
			_mpizenberg$elm_debounce$State$State,
			_p12._0 + 1,
			_elm_lang$core$Maybe$Just(msg));
	});

var _mpizenberg$elm_debounce$Control$update = F3(
	function (setState, state, control) {
		return A2(
			_elm_lang$core$Tuple$mapFirst,
			setState,
			A2(_mpizenberg$elm_debounce$StateMonad$run, state, control));
	});
var _mpizenberg$elm_debounce$Control$initialState = _mpizenberg$elm_debounce$State$init;

var _mpizenberg$elm_debounce$Control_$batch = function (cmd) {
	return _mpizenberg$elm_debounce$StateMonad$map(
		function (cmd_) {
			return _elm_lang$core$Platform_Cmd$batch(
				{
					ctor: '::',
					_0: cmd_,
					_1: {
						ctor: '::',
						_0: cmd,
						_1: {ctor: '[]'}
					}
				});
		});
};
var _mpizenberg$elm_debounce$Control_$later = F3(
	function (wrap, delay, control) {
		return _mpizenberg$elm_debounce$StateMonad$return(
			A2(
				_mpizenberg$elm_debounce$Helpers$mkDeferredCmd,
				delay,
				wrap(control)));
	});
var _mpizenberg$elm_debounce$Control_$performAndReset = function (state) {
	return {
		ctor: '_Tuple2',
		_0: _mpizenberg$elm_debounce$State$init,
		_1: _mpizenberg$elm_debounce$State$cmd(state)
	};
};
var _mpizenberg$elm_debounce$Control_$noCmd = _mpizenberg$elm_debounce$StateMonad$return(_elm_lang$core$Platform_Cmd$none);
var _mpizenberg$elm_debounce$Control_$reset = A2(_mpizenberg$elm_debounce$StateMonad$set, _mpizenberg$elm_debounce$State$init, _elm_lang$core$Platform_Cmd$none);

var _mpizenberg$elm_debounce$Control_Debounce$trailingDeferred = function (oldState) {
	return A3(
		_mpizenberg$elm_debounce$StateMonad$condition,
		_mpizenberg$elm_debounce$State$isSame(oldState),
		_mpizenberg$elm_debounce$Control_$performAndReset,
		_mpizenberg$elm_debounce$Control_$noCmd);
};
var _mpizenberg$elm_debounce$Control_Debounce$trailing_ = F3(
	function (wrap, delay, msg) {
		return A2(
			_mpizenberg$elm_debounce$StateMonad$andThen,
			function (_p0) {
				return A3(
					_mpizenberg$elm_debounce$Control_$later,
					wrap,
					delay,
					_mpizenberg$elm_debounce$Control_Debounce$trailingDeferred(_p0));
			},
			_mpizenberg$elm_debounce$StateMonad$modifyAndGet(
				_mpizenberg$elm_debounce$State$increment(msg)));
	});
var _mpizenberg$elm_debounce$Control_Debounce$trailing = F3(
	function (wrap, delay, msg) {
		return wrap(
			A3(_mpizenberg$elm_debounce$Control_Debounce$trailing_, wrap, delay, msg));
	});
var _mpizenberg$elm_debounce$Control_Debounce$leadingDeferred = function (oldState) {
	return A3(
		_mpizenberg$elm_debounce$StateMonad$condition,
		_mpizenberg$elm_debounce$State$isSame(oldState),
		_mpizenberg$elm_debounce$Control_$reset,
		_mpizenberg$elm_debounce$Control_$noCmd);
};
var _mpizenberg$elm_debounce$Control_Debounce$leading_ = F3(
	function (wrap, delay, msg) {
		return A3(
			_mpizenberg$elm_debounce$StateMonad$when,
			_mpizenberg$elm_debounce$State$isEmpty,
			_mpizenberg$elm_debounce$Control_$batch(
				_mpizenberg$elm_debounce$Helpers$mkCmd(msg)),
			A2(
				_mpizenberg$elm_debounce$StateMonad$andThen,
				function (_p1) {
					return A3(
						_mpizenberg$elm_debounce$Control_$later,
						wrap,
						delay,
						_mpizenberg$elm_debounce$Control_Debounce$leadingDeferred(_p1));
				},
				_mpizenberg$elm_debounce$StateMonad$modifyAndGet(
					_mpizenberg$elm_debounce$State$increment(msg))));
	});
var _mpizenberg$elm_debounce$Control_Debounce$both = F3(
	function (wrap, delay, msg) {
		return wrap(
			A3(
				_mpizenberg$elm_debounce$StateMonad$condition,
				_mpizenberg$elm_debounce$State$isEmpty,
				A3(_mpizenberg$elm_debounce$Control_Debounce$leading_, wrap, delay, msg),
				A3(_mpizenberg$elm_debounce$Control_Debounce$trailing_, wrap, delay, msg)));
	});
var _mpizenberg$elm_debounce$Control_Debounce$leading = F3(
	function (wrap, delay, msg) {
		return wrap(
			A3(_mpizenberg$elm_debounce$Control_Debounce$leading_, wrap, delay, msg));
	});

var _rluiten$elm_date_extra$Date_Extra_Internal2$prevMonth = function (month) {
	var _p0 = month;
	switch (_p0.ctor) {
		case 'Jan':
			return _elm_lang$core$Date$Dec;
		case 'Feb':
			return _elm_lang$core$Date$Jan;
		case 'Mar':
			return _elm_lang$core$Date$Feb;
		case 'Apr':
			return _elm_lang$core$Date$Mar;
		case 'May':
			return _elm_lang$core$Date$Apr;
		case 'Jun':
			return _elm_lang$core$Date$May;
		case 'Jul':
			return _elm_lang$core$Date$Jun;
		case 'Aug':
			return _elm_lang$core$Date$Jul;
		case 'Sep':
			return _elm_lang$core$Date$Aug;
		case 'Oct':
			return _elm_lang$core$Date$Sep;
		case 'Nov':
			return _elm_lang$core$Date$Oct;
		default:
			return _elm_lang$core$Date$Nov;
	}
};
var _rluiten$elm_date_extra$Date_Extra_Internal2$nextMonth = function (month) {
	var _p1 = month;
	switch (_p1.ctor) {
		case 'Jan':
			return _elm_lang$core$Date$Feb;
		case 'Feb':
			return _elm_lang$core$Date$Mar;
		case 'Mar':
			return _elm_lang$core$Date$Apr;
		case 'Apr':
			return _elm_lang$core$Date$May;
		case 'May':
			return _elm_lang$core$Date$Jun;
		case 'Jun':
			return _elm_lang$core$Date$Jul;
		case 'Jul':
			return _elm_lang$core$Date$Aug;
		case 'Aug':
			return _elm_lang$core$Date$Sep;
		case 'Sep':
			return _elm_lang$core$Date$Oct;
		case 'Oct':
			return _elm_lang$core$Date$Nov;
		case 'Nov':
			return _elm_lang$core$Date$Dec;
		default:
			return _elm_lang$core$Date$Jan;
	}
};
var _rluiten$elm_date_extra$Date_Extra_Internal2$intToMonth = function (month) {
	return (_elm_lang$core$Native_Utils.cmp(month, 1) < 1) ? _elm_lang$core$Date$Jan : (_elm_lang$core$Native_Utils.eq(month, 2) ? _elm_lang$core$Date$Feb : (_elm_lang$core$Native_Utils.eq(month, 3) ? _elm_lang$core$Date$Mar : (_elm_lang$core$Native_Utils.eq(month, 4) ? _elm_lang$core$Date$Apr : (_elm_lang$core$Native_Utils.eq(month, 5) ? _elm_lang$core$Date$May : (_elm_lang$core$Native_Utils.eq(month, 6) ? _elm_lang$core$Date$Jun : (_elm_lang$core$Native_Utils.eq(month, 7) ? _elm_lang$core$Date$Jul : (_elm_lang$core$Native_Utils.eq(month, 8) ? _elm_lang$core$Date$Aug : (_elm_lang$core$Native_Utils.eq(month, 9) ? _elm_lang$core$Date$Sep : (_elm_lang$core$Native_Utils.eq(month, 10) ? _elm_lang$core$Date$Oct : (_elm_lang$core$Native_Utils.eq(month, 11) ? _elm_lang$core$Date$Nov : _elm_lang$core$Date$Dec))))))))));
};
var _rluiten$elm_date_extra$Date_Extra_Internal2$monthToInt = function (month) {
	var _p2 = month;
	switch (_p2.ctor) {
		case 'Jan':
			return 1;
		case 'Feb':
			return 2;
		case 'Mar':
			return 3;
		case 'Apr':
			return 4;
		case 'May':
			return 5;
		case 'Jun':
			return 6;
		case 'Jul':
			return 7;
		case 'Aug':
			return 8;
		case 'Sep':
			return 9;
		case 'Oct':
			return 10;
		case 'Nov':
			return 11;
		default:
			return 12;
	}
};
var _rluiten$elm_date_extra$Date_Extra_Internal2$isLeapYear = function (year) {
	return (_elm_lang$core$Native_Utils.eq(
		A2(_elm_lang$core$Basics_ops['%'], year, 4),
		0) && (!_elm_lang$core$Native_Utils.eq(
		A2(_elm_lang$core$Basics_ops['%'], year, 100),
		0))) || _elm_lang$core$Native_Utils.eq(
		A2(_elm_lang$core$Basics_ops['%'], year, 400),
		0);
};
var _rluiten$elm_date_extra$Date_Extra_Internal2$isLeapYearDate = function (date) {
	return _rluiten$elm_date_extra$Date_Extra_Internal2$isLeapYear(
		_elm_lang$core$Date$year(date));
};
var _rluiten$elm_date_extra$Date_Extra_Internal2$yearToDayLength = function (year) {
	return _rluiten$elm_date_extra$Date_Extra_Internal2$isLeapYear(year) ? 366 : 365;
};
var _rluiten$elm_date_extra$Date_Extra_Internal2$daysInMonth = F2(
	function (year, month) {
		var _p3 = month;
		switch (_p3.ctor) {
			case 'Jan':
				return 31;
			case 'Feb':
				return _rluiten$elm_date_extra$Date_Extra_Internal2$isLeapYear(year) ? 29 : 28;
			case 'Mar':
				return 31;
			case 'Apr':
				return 30;
			case 'May':
				return 31;
			case 'Jun':
				return 30;
			case 'Jul':
				return 31;
			case 'Aug':
				return 31;
			case 'Sep':
				return 30;
			case 'Oct':
				return 31;
			case 'Nov':
				return 30;
			default:
				return 31;
		}
	});
var _rluiten$elm_date_extra$Date_Extra_Internal2$daysInMonthDate = function (date) {
	return A2(
		_rluiten$elm_date_extra$Date_Extra_Internal2$daysInMonth,
		_elm_lang$core$Date$year(date),
		_elm_lang$core$Date$month(date));
};
var _rluiten$elm_date_extra$Date_Extra_Internal2$monthList = {
	ctor: '::',
	_0: _elm_lang$core$Date$Jan,
	_1: {
		ctor: '::',
		_0: _elm_lang$core$Date$Feb,
		_1: {
			ctor: '::',
			_0: _elm_lang$core$Date$Mar,
			_1: {
				ctor: '::',
				_0: _elm_lang$core$Date$Apr,
				_1: {
					ctor: '::',
					_0: _elm_lang$core$Date$May,
					_1: {
						ctor: '::',
						_0: _elm_lang$core$Date$Jun,
						_1: {
							ctor: '::',
							_0: _elm_lang$core$Date$Jul,
							_1: {
								ctor: '::',
								_0: _elm_lang$core$Date$Aug,
								_1: {
									ctor: '::',
									_0: _elm_lang$core$Date$Sep,
									_1: {
										ctor: '::',
										_0: _elm_lang$core$Date$Oct,
										_1: {
											ctor: '::',
											_0: _elm_lang$core$Date$Nov,
											_1: {
												ctor: '::',
												_0: _elm_lang$core$Date$Dec,
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
};
var _rluiten$elm_date_extra$Date_Extra_Internal2$toTime = function (_p4) {
	return _elm_lang$core$Basics$floor(
		_elm_lang$core$Date$toTime(_p4));
};
var _rluiten$elm_date_extra$Date_Extra_Internal2$fromTime = function (_p5) {
	return _elm_lang$core$Date$fromTime(
		_elm_lang$core$Basics$toFloat(_p5));
};
var _rluiten$elm_date_extra$Date_Extra_Internal2$prevDay = function (day) {
	var _p6 = day;
	switch (_p6.ctor) {
		case 'Mon':
			return _elm_lang$core$Date$Sun;
		case 'Tue':
			return _elm_lang$core$Date$Mon;
		case 'Wed':
			return _elm_lang$core$Date$Tue;
		case 'Thu':
			return _elm_lang$core$Date$Wed;
		case 'Fri':
			return _elm_lang$core$Date$Thu;
		case 'Sat':
			return _elm_lang$core$Date$Fri;
		default:
			return _elm_lang$core$Date$Sat;
	}
};
var _rluiten$elm_date_extra$Date_Extra_Internal2$nextDay = function (day) {
	var _p7 = day;
	switch (_p7.ctor) {
		case 'Mon':
			return _elm_lang$core$Date$Tue;
		case 'Tue':
			return _elm_lang$core$Date$Wed;
		case 'Wed':
			return _elm_lang$core$Date$Thu;
		case 'Thu':
			return _elm_lang$core$Date$Fri;
		case 'Fri':
			return _elm_lang$core$Date$Sat;
		case 'Sat':
			return _elm_lang$core$Date$Sun;
		default:
			return _elm_lang$core$Date$Mon;
	}
};
var _rluiten$elm_date_extra$Date_Extra_Internal2$isoDayOfWeek = function (day) {
	var _p8 = day;
	switch (_p8.ctor) {
		case 'Mon':
			return 1;
		case 'Tue':
			return 2;
		case 'Wed':
			return 3;
		case 'Thu':
			return 4;
		case 'Fri':
			return 5;
		case 'Sat':
			return 6;
		default:
			return 7;
	}
};
var _rluiten$elm_date_extra$Date_Extra_Internal2$ticksAMillisecond = _elm_lang$core$Basics$floor(_elm_lang$core$Time$millisecond);
var _rluiten$elm_date_extra$Date_Extra_Internal2$ticksASecond = _rluiten$elm_date_extra$Date_Extra_Internal2$ticksAMillisecond * 1000;
var _rluiten$elm_date_extra$Date_Extra_Internal2$ticksAMinute = _rluiten$elm_date_extra$Date_Extra_Internal2$ticksASecond * 60;
var _rluiten$elm_date_extra$Date_Extra_Internal2$ticksAnHour = _rluiten$elm_date_extra$Date_Extra_Internal2$ticksAMinute * 60;
var _rluiten$elm_date_extra$Date_Extra_Internal2$ticksADay = _rluiten$elm_date_extra$Date_Extra_Internal2$ticksAnHour * 24;
var _rluiten$elm_date_extra$Date_Extra_Internal2$ticksAWeek = _rluiten$elm_date_extra$Date_Extra_Internal2$ticksADay * 7;
var _rluiten$elm_date_extra$Date_Extra_Internal2$lastOfMonthTicks = function (date) {
	var dateTicks = _rluiten$elm_date_extra$Date_Extra_Internal2$toTime(date);
	var day = _elm_lang$core$Date$day(date);
	var month = _elm_lang$core$Date$month(date);
	var year = _elm_lang$core$Date$year(date);
	var daysInMonthVal = A2(_rluiten$elm_date_extra$Date_Extra_Internal2$daysInMonth, year, month);
	var addDays = daysInMonthVal - day;
	return dateTicks + (addDays * _rluiten$elm_date_extra$Date_Extra_Internal2$ticksADay);
};
var _rluiten$elm_date_extra$Date_Extra_Internal2$firstOfNextMonthDate = function (date) {
	return _rluiten$elm_date_extra$Date_Extra_Internal2$fromTime(
		_rluiten$elm_date_extra$Date_Extra_Internal2$lastOfMonthTicks(date) + _rluiten$elm_date_extra$Date_Extra_Internal2$ticksADay);
};
var _rluiten$elm_date_extra$Date_Extra_Internal2$daysInNextMonth = function (date) {
	return _rluiten$elm_date_extra$Date_Extra_Internal2$daysInMonthDate(
		_rluiten$elm_date_extra$Date_Extra_Internal2$firstOfNextMonthDate(date));
};
var _rluiten$elm_date_extra$Date_Extra_Internal2$firstOfMonthTicks = function (date) {
	var dateTicks = _rluiten$elm_date_extra$Date_Extra_Internal2$toTime(date);
	var day = _elm_lang$core$Date$day(date);
	return dateTicks + ((1 - day) * _rluiten$elm_date_extra$Date_Extra_Internal2$ticksADay);
};
var _rluiten$elm_date_extra$Date_Extra_Internal2$lastOfPrevMonthDate = function (date) {
	return _rluiten$elm_date_extra$Date_Extra_Internal2$fromTime(
		_rluiten$elm_date_extra$Date_Extra_Internal2$firstOfMonthTicks(date) - _rluiten$elm_date_extra$Date_Extra_Internal2$ticksADay);
};
var _rluiten$elm_date_extra$Date_Extra_Internal2$daysInPrevMonth = function (date) {
	return _rluiten$elm_date_extra$Date_Extra_Internal2$daysInMonthDate(
		_rluiten$elm_date_extra$Date_Extra_Internal2$lastOfPrevMonthDate(date));
};
var _rluiten$elm_date_extra$Date_Extra_Internal2$epochDateStr = '1970-01-01T00:00:00Z';

var _rluiten$elm_date_extra$Date_Extra_Period$diff = F2(
	function (date1, date2) {
		var millisecondDiff = _elm_lang$core$Date$millisecond(date1) - _elm_lang$core$Date$millisecond(date2);
		var secondDiff = _elm_lang$core$Date$second(date1) - _elm_lang$core$Date$second(date2);
		var minuteDiff = _elm_lang$core$Date$minute(date1) - _elm_lang$core$Date$minute(date2);
		var hourDiff = _elm_lang$core$Date$hour(date1) - _elm_lang$core$Date$hour(date2);
		var ticksDiff = _rluiten$elm_date_extra$Date_Extra_Internal2$toTime(date1) - _rluiten$elm_date_extra$Date_Extra_Internal2$toTime(date2);
		var ticksDayDiff = (((ticksDiff - (hourDiff * _rluiten$elm_date_extra$Date_Extra_Internal2$ticksAnHour)) - (minuteDiff * _rluiten$elm_date_extra$Date_Extra_Internal2$ticksAMinute)) - (secondDiff * _rluiten$elm_date_extra$Date_Extra_Internal2$ticksASecond)) - (millisecondDiff * _rluiten$elm_date_extra$Date_Extra_Internal2$ticksAMillisecond);
		var onlyDaysDiff = (ticksDayDiff / _rluiten$elm_date_extra$Date_Extra_Internal2$ticksADay) | 0;
		var _p0 = function () {
			if (_elm_lang$core$Native_Utils.cmp(onlyDaysDiff, 0) < 0) {
				var absDayDiff = _elm_lang$core$Basics$abs(onlyDaysDiff);
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Basics$negate((absDayDiff / 7) | 0),
					_1: _elm_lang$core$Basics$negate(
						A2(_elm_lang$core$Basics_ops['%'], absDayDiff, 7))
				};
			} else {
				return {
					ctor: '_Tuple2',
					_0: (onlyDaysDiff / 7) | 0,
					_1: A2(_elm_lang$core$Basics_ops['%'], onlyDaysDiff, 7)
				};
			}
		}();
		var weekDiff = _p0._0;
		var dayDiff = _p0._1;
		return {week: weekDiff, day: dayDiff, hour: hourDiff, minute: minuteDiff, second: secondDiff, millisecond: millisecondDiff};
	});
var _rluiten$elm_date_extra$Date_Extra_Period$addTimeUnit = F3(
	function (unit, addend, date) {
		return _rluiten$elm_date_extra$Date_Extra_Internal2$fromTime(
			A2(
				F2(
					function (x, y) {
						return x + y;
					}),
				addend * unit,
				_rluiten$elm_date_extra$Date_Extra_Internal2$toTime(date)));
	});
var _rluiten$elm_date_extra$Date_Extra_Period$toTicks = function (period) {
	var _p1 = period;
	switch (_p1.ctor) {
		case 'Millisecond':
			return _rluiten$elm_date_extra$Date_Extra_Internal2$ticksAMillisecond;
		case 'Second':
			return _rluiten$elm_date_extra$Date_Extra_Internal2$ticksASecond;
		case 'Minute':
			return _rluiten$elm_date_extra$Date_Extra_Internal2$ticksAMinute;
		case 'Hour':
			return _rluiten$elm_date_extra$Date_Extra_Internal2$ticksAnHour;
		case 'Day':
			return _rluiten$elm_date_extra$Date_Extra_Internal2$ticksADay;
		case 'Week':
			return _rluiten$elm_date_extra$Date_Extra_Internal2$ticksAWeek;
		default:
			var _p2 = _p1._0;
			return (((((_rluiten$elm_date_extra$Date_Extra_Internal2$ticksAMillisecond * _p2.millisecond) + (_rluiten$elm_date_extra$Date_Extra_Internal2$ticksASecond * _p2.second)) + (_rluiten$elm_date_extra$Date_Extra_Internal2$ticksAMinute * _p2.minute)) + (_rluiten$elm_date_extra$Date_Extra_Internal2$ticksAnHour * _p2.hour)) + (_rluiten$elm_date_extra$Date_Extra_Internal2$ticksADay * _p2.day)) + (_rluiten$elm_date_extra$Date_Extra_Internal2$ticksAWeek * _p2.week);
	}
};
var _rluiten$elm_date_extra$Date_Extra_Period$add = function (period) {
	return _rluiten$elm_date_extra$Date_Extra_Period$addTimeUnit(
		_rluiten$elm_date_extra$Date_Extra_Period$toTicks(period));
};
var _rluiten$elm_date_extra$Date_Extra_Period$zeroDelta = {week: 0, day: 0, hour: 0, minute: 0, second: 0, millisecond: 0};
var _rluiten$elm_date_extra$Date_Extra_Period$DeltaRecord = F6(
	function (a, b, c, d, e, f) {
		return {week: a, day: b, hour: c, minute: d, second: e, millisecond: f};
	});
var _rluiten$elm_date_extra$Date_Extra_Period$Delta = function (a) {
	return {ctor: 'Delta', _0: a};
};
var _rluiten$elm_date_extra$Date_Extra_Period$Week = {ctor: 'Week'};
var _rluiten$elm_date_extra$Date_Extra_Period$Day = {ctor: 'Day'};
var _rluiten$elm_date_extra$Date_Extra_Period$Hour = {ctor: 'Hour'};
var _rluiten$elm_date_extra$Date_Extra_Period$Minute = {ctor: 'Minute'};
var _rluiten$elm_date_extra$Date_Extra_Period$Second = {ctor: 'Second'};
var _rluiten$elm_date_extra$Date_Extra_Period$Millisecond = {ctor: 'Millisecond'};

var _rluiten$elm_date_extra$Date_Extra_Internal$daysFromCivil = F3(
	function (year, month, day) {
		var doy = (((((153 * (month + ((_elm_lang$core$Native_Utils.cmp(month, 2) > 0) ? -3 : 9))) + 2) / 5) | 0) + day) - 1;
		var y = year - ((_elm_lang$core$Native_Utils.cmp(month, 2) < 1) ? 1 : 0);
		var era = (((_elm_lang$core$Native_Utils.cmp(y, 0) > -1) ? y : (y - 399)) / 400) | 0;
		var yoe = y - (era * 400);
		var doe = (((yoe * 365) + ((yoe / 4) | 0)) - ((yoe / 100) | 0)) + doy;
		return ((era * 146097) + doe) - 719468;
	});
var _rluiten$elm_date_extra$Date_Extra_Internal$ticksFromFields = F7(
	function (year, month, day, hour, minute, second, millisecond) {
		var monthInt = _rluiten$elm_date_extra$Date_Extra_Internal2$monthToInt(month);
		var clampYear = (_elm_lang$core$Native_Utils.cmp(year, 0) < 0) ? 0 : year;
		var clampDay = A3(
			_elm_lang$core$Basics$clamp,
			1,
			A2(_rluiten$elm_date_extra$Date_Extra_Internal2$daysInMonth, clampYear, month),
			day);
		var dayCount = A3(_rluiten$elm_date_extra$Date_Extra_Internal$daysFromCivil, clampYear, monthInt, clampDay);
		return _rluiten$elm_date_extra$Date_Extra_Period$toTicks(
			_rluiten$elm_date_extra$Date_Extra_Period$Delta(
				{
					millisecond: A3(_elm_lang$core$Basics$clamp, 0, 999, millisecond),
					second: A3(_elm_lang$core$Basics$clamp, 0, 59, second),
					minute: A3(_elm_lang$core$Basics$clamp, 0, 59, minute),
					hour: A3(_elm_lang$core$Basics$clamp, 0, 23, hour),
					day: dayCount,
					week: 0
				}));
	});
var _rluiten$elm_date_extra$Date_Extra_Internal$ticksFromDateFields = function (date) {
	return A7(
		_rluiten$elm_date_extra$Date_Extra_Internal$ticksFromFields,
		_elm_lang$core$Date$year(date),
		_elm_lang$core$Date$month(date),
		_elm_lang$core$Date$day(date),
		_elm_lang$core$Date$hour(date),
		_elm_lang$core$Date$minute(date),
		_elm_lang$core$Date$second(date),
		_elm_lang$core$Date$millisecond(date));
};
var _rluiten$elm_date_extra$Date_Extra_Internal$getTimezoneOffset = function (date) {
	var v1Ticks = _rluiten$elm_date_extra$Date_Extra_Internal$ticksFromDateFields(date);
	var dateTicks = _elm_lang$core$Basics$floor(
		_elm_lang$core$Date$toTime(date));
	return ((dateTicks - v1Ticks) / _rluiten$elm_date_extra$Date_Extra_Internal2$ticksAMinute) | 0;
};
var _rluiten$elm_date_extra$Date_Extra_Internal$hackDateAsOffset = F2(
	function (offsetMinutes, date) {
		return _rluiten$elm_date_extra$Date_Extra_Internal2$fromTime(
			A2(
				F2(
					function (x, y) {
						return x + y;
					}),
				offsetMinutes * _rluiten$elm_date_extra$Date_Extra_Internal2$ticksAMinute,
				_rluiten$elm_date_extra$Date_Extra_Internal2$toTime(date)));
	});
var _rluiten$elm_date_extra$Date_Extra_Internal$hackDateAsUtc = function (date) {
	var offset = _rluiten$elm_date_extra$Date_Extra_Internal$getTimezoneOffset(date);
	var oHours = (offset / _rluiten$elm_date_extra$Date_Extra_Internal2$ticksAnHour) | 0;
	var oMinutes = ((offset - (oHours * _rluiten$elm_date_extra$Date_Extra_Internal2$ticksAnHour)) / _rluiten$elm_date_extra$Date_Extra_Internal2$ticksAMinute) | 0;
	return A2(_rluiten$elm_date_extra$Date_Extra_Internal$hackDateAsOffset, offset, date);
};

var _rluiten$elm_date_extra$Date_Extra_Core$compensateZoneOffset = F2(
	function (date1, date2) {
		return A3(
			_rluiten$elm_date_extra$Date_Extra_Period$add,
			_rluiten$elm_date_extra$Date_Extra_Period$Minute,
			_rluiten$elm_date_extra$Date_Extra_Internal$getTimezoneOffset(date2) - _rluiten$elm_date_extra$Date_Extra_Internal$getTimezoneOffset(date1),
			date2);
	});
var _rluiten$elm_date_extra$Date_Extra_Core$lastOfMonthDate = function (date) {
	return A2(
		_rluiten$elm_date_extra$Date_Extra_Core$compensateZoneOffset,
		date,
		_rluiten$elm_date_extra$Date_Extra_Internal2$fromTime(
			_rluiten$elm_date_extra$Date_Extra_Internal2$lastOfMonthTicks(date)));
};
var _rluiten$elm_date_extra$Date_Extra_Core$toFirstOfMonth = function (date) {
	return A2(
		_rluiten$elm_date_extra$Date_Extra_Core$compensateZoneOffset,
		date,
		_rluiten$elm_date_extra$Date_Extra_Internal2$fromTime(
			_rluiten$elm_date_extra$Date_Extra_Internal2$firstOfMonthTicks(date)));
};
var _rluiten$elm_date_extra$Date_Extra_Core$lastOfPrevMonthDate = function (date) {
	return A2(
		_rluiten$elm_date_extra$Date_Extra_Core$compensateZoneOffset,
		date,
		_rluiten$elm_date_extra$Date_Extra_Internal2$lastOfPrevMonthDate(date));
};
var _rluiten$elm_date_extra$Date_Extra_Core$firstOfNextMonthDate = function (date) {
	return A2(
		_rluiten$elm_date_extra$Date_Extra_Core$compensateZoneOffset,
		date,
		_rluiten$elm_date_extra$Date_Extra_Internal2$firstOfNextMonthDate(date));
};
var _rluiten$elm_date_extra$Date_Extra_Core$yearToDayLength = _rluiten$elm_date_extra$Date_Extra_Internal2$yearToDayLength;
var _rluiten$elm_date_extra$Date_Extra_Core$toTime = _rluiten$elm_date_extra$Date_Extra_Internal2$toTime;
var _rluiten$elm_date_extra$Date_Extra_Core$ticksAWeek = _rluiten$elm_date_extra$Date_Extra_Internal2$ticksAWeek;
var _rluiten$elm_date_extra$Date_Extra_Core$ticksASecond = _rluiten$elm_date_extra$Date_Extra_Internal2$ticksASecond;
var _rluiten$elm_date_extra$Date_Extra_Core$ticksAMinute = _rluiten$elm_date_extra$Date_Extra_Internal2$ticksAMinute;
var _rluiten$elm_date_extra$Date_Extra_Core$ticksAMillisecond = _rluiten$elm_date_extra$Date_Extra_Internal2$ticksAMillisecond;
var _rluiten$elm_date_extra$Date_Extra_Core$ticksADay = _rluiten$elm_date_extra$Date_Extra_Internal2$ticksADay;
var _rluiten$elm_date_extra$Date_Extra_Core$ticksAnHour = _rluiten$elm_date_extra$Date_Extra_Internal2$ticksAnHour;
var _rluiten$elm_date_extra$Date_Extra_Core$prevMonth = _rluiten$elm_date_extra$Date_Extra_Internal2$prevMonth;
var _rluiten$elm_date_extra$Date_Extra_Core$prevDay = _rluiten$elm_date_extra$Date_Extra_Internal2$prevDay;
var _rluiten$elm_date_extra$Date_Extra_Core$nextMonth = _rluiten$elm_date_extra$Date_Extra_Internal2$nextMonth;
var _rluiten$elm_date_extra$Date_Extra_Core$nextDay = _rluiten$elm_date_extra$Date_Extra_Internal2$nextDay;
var _rluiten$elm_date_extra$Date_Extra_Core$monthToInt = _rluiten$elm_date_extra$Date_Extra_Internal2$monthToInt;
var _rluiten$elm_date_extra$Date_Extra_Core$monthList = _rluiten$elm_date_extra$Date_Extra_Internal2$monthList;
var _rluiten$elm_date_extra$Date_Extra_Core$isoDayOfWeek = _rluiten$elm_date_extra$Date_Extra_Internal2$isoDayOfWeek;
var _rluiten$elm_date_extra$Date_Extra_Core$daysBackToStartOfWeek = F2(
	function (dateDay, startOfWeekDay) {
		var startOfWeekDayIndex = _rluiten$elm_date_extra$Date_Extra_Core$isoDayOfWeek(startOfWeekDay);
		var dateDayIndex = _rluiten$elm_date_extra$Date_Extra_Core$isoDayOfWeek(dateDay);
		return (_elm_lang$core$Native_Utils.cmp(dateDayIndex, startOfWeekDayIndex) < 0) ? ((7 + dateDayIndex) - startOfWeekDayIndex) : (dateDayIndex - startOfWeekDayIndex);
	});
var _rluiten$elm_date_extra$Date_Extra_Core$isLeapYearDate = _rluiten$elm_date_extra$Date_Extra_Internal2$isLeapYearDate;
var _rluiten$elm_date_extra$Date_Extra_Core$isLeapYear = _rluiten$elm_date_extra$Date_Extra_Internal2$isLeapYear;
var _rluiten$elm_date_extra$Date_Extra_Core$intToMonth = _rluiten$elm_date_extra$Date_Extra_Internal2$intToMonth;
var _rluiten$elm_date_extra$Date_Extra_Core$fromTime = _rluiten$elm_date_extra$Date_Extra_Internal2$fromTime;
var _rluiten$elm_date_extra$Date_Extra_Core$epochDateStr = _rluiten$elm_date_extra$Date_Extra_Internal2$epochDateStr;
var _rluiten$elm_date_extra$Date_Extra_Core$daysInMonthDate = _rluiten$elm_date_extra$Date_Extra_Internal2$daysInMonthDate;
var _rluiten$elm_date_extra$Date_Extra_Core$daysInPrevMonth = _rluiten$elm_date_extra$Date_Extra_Internal2$daysInPrevMonth;
var _rluiten$elm_date_extra$Date_Extra_Core$daysInNextMonth = _rluiten$elm_date_extra$Date_Extra_Internal2$daysInNextMonth;
var _rluiten$elm_date_extra$Date_Extra_Core$daysInMonth = _rluiten$elm_date_extra$Date_Extra_Internal2$daysInMonth;

var _rluiten$elm_date_extra$Date_Extra_Compare$is3 = F4(
	function (comp, date1, date2, date3) {
		var time3 = _rluiten$elm_date_extra$Date_Extra_Core$toTime(date3);
		var time2 = _rluiten$elm_date_extra$Date_Extra_Core$toTime(date2);
		var highBound = A2(_elm_lang$core$Basics$max, time2, time3);
		var lowBound = A2(_elm_lang$core$Basics$min, time2, time3);
		var time1 = _rluiten$elm_date_extra$Date_Extra_Core$toTime(date1);
		var _p0 = comp;
		switch (_p0.ctor) {
			case 'Between':
				return (_elm_lang$core$Native_Utils.cmp(time1, lowBound) > 0) && (_elm_lang$core$Native_Utils.cmp(time1, highBound) < 0);
			case 'BetweenOpenStart':
				return (_elm_lang$core$Native_Utils.cmp(time1, lowBound) > -1) && (_elm_lang$core$Native_Utils.cmp(time1, highBound) < 0);
			case 'BetweenOpenEnd':
				return (_elm_lang$core$Native_Utils.cmp(time1, lowBound) > 0) && (_elm_lang$core$Native_Utils.cmp(time1, highBound) < 1);
			default:
				return (_elm_lang$core$Native_Utils.cmp(time1, lowBound) > -1) && (_elm_lang$core$Native_Utils.cmp(time1, highBound) < 1);
		}
	});
var _rluiten$elm_date_extra$Date_Extra_Compare$is = F3(
	function (comp, date1, date2) {
		var time2 = _rluiten$elm_date_extra$Date_Extra_Core$toTime(date2);
		var time1 = _rluiten$elm_date_extra$Date_Extra_Core$toTime(date1);
		var _p1 = comp;
		switch (_p1.ctor) {
			case 'Before':
				return _elm_lang$core$Native_Utils.cmp(time1, time2) < 0;
			case 'After':
				return _elm_lang$core$Native_Utils.cmp(time1, time2) > 0;
			case 'Same':
				return _elm_lang$core$Native_Utils.eq(time1, time2);
			case 'SameOrBefore':
				return _elm_lang$core$Native_Utils.cmp(time1, time2) < 1;
			default:
				return _elm_lang$core$Native_Utils.cmp(time1, time2) > -1;
		}
	});
var _rluiten$elm_date_extra$Date_Extra_Compare$SameOrBefore = {ctor: 'SameOrBefore'};
var _rluiten$elm_date_extra$Date_Extra_Compare$SameOrAfter = {ctor: 'SameOrAfter'};
var _rluiten$elm_date_extra$Date_Extra_Compare$Same = {ctor: 'Same'};
var _rluiten$elm_date_extra$Date_Extra_Compare$Before = {ctor: 'Before'};
var _rluiten$elm_date_extra$Date_Extra_Compare$After = {ctor: 'After'};
var _rluiten$elm_date_extra$Date_Extra_Compare$BetweenOpen = {ctor: 'BetweenOpen'};
var _rluiten$elm_date_extra$Date_Extra_Compare$BetweenOpenEnd = {ctor: 'BetweenOpenEnd'};
var _rluiten$elm_date_extra$Date_Extra_Compare$BetweenOpenStart = {ctor: 'BetweenOpenStart'};
var _rluiten$elm_date_extra$Date_Extra_Compare$Between = {ctor: 'Between'};

var _rluiten$elm_date_extra$Date_Extra_TwelveHourClock$PM = {ctor: 'PM'};
var _rluiten$elm_date_extra$Date_Extra_TwelveHourClock$AM = {ctor: 'AM'};
var _rluiten$elm_date_extra$Date_Extra_TwelveHourClock$twelveHourPeriod = function (d) {
	return (_elm_lang$core$Native_Utils.cmp(
		_elm_lang$core$Date$hour(d),
		12) < 0) ? _rluiten$elm_date_extra$Date_Extra_TwelveHourClock$AM : _rluiten$elm_date_extra$Date_Extra_TwelveHourClock$PM;
};

var _rluiten$elm_date_extra$Date_Extra_Config$Config = F2(
	function (a, b) {
		return {i18n: a, format: b};
	});

var _rluiten$elm_date_extra$Date_Extra_I18n_I_default$twelveHourPeriod = function (period) {
	var _p0 = period;
	if (_p0.ctor === 'AM') {
		return 'AM';
	} else {
		return 'PM';
	}
};

var _rluiten$elm_date_extra$Date_Extra_I18n_I_en_us$dayOfMonthWithSuffix = F2(
	function (pad, day) {
		var value = function () {
			var _p0 = day;
			switch (_p0) {
				case 1:
					return '1st';
				case 21:
					return '21st';
				case 2:
					return '2nd';
				case 22:
					return '22nd';
				case 3:
					return '3rd';
				case 23:
					return '23rd';
				case 31:
					return '31st';
				default:
					return A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(day),
						'th');
			}
		}();
		return pad ? A3(
			_elm_lang$core$String$padLeft,
			4,
			_elm_lang$core$Native_Utils.chr(' '),
			value) : value;
	});
var _rluiten$elm_date_extra$Date_Extra_I18n_I_en_us$monthName = function (month) {
	var _p1 = month;
	switch (_p1.ctor) {
		case 'Jan':
			return 'January';
		case 'Feb':
			return 'February';
		case 'Mar':
			return 'March';
		case 'Apr':
			return 'April';
		case 'May':
			return 'May';
		case 'Jun':
			return 'June';
		case 'Jul':
			return 'July';
		case 'Aug':
			return 'August';
		case 'Sep':
			return 'September';
		case 'Oct':
			return 'October';
		case 'Nov':
			return 'November';
		default:
			return 'December';
	}
};
var _rluiten$elm_date_extra$Date_Extra_I18n_I_en_us$monthShort = function (month) {
	var _p2 = month;
	switch (_p2.ctor) {
		case 'Jan':
			return 'Jan';
		case 'Feb':
			return 'Feb';
		case 'Mar':
			return 'Mar';
		case 'Apr':
			return 'Apr';
		case 'May':
			return 'May';
		case 'Jun':
			return 'Jun';
		case 'Jul':
			return 'Jul';
		case 'Aug':
			return 'Aug';
		case 'Sep':
			return 'Sep';
		case 'Oct':
			return 'Oct';
		case 'Nov':
			return 'Nov';
		default:
			return 'Dec';
	}
};
var _rluiten$elm_date_extra$Date_Extra_I18n_I_en_us$dayName = function (day) {
	var _p3 = day;
	switch (_p3.ctor) {
		case 'Mon':
			return 'Monday';
		case 'Tue':
			return 'Tuesday';
		case 'Wed':
			return 'Wednesday';
		case 'Thu':
			return 'Thursday';
		case 'Fri':
			return 'Friday';
		case 'Sat':
			return 'Saturday';
		default:
			return 'Sunday';
	}
};
var _rluiten$elm_date_extra$Date_Extra_I18n_I_en_us$dayShort = function (day) {
	var _p4 = day;
	switch (_p4.ctor) {
		case 'Mon':
			return 'Mon';
		case 'Tue':
			return 'Tue';
		case 'Wed':
			return 'Wed';
		case 'Thu':
			return 'Thu';
		case 'Fri':
			return 'Fri';
		case 'Sat':
			return 'Sat';
		default:
			return 'Sun';
	}
};

var _rluiten$elm_date_extra$Date_Extra_Config_Config_en_us$config = {
	i18n: {dayShort: _rluiten$elm_date_extra$Date_Extra_I18n_I_en_us$dayShort, dayName: _rluiten$elm_date_extra$Date_Extra_I18n_I_en_us$dayName, monthShort: _rluiten$elm_date_extra$Date_Extra_I18n_I_en_us$monthShort, monthName: _rluiten$elm_date_extra$Date_Extra_I18n_I_en_us$monthName, dayOfMonthWithSuffix: _rluiten$elm_date_extra$Date_Extra_I18n_I_en_us$dayOfMonthWithSuffix, twelveHourPeriod: _rluiten$elm_date_extra$Date_Extra_I18n_I_default$twelveHourPeriod},
	format: {date: '%-m/%-d/%Y', longDate: '%A, %B %d, %Y', time: '%-H:%M %p', longTime: '%-H:%M:%S %p', dateTime: '%-m/%-d/%Y %-I:%M %p', firstDayOfWeek: _elm_lang$core$Date$Sun}
};

var _rluiten$elm_date_extra$Date_Extra_Create$epochDate = _elm_lang$core$Date$fromTime(0);
var _rluiten$elm_date_extra$Date_Extra_Create$epochTimezoneOffset = function () {
	var inMinutes = (_elm_lang$core$Date$hour(_rluiten$elm_date_extra$Date_Extra_Create$epochDate) * 60) + _elm_lang$core$Date$minute(_rluiten$elm_date_extra$Date_Extra_Create$epochDate);
	return _elm_lang$core$Native_Utils.eq(
		_elm_lang$core$Date$year(_rluiten$elm_date_extra$Date_Extra_Create$epochDate),
		1969) ? (0 - (inMinutes - (24 * 60))) : (0 - inMinutes);
}();
var _rluiten$elm_date_extra$Date_Extra_Create$getTimezoneOffset = _rluiten$elm_date_extra$Date_Extra_Internal$getTimezoneOffset;
var _rluiten$elm_date_extra$Date_Extra_Create$adjustedTicksToDate = function (ticks) {
	var date = A3(_rluiten$elm_date_extra$Date_Extra_Period$add, _rluiten$elm_date_extra$Date_Extra_Period$Millisecond, ticks + (_rluiten$elm_date_extra$Date_Extra_Create$epochTimezoneOffset * _rluiten$elm_date_extra$Date_Extra_Core$ticksAMinute), _rluiten$elm_date_extra$Date_Extra_Create$epochDate);
	var dateOffset = _rluiten$elm_date_extra$Date_Extra_Create$getTimezoneOffset(date);
	return _elm_lang$core$Native_Utils.eq(dateOffset, _rluiten$elm_date_extra$Date_Extra_Create$epochTimezoneOffset) ? date : A3(_rluiten$elm_date_extra$Date_Extra_Period$add, _rluiten$elm_date_extra$Date_Extra_Period$Minute, dateOffset - _rluiten$elm_date_extra$Date_Extra_Create$epochTimezoneOffset, date);
};
var _rluiten$elm_date_extra$Date_Extra_Create$dateFromFields = F7(
	function (year, month, day, hour, minute, second, millisecond) {
		return _rluiten$elm_date_extra$Date_Extra_Create$adjustedTicksToDate(
			A7(_rluiten$elm_date_extra$Date_Extra_Internal$ticksFromFields, year, month, day, hour, minute, second, millisecond));
	});
var _rluiten$elm_date_extra$Date_Extra_Create$timeFromFields = A3(_rluiten$elm_date_extra$Date_Extra_Create$dateFromFields, 1970, _elm_lang$core$Date$Jan, 1);

var _rluiten$elm_date_extra$Date_Extra_Duration$positiveDiffDays = F3(
	function (date1, date2, multiplier) {
		var date2DaysFromCivil = A3(
			_rluiten$elm_date_extra$Date_Extra_Internal$daysFromCivil,
			_elm_lang$core$Date$year(date2),
			_rluiten$elm_date_extra$Date_Extra_Core$monthToInt(
				_elm_lang$core$Date$month(date2)),
			_elm_lang$core$Date$day(date2));
		var date1DaysFromCivil = A3(
			_rluiten$elm_date_extra$Date_Extra_Internal$daysFromCivil,
			_elm_lang$core$Date$year(date1),
			_rluiten$elm_date_extra$Date_Extra_Core$monthToInt(
				_elm_lang$core$Date$month(date1)),
			_elm_lang$core$Date$day(date1));
		return (date1DaysFromCivil - date2DaysFromCivil) * multiplier;
	});
var _rluiten$elm_date_extra$Date_Extra_Duration$diffDays = F2(
	function (date1, date2) {
		return A3(_rluiten$elm_date_extra$Date_Extra_Compare$is, _rluiten$elm_date_extra$Date_Extra_Compare$After, date1, date2) ? A3(_rluiten$elm_date_extra$Date_Extra_Duration$positiveDiffDays, date1, date2, 1) : A3(_rluiten$elm_date_extra$Date_Extra_Duration$positiveDiffDays, date2, date1, -1);
	});
var _rluiten$elm_date_extra$Date_Extra_Duration$positiveDiff = F3(
	function (date1, date2, multiplier) {
		var propogateCarry = F3(
			function (current, carry, maxVal) {
				var adjusted = current + carry;
				return (_elm_lang$core$Native_Utils.cmp(adjusted, 0) < 0) ? {ctor: '_Tuple2', _0: maxVal + adjusted, _1: -1} : {ctor: '_Tuple2', _0: adjusted, _1: 0};
			});
		var accumulatedDiff = F4(
			function (acc, v1, v2, maxV2) {
				return (_elm_lang$core$Native_Utils.cmp(v1, v2) < 0) ? {ctor: '_Tuple2', _0: acc - 1, _1: (maxV2 + v1) - v2} : {ctor: '_Tuple2', _0: acc, _1: v1 - v2};
			});
		var msec2 = _elm_lang$core$Date$millisecond(date2);
		var msec1 = _elm_lang$core$Date$millisecond(date1);
		var second2 = _elm_lang$core$Date$second(date2);
		var second1 = _elm_lang$core$Date$second(date1);
		var minute2 = _elm_lang$core$Date$minute(date2);
		var minute1 = _elm_lang$core$Date$minute(date1);
		var hour2 = _elm_lang$core$Date$hour(date2);
		var hour1 = _elm_lang$core$Date$hour(date1);
		var day2 = _elm_lang$core$Date$day(date2);
		var day1 = _elm_lang$core$Date$day(date1);
		var month2Mon = _elm_lang$core$Date$month(date2);
		var month2 = _rluiten$elm_date_extra$Date_Extra_Core$monthToInt(month2Mon);
		var month1Mon = _elm_lang$core$Date$month(date1);
		var month1 = _rluiten$elm_date_extra$Date_Extra_Core$monthToInt(month1Mon);
		var year2 = _elm_lang$core$Date$year(date2);
		var daysInDate2Month = A2(_rluiten$elm_date_extra$Date_Extra_Core$daysInMonth, year2, month2Mon);
		var year1 = _elm_lang$core$Date$year(date1);
		var daysInDate1Month = A2(_rluiten$elm_date_extra$Date_Extra_Core$daysInMonth, year1, month1Mon);
		var _p0 = A4(accumulatedDiff, year1 - year2, month1, month2, 12);
		var yearDiff = _p0._0;
		var monthDiffA = _p0._1;
		var _p1 = A4(accumulatedDiff, monthDiffA, day1, day2, daysInDate2Month);
		var monthDiff = _p1._0;
		var dayDiffA = _p1._1;
		var _p2 = A4(accumulatedDiff, dayDiffA, hour1, hour2, 24);
		var dayDiff = _p2._0;
		var hourDiffA = _p2._1;
		var _p3 = A4(accumulatedDiff, hourDiffA, minute1, minute2, 60);
		var hourDiff = _p3._0;
		var minuteDiffA = _p3._1;
		var _p4 = A4(accumulatedDiff, minuteDiffA, second1, second2, 60);
		var minuteDiff = _p4._0;
		var secondDiffA = _p4._1;
		var _p5 = A4(accumulatedDiff, secondDiffA, msec1, msec2, 1000);
		var secondDiff = _p5._0;
		var msecDiff = _p5._1;
		var _p6 = A3(propogateCarry, msecDiff, 0, 1000);
		var msecX = _p6._0;
		var secondCarry = _p6._1;
		var _p7 = A3(propogateCarry, secondDiff, secondCarry, 60);
		var secondX = _p7._0;
		var minuteCarry = _p7._1;
		var _p8 = A3(propogateCarry, minuteDiff, minuteCarry, 60);
		var minuteX = _p8._0;
		var hourCarry = _p8._1;
		var _p9 = A3(propogateCarry, hourDiff, hourCarry, 60);
		var hourX = _p9._0;
		var dayCarry = _p9._1;
		var _p10 = A3(propogateCarry, dayDiff, dayCarry, daysInDate1Month);
		var dayX = _p10._0;
		var monthCarry = _p10._1;
		var _p11 = A3(propogateCarry, monthDiff, monthCarry, 12);
		var monthX = _p11._0;
		var yearCarry = _p11._1;
		var _p12 = A3(propogateCarry, yearDiff, yearCarry, 0);
		var yearX = _p12._0;
		return {year: yearX * multiplier, month: monthX * multiplier, day: dayX * multiplier, hour: hourX * multiplier, minute: minuteX * multiplier, second: secondX * multiplier, millisecond: msecX * multiplier};
	});
var _rluiten$elm_date_extra$Date_Extra_Duration$diff = F2(
	function (date1, date2) {
		return A3(_rluiten$elm_date_extra$Date_Extra_Compare$is, _rluiten$elm_date_extra$Date_Extra_Compare$After, date1, date2) ? A3(_rluiten$elm_date_extra$Date_Extra_Duration$positiveDiff, date1, date2, 1) : A3(_rluiten$elm_date_extra$Date_Extra_Duration$positiveDiff, date2, date1, -1);
	});
var _rluiten$elm_date_extra$Date_Extra_Duration$addMonth = F2(
	function (monthCount, date) {
		var day = _elm_lang$core$Date$day(date);
		var monthInt = _rluiten$elm_date_extra$Date_Extra_Core$monthToInt(
			_elm_lang$core$Date$month(date));
		var newMonthInt = monthInt + monthCount;
		var targetMonthInt = A2(_elm_lang$core$Basics_ops['%'], newMonthInt, 12);
		var yearOffset = ((_elm_lang$core$Native_Utils.cmp(newMonthInt, 0) < 0) && (!_elm_lang$core$Native_Utils.eq(targetMonthInt, 0))) ? (((newMonthInt / 12) | 0) - 1) : ((newMonthInt / 12) | 0);
		var year = _elm_lang$core$Date$year(date);
		var inputCivil = A3(_rluiten$elm_date_extra$Date_Extra_Internal$daysFromCivil, year, monthInt, day);
		var newYear = year + yearOffset;
		var newDay = A2(
			_elm_lang$core$Basics$min,
			A2(
				_rluiten$elm_date_extra$Date_Extra_Core$daysInMonth,
				newYear,
				_rluiten$elm_date_extra$Date_Extra_Core$intToMonth(newMonthInt)),
			day);
		var newCivil = A3(_rluiten$elm_date_extra$Date_Extra_Internal$daysFromCivil, newYear, targetMonthInt, newDay);
		var daysDifferent = newCivil - inputCivil;
		return A3(_rluiten$elm_date_extra$Date_Extra_Period$add, _rluiten$elm_date_extra$Date_Extra_Period$Day, daysDifferent, date);
	});
var _rluiten$elm_date_extra$Date_Extra_Duration$addYear = F2(
	function (yearCount, date) {
		return A2(_rluiten$elm_date_extra$Date_Extra_Duration$addMonth, 12 * yearCount, date);
	});
var _rluiten$elm_date_extra$Date_Extra_Duration$daylightOffsetCompensate = F2(
	function (dateBefore, dateAfter) {
		var offsetAfter = _rluiten$elm_date_extra$Date_Extra_Create$getTimezoneOffset(dateAfter);
		var offsetBefore = _rluiten$elm_date_extra$Date_Extra_Create$getTimezoneOffset(dateBefore);
		if (!_elm_lang$core$Native_Utils.eq(offsetBefore, offsetAfter)) {
			var adjustedDate = A3(_rluiten$elm_date_extra$Date_Extra_Period$add, _rluiten$elm_date_extra$Date_Extra_Period$Millisecond, (offsetAfter - offsetBefore) * _rluiten$elm_date_extra$Date_Extra_Core$ticksAMinute, dateAfter);
			var adjustedOffset = _rluiten$elm_date_extra$Date_Extra_Create$getTimezoneOffset(adjustedDate);
			return (!_elm_lang$core$Native_Utils.eq(adjustedOffset, offsetAfter)) ? dateAfter : adjustedDate;
		} else {
			return dateAfter;
		}
	});
var _rluiten$elm_date_extra$Date_Extra_Duration$requireDaylightCompensateInAdd = function (duration) {
	var _p13 = duration;
	switch (_p13.ctor) {
		case 'Millisecond':
			return false;
		case 'Second':
			return false;
		case 'Minute':
			return false;
		case 'Hour':
			return false;
		case 'Day':
			return true;
		case 'Week':
			return true;
		case 'Month':
			return true;
		case 'Year':
			return true;
		default:
			var _p14 = _p13._0;
			return (!_elm_lang$core$Native_Utils.eq(_p14.day, 0)) || ((!_elm_lang$core$Native_Utils.eq(_p14.month, 0)) || (!_elm_lang$core$Native_Utils.eq(_p14.year, 0)));
	}
};
var _rluiten$elm_date_extra$Date_Extra_Duration$zeroDelta = {year: 0, month: 0, day: 0, hour: 0, minute: 0, second: 0, millisecond: 0};
var _rluiten$elm_date_extra$Date_Extra_Duration$DeltaRecord = F7(
	function (a, b, c, d, e, f, g) {
		return {year: a, month: b, day: c, hour: d, minute: e, second: f, millisecond: g};
	});
var _rluiten$elm_date_extra$Date_Extra_Duration$Delta = function (a) {
	return {ctor: 'Delta', _0: a};
};
var _rluiten$elm_date_extra$Date_Extra_Duration$Year = {ctor: 'Year'};
var _rluiten$elm_date_extra$Date_Extra_Duration$Month = {ctor: 'Month'};
var _rluiten$elm_date_extra$Date_Extra_Duration$doAdd = F3(
	function (duration, addend, date) {
		var _p15 = duration;
		switch (_p15.ctor) {
			case 'Millisecond':
				return A3(_rluiten$elm_date_extra$Date_Extra_Period$add, _rluiten$elm_date_extra$Date_Extra_Period$Millisecond, addend, date);
			case 'Second':
				return A3(_rluiten$elm_date_extra$Date_Extra_Period$add, _rluiten$elm_date_extra$Date_Extra_Period$Second, addend, date);
			case 'Minute':
				return A3(_rluiten$elm_date_extra$Date_Extra_Period$add, _rluiten$elm_date_extra$Date_Extra_Period$Minute, addend, date);
			case 'Hour':
				return A3(_rluiten$elm_date_extra$Date_Extra_Period$add, _rluiten$elm_date_extra$Date_Extra_Period$Hour, addend, date);
			case 'Day':
				return A3(_rluiten$elm_date_extra$Date_Extra_Period$add, _rluiten$elm_date_extra$Date_Extra_Period$Day, addend, date);
			case 'Week':
				return A3(_rluiten$elm_date_extra$Date_Extra_Period$add, _rluiten$elm_date_extra$Date_Extra_Period$Week, addend, date);
			case 'Month':
				return A2(_rluiten$elm_date_extra$Date_Extra_Duration$addMonth, addend, date);
			case 'Year':
				return A2(_rluiten$elm_date_extra$Date_Extra_Duration$addYear, addend, date);
			default:
				var _p16 = _p15._0;
				return A3(
					_rluiten$elm_date_extra$Date_Extra_Period$add,
					_rluiten$elm_date_extra$Date_Extra_Period$Delta(
						{week: 0, day: _p16.day, hour: _p16.hour, minute: _p16.minute, second: _p16.second, millisecond: _p16.millisecond}),
					addend,
					A3(
						_rluiten$elm_date_extra$Date_Extra_Duration$doAdd,
						_rluiten$elm_date_extra$Date_Extra_Duration$Month,
						_p16.month,
						A3(_rluiten$elm_date_extra$Date_Extra_Duration$doAdd, _rluiten$elm_date_extra$Date_Extra_Duration$Year, _p16.year, date)));
		}
	});
var _rluiten$elm_date_extra$Date_Extra_Duration$add = F3(
	function (duration, addend, date) {
		var outputDate = A3(_rluiten$elm_date_extra$Date_Extra_Duration$doAdd, duration, addend, date);
		return _rluiten$elm_date_extra$Date_Extra_Duration$requireDaylightCompensateInAdd(duration) ? A2(_rluiten$elm_date_extra$Date_Extra_Duration$daylightOffsetCompensate, date, outputDate) : outputDate;
	});
var _rluiten$elm_date_extra$Date_Extra_Duration$Week = {ctor: 'Week'};
var _rluiten$elm_date_extra$Date_Extra_Duration$Day = {ctor: 'Day'};
var _rluiten$elm_date_extra$Date_Extra_Duration$Hour = {ctor: 'Hour'};
var _rluiten$elm_date_extra$Date_Extra_Duration$Minute = {ctor: 'Minute'};
var _rluiten$elm_date_extra$Date_Extra_Duration$Second = {ctor: 'Second'};
var _rluiten$elm_date_extra$Date_Extra_Duration$Millisecond = {ctor: 'Millisecond'};

var _rluiten$elm_date_extra$Date_Extra_Field$dayOfWeekToDate = F3(
	function (newDayOfWeek, startOfWeekDay, date) {
		var targetIsoDay = _rluiten$elm_date_extra$Date_Extra_Core$isoDayOfWeek(newDayOfWeek);
		var dayOfWeek = _elm_lang$core$Date$dayOfWeek(date);
		var daysToStartOfWeek = A2(_rluiten$elm_date_extra$Date_Extra_Core$daysBackToStartOfWeek, dayOfWeek, startOfWeekDay);
		var isoDay = _rluiten$elm_date_extra$Date_Extra_Core$isoDayOfWeek(dayOfWeek);
		var dayDiff = targetIsoDay - isoDay;
		var adjustedDiff = (_elm_lang$core$Native_Utils.cmp(daysToStartOfWeek + dayDiff, 0) < 0) ? (dayDiff + 7) : dayDiff;
		return A3(_rluiten$elm_date_extra$Date_Extra_Duration$add, _rluiten$elm_date_extra$Date_Extra_Duration$Day, adjustedDiff, date);
	});
var _rluiten$elm_date_extra$Date_Extra_Field$monthToDate = F2(
	function (month, date) {
		var monthInt = _rluiten$elm_date_extra$Date_Extra_Core$monthToInt(
			_elm_lang$core$Date$month(date));
		var targetMonthInt = _rluiten$elm_date_extra$Date_Extra_Core$monthToInt(month);
		return A3(_rluiten$elm_date_extra$Date_Extra_Duration$add, _rluiten$elm_date_extra$Date_Extra_Duration$Month, targetMonthInt - monthInt, date);
	});
var _rluiten$elm_date_extra$Date_Extra_Field$fieldToDateClamp = F2(
	function (field, date) {
		var _p0 = field;
		switch (_p0.ctor) {
			case 'Millisecond':
				return A3(
					_rluiten$elm_date_extra$Date_Extra_Duration$add,
					_rluiten$elm_date_extra$Date_Extra_Duration$Millisecond,
					A3(_elm_lang$core$Basics$clamp, 0, 999, _p0._0) - _elm_lang$core$Date$millisecond(date),
					date);
			case 'Second':
				return A3(
					_rluiten$elm_date_extra$Date_Extra_Duration$add,
					_rluiten$elm_date_extra$Date_Extra_Duration$Second,
					A3(_elm_lang$core$Basics$clamp, 0, 59, _p0._0) - _elm_lang$core$Date$second(date),
					date);
			case 'Minute':
				return A3(
					_rluiten$elm_date_extra$Date_Extra_Duration$add,
					_rluiten$elm_date_extra$Date_Extra_Duration$Minute,
					A3(_elm_lang$core$Basics$clamp, 0, 59, _p0._0) - _elm_lang$core$Date$minute(date),
					date);
			case 'Hour':
				return A3(
					_rluiten$elm_date_extra$Date_Extra_Duration$add,
					_rluiten$elm_date_extra$Date_Extra_Duration$Hour,
					A3(_elm_lang$core$Basics$clamp, 0, 23, _p0._0) - _elm_lang$core$Date$hour(date),
					date);
			case 'DayOfWeek':
				return A3(_rluiten$elm_date_extra$Date_Extra_Field$dayOfWeekToDate, _p0._0._0, _p0._0._1, date);
			case 'DayOfMonth':
				var maxDays = _rluiten$elm_date_extra$Date_Extra_Core$daysInMonthDate(date);
				return A3(
					_rluiten$elm_date_extra$Date_Extra_Duration$add,
					_rluiten$elm_date_extra$Date_Extra_Duration$Day,
					A3(_elm_lang$core$Basics$clamp, 1, maxDays, _p0._0) - _elm_lang$core$Date$day(date),
					date);
			case 'Month':
				return A2(_rluiten$elm_date_extra$Date_Extra_Field$monthToDate, _p0._0, date);
			default:
				var _p1 = _p0._0;
				var minYear = (_elm_lang$core$Native_Utils.cmp(_p1, 0) < 0) ? 0 : _p1;
				return A3(
					_rluiten$elm_date_extra$Date_Extra_Duration$add,
					_rluiten$elm_date_extra$Date_Extra_Duration$Year,
					minYear - _elm_lang$core$Date$year(date),
					date);
		}
	});
var _rluiten$elm_date_extra$Date_Extra_Field$fieldToDate = F2(
	function (field, date) {
		var _p2 = field;
		switch (_p2.ctor) {
			case 'Millisecond':
				var _p3 = _p2._0;
				return ((_elm_lang$core$Native_Utils.cmp(_p3, 0) < 0) || (_elm_lang$core$Native_Utils.cmp(_p3, 999) > 0)) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(
					A3(
						_rluiten$elm_date_extra$Date_Extra_Duration$add,
						_rluiten$elm_date_extra$Date_Extra_Duration$Millisecond,
						_p3 - _elm_lang$core$Date$millisecond(date),
						date));
			case 'Second':
				var _p4 = _p2._0;
				return ((_elm_lang$core$Native_Utils.cmp(_p4, 0) < 0) || (_elm_lang$core$Native_Utils.cmp(_p4, 59) > 0)) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(
					A3(
						_rluiten$elm_date_extra$Date_Extra_Duration$add,
						_rluiten$elm_date_extra$Date_Extra_Duration$Second,
						_p4 - _elm_lang$core$Date$second(date),
						date));
			case 'Minute':
				var _p5 = _p2._0;
				return ((_elm_lang$core$Native_Utils.cmp(_p5, 0) < 0) || (_elm_lang$core$Native_Utils.cmp(_p5, 59) > 0)) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(
					A3(
						_rluiten$elm_date_extra$Date_Extra_Duration$add,
						_rluiten$elm_date_extra$Date_Extra_Duration$Minute,
						_p5 - _elm_lang$core$Date$minute(date),
						date));
			case 'Hour':
				var _p6 = _p2._0;
				return ((_elm_lang$core$Native_Utils.cmp(_p6, 0) < 0) || (_elm_lang$core$Native_Utils.cmp(_p6, 23) > 0)) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(
					A3(
						_rluiten$elm_date_extra$Date_Extra_Duration$add,
						_rluiten$elm_date_extra$Date_Extra_Duration$Hour,
						_p6 - _elm_lang$core$Date$hour(date),
						date));
			case 'DayOfWeek':
				return _elm_lang$core$Maybe$Just(
					A3(_rluiten$elm_date_extra$Date_Extra_Field$dayOfWeekToDate, _p2._0._0, _p2._0._1, date));
			case 'DayOfMonth':
				var _p7 = _p2._0;
				var maxDays = _rluiten$elm_date_extra$Date_Extra_Core$daysInMonthDate(date);
				return ((_elm_lang$core$Native_Utils.cmp(_p7, 1) < 0) || (_elm_lang$core$Native_Utils.cmp(_p7, maxDays) > 0)) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(
					A3(
						_rluiten$elm_date_extra$Date_Extra_Duration$add,
						_rluiten$elm_date_extra$Date_Extra_Duration$Day,
						_p7 - _elm_lang$core$Date$day(date),
						date));
			case 'Month':
				return _elm_lang$core$Maybe$Just(
					A2(_rluiten$elm_date_extra$Date_Extra_Field$monthToDate, _p2._0, date));
			default:
				var _p8 = _p2._0;
				return (_elm_lang$core$Native_Utils.cmp(_p8, 0) < 0) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(
					A3(
						_rluiten$elm_date_extra$Date_Extra_Duration$add,
						_rluiten$elm_date_extra$Date_Extra_Duration$Year,
						_p8 - _elm_lang$core$Date$year(date),
						date));
		}
	});
var _rluiten$elm_date_extra$Date_Extra_Field$Year = function (a) {
	return {ctor: 'Year', _0: a};
};
var _rluiten$elm_date_extra$Date_Extra_Field$Month = function (a) {
	return {ctor: 'Month', _0: a};
};
var _rluiten$elm_date_extra$Date_Extra_Field$DayOfMonth = function (a) {
	return {ctor: 'DayOfMonth', _0: a};
};
var _rluiten$elm_date_extra$Date_Extra_Field$DayOfWeek = function (a) {
	return {ctor: 'DayOfWeek', _0: a};
};
var _rluiten$elm_date_extra$Date_Extra_Field$Hour = function (a) {
	return {ctor: 'Hour', _0: a};
};
var _rluiten$elm_date_extra$Date_Extra_Field$Minute = function (a) {
	return {ctor: 'Minute', _0: a};
};
var _rluiten$elm_date_extra$Date_Extra_Field$Second = function (a) {
	return {ctor: 'Second', _0: a};
};
var _rluiten$elm_date_extra$Date_Extra_Field$Millisecond = function (a) {
	return {ctor: 'Millisecond', _0: a};
};

var _rluiten$elm_date_extra$Date_Extra_TimeUnit$Year = {ctor: 'Year'};
var _rluiten$elm_date_extra$Date_Extra_TimeUnit$Month = {ctor: 'Month'};
var _rluiten$elm_date_extra$Date_Extra_TimeUnit$Day = {ctor: 'Day'};
var _rluiten$elm_date_extra$Date_Extra_TimeUnit$Hour = {ctor: 'Hour'};
var _rluiten$elm_date_extra$Date_Extra_TimeUnit$Minute = {ctor: 'Minute'};
var _rluiten$elm_date_extra$Date_Extra_TimeUnit$Second = {ctor: 'Second'};
var _rluiten$elm_date_extra$Date_Extra_TimeUnit$startOfTime = F2(
	function (unit, date) {
		var _p0 = unit;
		switch (_p0.ctor) {
			case 'Millisecond':
				return date;
			case 'Second':
				return A2(
					_rluiten$elm_date_extra$Date_Extra_Field$fieldToDateClamp,
					_rluiten$elm_date_extra$Date_Extra_Field$Millisecond(0),
					date);
			case 'Minute':
				return A2(
					_rluiten$elm_date_extra$Date_Extra_Field$fieldToDateClamp,
					_rluiten$elm_date_extra$Date_Extra_Field$Second(0),
					A2(_rluiten$elm_date_extra$Date_Extra_TimeUnit$startOfTime, _rluiten$elm_date_extra$Date_Extra_TimeUnit$Second, date));
			case 'Hour':
				return A2(
					_rluiten$elm_date_extra$Date_Extra_Field$fieldToDateClamp,
					_rluiten$elm_date_extra$Date_Extra_Field$Minute(0),
					A2(_rluiten$elm_date_extra$Date_Extra_TimeUnit$startOfTime, _rluiten$elm_date_extra$Date_Extra_TimeUnit$Minute, date));
			case 'Day':
				return A2(
					_rluiten$elm_date_extra$Date_Extra_Field$fieldToDateClamp,
					_rluiten$elm_date_extra$Date_Extra_Field$Hour(0),
					A2(_rluiten$elm_date_extra$Date_Extra_TimeUnit$startOfTime, _rluiten$elm_date_extra$Date_Extra_TimeUnit$Hour, date));
			case 'Month':
				return A2(
					_rluiten$elm_date_extra$Date_Extra_Field$fieldToDateClamp,
					_rluiten$elm_date_extra$Date_Extra_Field$DayOfMonth(1),
					A2(_rluiten$elm_date_extra$Date_Extra_TimeUnit$startOfTime, _rluiten$elm_date_extra$Date_Extra_TimeUnit$Day, date));
			default:
				return _rluiten$elm_date_extra$Date_Extra_TimeUnit$startOfTimeYear(date);
		}
	});
var _rluiten$elm_date_extra$Date_Extra_TimeUnit$startOfTimeYear = function (date) {
	var startMonthDate = A2(
		_rluiten$elm_date_extra$Date_Extra_Field$fieldToDateClamp,
		_rluiten$elm_date_extra$Date_Extra_Field$DayOfMonth(1),
		date);
	var startYearDate = A2(
		_rluiten$elm_date_extra$Date_Extra_Field$fieldToDateClamp,
		_rluiten$elm_date_extra$Date_Extra_Field$Month(_elm_lang$core$Date$Jan),
		startMonthDate);
	var monthTicks = _rluiten$elm_date_extra$Date_Extra_Core$toTime(startMonthDate) - _rluiten$elm_date_extra$Date_Extra_Core$toTime(startYearDate);
	var updatedDate = _rluiten$elm_date_extra$Date_Extra_Core$fromTime(
		_rluiten$elm_date_extra$Date_Extra_Core$toTime(date) - monthTicks);
	return A2(_rluiten$elm_date_extra$Date_Extra_TimeUnit$startOfTime, _rluiten$elm_date_extra$Date_Extra_TimeUnit$Month, updatedDate);
};
var _rluiten$elm_date_extra$Date_Extra_TimeUnit$endOfTime = F2(
	function (unit, date) {
		var _p1 = unit;
		switch (_p1.ctor) {
			case 'Millisecond':
				return date;
			case 'Second':
				return A2(
					_rluiten$elm_date_extra$Date_Extra_Field$fieldToDateClamp,
					_rluiten$elm_date_extra$Date_Extra_Field$Millisecond(999),
					date);
			case 'Minute':
				return A2(
					_rluiten$elm_date_extra$Date_Extra_Field$fieldToDateClamp,
					_rluiten$elm_date_extra$Date_Extra_Field$Second(59),
					A2(_rluiten$elm_date_extra$Date_Extra_TimeUnit$endOfTime, _rluiten$elm_date_extra$Date_Extra_TimeUnit$Second, date));
			case 'Hour':
				return A2(
					_rluiten$elm_date_extra$Date_Extra_Field$fieldToDateClamp,
					_rluiten$elm_date_extra$Date_Extra_Field$Minute(59),
					A2(_rluiten$elm_date_extra$Date_Extra_TimeUnit$endOfTime, _rluiten$elm_date_extra$Date_Extra_TimeUnit$Minute, date));
			case 'Day':
				return A2(
					_rluiten$elm_date_extra$Date_Extra_Field$fieldToDateClamp,
					_rluiten$elm_date_extra$Date_Extra_Field$Hour(23),
					A2(_rluiten$elm_date_extra$Date_Extra_TimeUnit$endOfTime, _rluiten$elm_date_extra$Date_Extra_TimeUnit$Hour, date));
			case 'Month':
				return A2(
					_rluiten$elm_date_extra$Date_Extra_Field$fieldToDateClamp,
					_rluiten$elm_date_extra$Date_Extra_Field$DayOfMonth(31),
					A2(_rluiten$elm_date_extra$Date_Extra_TimeUnit$endOfTime, _rluiten$elm_date_extra$Date_Extra_TimeUnit$Day, date));
			default:
				var extraYear = A3(_rluiten$elm_date_extra$Date_Extra_Duration$add, _rluiten$elm_date_extra$Date_Extra_Duration$Year, 1, date);
				var startYear = A2(_rluiten$elm_date_extra$Date_Extra_TimeUnit$startOfTime, _rluiten$elm_date_extra$Date_Extra_TimeUnit$Year, extraYear);
				return A3(_rluiten$elm_date_extra$Date_Extra_Duration$add, _rluiten$elm_date_extra$Date_Extra_Duration$Millisecond, -1, startYear);
		}
	});
var _rluiten$elm_date_extra$Date_Extra_TimeUnit$Millisecond = {ctor: 'Millisecond'};

var _rluiten$elm_date_extra$Date_Extra_Utils$unsafeFromString = function (dateStr) {
	var _p0 = _elm_lang$core$Date$fromString(dateStr);
	if (_p0.ctor === 'Ok') {
		return _p0._0;
	} else {
		return _elm_lang$core$Native_Utils.crashCase(
			'Date.Extra.Utils',
			{
				start: {line: 146, column: 5},
				end: {line: 151, column: 43}
			},
			_p0)('unsafeFromString');
	}
};
var _rluiten$elm_date_extra$Date_Extra_Utils$isoDayofWeekMonday = _rluiten$elm_date_extra$Date_Extra_Core$isoDayOfWeek(_elm_lang$core$Date$Mon);
var _rluiten$elm_date_extra$Date_Extra_Utils$isoWeekOne = function (year) {
	var dateJan4 = A7(_rluiten$elm_date_extra$Date_Extra_Create$dateFromFields, year, _elm_lang$core$Date$Jan, 4, 0, 0, 0, 0);
	return A3(
		_rluiten$elm_date_extra$Date_Extra_Duration$add,
		_rluiten$elm_date_extra$Date_Extra_Duration$Day,
		_rluiten$elm_date_extra$Date_Extra_Utils$isoDayofWeekMonday - _rluiten$elm_date_extra$Date_Extra_Core$isoDayOfWeek(
			_elm_lang$core$Date$dayOfWeek(dateJan4)),
		dateJan4);
};
var _rluiten$elm_date_extra$Date_Extra_Utils$getYearIsoWeekDate = function (date) {
	var inputYear = _elm_lang$core$Date$year(date);
	var maxIsoWeekDateInYear = A7(_rluiten$elm_date_extra$Date_Extra_Create$dateFromFields, inputYear, _elm_lang$core$Date$Dec, 29, 0, 0, 0, 0);
	if (A3(_rluiten$elm_date_extra$Date_Extra_Compare$is, _rluiten$elm_date_extra$Date_Extra_Compare$SameOrAfter, date, maxIsoWeekDateInYear)) {
		var nextYearIsoWeek1Date = _rluiten$elm_date_extra$Date_Extra_Utils$isoWeekOne(inputYear + 1);
		return A3(_rluiten$elm_date_extra$Date_Extra_Compare$is, _rluiten$elm_date_extra$Date_Extra_Compare$Before, date, nextYearIsoWeek1Date) ? {
			ctor: '_Tuple2',
			_0: inputYear,
			_1: _rluiten$elm_date_extra$Date_Extra_Utils$isoWeekOne(inputYear)
		} : {ctor: '_Tuple2', _0: inputYear + 1, _1: nextYearIsoWeek1Date};
	} else {
		var thisYearIsoWeek1Date = _rluiten$elm_date_extra$Date_Extra_Utils$isoWeekOne(inputYear);
		return A3(_rluiten$elm_date_extra$Date_Extra_Compare$is, _rluiten$elm_date_extra$Date_Extra_Compare$Before, date, thisYearIsoWeek1Date) ? {
			ctor: '_Tuple2',
			_0: inputYear - 1,
			_1: _rluiten$elm_date_extra$Date_Extra_Utils$isoWeekOne(inputYear - 1)
		} : {ctor: '_Tuple2', _0: inputYear, _1: thisYearIsoWeek1Date};
	}
};
var _rluiten$elm_date_extra$Date_Extra_Utils$isoWeek = function (date) {
	var _p2 = _rluiten$elm_date_extra$Date_Extra_Utils$getYearIsoWeekDate(date);
	var year = _p2._0;
	var isoWeek1Date = _p2._1;
	var daysSinceIsoWeek1 = A2(_rluiten$elm_date_extra$Date_Extra_Duration$diffDays, date, isoWeek1Date);
	return {
		ctor: '_Tuple3',
		_0: year,
		_1: ((daysSinceIsoWeek1 / 7) | 0) + 1,
		_2: _rluiten$elm_date_extra$Date_Extra_Core$isoDayOfWeek(
			_elm_lang$core$Date$dayOfWeek(date))
	};
};
var _rluiten$elm_date_extra$Date_Extra_Utils$dayList_ = F3(
	function (dayCount, date, list) {
		dayList_:
		while (true) {
			if (_elm_lang$core$Native_Utils.eq(dayCount, 0)) {
				return list;
			} else {
				if (_elm_lang$core$Native_Utils.cmp(dayCount, 0) > 0) {
					var _v1 = dayCount - 1,
						_v2 = A3(_rluiten$elm_date_extra$Date_Extra_Duration$add, _rluiten$elm_date_extra$Date_Extra_Duration$Day, 1, date),
						_v3 = {ctor: '::', _0: date, _1: list};
					dayCount = _v1;
					date = _v2;
					list = _v3;
					continue dayList_;
				} else {
					var _v4 = dayCount + 1,
						_v5 = A3(_rluiten$elm_date_extra$Date_Extra_Duration$add, _rluiten$elm_date_extra$Date_Extra_Duration$Day, -1, date),
						_v6 = {ctor: '::', _0: date, _1: list};
					dayCount = _v4;
					date = _v5;
					list = _v6;
					continue dayList_;
				}
			}
		}
	});
var _rluiten$elm_date_extra$Date_Extra_Utils$dayList = F2(
	function (dayCount, startDate) {
		return _elm_lang$core$List$reverse(
			A3(
				_rluiten$elm_date_extra$Date_Extra_Utils$dayList_,
				dayCount,
				startDate,
				{ctor: '[]'}));
	});

var _rluiten$elm_date_extra$Date_Extra_Format$toHourMin = function (offsetMinutes) {
	return {
		ctor: '_Tuple2',
		_0: (offsetMinutes / 60) | 0,
		_1: A2(_elm_lang$core$Basics_ops['%'], offsetMinutes, 60)
	};
};
var _rluiten$elm_date_extra$Date_Extra_Format$padWithN = F2(
	function (n, c) {
		return function (_p0) {
			return A3(
				_elm_lang$core$String$padLeft,
				n,
				c,
				_elm_lang$core$Basics$toString(_p0));
		};
	});
var _rluiten$elm_date_extra$Date_Extra_Format$padWith = function (c) {
	return function (_p1) {
		return A3(
			_elm_lang$core$String$padLeft,
			2,
			c,
			_elm_lang$core$Basics$toString(_p1));
	};
};
var _rluiten$elm_date_extra$Date_Extra_Format$hourMod12 = function (h) {
	return _elm_lang$core$Native_Utils.eq(
		A2(_elm_lang$core$Basics_ops['%'], h, 12),
		0) ? 12 : A2(_elm_lang$core$Basics_ops['%'], h, 12);
};
var _rluiten$elm_date_extra$Date_Extra_Format$formatOffsetStr = F2(
	function (betweenHoursMinutes, offset) {
		var _p2 = _rluiten$elm_date_extra$Date_Extra_Format$toHourMin(
			_elm_lang$core$Basics$abs(offset));
		var hour = _p2._0;
		var minute = _p2._1;
		return A2(
			_elm_lang$core$Basics_ops['++'],
			(_elm_lang$core$Native_Utils.cmp(offset, 0) < 1) ? '+' : '-',
			A2(
				_elm_lang$core$Basics_ops['++'],
				A2(
					_rluiten$elm_date_extra$Date_Extra_Format$padWith,
					_elm_lang$core$Native_Utils.chr('0'),
					hour),
				A2(
					_elm_lang$core$Basics_ops['++'],
					betweenHoursMinutes,
					A2(
						_rluiten$elm_date_extra$Date_Extra_Format$padWith,
						_elm_lang$core$Native_Utils.chr('0'),
						minute))));
	});
var _rluiten$elm_date_extra$Date_Extra_Format$collapse = function (m) {
	return A2(_elm_lang$core$Maybe$andThen, _elm_lang$core$Basics$identity, m);
};
var _rluiten$elm_date_extra$Date_Extra_Format$formatToken = F4(
	function (config, offset, d, m) {
		var symbol = A2(
			_elm_lang$core$Maybe$withDefault,
			' ',
			_rluiten$elm_date_extra$Date_Extra_Format$collapse(
				_elm_lang$core$List$head(m.submatches)));
		var _p3 = symbol;
		switch (_p3) {
			case 'Y':
				return A3(
					_rluiten$elm_date_extra$Date_Extra_Format$padWithN,
					4,
					_elm_lang$core$Native_Utils.chr('0'),
					_elm_lang$core$Date$year(d));
			case 'y':
				return A2(
					_elm_lang$core$String$right,
					2,
					A3(
						_rluiten$elm_date_extra$Date_Extra_Format$padWithN,
						2,
						_elm_lang$core$Native_Utils.chr('0'),
						_elm_lang$core$Date$year(d)));
			case 'm':
				return A2(
					_rluiten$elm_date_extra$Date_Extra_Format$padWith,
					_elm_lang$core$Native_Utils.chr('0'),
					_rluiten$elm_date_extra$Date_Extra_Core$monthToInt(
						_elm_lang$core$Date$month(d)));
			case '_m':
				return A2(
					_rluiten$elm_date_extra$Date_Extra_Format$padWith,
					_elm_lang$core$Native_Utils.chr(' '),
					_rluiten$elm_date_extra$Date_Extra_Core$monthToInt(
						_elm_lang$core$Date$month(d)));
			case '-m':
				return _elm_lang$core$Basics$toString(
					_rluiten$elm_date_extra$Date_Extra_Core$monthToInt(
						_elm_lang$core$Date$month(d)));
			case 'B':
				return config.i18n.monthName(
					_elm_lang$core$Date$month(d));
			case '^B':
				return _elm_lang$core$String$toUpper(
					config.i18n.monthName(
						_elm_lang$core$Date$month(d)));
			case 'b':
				return config.i18n.monthShort(
					_elm_lang$core$Date$month(d));
			case '^b':
				return _elm_lang$core$String$toUpper(
					config.i18n.monthShort(
						_elm_lang$core$Date$month(d)));
			case 'd':
				return A2(
					_rluiten$elm_date_extra$Date_Extra_Format$padWith,
					_elm_lang$core$Native_Utils.chr('0'),
					_elm_lang$core$Date$day(d));
			case '-d':
				return _elm_lang$core$Basics$toString(
					_elm_lang$core$Date$day(d));
			case '-@d':
				return A2(
					config.i18n.dayOfMonthWithSuffix,
					false,
					_elm_lang$core$Date$day(d));
			case 'e':
				return A2(
					_rluiten$elm_date_extra$Date_Extra_Format$padWith,
					_elm_lang$core$Native_Utils.chr(' '),
					_elm_lang$core$Date$day(d));
			case '@e':
				return A2(
					config.i18n.dayOfMonthWithSuffix,
					true,
					_elm_lang$core$Date$day(d));
			case 'A':
				return config.i18n.dayName(
					_elm_lang$core$Date$dayOfWeek(d));
			case '^A':
				return _elm_lang$core$String$toUpper(
					config.i18n.dayName(
						_elm_lang$core$Date$dayOfWeek(d)));
			case 'a':
				return config.i18n.dayShort(
					_elm_lang$core$Date$dayOfWeek(d));
			case '^a':
				return _elm_lang$core$String$toUpper(
					config.i18n.dayShort(
						_elm_lang$core$Date$dayOfWeek(d)));
			case 'H':
				return A2(
					_rluiten$elm_date_extra$Date_Extra_Format$padWith,
					_elm_lang$core$Native_Utils.chr('0'),
					_elm_lang$core$Date$hour(d));
			case '-H':
				return _elm_lang$core$Basics$toString(
					_elm_lang$core$Date$hour(d));
			case 'k':
				return A2(
					_rluiten$elm_date_extra$Date_Extra_Format$padWith,
					_elm_lang$core$Native_Utils.chr(' '),
					_elm_lang$core$Date$hour(d));
			case 'I':
				return A2(
					_rluiten$elm_date_extra$Date_Extra_Format$padWith,
					_elm_lang$core$Native_Utils.chr('0'),
					_rluiten$elm_date_extra$Date_Extra_Format$hourMod12(
						_elm_lang$core$Date$hour(d)));
			case '-I':
				return _elm_lang$core$Basics$toString(
					_rluiten$elm_date_extra$Date_Extra_Format$hourMod12(
						_elm_lang$core$Date$hour(d)));
			case 'l':
				return A2(
					_rluiten$elm_date_extra$Date_Extra_Format$padWith,
					_elm_lang$core$Native_Utils.chr(' '),
					_rluiten$elm_date_extra$Date_Extra_Format$hourMod12(
						_elm_lang$core$Date$hour(d)));
			case 'p':
				return _elm_lang$core$String$toUpper(
					config.i18n.twelveHourPeriod(
						_rluiten$elm_date_extra$Date_Extra_TwelveHourClock$twelveHourPeriod(d)));
			case 'P':
				return config.i18n.twelveHourPeriod(
					_rluiten$elm_date_extra$Date_Extra_TwelveHourClock$twelveHourPeriod(d));
			case 'M':
				return A2(
					_rluiten$elm_date_extra$Date_Extra_Format$padWith,
					_elm_lang$core$Native_Utils.chr('0'),
					_elm_lang$core$Date$minute(d));
			case 'S':
				return A2(
					_rluiten$elm_date_extra$Date_Extra_Format$padWith,
					_elm_lang$core$Native_Utils.chr('0'),
					_elm_lang$core$Date$second(d));
			case 'L':
				return A3(
					_rluiten$elm_date_extra$Date_Extra_Format$padWithN,
					3,
					_elm_lang$core$Native_Utils.chr('0'),
					_elm_lang$core$Date$millisecond(d));
			case '%':
				return symbol;
			case 'z':
				return A2(_rluiten$elm_date_extra$Date_Extra_Format$formatOffsetStr, '', offset);
			case ':z':
				return A2(_rluiten$elm_date_extra$Date_Extra_Format$formatOffsetStr, ':', offset);
			case 'G':
				var _p4 = _rluiten$elm_date_extra$Date_Extra_Utils$isoWeek(d);
				return A3(
					_rluiten$elm_date_extra$Date_Extra_Format$padWithN,
					3,
					_elm_lang$core$Native_Utils.chr('0'),
					_p4._0);
			case 'V':
				var _p5 = _rluiten$elm_date_extra$Date_Extra_Utils$isoWeek(d);
				return A2(
					_rluiten$elm_date_extra$Date_Extra_Format$padWith,
					_elm_lang$core$Native_Utils.chr('0'),
					_p5._1);
			case '-V':
				var _p6 = _rluiten$elm_date_extra$Date_Extra_Utils$isoWeek(d);
				return _elm_lang$core$Basics$toString(_p6._1);
			case 'u':
				var _p7 = _rluiten$elm_date_extra$Date_Extra_Utils$isoWeek(d);
				return _elm_lang$core$Basics$toString(_p7._2);
			default:
				return '';
		}
	});
var _rluiten$elm_date_extra$Date_Extra_Format$formatRegex = _elm_lang$core$Regex$regex('%(y|Y|m|_m|-m|B|^B|b|^b|d|-d|-@d|e|@e|A|^A|a|^a|H|-H|k|I|-I|l|p|P|M|S|%|L|z|:z|G|V|-V|u)');
var _rluiten$elm_date_extra$Date_Extra_Format$formatOffset = F4(
	function (config, targetOffset, formatStr, date) {
		var dateOffset = _rluiten$elm_date_extra$Date_Extra_Create$getTimezoneOffset(date);
		var hackOffset = dateOffset - targetOffset;
		return A4(
			_elm_lang$core$Regex$replace,
			_elm_lang$core$Regex$All,
			_rluiten$elm_date_extra$Date_Extra_Format$formatRegex,
			A3(
				_rluiten$elm_date_extra$Date_Extra_Format$formatToken,
				config,
				targetOffset,
				A2(_rluiten$elm_date_extra$Date_Extra_Internal$hackDateAsOffset, hackOffset, date)),
			formatStr);
	});
var _rluiten$elm_date_extra$Date_Extra_Format$format = F3(
	function (config, formatStr, date) {
		return A4(
			_rluiten$elm_date_extra$Date_Extra_Format$formatOffset,
			config,
			_rluiten$elm_date_extra$Date_Extra_Create$getTimezoneOffset(date),
			formatStr,
			date);
	});
var _rluiten$elm_date_extra$Date_Extra_Format$formatUtc = F3(
	function (config, formatStr, date) {
		return A4(_rluiten$elm_date_extra$Date_Extra_Format$formatOffset, config, 0, formatStr, date);
	});
var _rluiten$elm_date_extra$Date_Extra_Format$isoDateString = function (date) {
	var day = _elm_lang$core$Date$day(date);
	var month = _elm_lang$core$Date$month(date);
	var year = _elm_lang$core$Date$year(date);
	return A2(
		_elm_lang$core$Basics_ops['++'],
		A3(
			_elm_lang$core$String$padLeft,
			4,
			_elm_lang$core$Native_Utils.chr('0'),
			_elm_lang$core$Basics$toString(year)),
		A2(
			_elm_lang$core$Basics_ops['++'],
			'-',
			A2(
				_elm_lang$core$Basics_ops['++'],
				A3(
					_elm_lang$core$String$padLeft,
					2,
					_elm_lang$core$Native_Utils.chr('0'),
					_elm_lang$core$Basics$toString(
						_rluiten$elm_date_extra$Date_Extra_Core$monthToInt(month))),
				A2(
					_elm_lang$core$Basics_ops['++'],
					'-',
					A3(
						_elm_lang$core$String$padLeft,
						2,
						_elm_lang$core$Native_Utils.chr('0'),
						_elm_lang$core$Basics$toString(day))))));
};
var _rluiten$elm_date_extra$Date_Extra_Format$utcIsoDateString = function (date) {
	return _rluiten$elm_date_extra$Date_Extra_Format$isoDateString(
		_rluiten$elm_date_extra$Date_Extra_Internal$hackDateAsUtc(date));
};
var _rluiten$elm_date_extra$Date_Extra_Format$yearInt = function (year) {
	return A3(
		_elm_lang$core$String$padLeft,
		4,
		_elm_lang$core$Native_Utils.chr('0'),
		_elm_lang$core$Basics$toString(year));
};
var _rluiten$elm_date_extra$Date_Extra_Format$year = function (date) {
	return A3(
		_elm_lang$core$String$padLeft,
		4,
		_elm_lang$core$Native_Utils.chr('0'),
		_elm_lang$core$Basics$toString(
			_elm_lang$core$Date$year(date)));
};
var _rluiten$elm_date_extra$Date_Extra_Format$monthMonth = function (month) {
	return A3(
		_elm_lang$core$String$padLeft,
		2,
		_elm_lang$core$Native_Utils.chr('0'),
		_elm_lang$core$Basics$toString(
			_rluiten$elm_date_extra$Date_Extra_Core$monthToInt(month)));
};
var _rluiten$elm_date_extra$Date_Extra_Format$month = function (date) {
	return A3(
		_elm_lang$core$String$padLeft,
		2,
		_elm_lang$core$Native_Utils.chr('0'),
		_elm_lang$core$Basics$toString(
			_rluiten$elm_date_extra$Date_Extra_Core$monthToInt(
				_elm_lang$core$Date$month(date))));
};
var _rluiten$elm_date_extra$Date_Extra_Format$isoTimeFormat = '%H:%M:%S';
var _rluiten$elm_date_extra$Date_Extra_Format$isoDateFormat = '%Y-%m-%d';
var _rluiten$elm_date_extra$Date_Extra_Format$isoMsecOffsetFormat = '%Y-%m-%dT%H:%M:%S.%L%:z';
var _rluiten$elm_date_extra$Date_Extra_Format$isoString = A2(_rluiten$elm_date_extra$Date_Extra_Format$format, _rluiten$elm_date_extra$Date_Extra_Config_Config_en_us$config, _rluiten$elm_date_extra$Date_Extra_Format$isoMsecOffsetFormat);
var _rluiten$elm_date_extra$Date_Extra_Format$isoOffsetFormat = '%Y-%m-%dT%H:%M:%S%z';
var _rluiten$elm_date_extra$Date_Extra_Format$isoMsecFormat = '%Y-%m-%dT%H:%M:%S.%L';
var _rluiten$elm_date_extra$Date_Extra_Format$isoStringNoOffset = A2(_rluiten$elm_date_extra$Date_Extra_Format$format, _rluiten$elm_date_extra$Date_Extra_Config_Config_en_us$config, _rluiten$elm_date_extra$Date_Extra_Format$isoMsecFormat);
var _rluiten$elm_date_extra$Date_Extra_Format$utcIsoString = function (date) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		A3(_rluiten$elm_date_extra$Date_Extra_Format$formatUtc, _rluiten$elm_date_extra$Date_Extra_Config_Config_en_us$config, _rluiten$elm_date_extra$Date_Extra_Format$isoMsecFormat, date),
		'Z');
};
var _rluiten$elm_date_extra$Date_Extra_Format$isoFormat = '%Y-%m-%dT%H:%M:%S';

var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$horizontalAlignOption = function (align) {
	var _p0 = align;
	switch (_p0.ctor) {
		case 'Left':
			return 'start';
		case 'Center':
			return 'center';
		case 'Right':
			return 'end';
		case 'Around':
			return 'around';
		default:
			return 'between';
	}
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$verticalAlignOption = function (align) {
	var _p1 = align;
	switch (_p1.ctor) {
		case 'Top':
			return 'start';
		case 'Middle':
			return 'center';
		default:
			return 'end';
	}
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$moveCountOption = function (size) {
	var _p2 = size;
	switch (_p2.ctor) {
		case 'Move0':
			return '0';
		case 'Move1':
			return '1';
		case 'Move2':
			return '2';
		case 'Move3':
			return '3';
		case 'Move4':
			return '4';
		case 'Move5':
			return '5';
		case 'Move6':
			return '6';
		case 'Move7':
			return '7';
		case 'Move8':
			return '8';
		case 'Move9':
			return '9';
		case 'Move10':
			return '10';
		case 'Move11':
			return '11';
		default:
			return '12';
	}
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$offsetCountOption = function (size) {
	var _p3 = size;
	switch (_p3.ctor) {
		case 'Offset0':
			return '0';
		case 'Offset1':
			return '1';
		case 'Offset2':
			return '2';
		case 'Offset3':
			return '3';
		case 'Offset4':
			return '4';
		case 'Offset5':
			return '5';
		case 'Offset6':
			return '6';
		case 'Offset7':
			return '7';
		case 'Offset8':
			return '8';
		case 'Offset9':
			return '9';
		case 'Offset10':
			return '10';
		default:
			return '11';
	}
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$columnCountOption = function (size) {
	var _p4 = size;
	switch (_p4.ctor) {
		case 'Col':
			return _elm_lang$core$Maybe$Nothing;
		case 'Col1':
			return _elm_lang$core$Maybe$Just('1');
		case 'Col2':
			return _elm_lang$core$Maybe$Just('2');
		case 'Col3':
			return _elm_lang$core$Maybe$Just('3');
		case 'Col4':
			return _elm_lang$core$Maybe$Just('4');
		case 'Col5':
			return _elm_lang$core$Maybe$Just('5');
		case 'Col6':
			return _elm_lang$core$Maybe$Just('6');
		case 'Col7':
			return _elm_lang$core$Maybe$Just('7');
		case 'Col8':
			return _elm_lang$core$Maybe$Just('8');
		case 'Col9':
			return _elm_lang$core$Maybe$Just('9');
		case 'Col10':
			return _elm_lang$core$Maybe$Just('10');
		case 'Col11':
			return _elm_lang$core$Maybe$Just('11');
		case 'Col12':
			return _elm_lang$core$Maybe$Just('12');
		default:
			return _elm_lang$core$Maybe$Just('auto');
	}
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$screenSizeOption = function (size) {
	var _p5 = size;
	switch (_p5.ctor) {
		case 'XS':
			return _elm_lang$core$Maybe$Nothing;
		case 'SM':
			return _elm_lang$core$Maybe$Just('sm');
		case 'MD':
			return _elm_lang$core$Maybe$Just('md');
		case 'LG':
			return _elm_lang$core$Maybe$Just('lg');
		default:
			return _elm_lang$core$Maybe$Just('xl');
	}
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$screenSizeToPartialString = function (screenSize) {
	var _p6 = _rundis$elm_bootstrap$Bootstrap_Grid_Internal$screenSizeOption(screenSize);
	if (_p6.ctor === 'Just') {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			'-',
			A2(_elm_lang$core$Basics_ops['++'], _p6._0, '-'));
	} else {
		return '-';
	}
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$hAlignClass = function (_p7) {
	var _p8 = _p7;
	return _elm_lang$html$Html_Attributes$class(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'justify-content-',
			A2(
				_elm_lang$core$Basics_ops['++'],
				A2(
					_elm_lang$core$Maybe$withDefault,
					'',
					A2(
						_elm_lang$core$Maybe$map,
						function (v) {
							return A2(_elm_lang$core$Basics_ops['++'], v, '-');
						},
						_rundis$elm_bootstrap$Bootstrap_Grid_Internal$screenSizeOption(_p8.screenSize))),
				_rundis$elm_bootstrap$Bootstrap_Grid_Internal$horizontalAlignOption(_p8.align))));
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$hAlignsToAttributes = function (aligns) {
	var align = function (a) {
		return A2(_elm_lang$core$Maybe$map, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$hAlignClass, a);
	};
	return A2(
		_elm_lang$core$List$filterMap,
		_elm_lang$core$Basics$identity,
		A2(_elm_lang$core$List$map, align, aligns));
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$vAlignClass = F2(
	function (prefix, _p9) {
		var _p10 = _p9;
		return _elm_lang$html$Html_Attributes$class(
			A2(
				_elm_lang$core$Basics_ops['++'],
				prefix,
				A2(
					_elm_lang$core$Basics_ops['++'],
					A2(
						_elm_lang$core$Maybe$withDefault,
						'',
						A2(
							_elm_lang$core$Maybe$map,
							function (v) {
								return A2(_elm_lang$core$Basics_ops['++'], v, '-');
							},
							_rundis$elm_bootstrap$Bootstrap_Grid_Internal$screenSizeOption(_p10.screenSize))),
					_rundis$elm_bootstrap$Bootstrap_Grid_Internal$verticalAlignOption(_p10.align))));
	});
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$vAlignsToAttributes = F2(
	function (prefix, aligns) {
		var align = function (a) {
			return A2(
				_elm_lang$core$Maybe$map,
				_rundis$elm_bootstrap$Bootstrap_Grid_Internal$vAlignClass(prefix),
				a);
		};
		return A2(
			_elm_lang$core$List$filterMap,
			_elm_lang$core$Basics$identity,
			A2(_elm_lang$core$List$map, align, aligns));
	});
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$pushesToAttributes = function (pushes) {
	var push = function (m) {
		var _p11 = m;
		if (_p11.ctor === 'Just') {
			return _elm_lang$core$Maybe$Just(
				_elm_lang$html$Html_Attributes$class(
					A2(
						_elm_lang$core$Basics_ops['++'],
						'push',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_rundis$elm_bootstrap$Bootstrap_Grid_Internal$screenSizeToPartialString(_p11._0.screenSize),
							_rundis$elm_bootstrap$Bootstrap_Grid_Internal$moveCountOption(_p11._0.moveCount)))));
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	};
	return A2(
		_elm_lang$core$List$filterMap,
		_elm_lang$core$Basics$identity,
		A2(_elm_lang$core$List$map, push, pushes));
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$pullsToAttributes = function (pulls) {
	var pull = function (m) {
		var _p12 = m;
		if (_p12.ctor === 'Just') {
			return _elm_lang$core$Maybe$Just(
				_elm_lang$html$Html_Attributes$class(
					A2(
						_elm_lang$core$Basics_ops['++'],
						'pull',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_rundis$elm_bootstrap$Bootstrap_Grid_Internal$screenSizeToPartialString(_p12._0.screenSize),
							_rundis$elm_bootstrap$Bootstrap_Grid_Internal$moveCountOption(_p12._0.moveCount)))));
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	};
	return A2(
		_elm_lang$core$List$filterMap,
		_elm_lang$core$Basics$identity,
		A2(_elm_lang$core$List$map, pull, pulls));
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$offsetClass = function (_p13) {
	var _p14 = _p13;
	return _elm_lang$html$Html_Attributes$class(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'offset',
			A2(
				_elm_lang$core$Basics_ops['++'],
				_rundis$elm_bootstrap$Bootstrap_Grid_Internal$screenSizeToPartialString(_p14.screenSize),
				_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offsetCountOption(_p14.offsetCount))));
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$offsetsToAttributes = function (offsets) {
	var offset = function (m) {
		return A2(_elm_lang$core$Maybe$map, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$offsetClass, m);
	};
	return A2(
		_elm_lang$core$List$filterMap,
		_elm_lang$core$Basics$identity,
		A2(_elm_lang$core$List$map, offset, offsets));
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$colWidthClass = function (_p15) {
	var _p16 = _p15;
	return _elm_lang$html$Html_Attributes$class(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'col',
			A2(
				_elm_lang$core$Basics_ops['++'],
				A2(
					_elm_lang$core$Maybe$withDefault,
					'',
					A2(
						_elm_lang$core$Maybe$map,
						function (v) {
							return A2(_elm_lang$core$Basics_ops['++'], '-', v);
						},
						_rundis$elm_bootstrap$Bootstrap_Grid_Internal$screenSizeOption(_p16.screenSize))),
				A2(
					_elm_lang$core$Maybe$withDefault,
					'',
					A2(
						_elm_lang$core$Maybe$map,
						function (v) {
							return A2(_elm_lang$core$Basics_ops['++'], '-', v);
						},
						_rundis$elm_bootstrap$Bootstrap_Grid_Internal$columnCountOption(_p16.columnCount))))));
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$colWidthsToAttributes = function (widths) {
	var width = function (w) {
		return A2(_elm_lang$core$Maybe$map, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$colWidthClass, w);
	};
	return A2(
		_elm_lang$core$List$filterMap,
		_elm_lang$core$Basics$identity,
		A2(_elm_lang$core$List$map, width, widths));
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$defaultRowOptions = {
	attributes: {ctor: '[]'},
	vAlignXs: _elm_lang$core$Maybe$Nothing,
	vAlignSm: _elm_lang$core$Maybe$Nothing,
	vAlignMd: _elm_lang$core$Maybe$Nothing,
	vAlignLg: _elm_lang$core$Maybe$Nothing,
	vAlignXl: _elm_lang$core$Maybe$Nothing,
	hAlignXs: _elm_lang$core$Maybe$Nothing,
	hAlignSm: _elm_lang$core$Maybe$Nothing,
	hAlignMd: _elm_lang$core$Maybe$Nothing,
	hAlignLg: _elm_lang$core$Maybe$Nothing,
	hAlignXl: _elm_lang$core$Maybe$Nothing
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$defaultColOptions = {
	attributes: {ctor: '[]'},
	widthXs: _elm_lang$core$Maybe$Nothing,
	widthSm: _elm_lang$core$Maybe$Nothing,
	widthMd: _elm_lang$core$Maybe$Nothing,
	widthLg: _elm_lang$core$Maybe$Nothing,
	widthXl: _elm_lang$core$Maybe$Nothing,
	offsetXs: _elm_lang$core$Maybe$Nothing,
	offsetSm: _elm_lang$core$Maybe$Nothing,
	offsetMd: _elm_lang$core$Maybe$Nothing,
	offsetLg: _elm_lang$core$Maybe$Nothing,
	offsetXl: _elm_lang$core$Maybe$Nothing,
	pullXs: _elm_lang$core$Maybe$Nothing,
	pullSm: _elm_lang$core$Maybe$Nothing,
	pullMd: _elm_lang$core$Maybe$Nothing,
	pullLg: _elm_lang$core$Maybe$Nothing,
	pullXl: _elm_lang$core$Maybe$Nothing,
	pushXs: _elm_lang$core$Maybe$Nothing,
	pushSm: _elm_lang$core$Maybe$Nothing,
	pushMd: _elm_lang$core$Maybe$Nothing,
	pushLg: _elm_lang$core$Maybe$Nothing,
	pushXl: _elm_lang$core$Maybe$Nothing,
	alignXs: _elm_lang$core$Maybe$Nothing,
	alignSm: _elm_lang$core$Maybe$Nothing,
	alignMd: _elm_lang$core$Maybe$Nothing,
	alignLg: _elm_lang$core$Maybe$Nothing,
	alignXl: _elm_lang$core$Maybe$Nothing
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$applyRowHAlign = F2(
	function (align, options) {
		var _p17 = align.screenSize;
		switch (_p17.ctor) {
			case 'XS':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						hAlignXs: _elm_lang$core$Maybe$Just(align)
					});
			case 'SM':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						hAlignSm: _elm_lang$core$Maybe$Just(align)
					});
			case 'MD':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						hAlignMd: _elm_lang$core$Maybe$Just(align)
					});
			case 'LG':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						hAlignLg: _elm_lang$core$Maybe$Just(align)
					});
			default:
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						hAlignXl: _elm_lang$core$Maybe$Just(align)
					});
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$applyRowVAlign = F2(
	function (align, options) {
		var _p18 = align.screenSize;
		switch (_p18.ctor) {
			case 'XS':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						vAlignXs: _elm_lang$core$Maybe$Just(align)
					});
			case 'SM':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						vAlignSm: _elm_lang$core$Maybe$Just(align)
					});
			case 'MD':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						vAlignMd: _elm_lang$core$Maybe$Just(align)
					});
			case 'LG':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						vAlignLg: _elm_lang$core$Maybe$Just(align)
					});
			default:
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						vAlignXl: _elm_lang$core$Maybe$Just(align)
					});
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$applyRowOption = F2(
	function (modifier, options) {
		var _p19 = modifier;
		switch (_p19.ctor) {
			case 'RowAttrs':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						attributes: A2(_elm_lang$core$Basics_ops['++'], options.attributes, _p19._0)
					});
			case 'RowVAlign':
				return A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$applyRowVAlign, _p19._0, options);
			default:
				return A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$applyRowHAlign, _p19._0, options);
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$applyColAlign = F2(
	function (align, options) {
		var _p20 = align.screenSize;
		switch (_p20.ctor) {
			case 'XS':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						alignXs: _elm_lang$core$Maybe$Just(align)
					});
			case 'SM':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						alignSm: _elm_lang$core$Maybe$Just(align)
					});
			case 'MD':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						alignMd: _elm_lang$core$Maybe$Just(align)
					});
			case 'LG':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						alignLg: _elm_lang$core$Maybe$Just(align)
					});
			default:
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						alignXl: _elm_lang$core$Maybe$Just(align)
					});
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$applyColPush = F2(
	function (push, options) {
		var _p21 = push.screenSize;
		switch (_p21.ctor) {
			case 'XS':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						pushXs: _elm_lang$core$Maybe$Just(push)
					});
			case 'SM':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						pushSm: _elm_lang$core$Maybe$Just(push)
					});
			case 'MD':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						pushMd: _elm_lang$core$Maybe$Just(push)
					});
			case 'LG':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						pushLg: _elm_lang$core$Maybe$Just(push)
					});
			default:
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						pushXl: _elm_lang$core$Maybe$Just(push)
					});
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$applyColPull = F2(
	function (pull, options) {
		var _p22 = pull.screenSize;
		switch (_p22.ctor) {
			case 'XS':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						pullXs: _elm_lang$core$Maybe$Just(pull)
					});
			case 'SM':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						pullSm: _elm_lang$core$Maybe$Just(pull)
					});
			case 'MD':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						pullMd: _elm_lang$core$Maybe$Just(pull)
					});
			case 'LG':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						pullLg: _elm_lang$core$Maybe$Just(pull)
					});
			default:
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						pullXl: _elm_lang$core$Maybe$Just(pull)
					});
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$applyColOffset = F2(
	function (offset, options) {
		var _p23 = offset.screenSize;
		switch (_p23.ctor) {
			case 'XS':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						offsetXs: _elm_lang$core$Maybe$Just(offset)
					});
			case 'SM':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						offsetSm: _elm_lang$core$Maybe$Just(offset)
					});
			case 'MD':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						offsetMd: _elm_lang$core$Maybe$Just(offset)
					});
			case 'LG':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						offsetLg: _elm_lang$core$Maybe$Just(offset)
					});
			default:
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						offsetXl: _elm_lang$core$Maybe$Just(offset)
					});
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$applyColWidth = F2(
	function (width, options) {
		var _p24 = width.screenSize;
		switch (_p24.ctor) {
			case 'XS':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						widthXs: _elm_lang$core$Maybe$Just(width)
					});
			case 'SM':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						widthSm: _elm_lang$core$Maybe$Just(width)
					});
			case 'MD':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						widthMd: _elm_lang$core$Maybe$Just(width)
					});
			case 'LG':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						widthLg: _elm_lang$core$Maybe$Just(width)
					});
			default:
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						widthXl: _elm_lang$core$Maybe$Just(width)
					});
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$applyColOption = F2(
	function (modifier, options) {
		var _p25 = modifier;
		switch (_p25.ctor) {
			case 'ColAttrs':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						attributes: A2(_elm_lang$core$Basics_ops['++'], options.attributes, _p25._0)
					});
			case 'ColWidth':
				return A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$applyColWidth, _p25._0, options);
			case 'ColOffset':
				return A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$applyColOffset, _p25._0, options);
			case 'ColPull':
				return A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$applyColPull, _p25._0, options);
			case 'ColPush':
				return A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$applyColPush, _p25._0, options);
			default:
				return A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$applyColAlign, _p25._0, options);
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowAttributes = function (modifiers) {
	var options = A3(_elm_lang$core$List$foldl, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$applyRowOption, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$defaultRowOptions, modifiers);
	return A2(
		_elm_lang$core$Basics_ops['++'],
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('row'),
			_1: {ctor: '[]'}
		},
		A2(
			_elm_lang$core$Basics_ops['++'],
			A2(
				_rundis$elm_bootstrap$Bootstrap_Grid_Internal$vAlignsToAttributes,
				'align-items-',
				{
					ctor: '::',
					_0: options.vAlignXs,
					_1: {
						ctor: '::',
						_0: options.vAlignSm,
						_1: {
							ctor: '::',
							_0: options.vAlignMd,
							_1: {
								ctor: '::',
								_0: options.vAlignLg,
								_1: {
									ctor: '::',
									_0: options.vAlignXl,
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}),
			A2(
				_elm_lang$core$Basics_ops['++'],
				_rundis$elm_bootstrap$Bootstrap_Grid_Internal$hAlignsToAttributes(
					{
						ctor: '::',
						_0: options.hAlignXs,
						_1: {
							ctor: '::',
							_0: options.hAlignSm,
							_1: {
								ctor: '::',
								_0: options.hAlignMd,
								_1: {
									ctor: '::',
									_0: options.hAlignLg,
									_1: {
										ctor: '::',
										_0: options.hAlignXl,
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}),
				options.attributes)));
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Width = F2(
	function (a, b) {
		return {screenSize: a, columnCount: b};
	});
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset = F2(
	function (a, b) {
		return {screenSize: a, offsetCount: b};
	});
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Pull = F2(
	function (a, b) {
		return {screenSize: a, moveCount: b};
	});
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Push = F2(
	function (a, b) {
		return {screenSize: a, moveCount: b};
	});
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$VAlign = F2(
	function (a, b) {
		return {screenSize: a, align: b};
	});
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$HAlign = F2(
	function (a, b) {
		return {screenSize: a, align: b};
	});
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$ColOptions = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return function (o) {
															return function (p) {
																return function (q) {
																	return function (r) {
																		return function (s) {
																			return function (t) {
																				return function (u) {
																					return function (v) {
																						return function (w) {
																							return function (x) {
																								return function (y) {
																									return function (z) {
																										return {attributes: a, widthXs: b, widthSm: c, widthMd: d, widthLg: e, widthXl: f, offsetXs: g, offsetSm: h, offsetMd: i, offsetLg: j, offsetXl: k, pullXs: l, pullSm: m, pullMd: n, pullLg: o, pullXl: p, pushXs: q, pushSm: r, pushMd: s, pushLg: t, pushXl: u, alignXs: v, alignSm: w, alignMd: x, alignLg: y, alignXl: z};
																									};
																								};
																							};
																						};
																					};
																				};
																			};
																		};
																	};
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$RowOptions = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return {attributes: a, vAlignXs: b, vAlignSm: c, vAlignMd: d, vAlignLg: e, vAlignXl: f, hAlignXs: g, hAlignSm: h, hAlignMd: i, hAlignLg: j, hAlignXl: k};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$ColAttrs = function (a) {
	return {ctor: 'ColAttrs', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$ColAlign = function (a) {
	return {ctor: 'ColAlign', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$colVAlign = F2(
	function (size, align) {
		return _rundis$elm_bootstrap$Bootstrap_Grid_Internal$ColAlign(
			A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$VAlign, size, align));
	});
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$ColPush = function (a) {
	return {ctor: 'ColPush', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$push = F2(
	function (size, count) {
		return _rundis$elm_bootstrap$Bootstrap_Grid_Internal$ColPush(
			A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$Push, size, count));
	});
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$ColPull = function (a) {
	return {ctor: 'ColPull', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull = F2(
	function (size, count) {
		return _rundis$elm_bootstrap$Bootstrap_Grid_Internal$ColPull(
			A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$Pull, size, count));
	});
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$ColOffset = function (a) {
	return {ctor: 'ColOffset', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset = F2(
	function (size, count) {
		return _rundis$elm_bootstrap$Bootstrap_Grid_Internal$ColOffset(
			A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset, size, count));
	});
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$ColWidth = function (a) {
	return {ctor: 'ColWidth', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$width = F2(
	function (size, count) {
		return _rundis$elm_bootstrap$Bootstrap_Grid_Internal$ColWidth(
			A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$Width, size, count));
	});
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$RowAttrs = function (a) {
	return {ctor: 'RowAttrs', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$RowHAlign = function (a) {
	return {ctor: 'RowHAlign', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowHAlign = F2(
	function (size, align) {
		return _rundis$elm_bootstrap$Bootstrap_Grid_Internal$RowHAlign(
			A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$HAlign, size, align));
	});
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$RowVAlign = function (a) {
	return {ctor: 'RowVAlign', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowVAlign = F2(
	function (size, align) {
		return _rundis$elm_bootstrap$Bootstrap_Grid_Internal$RowVAlign(
			A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$VAlign, size, align));
	});
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL = {ctor: 'XL'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG = {ctor: 'LG'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD = {ctor: 'MD'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM = {ctor: 'SM'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS = {ctor: 'XS'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$ColAuto = {ctor: 'ColAuto'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col12 = {ctor: 'Col12'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col11 = {ctor: 'Col11'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col10 = {ctor: 'Col10'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col9 = {ctor: 'Col9'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col8 = {ctor: 'Col8'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col7 = {ctor: 'Col7'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col6 = {ctor: 'Col6'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col5 = {ctor: 'Col5'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col4 = {ctor: 'Col4'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col3 = {ctor: 'Col3'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col2 = {ctor: 'Col2'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col1 = {ctor: 'Col1'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col = {ctor: 'Col'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$colAttributes = function (modifiers) {
	var options = A3(_elm_lang$core$List$foldl, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$applyColOption, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$defaultColOptions, modifiers);
	var shouldAddDefaultXs = _elm_lang$core$Native_Utils.eq(
		_elm_lang$core$List$length(
			A2(
				_elm_lang$core$List$filterMap,
				_elm_lang$core$Basics$identity,
				{
					ctor: '::',
					_0: options.widthXs,
					_1: {
						ctor: '::',
						_0: options.widthSm,
						_1: {
							ctor: '::',
							_0: options.widthMd,
							_1: {
								ctor: '::',
								_0: options.widthLg,
								_1: {
									ctor: '::',
									_0: options.widthXl,
									_1: {ctor: '[]'}
								}
							}
						}
					}
				})),
		0);
	return A2(
		_elm_lang$core$Basics_ops['++'],
		_rundis$elm_bootstrap$Bootstrap_Grid_Internal$colWidthsToAttributes(
			{
				ctor: '::',
				_0: shouldAddDefaultXs ? _elm_lang$core$Maybe$Just(
					A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$Width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col)) : options.widthXs,
				_1: {
					ctor: '::',
					_0: options.widthSm,
					_1: {
						ctor: '::',
						_0: options.widthMd,
						_1: {
							ctor: '::',
							_0: options.widthLg,
							_1: {
								ctor: '::',
								_0: options.widthXl,
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}),
		A2(
			_elm_lang$core$Basics_ops['++'],
			_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offsetsToAttributes(
				{
					ctor: '::',
					_0: options.offsetXs,
					_1: {
						ctor: '::',
						_0: options.offsetSm,
						_1: {
							ctor: '::',
							_0: options.offsetMd,
							_1: {
								ctor: '::',
								_0: options.offsetLg,
								_1: {
									ctor: '::',
									_0: options.offsetXl,
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}),
			A2(
				_elm_lang$core$Basics_ops['++'],
				_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pullsToAttributes(
					{
						ctor: '::',
						_0: options.pullXs,
						_1: {
							ctor: '::',
							_0: options.pullSm,
							_1: {
								ctor: '::',
								_0: options.pullMd,
								_1: {
									ctor: '::',
									_0: options.pullLg,
									_1: {
										ctor: '::',
										_0: options.pullXl,
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}),
				A2(
					_elm_lang$core$Basics_ops['++'],
					_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pushesToAttributes(
						{
							ctor: '::',
							_0: options.pushXs,
							_1: {
								ctor: '::',
								_0: options.pushSm,
								_1: {
									ctor: '::',
									_0: options.pushMd,
									_1: {
										ctor: '::',
										_0: options.pushLg,
										_1: {
											ctor: '::',
											_0: options.pushXl,
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}),
					A2(
						_elm_lang$core$Basics_ops['++'],
						A2(
							_rundis$elm_bootstrap$Bootstrap_Grid_Internal$vAlignsToAttributes,
							'align-self-',
							{
								ctor: '::',
								_0: options.alignXs,
								_1: {
									ctor: '::',
									_0: options.alignSm,
									_1: {
										ctor: '::',
										_0: options.alignMd,
										_1: {
											ctor: '::',
											_0: options.alignLg,
											_1: {
												ctor: '::',
												_0: options.alignXl,
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}),
						options.attributes)))));
};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset11 = {ctor: 'Offset11'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset10 = {ctor: 'Offset10'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset9 = {ctor: 'Offset9'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset8 = {ctor: 'Offset8'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset7 = {ctor: 'Offset7'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset6 = {ctor: 'Offset6'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset5 = {ctor: 'Offset5'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset4 = {ctor: 'Offset4'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset3 = {ctor: 'Offset3'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset2 = {ctor: 'Offset2'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset1 = {ctor: 'Offset1'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset0 = {ctor: 'Offset0'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move12 = {ctor: 'Move12'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move11 = {ctor: 'Move11'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move10 = {ctor: 'Move10'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move9 = {ctor: 'Move9'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move8 = {ctor: 'Move8'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move7 = {ctor: 'Move7'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move6 = {ctor: 'Move6'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move5 = {ctor: 'Move5'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move4 = {ctor: 'Move4'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move3 = {ctor: 'Move3'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move2 = {ctor: 'Move2'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move1 = {ctor: 'Move1'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move0 = {ctor: 'Move0'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Bottom = {ctor: 'Bottom'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Middle = {ctor: 'Middle'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Top = {ctor: 'Top'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Between = {ctor: 'Between'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Around = {ctor: 'Around'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Right = {ctor: 'Right'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Center = {ctor: 'Center'};
var _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Left = {ctor: 'Left'};

var _rundis$elm_bootstrap$Bootstrap_Internal_Text$textAlignDirOption = function (dir) {
	var _p0 = dir;
	switch (_p0.ctor) {
		case 'Center':
			return 'center';
		case 'Left':
			return 'left';
		default:
			return 'right';
	}
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Text$textAlignClass = function (_p1) {
	var _p2 = _p1;
	return _elm_lang$html$Html_Attributes$class(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'text',
			A2(
				_elm_lang$core$Basics_ops['++'],
				A2(
					_elm_lang$core$Maybe$withDefault,
					'-',
					A2(
						_elm_lang$core$Maybe$map,
						function (s) {
							return A2(
								_elm_lang$core$Basics_ops['++'],
								'-',
								A2(_elm_lang$core$Basics_ops['++'], s, '-'));
						},
						_rundis$elm_bootstrap$Bootstrap_Grid_Internal$screenSizeOption(_p2.size))),
				_rundis$elm_bootstrap$Bootstrap_Internal_Text$textAlignDirOption(_p2.dir))));
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Text$HAlign = F2(
	function (a, b) {
		return {dir: a, size: b};
	});
var _rundis$elm_bootstrap$Bootstrap_Internal_Text$Right = {ctor: 'Right'};
var _rundis$elm_bootstrap$Bootstrap_Internal_Text$Center = {ctor: 'Center'};
var _rundis$elm_bootstrap$Bootstrap_Internal_Text$Left = {ctor: 'Left'};

var _rundis$elm_bootstrap$Bootstrap_Text$alignXl = function (dir) {
	return {dir: dir, size: _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL};
};
var _rundis$elm_bootstrap$Bootstrap_Text$alignXlRight = _rundis$elm_bootstrap$Bootstrap_Text$alignXl(_rundis$elm_bootstrap$Bootstrap_Internal_Text$Right);
var _rundis$elm_bootstrap$Bootstrap_Text$alignXlCenter = _rundis$elm_bootstrap$Bootstrap_Text$alignXl(_rundis$elm_bootstrap$Bootstrap_Internal_Text$Center);
var _rundis$elm_bootstrap$Bootstrap_Text$alignXlLeft = _rundis$elm_bootstrap$Bootstrap_Text$alignXl(_rundis$elm_bootstrap$Bootstrap_Internal_Text$Left);
var _rundis$elm_bootstrap$Bootstrap_Text$alignLg = function (dir) {
	return {dir: dir, size: _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG};
};
var _rundis$elm_bootstrap$Bootstrap_Text$alignLgRight = _rundis$elm_bootstrap$Bootstrap_Text$alignLg(_rundis$elm_bootstrap$Bootstrap_Internal_Text$Right);
var _rundis$elm_bootstrap$Bootstrap_Text$alignLgCenter = _rundis$elm_bootstrap$Bootstrap_Text$alignLg(_rundis$elm_bootstrap$Bootstrap_Internal_Text$Center);
var _rundis$elm_bootstrap$Bootstrap_Text$alignLgLeft = _rundis$elm_bootstrap$Bootstrap_Text$alignLg(_rundis$elm_bootstrap$Bootstrap_Internal_Text$Left);
var _rundis$elm_bootstrap$Bootstrap_Text$alignMd = function (dir) {
	return {dir: dir, size: _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD};
};
var _rundis$elm_bootstrap$Bootstrap_Text$alignMdRight = _rundis$elm_bootstrap$Bootstrap_Text$alignMd(_rundis$elm_bootstrap$Bootstrap_Internal_Text$Right);
var _rundis$elm_bootstrap$Bootstrap_Text$alignMdCenter = _rundis$elm_bootstrap$Bootstrap_Text$alignMd(_rundis$elm_bootstrap$Bootstrap_Internal_Text$Center);
var _rundis$elm_bootstrap$Bootstrap_Text$alignMdLeft = _rundis$elm_bootstrap$Bootstrap_Text$alignMd(_rundis$elm_bootstrap$Bootstrap_Internal_Text$Left);
var _rundis$elm_bootstrap$Bootstrap_Text$alignSm = function (dir) {
	return {dir: dir, size: _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM};
};
var _rundis$elm_bootstrap$Bootstrap_Text$alignSmRight = _rundis$elm_bootstrap$Bootstrap_Text$alignSm(_rundis$elm_bootstrap$Bootstrap_Internal_Text$Right);
var _rundis$elm_bootstrap$Bootstrap_Text$alignSmCenter = _rundis$elm_bootstrap$Bootstrap_Text$alignSm(_rundis$elm_bootstrap$Bootstrap_Internal_Text$Center);
var _rundis$elm_bootstrap$Bootstrap_Text$alignSmLeft = _rundis$elm_bootstrap$Bootstrap_Text$alignSm(_rundis$elm_bootstrap$Bootstrap_Internal_Text$Left);
var _rundis$elm_bootstrap$Bootstrap_Text$alignXs = function (dir) {
	return {dir: dir, size: _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS};
};
var _rundis$elm_bootstrap$Bootstrap_Text$alignXsRight = _rundis$elm_bootstrap$Bootstrap_Text$alignXs(_rundis$elm_bootstrap$Bootstrap_Internal_Text$Right);
var _rundis$elm_bootstrap$Bootstrap_Text$alignXsCenter = _rundis$elm_bootstrap$Bootstrap_Text$alignXs(_rundis$elm_bootstrap$Bootstrap_Internal_Text$Center);
var _rundis$elm_bootstrap$Bootstrap_Text$alignXsLeft = _rundis$elm_bootstrap$Bootstrap_Text$alignXs(_rundis$elm_bootstrap$Bootstrap_Internal_Text$Left);

var _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$roleClass = function (role) {
	return _elm_lang$html$Html_Attributes$class(
		function () {
			var _p0 = role;
			switch (_p0.ctor) {
				case 'Success':
					return 'list-group-item-success';
				case 'Info':
					return 'list-group-item-info';
				case 'Warning':
					return 'list-group-item-warning';
				default:
					return 'list-group-item-danger';
			}
		}());
};
var _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$itemAttributes = function (options) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$classList(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'list-group-item', _1: true},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'disabled', _1: options.disabled},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'active', _1: options.active},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'list-group-item-action', _1: options.action},
								_1: {ctor: '[]'}
							}
						}
					}
				}),
			_1: {ctor: '[]'}
		},
		A2(
			_elm_lang$core$Basics_ops['++'],
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$disabled(options.disabled),
				_1: {ctor: '[]'}
			},
			A2(
				_elm_lang$core$Basics_ops['++'],
				A2(
					_elm_lang$core$Maybe$withDefault,
					{ctor: '[]'},
					A2(
						_elm_lang$core$Maybe$map,
						function (r) {
							return {
								ctor: '::',
								_0: _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$roleClass(r),
								_1: {ctor: '[]'}
							};
						},
						options.role)),
				options.attributes)));
};
var _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$preventClick = A2(_elm_lang$html$Html_Attributes$attribute, 'onclick', 'var event = arguments[0] || window.event; event.preventDefault();');
var _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$applyModifier = F2(
	function (modifier, options) {
		var _p1 = modifier;
		switch (_p1.ctor) {
			case 'Roled':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						role: _elm_lang$core$Maybe$Just(_p1._0)
					});
			case 'Action':
				return _elm_lang$core$Native_Utils.update(
					options,
					{action: true});
			case 'Disabled':
				return _elm_lang$core$Native_Utils.update(
					options,
					{disabled: true});
			case 'Active':
				return _elm_lang$core$Native_Utils.update(
					options,
					{active: true});
			default:
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						attributes: A2(_elm_lang$core$Basics_ops['++'], options.attributes, _p1._0)
					});
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$defaultOptions = {
	role: _elm_lang$core$Maybe$Nothing,
	active: false,
	disabled: false,
	action: false,
	attributes: {ctor: '[]'}
};
var _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$renderCustomItem = function (_p2) {
	var _p3 = _p2;
	return A2(
		_p3._0.itemFn,
		_rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$itemAttributes(
			A3(_elm_lang$core$List$foldl, _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$applyModifier, _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$defaultOptions, _p3._0.options)),
		_p3._0.children);
};
var _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$renderItem = function (_p4) {
	var _p5 = _p4;
	return A2(
		_p5._0.itemFn,
		_rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$itemAttributes(
			A3(_elm_lang$core$List$foldl, _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$applyModifier, _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$defaultOptions, _p5._0.options)),
		_p5._0.children);
};
var _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$ItemOptions = F5(
	function (a, b, c, d, e) {
		return {role: a, active: b, disabled: c, action: d, attributes: e};
	});
var _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Attrs = function (a) {
	return {ctor: 'Attrs', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Action = {ctor: 'Action'};
var _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Disabled = {ctor: 'Disabled'};
var _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Active = {ctor: 'Active'};
var _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Roled = function (a) {
	return {ctor: 'Roled', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Danger = {ctor: 'Danger'};
var _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Warning = {ctor: 'Warning'};
var _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Info = {ctor: 'Info'};
var _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Success = {ctor: 'Success'};
var _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Item = function (a) {
	return {ctor: 'Item', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$CustomItem = function (a) {
	return {ctor: 'CustomItem', _0: a};
};

var _rundis$elm_bootstrap$Bootstrap_ListGroup$attrs = function (attrs) {
	return _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Attrs(attrs);
};
var _rundis$elm_bootstrap$Bootstrap_ListGroup$disabled = _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Disabled;
var _rundis$elm_bootstrap$Bootstrap_ListGroup$active = _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Active;
var _rundis$elm_bootstrap$Bootstrap_ListGroup$danger = _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Danger);
var _rundis$elm_bootstrap$Bootstrap_ListGroup$warning = _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Warning);
var _rundis$elm_bootstrap$Bootstrap_ListGroup$info = _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Info);
var _rundis$elm_bootstrap$Bootstrap_ListGroup$success = _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Success);
var _rundis$elm_bootstrap$Bootstrap_ListGroup$button = F2(
	function (options, children) {
		return _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$CustomItem(
			{
				itemFn: _elm_lang$html$Html$button,
				children: children,
				options: {
					ctor: '::',
					_0: _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Action,
					_1: A2(
						_elm_lang$core$Basics_ops['++'],
						options,
						{
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Attrs(
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$type_('button'),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						})
				}
			});
	});
var _rundis$elm_bootstrap$Bootstrap_ListGroup$anchor = F2(
	function (options, children) {
		var updOptions = A2(
			_elm_lang$core$List$any,
			F2(
				function (x, y) {
					return _elm_lang$core$Native_Utils.eq(x, y);
				})(_rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Disabled),
			options) ? A2(
			_elm_lang$core$Basics_ops['++'],
			options,
			{
				ctor: '::',
				_0: _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Attrs(
					{
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$preventClick,
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}) : options;
		return _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$CustomItem(
			{
				itemFn: _elm_lang$html$Html$a,
				children: children,
				options: {ctor: '::', _0: _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Action, _1: updOptions}
			});
	});
var _rundis$elm_bootstrap$Bootstrap_ListGroup$keyedCustom = function (items) {
	return A3(
		_elm_lang$html$Html_Keyed$node,
		'div',
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('list-group'),
			_1: {ctor: '[]'}
		},
		A2(
			_elm_lang$core$List$map,
			function (_p0) {
				var _p1 = _p0;
				return {
					ctor: '_Tuple2',
					_0: _p1._0,
					_1: _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$renderCustomItem(_p1._1)
				};
			},
			items));
};
var _rundis$elm_bootstrap$Bootstrap_ListGroup$custom = function (items) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('list-group'),
			_1: {ctor: '[]'}
		},
		A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$renderCustomItem, items));
};
var _rundis$elm_bootstrap$Bootstrap_ListGroup$li = F2(
	function (options, children) {
		return _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$Item(
			{itemFn: _elm_lang$html$Html$li, children: children, options: options});
	});
var _rundis$elm_bootstrap$Bootstrap_ListGroup$keyedUl = function (keyedItems) {
	return A2(
		_elm_lang$html$Html_Keyed$ul,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('list-group'),
			_1: {ctor: '[]'}
		},
		A2(
			_elm_lang$core$List$map,
			function (_p2) {
				var _p3 = _p2;
				return {
					ctor: '_Tuple2',
					_0: _p3._0,
					_1: _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$renderItem(_p3._1)
				};
			},
			keyedItems));
};
var _rundis$elm_bootstrap$Bootstrap_ListGroup$ul = function (items) {
	return A2(
		_elm_lang$html$Html$ul,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('list-group'),
			_1: {ctor: '[]'}
		},
		A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$renderItem, items));
};

var _rundis$elm_bootstrap$Bootstrap_Internal_Card$toRGBString = function (color) {
	var _p0 = _elm_lang$core$Color$toRgb(color);
	var red = _p0.red;
	var green = _p0.green;
	var blue = _p0.blue;
	return A2(
		_elm_lang$core$Basics_ops['++'],
		'RGB(',
		A2(
			_elm_lang$core$Basics_ops['++'],
			_elm_lang$core$Basics$toString(red),
			A2(
				_elm_lang$core$Basics_ops['++'],
				',',
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$Basics$toString(green),
					A2(
						_elm_lang$core$Basics_ops['++'],
						',',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(blue),
							')'))))));
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$roleOption = function (role) {
	var _p1 = role;
	switch (_p1.ctor) {
		case 'Primary':
			return 'primary';
		case 'Success':
			return 'success';
		case 'Info':
			return 'info';
		case 'Warning':
			return 'warning';
		default:
			return 'danger';
	}
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$applyModifier = F2(
	function (option, options) {
		var _p2 = option;
		switch (_p2.ctor) {
			case 'Aligned':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						aligned: _elm_lang$core$Maybe$Just(_p2._0)
					});
			case 'Coloring':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						coloring: _elm_lang$core$Maybe$Just(_p2._0)
					});
			default:
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						attributes: A2(_elm_lang$core$Basics_ops['++'], options.attributes, _p2._0)
					});
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$defaultOptions = {
	aligned: _elm_lang$core$Maybe$Nothing,
	coloring: _elm_lang$core$Maybe$Nothing,
	attributes: {ctor: '[]'}
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$cardAttributes = function (modifiers) {
	var options = A3(_elm_lang$core$List$foldl, _rundis$elm_bootstrap$Bootstrap_Internal_Card$applyModifier, _rundis$elm_bootstrap$Bootstrap_Internal_Card$defaultOptions, modifiers);
	return A2(
		_elm_lang$core$Basics_ops['++'],
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('card'),
			_1: {ctor: '[]'}
		},
		A2(
			_elm_lang$core$Basics_ops['++'],
			function () {
				var _p3 = options.coloring;
				if (_p3.ctor === 'Just') {
					switch (_p3._0.ctor) {
						case 'Roled':
							return {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class(
									A2(
										_elm_lang$core$Basics_ops['++'],
										'card-inverse card-',
										_rundis$elm_bootstrap$Bootstrap_Internal_Card$roleOption(_p3._0._0))),
								_1: {ctor: '[]'}
							};
						case 'Outlined':
							return {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class(
									A2(
										_elm_lang$core$Basics_ops['++'],
										'card-outline-',
										_rundis$elm_bootstrap$Bootstrap_Internal_Card$roleOption(_p3._0._0))),
								_1: {ctor: '[]'}
							};
						default:
							var _p4 = _p3._0._0;
							return {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('card-inverse'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$style(
										{
											ctor: '::',
											_0: {
												ctor: '_Tuple2',
												_0: 'background-color',
												_1: _rundis$elm_bootstrap$Bootstrap_Internal_Card$toRGBString(_p4)
											},
											_1: {
												ctor: '::',
												_0: {
													ctor: '_Tuple2',
													_0: 'border-color',
													_1: _rundis$elm_bootstrap$Bootstrap_Internal_Card$toRGBString(_p4)
												},
												_1: {ctor: '[]'}
											}
										}),
									_1: {ctor: '[]'}
								}
							};
					}
				} else {
					return {ctor: '[]'};
				}
			}(),
			A2(
				_elm_lang$core$Basics_ops['++'],
				function () {
					var _p5 = options.aligned;
					if (_p5.ctor === 'Just') {
						return {
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Internal_Text$textAlignClass(_p5._0),
							_1: {ctor: '[]'}
						};
					} else {
						return {ctor: '[]'};
					}
				}(),
				options.attributes)));
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$applyBlockModifier = F2(
	function (option, options) {
		var _p6 = option;
		if (_p6.ctor === 'AlignedBlock') {
			return _elm_lang$core$Native_Utils.update(
				options,
				{
					aligned: _elm_lang$core$Maybe$Just(_p6._0)
				});
		} else {
			return _elm_lang$core$Native_Utils.update(
				options,
				{
					attributes: A2(_elm_lang$core$Basics_ops['++'], options.attributes, _p6._0)
				});
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$defaultBlockOptions = {
	aligned: _elm_lang$core$Maybe$Nothing,
	attributes: {ctor: '[]'}
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$blockAttributes = function (modifiers) {
	var options = A3(_elm_lang$core$List$foldl, _rundis$elm_bootstrap$Bootstrap_Internal_Card$applyBlockModifier, _rundis$elm_bootstrap$Bootstrap_Internal_Card$defaultBlockOptions, modifiers);
	return A2(
		_elm_lang$core$Basics_ops['++'],
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('card-block'),
			_1: {ctor: '[]'}
		},
		A2(
			_elm_lang$core$Basics_ops['++'],
			function () {
				var _p7 = options.aligned;
				if (_p7.ctor === 'Just') {
					return {
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Internal_Text$textAlignClass(_p7._0),
						_1: {ctor: '[]'}
					};
				} else {
					return {ctor: '[]'};
				}
			}(),
			options.attributes));
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$renderBlock = function (block) {
	var _p8 = block;
	if (_p8.ctor === 'CardBlock') {
		return _p8._0;
	} else {
		return _p8._0;
	}
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$renderBlocks = function (blocks) {
	return A2(
		_elm_lang$core$List$map,
		function (block) {
			var _p9 = block;
			if (_p9.ctor === 'CardBlock') {
				return _p9._0;
			} else {
				return _p9._0;
			}
		},
		blocks);
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$CardOptions = F3(
	function (a, b, c) {
		return {aligned: a, coloring: b, attributes: c};
	});
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$BlockOptions = F2(
	function (a, b) {
		return {aligned: a, attributes: b};
	});
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$Attrs = function (a) {
	return {ctor: 'Attrs', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$Coloring = function (a) {
	return {ctor: 'Coloring', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$Aligned = function (a) {
	return {ctor: 'Aligned', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$Inverted = function (a) {
	return {ctor: 'Inverted', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$Outlined = function (a) {
	return {ctor: 'Outlined', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$Roled = function (a) {
	return {ctor: 'Roled', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$Danger = {ctor: 'Danger'};
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$Warning = {ctor: 'Warning'};
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$Info = {ctor: 'Info'};
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$Success = {ctor: 'Success'};
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$Primary = {ctor: 'Primary'};
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$BlockAttrs = function (a) {
	return {ctor: 'BlockAttrs', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$AlignedBlock = function (a) {
	return {ctor: 'AlignedBlock', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$ListGroup = function (a) {
	return {ctor: 'ListGroup', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$listGroup = function (items) {
	return _rundis$elm_bootstrap$Bootstrap_Internal_Card$ListGroup(
		A2(
			_elm_lang$html$Html$ul,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('list-group list-group-flush'),
				_1: {ctor: '[]'}
			},
			A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Internal_ListGroup$renderItem, items)));
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$CardBlock = function (a) {
	return {ctor: 'CardBlock', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$block = F2(
	function (options, items) {
		return _rundis$elm_bootstrap$Bootstrap_Internal_Card$CardBlock(
			A2(
				_elm_lang$html$Html$div,
				_rundis$elm_bootstrap$Bootstrap_Internal_Card$blockAttributes(options),
				A2(
					_elm_lang$core$List$map,
					function (_p10) {
						var _p11 = _p10;
						return _p11._0;
					},
					items)));
	});
var _rundis$elm_bootstrap$Bootstrap_Internal_Card$BlockItem = function (a) {
	return {ctor: 'BlockItem', _0: a};
};

var _rundis$elm_bootstrap$Bootstrap_Card$title = F3(
	function (elemFn, attributes, children) {
		return _rundis$elm_bootstrap$Bootstrap_Internal_Card$BlockItem(
			A2(
				elemFn,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('card-title'),
					_1: attributes
				},
				children));
	});
var _rundis$elm_bootstrap$Bootstrap_Card$titleH6 = _rundis$elm_bootstrap$Bootstrap_Card$title(_elm_lang$html$Html$h6);
var _rundis$elm_bootstrap$Bootstrap_Card$titleH5 = _rundis$elm_bootstrap$Bootstrap_Card$title(_elm_lang$html$Html$h5);
var _rundis$elm_bootstrap$Bootstrap_Card$titleH4 = _rundis$elm_bootstrap$Bootstrap_Card$title(_elm_lang$html$Html$h4);
var _rundis$elm_bootstrap$Bootstrap_Card$titleH3 = _rundis$elm_bootstrap$Bootstrap_Card$title(_elm_lang$html$Html$h3);
var _rundis$elm_bootstrap$Bootstrap_Card$titleH2 = _rundis$elm_bootstrap$Bootstrap_Card$title(_elm_lang$html$Html$h2);
var _rundis$elm_bootstrap$Bootstrap_Card$titleH1 = _rundis$elm_bootstrap$Bootstrap_Card$title(_elm_lang$html$Html$h1);
var _rundis$elm_bootstrap$Bootstrap_Card$blockQuote = F2(
	function (attributes, children) {
		return _rundis$elm_bootstrap$Bootstrap_Internal_Card$BlockItem(
			A2(
				_elm_lang$html$Html$blockquote,
				A2(
					_elm_lang$core$Basics_ops['++'],
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('card-blockquote'),
						_1: {ctor: '[]'}
					},
					attributes),
				children));
	});
var _rundis$elm_bootstrap$Bootstrap_Card$custom = function (element) {
	return _rundis$elm_bootstrap$Bootstrap_Internal_Card$BlockItem(element);
};
var _rundis$elm_bootstrap$Bootstrap_Card$text = F2(
	function (attributes, children) {
		return _rundis$elm_bootstrap$Bootstrap_Internal_Card$BlockItem(
			A2(
				_elm_lang$html$Html$p,
				A2(
					_elm_lang$core$Basics_ops['++'],
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('card-text'),
						_1: {ctor: '[]'}
					},
					attributes),
				children));
	});
var _rundis$elm_bootstrap$Bootstrap_Card$link = F2(
	function (attributes, children) {
		return _rundis$elm_bootstrap$Bootstrap_Internal_Card$BlockItem(
			A2(
				_elm_lang$html$Html$a,
				A2(
					_elm_lang$core$Basics_ops['++'],
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('card-link'),
						_1: {ctor: '[]'}
					},
					attributes),
				children));
	});
var _rundis$elm_bootstrap$Bootstrap_Card$blockAttrs = function (attrs) {
	return _rundis$elm_bootstrap$Bootstrap_Internal_Card$BlockAttrs(attrs);
};
var _rundis$elm_bootstrap$Bootstrap_Card$blockAlign = function (align) {
	return _rundis$elm_bootstrap$Bootstrap_Internal_Card$AlignedBlock(align);
};
var _rundis$elm_bootstrap$Bootstrap_Card$view = function (_p0) {
	var _p1 = _p0;
	return A2(
		_elm_lang$html$Html$div,
		_rundis$elm_bootstrap$Bootstrap_Internal_Card$cardAttributes(_p1._0.options),
		A2(
			_elm_lang$core$Basics_ops['++'],
			A2(
				_elm_lang$core$List$filterMap,
				_elm_lang$core$Basics$identity,
				{
					ctor: '::',
					_0: A2(
						_elm_lang$core$Maybe$map,
						function (_p2) {
							var _p3 = _p2;
							return _p3._0;
						},
						_p1._0.header),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$core$Maybe$map,
							function (_p4) {
								var _p5 = _p4;
								return _p5._0;
							},
							_p1._0.imgTop),
						_1: {ctor: '[]'}
					}
				}),
			A2(
				_elm_lang$core$Basics_ops['++'],
				_rundis$elm_bootstrap$Bootstrap_Internal_Card$renderBlocks(_p1._0.blocks),
				A2(
					_elm_lang$core$List$filterMap,
					_elm_lang$core$Basics$identity,
					{
						ctor: '::',
						_0: A2(
							_elm_lang$core$Maybe$map,
							function (_p6) {
								var _p7 = _p6;
								return _p7._0;
							},
							_p1._0.footer),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$core$Maybe$map,
								function (_p8) {
									var _p9 = _p8;
									return _p9._0;
								},
								_p1._0.imgBottom),
							_1: {ctor: '[]'}
						}
					}))));
};
var _rundis$elm_bootstrap$Bootstrap_Card$group = function (cards) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('card-group'),
			_1: {ctor: '[]'}
		},
		A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Card$view, cards));
};
var _rundis$elm_bootstrap$Bootstrap_Card$deck = function (cards) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('card-deck'),
			_1: {ctor: '[]'}
		},
		A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Card$view, cards));
};
var _rundis$elm_bootstrap$Bootstrap_Card$columns = function (cards) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('card-columns'),
			_1: {ctor: '[]'}
		},
		A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Card$view, cards));
};
var _rundis$elm_bootstrap$Bootstrap_Card$keyedMulti = F2(
	function (clazz, keyedCards) {
		return A3(
			_elm_lang$html$Html_Keyed$node,
			'div',
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class(clazz),
				_1: {ctor: '[]'}
			},
			A2(
				_elm_lang$core$List$map,
				function (_p10) {
					var _p11 = _p10;
					return {
						ctor: '_Tuple2',
						_0: _p11._0,
						_1: _rundis$elm_bootstrap$Bootstrap_Card$view(_p11._1)
					};
				},
				keyedCards));
	});
var _rundis$elm_bootstrap$Bootstrap_Card$keyedGroup = _rundis$elm_bootstrap$Bootstrap_Card$keyedMulti('card-group');
var _rundis$elm_bootstrap$Bootstrap_Card$keyedDeck = _rundis$elm_bootstrap$Bootstrap_Card$keyedMulti('card-deck');
var _rundis$elm_bootstrap$Bootstrap_Card$keyedColumns = _rundis$elm_bootstrap$Bootstrap_Card$keyedMulti('card-columns');
var _rundis$elm_bootstrap$Bootstrap_Card$attrs = function (attrs) {
	return _rundis$elm_bootstrap$Bootstrap_Internal_Card$Attrs(attrs);
};
var _rundis$elm_bootstrap$Bootstrap_Card$inverted = function (color) {
	return _rundis$elm_bootstrap$Bootstrap_Internal_Card$Coloring(
		_rundis$elm_bootstrap$Bootstrap_Internal_Card$Inverted(color));
};
var _rundis$elm_bootstrap$Bootstrap_Card$outlineDanger = _rundis$elm_bootstrap$Bootstrap_Internal_Card$Coloring(
	_rundis$elm_bootstrap$Bootstrap_Internal_Card$Outlined(_rundis$elm_bootstrap$Bootstrap_Internal_Card$Danger));
var _rundis$elm_bootstrap$Bootstrap_Card$outlineWarning = _rundis$elm_bootstrap$Bootstrap_Internal_Card$Coloring(
	_rundis$elm_bootstrap$Bootstrap_Internal_Card$Outlined(_rundis$elm_bootstrap$Bootstrap_Internal_Card$Warning));
var _rundis$elm_bootstrap$Bootstrap_Card$outlineInfo = _rundis$elm_bootstrap$Bootstrap_Internal_Card$Coloring(
	_rundis$elm_bootstrap$Bootstrap_Internal_Card$Outlined(_rundis$elm_bootstrap$Bootstrap_Internal_Card$Info));
var _rundis$elm_bootstrap$Bootstrap_Card$outlineSuccess = _rundis$elm_bootstrap$Bootstrap_Internal_Card$Coloring(
	_rundis$elm_bootstrap$Bootstrap_Internal_Card$Outlined(_rundis$elm_bootstrap$Bootstrap_Internal_Card$Success));
var _rundis$elm_bootstrap$Bootstrap_Card$outlinePrimary = _rundis$elm_bootstrap$Bootstrap_Internal_Card$Coloring(
	_rundis$elm_bootstrap$Bootstrap_Internal_Card$Outlined(_rundis$elm_bootstrap$Bootstrap_Internal_Card$Primary));
var _rundis$elm_bootstrap$Bootstrap_Card$danger = _rundis$elm_bootstrap$Bootstrap_Internal_Card$Coloring(
	_rundis$elm_bootstrap$Bootstrap_Internal_Card$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Card$Danger));
var _rundis$elm_bootstrap$Bootstrap_Card$warning = _rundis$elm_bootstrap$Bootstrap_Internal_Card$Coloring(
	_rundis$elm_bootstrap$Bootstrap_Internal_Card$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Card$Warning));
var _rundis$elm_bootstrap$Bootstrap_Card$info = _rundis$elm_bootstrap$Bootstrap_Internal_Card$Coloring(
	_rundis$elm_bootstrap$Bootstrap_Internal_Card$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Card$Info));
var _rundis$elm_bootstrap$Bootstrap_Card$success = _rundis$elm_bootstrap$Bootstrap_Internal_Card$Coloring(
	_rundis$elm_bootstrap$Bootstrap_Internal_Card$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Card$Success));
var _rundis$elm_bootstrap$Bootstrap_Card$primary = _rundis$elm_bootstrap$Bootstrap_Internal_Card$Coloring(
	_rundis$elm_bootstrap$Bootstrap_Internal_Card$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Card$Primary));
var _rundis$elm_bootstrap$Bootstrap_Card$align = function (align) {
	return _rundis$elm_bootstrap$Bootstrap_Internal_Card$Aligned(align);
};
var _rundis$elm_bootstrap$Bootstrap_Card$Config = function (a) {
	return {ctor: 'Config', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Card$config = function (options) {
	return _rundis$elm_bootstrap$Bootstrap_Card$Config(
		{
			options: options,
			header: _elm_lang$core$Maybe$Nothing,
			footer: _elm_lang$core$Maybe$Nothing,
			imgTop: _elm_lang$core$Maybe$Nothing,
			imgBottom: _elm_lang$core$Maybe$Nothing,
			blocks: {ctor: '[]'}
		});
};
var _rundis$elm_bootstrap$Bootstrap_Card$block = F3(
	function (options, items, _p12) {
		var _p13 = _p12;
		var _p14 = _p13._0;
		return _rundis$elm_bootstrap$Bootstrap_Card$Config(
			_elm_lang$core$Native_Utils.update(
				_p14,
				{
					blocks: A2(
						_elm_lang$core$Basics_ops['++'],
						_p14.blocks,
						{
							ctor: '::',
							_0: A2(_rundis$elm_bootstrap$Bootstrap_Internal_Card$block, options, items),
							_1: {ctor: '[]'}
						})
				}));
	});
var _rundis$elm_bootstrap$Bootstrap_Card$listGroup = F2(
	function (items, _p15) {
		var _p16 = _p15;
		var _p17 = _p16._0;
		return _rundis$elm_bootstrap$Bootstrap_Card$Config(
			_elm_lang$core$Native_Utils.update(
				_p17,
				{
					blocks: A2(
						_elm_lang$core$Basics_ops['++'],
						_p17.blocks,
						{
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Internal_Card$listGroup(items),
							_1: {ctor: '[]'}
						})
				}));
	});
var _rundis$elm_bootstrap$Bootstrap_Card$CardHeader = function (a) {
	return {ctor: 'CardHeader', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Card$headerPrivate = F4(
	function (elemFn, attributes, children, _p18) {
		var _p19 = _p18;
		return _rundis$elm_bootstrap$Bootstrap_Card$Config(
			_elm_lang$core$Native_Utils.update(
				_p19._0,
				{
					header: _elm_lang$core$Maybe$Just(
						_rundis$elm_bootstrap$Bootstrap_Card$CardHeader(
							A2(
								elemFn,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('card-header'),
									_1: attributes
								},
								children)))
				}));
	});
var _rundis$elm_bootstrap$Bootstrap_Card$header = _rundis$elm_bootstrap$Bootstrap_Card$headerPrivate(_elm_lang$html$Html$div);
var _rundis$elm_bootstrap$Bootstrap_Card$headerH1 = _rundis$elm_bootstrap$Bootstrap_Card$headerPrivate(_elm_lang$html$Html$h1);
var _rundis$elm_bootstrap$Bootstrap_Card$headerH2 = _rundis$elm_bootstrap$Bootstrap_Card$headerPrivate(_elm_lang$html$Html$h2);
var _rundis$elm_bootstrap$Bootstrap_Card$headerH3 = _rundis$elm_bootstrap$Bootstrap_Card$headerPrivate(_elm_lang$html$Html$h3);
var _rundis$elm_bootstrap$Bootstrap_Card$headerH4 = _rundis$elm_bootstrap$Bootstrap_Card$headerPrivate(_elm_lang$html$Html$h4);
var _rundis$elm_bootstrap$Bootstrap_Card$headerH5 = _rundis$elm_bootstrap$Bootstrap_Card$headerPrivate(_elm_lang$html$Html$h5);
var _rundis$elm_bootstrap$Bootstrap_Card$headerH6 = _rundis$elm_bootstrap$Bootstrap_Card$headerPrivate(_elm_lang$html$Html$h6);
var _rundis$elm_bootstrap$Bootstrap_Card$CardFooter = function (a) {
	return {ctor: 'CardFooter', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Card$footer = F3(
	function (attributes, children, _p20) {
		var _p21 = _p20;
		return _rundis$elm_bootstrap$Bootstrap_Card$Config(
			_elm_lang$core$Native_Utils.update(
				_p21._0,
				{
					footer: _elm_lang$core$Maybe$Just(
						_rundis$elm_bootstrap$Bootstrap_Card$CardFooter(
							A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('card-footer'),
									_1: attributes
								},
								children)))
				}));
	});
var _rundis$elm_bootstrap$Bootstrap_Card$CardImageTop = function (a) {
	return {ctor: 'CardImageTop', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Card$imgTop = F3(
	function (attributes, children, _p22) {
		var _p23 = _p22;
		return _rundis$elm_bootstrap$Bootstrap_Card$Config(
			_elm_lang$core$Native_Utils.update(
				_p23._0,
				{
					imgTop: _elm_lang$core$Maybe$Just(
						_rundis$elm_bootstrap$Bootstrap_Card$CardImageTop(
							A2(
								_elm_lang$html$Html$img,
								A2(
									_elm_lang$core$Basics_ops['++'],
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('card-img-top'),
										_1: {ctor: '[]'}
									},
									attributes),
								children)))
				}));
	});
var _rundis$elm_bootstrap$Bootstrap_Card$CardImageBottom = function (a) {
	return {ctor: 'CardImageBottom', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Card$imgBottom = F3(
	function (attributes, children, _p24) {
		var _p25 = _p24;
		return _rundis$elm_bootstrap$Bootstrap_Card$Config(
			_elm_lang$core$Native_Utils.update(
				_p25._0,
				{
					imgBottom: _elm_lang$core$Maybe$Just(
						_rundis$elm_bootstrap$Bootstrap_Card$CardImageBottom(
							A2(
								_elm_lang$html$Html$img,
								A2(
									_elm_lang$core$Basics_ops['++'],
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('card-img-bottom'),
										_1: {ctor: '[]'}
									},
									attributes),
								children)))
				}));
	});

var _rundis$elm_bootstrap$Bootstrap_Accordion$transitionStyle = function (height) {
	return _elm_lang$html$Html_Attributes$style(
		{
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'position', _1: 'relative'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'height', _1: height},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'overflow', _1: 'hidden'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: '-webkit-transition-timing-function', _1: 'ease'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: '-o-transition-timing-function', _1: 'ease'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'transition-timing-function', _1: 'ease'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: '-webkit-transition-duration', _1: '0.35s'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: '-o-transition-duration', _1: '0.35s'},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'transition-duration', _1: '0.35s'},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: '-webkit-transition-property', _1: 'height'},
												_1: {
													ctor: '::',
													_0: {ctor: '_Tuple2', _0: '-o-transition-property', _1: 'height'},
													_1: {
														ctor: '::',
														_0: {ctor: '_Tuple2', _0: 'transition-property', _1: 'height'},
														_1: {ctor: '[]'}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		});
};
var _rundis$elm_bootstrap$Bootstrap_Accordion$heightDecoder = _debois$elm_dom$DOM$target(
	_debois$elm_dom$DOM$parentElement(
		_debois$elm_dom$DOM$nextSibling(
			A2(_debois$elm_dom$DOM$childNode, 0, _debois$elm_dom$DOM$offsetHeight))));
var _rundis$elm_bootstrap$Bootstrap_Accordion$listGroup = _rundis$elm_bootstrap$Bootstrap_Internal_Card$listGroup;
var _rundis$elm_bootstrap$Bootstrap_Accordion$block = _rundis$elm_bootstrap$Bootstrap_Internal_Card$block;
var _rundis$elm_bootstrap$Bootstrap_Accordion$CardState = F2(
	function (a, b) {
		return {visibility: a, height: b};
	});
var _rundis$elm_bootstrap$Bootstrap_Accordion$Config = function (a) {
	return {ctor: 'Config', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Accordion$config = function (toMsg) {
	return _rundis$elm_bootstrap$Bootstrap_Accordion$Config(
		{
			toMsg: toMsg,
			withAnimation: false,
			cards: {ctor: '[]'}
		});
};
var _rundis$elm_bootstrap$Bootstrap_Accordion$withAnimation = function (_p0) {
	var _p1 = _p0;
	return _rundis$elm_bootstrap$Bootstrap_Accordion$Config(
		_elm_lang$core$Native_Utils.update(
			_p1._0,
			{withAnimation: true}));
};
var _rundis$elm_bootstrap$Bootstrap_Accordion$cards = F2(
	function (cards, _p2) {
		var _p3 = _p2;
		return _rundis$elm_bootstrap$Bootstrap_Accordion$Config(
			_elm_lang$core$Native_Utils.update(
				_p3._0,
				{cards: cards}));
	});
var _rundis$elm_bootstrap$Bootstrap_Accordion$State = function (a) {
	return {ctor: 'State', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Accordion$initialState = _rundis$elm_bootstrap$Bootstrap_Accordion$State(_elm_lang$core$Dict$empty);
var _rundis$elm_bootstrap$Bootstrap_Accordion$Shown = {ctor: 'Shown'};
var _rundis$elm_bootstrap$Bootstrap_Accordion$AnimatingUp = {ctor: 'AnimatingUp'};
var _rundis$elm_bootstrap$Bootstrap_Accordion$StartUp = {ctor: 'StartUp'};
var _rundis$elm_bootstrap$Bootstrap_Accordion$AnimatingDown = {ctor: 'AnimatingDown'};
var _rundis$elm_bootstrap$Bootstrap_Accordion$StartDown = {ctor: 'StartDown'};
var _rundis$elm_bootstrap$Bootstrap_Accordion$subscriptions = F2(
	function (_p4, toMsg) {
		var _p5 = _p4;
		var _p10 = _p5._0;
		var needsSub = A2(
			_elm_lang$core$List$any,
			function (_p6) {
				var _p7 = _p6;
				return A2(
					_elm_lang$core$List$member,
					_p7._1.visibility,
					{
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Accordion$StartDown,
						_1: {
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Accordion$StartUp,
							_1: {ctor: '[]'}
						}
					});
			},
			_elm_lang$core$Dict$toList(_p10));
		var updState = _rundis$elm_bootstrap$Bootstrap_Accordion$State(
			A2(
				_elm_lang$core$Dict$map,
				F2(
					function (id, state) {
						var _p8 = state.visibility;
						switch (_p8.ctor) {
							case 'StartDown':
								return _elm_lang$core$Native_Utils.update(
									state,
									{visibility: _rundis$elm_bootstrap$Bootstrap_Accordion$AnimatingDown});
							case 'StartUp':
								return _elm_lang$core$Native_Utils.update(
									state,
									{visibility: _rundis$elm_bootstrap$Bootstrap_Accordion$AnimatingUp});
							default:
								return state;
						}
					}),
				_p10));
		return needsSub ? _elm_lang$animation_frame$AnimationFrame$times(
			function (_p9) {
				return toMsg(updState);
			}) : _elm_lang$core$Platform_Sub$none;
	});
var _rundis$elm_bootstrap$Bootstrap_Accordion$Hidden = {ctor: 'Hidden'};
var _rundis$elm_bootstrap$Bootstrap_Accordion$visibilityTransition = F2(
	function (withAnimation, visibility) {
		var _p11 = {ctor: '_Tuple2', _0: withAnimation, _1: visibility};
		_v5_8:
		do {
			if (_p11.ctor === '_Tuple2') {
				if (_p11._0 === true) {
					switch (_p11._1.ctor) {
						case 'Hidden':
							return _rundis$elm_bootstrap$Bootstrap_Accordion$StartDown;
						case 'StartDown':
							return _rundis$elm_bootstrap$Bootstrap_Accordion$AnimatingDown;
						case 'AnimatingDown':
							return _rundis$elm_bootstrap$Bootstrap_Accordion$Shown;
						case 'Shown':
							return _rundis$elm_bootstrap$Bootstrap_Accordion$StartUp;
						case 'StartUp':
							return _rundis$elm_bootstrap$Bootstrap_Accordion$AnimatingUp;
						default:
							return _rundis$elm_bootstrap$Bootstrap_Accordion$Hidden;
					}
				} else {
					switch (_p11._1.ctor) {
						case 'Hidden':
							return _rundis$elm_bootstrap$Bootstrap_Accordion$Shown;
						case 'Shown':
							return _rundis$elm_bootstrap$Bootstrap_Accordion$Hidden;
						default:
							break _v5_8;
					}
				}
			} else {
				break _v5_8;
			}
		} while(false);
		return _rundis$elm_bootstrap$Bootstrap_Accordion$Shown;
	});
var _rundis$elm_bootstrap$Bootstrap_Accordion$getOrInitCardState = F2(
	function (id, _p12) {
		var _p13 = _p12;
		return A2(
			_elm_lang$core$Maybe$withDefault,
			{visibility: _rundis$elm_bootstrap$Bootstrap_Accordion$Hidden, height: _elm_lang$core$Maybe$Nothing},
			A2(_elm_lang$core$Dict$get, id, _p13._0));
	});
var _rundis$elm_bootstrap$Bootstrap_Accordion$mapCardState = F3(
	function (id, mapperFn, _p14) {
		var _p15 = _p14;
		var updCardState = mapperFn(
			A2(_rundis$elm_bootstrap$Bootstrap_Accordion$getOrInitCardState, id, _p15));
		return _rundis$elm_bootstrap$Bootstrap_Accordion$State(
			A3(_elm_lang$core$Dict$insert, id, updCardState, _p15._0));
	});
var _rundis$elm_bootstrap$Bootstrap_Accordion$clickHandler = F4(
	function (state, _p17, decoder, _p16) {
		var _p18 = _p17;
		var _p19 = _p16;
		var updState = function (h) {
			return A3(
				_rundis$elm_bootstrap$Bootstrap_Accordion$mapCardState,
				_p19._0.id,
				function (cardState) {
					return {
						height: _elm_lang$core$Maybe$Just(h),
						visibility: A2(_rundis$elm_bootstrap$Bootstrap_Accordion$visibilityTransition, _p18._0.withAnimation, cardState.visibility)
					};
				},
				state);
		};
		return A2(
			_elm_lang$core$Json_Decode$andThen,
			function (v) {
				return _elm_lang$core$Json_Decode$succeed(
					_p18._0.toMsg(
						updState(v)));
			},
			decoder);
	});
var _rundis$elm_bootstrap$Bootstrap_Accordion$renderToggle = F3(
	function (state, config, _p20) {
		var _p21 = _p20;
		var _p22 = _p21._0.header;
		var toggle = _p22._0.toggle;
		var _p23 = toggle;
		var attributes = _p23._0.attributes;
		var children = _p23._0.children;
		return A2(
			_elm_lang$html$Html$a,
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$href(
						A2(_elm_lang$core$Basics_ops['++'], '#', _p21._0.id)),
					_1: {
						ctor: '::',
						_0: A3(
							_elm_lang$html$Html_Events$onWithOptions,
							'click',
							{stopPropagation: false, preventDefault: true},
							A4(_rundis$elm_bootstrap$Bootstrap_Accordion$clickHandler, state, config, _rundis$elm_bootstrap$Bootstrap_Accordion$heightDecoder, _p21)),
						_1: {ctor: '[]'}
					}
				},
				attributes),
			children);
	});
var _rundis$elm_bootstrap$Bootstrap_Accordion$renderCardHeader = F3(
	function (state, config, _p24) {
		var _p25 = _p24;
		var _p26 = _p25._0.header;
		var elemFn = _p26._0.elemFn;
		var attributes = _p26._0.attributes;
		var toggle = _p26._0.toggle;
		var childrenPreToggle = _p26._0.childrenPreToggle;
		var childrenPostToggle = _p26._0.childrenPostToggle;
		return A2(
			elemFn,
			A2(
				_elm_lang$core$Basics_ops['++'],
				attributes,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('card-header'),
					_1: {ctor: '[]'}
				}),
			A2(
				_elm_lang$core$Basics_ops['++'],
				childrenPreToggle,
				A2(
					_elm_lang$core$Basics_ops['++'],
					{
						ctor: '::',
						_0: A3(_rundis$elm_bootstrap$Bootstrap_Accordion$renderToggle, state, config, _p25),
						_1: {ctor: '[]'}
					},
					childrenPostToggle)));
	});
var _rundis$elm_bootstrap$Bootstrap_Accordion$transitionHandler = F3(
	function (state, _p28, _p27) {
		var _p29 = _p28;
		var _p30 = _p27;
		return _elm_lang$core$Json_Decode$succeed(
			_p29._0.toMsg(
				A3(
					_rundis$elm_bootstrap$Bootstrap_Accordion$mapCardState,
					_p30._0.id,
					function (cardState) {
						return _elm_lang$core$Native_Utils.update(
							cardState,
							{
								visibility: A2(_rundis$elm_bootstrap$Bootstrap_Accordion$visibilityTransition, _p29._0.withAnimation, cardState.visibility)
							});
					},
					state)));
	});
var _rundis$elm_bootstrap$Bootstrap_Accordion$animationAttributes = F3(
	function (state, config, _p31) {
		var _p32 = _p31;
		var _p34 = _p32;
		var cardState = A2(_rundis$elm_bootstrap$Bootstrap_Accordion$getOrInitCardState, _p32._0.id, state);
		var pixelHeight = A2(
			_elm_lang$core$Maybe$withDefault,
			'0',
			A2(
				_elm_lang$core$Maybe$map,
				function (v) {
					return A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(v),
						'px');
				},
				cardState.height));
		var _p33 = cardState.visibility;
		switch (_p33.ctor) {
			case 'Hidden':
				return {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'overflow', _1: 'hidden'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'height', _1: '0'},
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				};
			case 'StartDown':
				return {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'overflow', _1: 'hidden'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'height', _1: '0'},
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				};
			case 'AnimatingDown':
				return {
					ctor: '::',
					_0: _rundis$elm_bootstrap$Bootstrap_Accordion$transitionStyle(pixelHeight),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html_Events$on,
							'transitionend',
							A3(_rundis$elm_bootstrap$Bootstrap_Accordion$transitionHandler, state, config, _p34)),
						_1: {ctor: '[]'}
					}
				};
			case 'AnimatingUp':
				return {
					ctor: '::',
					_0: _rundis$elm_bootstrap$Bootstrap_Accordion$transitionStyle('0px'),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html_Events$on,
							'transitionend',
							A3(_rundis$elm_bootstrap$Bootstrap_Accordion$transitionHandler, state, config, _p34)),
						_1: {ctor: '[]'}
					}
				};
			case 'StartUp':
				return {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'height', _1: pixelHeight},
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				};
			default:
				return {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'height', _1: pixelHeight},
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				};
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Accordion$renderCardBlock = F3(
	function (state, config, _p35) {
		var _p36 = _p35;
		return A2(
			_elm_lang$html$Html$div,
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$id(_p36._0.id),
					_1: {ctor: '[]'}
				},
				A3(_rundis$elm_bootstrap$Bootstrap_Accordion$animationAttributes, state, config, _p36)),
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					_rundis$elm_bootstrap$Bootstrap_Internal_Card$renderBlocks(_p36._0.blocks)),
				_1: {ctor: '[]'}
			});
	});
var _rundis$elm_bootstrap$Bootstrap_Accordion$renderCard = F3(
	function (state, config, _p37) {
		var _p38 = _p37;
		var _p39 = _p38;
		return A2(
			_elm_lang$html$Html$div,
			A2(
				_elm_lang$core$Basics_ops['++'],
				_rundis$elm_bootstrap$Bootstrap_Internal_Card$cardAttributes(_p38._0.options),
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('card'),
					_1: {ctor: '[]'}
				}),
			{
				ctor: '::',
				_0: A3(_rundis$elm_bootstrap$Bootstrap_Accordion$renderCardHeader, state, config, _p39),
				_1: {
					ctor: '::',
					_0: A3(_rundis$elm_bootstrap$Bootstrap_Accordion$renderCardBlock, state, config, _p39),
					_1: {ctor: '[]'}
				}
			});
	});
var _rundis$elm_bootstrap$Bootstrap_Accordion$view = F2(
	function (state, _p40) {
		var _p41 = _p40;
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			A2(
				_elm_lang$core$List$map,
				A2(_rundis$elm_bootstrap$Bootstrap_Accordion$renderCard, state, _p41),
				_p41._0.cards));
	});
var _rundis$elm_bootstrap$Bootstrap_Accordion$Card = function (a) {
	return {ctor: 'Card', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Accordion$card = function (_p42) {
	var _p43 = _p42;
	return _rundis$elm_bootstrap$Bootstrap_Accordion$Card(
		{id: _p43.id, options: _p43.options, header: _p43.header, blocks: _p43.blocks});
};
var _rundis$elm_bootstrap$Bootstrap_Accordion$Toggle = function (a) {
	return {ctor: 'Toggle', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Accordion$toggle = F2(
	function (attributes, children) {
		return _rundis$elm_bootstrap$Bootstrap_Accordion$Toggle(
			{attributes: attributes, children: children});
	});
var _rundis$elm_bootstrap$Bootstrap_Accordion$Header = function (a) {
	return {ctor: 'Header', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Accordion$prependHeader = F2(
	function (elements, _p44) {
		var _p45 = _p44;
		var _p46 = _p45._0;
		return _rundis$elm_bootstrap$Bootstrap_Accordion$Header(
			_elm_lang$core$Native_Utils.update(
				_p46,
				{
					childrenPreToggle: A2(_elm_lang$core$Basics_ops['++'], elements, _p46.childrenPreToggle)
				}));
	});
var _rundis$elm_bootstrap$Bootstrap_Accordion$appendHeader = F2(
	function (elements, _p47) {
		var _p48 = _p47;
		var _p49 = _p48._0;
		return _rundis$elm_bootstrap$Bootstrap_Accordion$Header(
			_elm_lang$core$Native_Utils.update(
				_p49,
				{
					childrenPostToggle: A2(_elm_lang$core$Basics_ops['++'], _p49.childrenPreToggle, elements)
				}));
	});
var _rundis$elm_bootstrap$Bootstrap_Accordion$headerPrivate = F3(
	function (elemFn, attributes, toggle) {
		return _rundis$elm_bootstrap$Bootstrap_Accordion$Header(
			{
				elemFn: elemFn,
				attributes: attributes,
				toggle: toggle,
				childrenPreToggle: {ctor: '[]'},
				childrenPostToggle: {ctor: '[]'}
			});
	});
var _rundis$elm_bootstrap$Bootstrap_Accordion$header = _rundis$elm_bootstrap$Bootstrap_Accordion$headerPrivate(_elm_lang$html$Html$div);
var _rundis$elm_bootstrap$Bootstrap_Accordion$headerH1 = _rundis$elm_bootstrap$Bootstrap_Accordion$headerPrivate(_elm_lang$html$Html$h1);
var _rundis$elm_bootstrap$Bootstrap_Accordion$headerH2 = _rundis$elm_bootstrap$Bootstrap_Accordion$headerPrivate(_elm_lang$html$Html$h2);
var _rundis$elm_bootstrap$Bootstrap_Accordion$headerH3 = _rundis$elm_bootstrap$Bootstrap_Accordion$headerPrivate(_elm_lang$html$Html$h3);
var _rundis$elm_bootstrap$Bootstrap_Accordion$headerH4 = _rundis$elm_bootstrap$Bootstrap_Accordion$headerPrivate(_elm_lang$html$Html$h4);
var _rundis$elm_bootstrap$Bootstrap_Accordion$headerH5 = _rundis$elm_bootstrap$Bootstrap_Accordion$headerPrivate(_elm_lang$html$Html$h5);
var _rundis$elm_bootstrap$Bootstrap_Accordion$headerH6 = _rundis$elm_bootstrap$Bootstrap_Accordion$headerPrivate(_elm_lang$html$Html$h6);

var _rundis$elm_bootstrap$Bootstrap_Alert$roleClass = function (role) {
	var _p0 = role;
	switch (_p0.ctor) {
		case 'Success':
			return 'alert-success';
		case 'Info':
			return 'alert-info';
		case 'Warning':
			return 'alert-warning';
		default:
			return 'alert-danger';
	}
};
var _rundis$elm_bootstrap$Bootstrap_Alert$heading = F3(
	function (elemFn, attributes, children) {
		return A2(
			elemFn,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('alert-header'),
				_1: attributes
			},
			children);
	});
var _rundis$elm_bootstrap$Bootstrap_Alert$h6 = F2(
	function (attributes, children) {
		return A3(_rundis$elm_bootstrap$Bootstrap_Alert$heading, _elm_lang$html$Html$h6, attributes, children);
	});
var _rundis$elm_bootstrap$Bootstrap_Alert$h5 = F2(
	function (attributes, children) {
		return A3(_rundis$elm_bootstrap$Bootstrap_Alert$heading, _elm_lang$html$Html$h5, attributes, children);
	});
var _rundis$elm_bootstrap$Bootstrap_Alert$h4 = F2(
	function (attributes, children) {
		return A3(_rundis$elm_bootstrap$Bootstrap_Alert$heading, _elm_lang$html$Html$h4, attributes, children);
	});
var _rundis$elm_bootstrap$Bootstrap_Alert$h3 = F2(
	function (attributes, children) {
		return A3(_rundis$elm_bootstrap$Bootstrap_Alert$heading, _elm_lang$html$Html$h3, attributes, children);
	});
var _rundis$elm_bootstrap$Bootstrap_Alert$h2 = F2(
	function (attributes, children) {
		return A3(_rundis$elm_bootstrap$Bootstrap_Alert$heading, _elm_lang$html$Html$h2, attributes, children);
	});
var _rundis$elm_bootstrap$Bootstrap_Alert$h1 = F2(
	function (attributes, children) {
		return A3(_rundis$elm_bootstrap$Bootstrap_Alert$heading, _elm_lang$html$Html$h1, attributes, children);
	});
var _rundis$elm_bootstrap$Bootstrap_Alert$link = F2(
	function (attributes, children) {
		return A2(
			_elm_lang$html$Html$a,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('alert-link'),
				_1: attributes
			},
			children);
	});
var _rundis$elm_bootstrap$Bootstrap_Alert$alertCustom = F2(
	function (role, children) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class(
					A2(
						_elm_lang$core$Basics_ops['++'],
						'alert ',
						_rundis$elm_bootstrap$Bootstrap_Alert$roleClass(role))),
				_1: {ctor: '[]'}
			},
			children);
	});
var _rundis$elm_bootstrap$Bootstrap_Alert$Danger = {ctor: 'Danger'};
var _rundis$elm_bootstrap$Bootstrap_Alert$danger = function (children) {
	return A2(_rundis$elm_bootstrap$Bootstrap_Alert$alertCustom, _rundis$elm_bootstrap$Bootstrap_Alert$Danger, children);
};
var _rundis$elm_bootstrap$Bootstrap_Alert$Warning = {ctor: 'Warning'};
var _rundis$elm_bootstrap$Bootstrap_Alert$warning = function (children) {
	return A2(_rundis$elm_bootstrap$Bootstrap_Alert$alertCustom, _rundis$elm_bootstrap$Bootstrap_Alert$Warning, children);
};
var _rundis$elm_bootstrap$Bootstrap_Alert$Info = {ctor: 'Info'};
var _rundis$elm_bootstrap$Bootstrap_Alert$info = function (children) {
	return A2(_rundis$elm_bootstrap$Bootstrap_Alert$alertCustom, _rundis$elm_bootstrap$Bootstrap_Alert$Info, children);
};
var _rundis$elm_bootstrap$Bootstrap_Alert$Success = {ctor: 'Success'};
var _rundis$elm_bootstrap$Bootstrap_Alert$success = function (children) {
	return A2(_rundis$elm_bootstrap$Bootstrap_Alert$alertCustom, _rundis$elm_bootstrap$Bootstrap_Alert$Success, children);
};

var _rundis$elm_bootstrap$Bootstrap_Internal_Button$roleClass = function (role) {
	var _p0 = role;
	switch (_p0.ctor) {
		case 'Primary':
			return 'primary';
		case 'Secondary':
			return 'secondary';
		case 'Success':
			return 'success';
		case 'Info':
			return 'info';
		case 'Warning':
			return 'warning';
		case 'Danger':
			return 'danger';
		default:
			return 'link';
	}
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Button$applyModifier = F2(
	function (modifier, options) {
		var _p1 = modifier;
		switch (_p1.ctor) {
			case 'Size':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						size: _elm_lang$core$Maybe$Just(_p1._0)
					});
			case 'Coloring':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						coloring: _elm_lang$core$Maybe$Just(_p1._0)
					});
			case 'Block':
				return _elm_lang$core$Native_Utils.update(
					options,
					{block: true});
			case 'Disabled':
				return _elm_lang$core$Native_Utils.update(
					options,
					{disabled: _p1._0});
			default:
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						attributes: A2(_elm_lang$core$Basics_ops['++'], options.attributes, _p1._0)
					});
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Internal_Button$defaultOptions = {
	coloring: _elm_lang$core$Maybe$Nothing,
	block: false,
	disabled: false,
	size: _elm_lang$core$Maybe$Nothing,
	attributes: {ctor: '[]'}
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Button$buttonAttributes = function (modifiers) {
	var options = A3(_elm_lang$core$List$foldl, _rundis$elm_bootstrap$Bootstrap_Internal_Button$applyModifier, _rundis$elm_bootstrap$Bootstrap_Internal_Button$defaultOptions, modifiers);
	return A2(
		_elm_lang$core$Basics_ops['++'],
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$classList(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'btn', _1: true},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'btn-block', _1: options.block},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'disabled', _1: options.disabled},
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$disabled(options.disabled),
				_1: {ctor: '[]'}
			}
		},
		A2(
			_elm_lang$core$Basics_ops['++'],
			function () {
				var _p2 = A2(_elm_lang$core$Maybe$andThen, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$screenSizeOption, options.size);
				if (_p2.ctor === 'Just') {
					return {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class(
							A2(_elm_lang$core$Basics_ops['++'], 'btn-', _p2._0)),
						_1: {ctor: '[]'}
					};
				} else {
					return {ctor: '[]'};
				}
			}(),
			A2(
				_elm_lang$core$Basics_ops['++'],
				function () {
					var _p3 = options.coloring;
					if (_p3.ctor === 'Just') {
						if (_p3._0.ctor === 'Roled') {
							return {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class(
									A2(
										_elm_lang$core$Basics_ops['++'],
										'btn-',
										_rundis$elm_bootstrap$Bootstrap_Internal_Button$roleClass(_p3._0._0))),
								_1: {ctor: '[]'}
							};
						} else {
							return {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class(
									A2(
										_elm_lang$core$Basics_ops['++'],
										'btn-outline-',
										_rundis$elm_bootstrap$Bootstrap_Internal_Button$roleClass(_p3._0._0))),
								_1: {ctor: '[]'}
							};
						}
					} else {
						return {ctor: '[]'};
					}
				}(),
				options.attributes)));
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Button$Options = F5(
	function (a, b, c, d, e) {
		return {coloring: a, block: b, disabled: c, size: d, attributes: e};
	});
var _rundis$elm_bootstrap$Bootstrap_Internal_Button$Attrs = function (a) {
	return {ctor: 'Attrs', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Button$Disabled = function (a) {
	return {ctor: 'Disabled', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Button$Block = {ctor: 'Block'};
var _rundis$elm_bootstrap$Bootstrap_Internal_Button$Coloring = function (a) {
	return {ctor: 'Coloring', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Button$Size = function (a) {
	return {ctor: 'Size', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Button$Outlined = function (a) {
	return {ctor: 'Outlined', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Button$Roled = function (a) {
	return {ctor: 'Roled', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Internal_Button$Link = {ctor: 'Link'};
var _rundis$elm_bootstrap$Bootstrap_Internal_Button$Danger = {ctor: 'Danger'};
var _rundis$elm_bootstrap$Bootstrap_Internal_Button$Warning = {ctor: 'Warning'};
var _rundis$elm_bootstrap$Bootstrap_Internal_Button$Info = {ctor: 'Info'};
var _rundis$elm_bootstrap$Bootstrap_Internal_Button$Success = {ctor: 'Success'};
var _rundis$elm_bootstrap$Bootstrap_Internal_Button$Secondary = {ctor: 'Secondary'};
var _rundis$elm_bootstrap$Bootstrap_Internal_Button$Primary = {ctor: 'Primary'};

var _rundis$elm_bootstrap$Bootstrap_Button$disabled = function (disabled) {
	return _rundis$elm_bootstrap$Bootstrap_Internal_Button$Disabled(disabled);
};
var _rundis$elm_bootstrap$Bootstrap_Button$block = _rundis$elm_bootstrap$Bootstrap_Internal_Button$Block;
var _rundis$elm_bootstrap$Bootstrap_Button$outlineDanger = _rundis$elm_bootstrap$Bootstrap_Internal_Button$Coloring(
	_rundis$elm_bootstrap$Bootstrap_Internal_Button$Outlined(_rundis$elm_bootstrap$Bootstrap_Internal_Button$Danger));
var _rundis$elm_bootstrap$Bootstrap_Button$outlineWarning = _rundis$elm_bootstrap$Bootstrap_Internal_Button$Coloring(
	_rundis$elm_bootstrap$Bootstrap_Internal_Button$Outlined(_rundis$elm_bootstrap$Bootstrap_Internal_Button$Warning));
var _rundis$elm_bootstrap$Bootstrap_Button$outlineInfo = _rundis$elm_bootstrap$Bootstrap_Internal_Button$Coloring(
	_rundis$elm_bootstrap$Bootstrap_Internal_Button$Outlined(_rundis$elm_bootstrap$Bootstrap_Internal_Button$Info));
var _rundis$elm_bootstrap$Bootstrap_Button$outlineSuccess = _rundis$elm_bootstrap$Bootstrap_Internal_Button$Coloring(
	_rundis$elm_bootstrap$Bootstrap_Internal_Button$Outlined(_rundis$elm_bootstrap$Bootstrap_Internal_Button$Success));
var _rundis$elm_bootstrap$Bootstrap_Button$outlineSecondary = _rundis$elm_bootstrap$Bootstrap_Internal_Button$Coloring(
	_rundis$elm_bootstrap$Bootstrap_Internal_Button$Outlined(_rundis$elm_bootstrap$Bootstrap_Internal_Button$Secondary));
var _rundis$elm_bootstrap$Bootstrap_Button$outlinePrimary = _rundis$elm_bootstrap$Bootstrap_Internal_Button$Coloring(
	_rundis$elm_bootstrap$Bootstrap_Internal_Button$Outlined(_rundis$elm_bootstrap$Bootstrap_Internal_Button$Primary));
var _rundis$elm_bootstrap$Bootstrap_Button$roleLink = _rundis$elm_bootstrap$Bootstrap_Internal_Button$Coloring(
	_rundis$elm_bootstrap$Bootstrap_Internal_Button$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Button$Link));
var _rundis$elm_bootstrap$Bootstrap_Button$danger = _rundis$elm_bootstrap$Bootstrap_Internal_Button$Coloring(
	_rundis$elm_bootstrap$Bootstrap_Internal_Button$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Button$Danger));
var _rundis$elm_bootstrap$Bootstrap_Button$warning = _rundis$elm_bootstrap$Bootstrap_Internal_Button$Coloring(
	_rundis$elm_bootstrap$Bootstrap_Internal_Button$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Button$Warning));
var _rundis$elm_bootstrap$Bootstrap_Button$info = _rundis$elm_bootstrap$Bootstrap_Internal_Button$Coloring(
	_rundis$elm_bootstrap$Bootstrap_Internal_Button$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Button$Info));
var _rundis$elm_bootstrap$Bootstrap_Button$success = _rundis$elm_bootstrap$Bootstrap_Internal_Button$Coloring(
	_rundis$elm_bootstrap$Bootstrap_Internal_Button$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Button$Success));
var _rundis$elm_bootstrap$Bootstrap_Button$secondary = _rundis$elm_bootstrap$Bootstrap_Internal_Button$Coloring(
	_rundis$elm_bootstrap$Bootstrap_Internal_Button$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Button$Secondary));
var _rundis$elm_bootstrap$Bootstrap_Button$primary = _rundis$elm_bootstrap$Bootstrap_Internal_Button$Coloring(
	_rundis$elm_bootstrap$Bootstrap_Internal_Button$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Button$Primary));
var _rundis$elm_bootstrap$Bootstrap_Button$large = _rundis$elm_bootstrap$Bootstrap_Internal_Button$Size(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG);
var _rundis$elm_bootstrap$Bootstrap_Button$small = _rundis$elm_bootstrap$Bootstrap_Internal_Button$Size(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM);
var _rundis$elm_bootstrap$Bootstrap_Button$attrs = function (attrs) {
	return _rundis$elm_bootstrap$Bootstrap_Internal_Button$Attrs(attrs);
};
var _rundis$elm_bootstrap$Bootstrap_Button$onClick = function (message) {
	var defaultOptions = _elm_lang$html$Html_Events$defaultOptions;
	return _rundis$elm_bootstrap$Bootstrap_Button$attrs(
		{
			ctor: '::',
			_0: A3(
				_elm_lang$html$Html_Events$onWithOptions,
				'click',
				_elm_lang$core$Native_Utils.update(
					defaultOptions,
					{preventDefault: true}),
				_elm_lang$core$Json_Decode$succeed(message)),
			_1: {ctor: '[]'}
		});
};
var _rundis$elm_bootstrap$Bootstrap_Button$checkboxButton = F3(
	function (checked, options, children) {
		return A2(
			_elm_lang$html$Html$label,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$classList(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'active', _1: checked},
						_1: {ctor: '[]'}
					}),
				_1: _rundis$elm_bootstrap$Bootstrap_Internal_Button$buttonAttributes(options)
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$type_('checkbox'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$checked(checked),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$autocomplete(false),
								_1: {ctor: '[]'}
							}
						}
					},
					{ctor: '[]'}),
				_1: children
			});
	});
var _rundis$elm_bootstrap$Bootstrap_Button$radioButton = F3(
	function (checked, options, children) {
		var hideRadio = A2(_elm_lang$html$Html_Attributes$attribute, 'data-toggle', 'button');
		return A2(
			_elm_lang$html$Html$label,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$classList(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'active', _1: checked},
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: hideRadio,
					_1: _rundis$elm_bootstrap$Bootstrap_Internal_Button$buttonAttributes(options)
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$type_('radio'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$checked(checked),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$autocomplete(false),
								_1: {ctor: '[]'}
							}
						}
					},
					{ctor: '[]'}),
				_1: children
			});
	});
var _rundis$elm_bootstrap$Bootstrap_Button$linkButton = F2(
	function (options, children) {
		return A2(
			_elm_lang$html$Html$a,
			{
				ctor: '::',
				_0: A2(_elm_lang$html$Html_Attributes$attribute, 'role', 'button'),
				_1: _rundis$elm_bootstrap$Bootstrap_Internal_Button$buttonAttributes(options)
			},
			children);
	});
var _rundis$elm_bootstrap$Bootstrap_Button$button = F2(
	function (options, children) {
		return A2(
			_elm_lang$html$Html$button,
			_rundis$elm_bootstrap$Bootstrap_Internal_Button$buttonAttributes(options),
			children);
	});

var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$defaultOptions = {
	size: _elm_lang$core$Maybe$Nothing,
	vertical: false,
	attributes: {ctor: '[]'}
};
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$applyModifier = F2(
	function (modifier, options) {
		var _p0 = modifier;
		switch (_p0.ctor) {
			case 'Size':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						size: _elm_lang$core$Maybe$Just(_p0._0)
					});
			case 'Vertical':
				return _elm_lang$core$Native_Utils.update(
					options,
					{vertical: true});
			default:
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						attributes: A2(_elm_lang$core$Basics_ops['++'], options.attributes, _p0._0)
					});
		}
	});
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$groupAttributes = function (modifiers) {
	var options = A3(_elm_lang$core$List$foldl, _rundis$elm_bootstrap$Bootstrap_ButtonGroup$applyModifier, _rundis$elm_bootstrap$Bootstrap_ButtonGroup$defaultOptions, modifiers);
	return A2(
		_elm_lang$core$Basics_ops['++'],
		{
			ctor: '::',
			_0: A2(_elm_lang$html$Html_Attributes$attribute, 'role', 'group'),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$classList(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'btn-group', _1: true},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'btn-group-vertical', _1: options.vertical},
							_1: {ctor: '[]'}
						}
					}),
				_1: {
					ctor: '::',
					_0: A2(_elm_lang$html$Html_Attributes$attribute, 'data-toggle', 'buttons'),
					_1: {ctor: '[]'}
				}
			}
		},
		A2(
			_elm_lang$core$Basics_ops['++'],
			function () {
				var _p1 = A2(_elm_lang$core$Maybe$andThen, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$screenSizeOption, options.size);
				if (_p1.ctor === 'Just') {
					return {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class(
							A2(_elm_lang$core$Basics_ops['++'], 'btn-group-', _p1._0)),
						_1: {ctor: '[]'}
					};
				} else {
					return {ctor: '[]'};
				}
			}(),
			options.attributes));
};
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$renderGroup = function (_p2) {
	var _p3 = _p2;
	return _p3._0;
};
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$toolbar = F2(
	function (attributes, items) {
		return A2(
			_elm_lang$html$Html$div,
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: A2(_elm_lang$html$Html_Attributes$attribute, 'role', 'toolbar'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('btn-toolbar'),
						_1: {ctor: '[]'}
					}
				},
				attributes),
			A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_ButtonGroup$renderGroup, items));
	});
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$Options = F3(
	function (a, b, c) {
		return {size: a, vertical: b, attributes: c};
	});
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$Attrs = function (a) {
	return {ctor: 'Attrs', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$attrs = function (attrs) {
	return _rundis$elm_bootstrap$Bootstrap_ButtonGroup$Attrs(attrs);
};
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$Vertical = {ctor: 'Vertical'};
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$vertical = _rundis$elm_bootstrap$Bootstrap_ButtonGroup$Vertical;
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$Size = function (a) {
	return {ctor: 'Size', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$small = _rundis$elm_bootstrap$Bootstrap_ButtonGroup$Size(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM);
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$large = _rundis$elm_bootstrap$Bootstrap_ButtonGroup$Size(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG);
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$GroupItem = function (a) {
	return {ctor: 'GroupItem', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$buttonGroupItem = F2(
	function (options, items) {
		return _rundis$elm_bootstrap$Bootstrap_ButtonGroup$GroupItem(
			A2(
				_elm_lang$html$Html$div,
				_rundis$elm_bootstrap$Bootstrap_ButtonGroup$groupAttributes(options),
				A2(
					_elm_lang$core$List$map,
					function (_p4) {
						var _p5 = _p4;
						return _p5._0;
					},
					items)));
	});
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$buttonGroup = F2(
	function (options, items) {
		return _rundis$elm_bootstrap$Bootstrap_ButtonGroup$renderGroup(
			A2(_rundis$elm_bootstrap$Bootstrap_ButtonGroup$buttonGroupItem, options, items));
	});
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$linkButtonGroupItem = F2(
	function (options, items) {
		return _rundis$elm_bootstrap$Bootstrap_ButtonGroup$GroupItem(
			A2(
				_elm_lang$html$Html$div,
				_rundis$elm_bootstrap$Bootstrap_ButtonGroup$groupAttributes(options),
				A2(
					_elm_lang$core$List$map,
					function (_p6) {
						var _p7 = _p6;
						return _p7._0;
					},
					items)));
	});
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$linkButtonGroup = F2(
	function (options, items) {
		return _rundis$elm_bootstrap$Bootstrap_ButtonGroup$renderGroup(
			A2(_rundis$elm_bootstrap$Bootstrap_ButtonGroup$linkButtonGroupItem, options, items));
	});
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$radioButtonGroupItem = F2(
	function (options, items) {
		return _rundis$elm_bootstrap$Bootstrap_ButtonGroup$GroupItem(
			A2(
				_elm_lang$html$Html$div,
				_rundis$elm_bootstrap$Bootstrap_ButtonGroup$groupAttributes(options),
				A2(
					_elm_lang$core$List$map,
					function (_p8) {
						var _p9 = _p8;
						return _p9._0;
					},
					items)));
	});
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$radioButtonGroup = F2(
	function (options, items) {
		return _rundis$elm_bootstrap$Bootstrap_ButtonGroup$renderGroup(
			A2(_rundis$elm_bootstrap$Bootstrap_ButtonGroup$radioButtonGroupItem, options, items));
	});
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$checkboxButtonGroupItem = F2(
	function (options, items) {
		return _rundis$elm_bootstrap$Bootstrap_ButtonGroup$GroupItem(
			A2(
				_elm_lang$html$Html$div,
				_rundis$elm_bootstrap$Bootstrap_ButtonGroup$groupAttributes(options),
				A2(
					_elm_lang$core$List$map,
					function (_p10) {
						var _p11 = _p10;
						return _p11._0;
					},
					items)));
	});
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$checkboxButtonGroup = F2(
	function (options, items) {
		return _rundis$elm_bootstrap$Bootstrap_ButtonGroup$renderGroup(
			A2(_rundis$elm_bootstrap$Bootstrap_ButtonGroup$checkboxButtonGroupItem, options, items));
	});
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$ButtonItem = function (a) {
	return {ctor: 'ButtonItem', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$button = F2(
	function (options, children) {
		return _rundis$elm_bootstrap$Bootstrap_ButtonGroup$ButtonItem(
			A2(_rundis$elm_bootstrap$Bootstrap_Button$button, options, children));
	});
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$LinkButtonItem = function (a) {
	return {ctor: 'LinkButtonItem', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$linkButton = F2(
	function (options, children) {
		return _rundis$elm_bootstrap$Bootstrap_ButtonGroup$LinkButtonItem(
			A2(_rundis$elm_bootstrap$Bootstrap_Button$linkButton, options, children));
	});
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$RadioButtonItem = function (a) {
	return {ctor: 'RadioButtonItem', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$radioButton = F3(
	function (checked, options, children) {
		return _rundis$elm_bootstrap$Bootstrap_ButtonGroup$RadioButtonItem(
			A3(_rundis$elm_bootstrap$Bootstrap_Button$radioButton, checked, options, children));
	});
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$CheckboxButtonItem = function (a) {
	return {ctor: 'CheckboxButtonItem', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_ButtonGroup$checkboxButton = F3(
	function (checked, options, children) {
		return _rundis$elm_bootstrap$Bootstrap_ButtonGroup$CheckboxButtonItem(
			A3(_rundis$elm_bootstrap$Bootstrap_Button$checkboxButton, checked, options, children));
	});

var _rundis$elm_bootstrap$Bootstrap_Form_FormInternal$validationToString = function (validation) {
	var _p0 = validation;
	switch (_p0.ctor) {
		case 'Success':
			return 'success';
		case 'Warning':
			return 'warning';
		default:
			return 'danger';
	}
};
var _rundis$elm_bootstrap$Bootstrap_Form_FormInternal$validationWrapperAttribute = function (validation) {
	return _elm_lang$html$Html_Attributes$class(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'has-',
			_rundis$elm_bootstrap$Bootstrap_Form_FormInternal$validationToString(validation)));
};
var _rundis$elm_bootstrap$Bootstrap_Form_FormInternal$Danger = {ctor: 'Danger'};
var _rundis$elm_bootstrap$Bootstrap_Form_FormInternal$Warning = {ctor: 'Warning'};
var _rundis$elm_bootstrap$Bootstrap_Form_FormInternal$Success = {ctor: 'Success'};

var _rundis$elm_bootstrap$Bootstrap_Grid_Row$betweenXl = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowHAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Between);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$betweenLg = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowHAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Between);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$betweenMd = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowHAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Between);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$betweenSm = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowHAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Between);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$betweenXs = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowHAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Between);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$aroundXl = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowHAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Around);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$aroundLg = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowHAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Around);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$aroundMd = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowHAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Around);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$aroundSm = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowHAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Around);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$aroundXs = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowHAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Around);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$rightXl = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowHAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Right);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$rightLg = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowHAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Right);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$rightMd = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowHAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Right);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$rightSm = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowHAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Right);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$rightXs = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowHAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Right);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$centerXl = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowHAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Center);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$centerLg = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowHAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Center);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$centerMd = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowHAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Center);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$centerSm = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowHAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Center);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$centerXs = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowHAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Center);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$leftXl = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowHAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Left);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$leftLg = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowHAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Left);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$leftMd = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowHAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Left);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$leftSm = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowHAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Left);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$leftXs = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowHAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Left);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$bottomXl = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Bottom);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$bottomLg = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Bottom);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$bottomMd = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Bottom);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$bottomSm = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Bottom);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$bottomXs = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Bottom);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$middleXl = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Middle);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$middleLg = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Middle);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$middleMd = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Middle);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$middleSm = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Middle);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$middleXs = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Middle);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$topXl = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Top);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$topLg = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Top);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$topMd = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Top);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$topSm = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Top);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$topXs = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Top);
var _rundis$elm_bootstrap$Bootstrap_Grid_Row$attrs = function (attrs) {
	return _rundis$elm_bootstrap$Bootstrap_Grid_Internal$RowAttrs(attrs);
};

var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushXl12 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move12);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushXl11 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move11);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushXl10 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move10);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushXl9 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move9);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushXl8 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move8);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushXl7 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move7);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushXl6 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move6);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushXl5 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move5);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushXl4 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move4);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushXl3 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move3);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushXl2 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move2);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushXl1 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move1);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushXl0 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move0);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushLg12 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move12);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushLg11 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move11);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushLg10 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move10);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushLg9 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move9);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushLg8 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move8);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushLg7 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move7);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushLg6 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move6);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushLg5 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move5);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushLg4 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move4);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushLg3 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move3);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushLg2 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move2);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushLg1 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move1);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushLg0 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move0);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushMd12 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move12);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushMd11 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move11);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushMd10 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move10);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushMd9 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move9);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushMd8 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move8);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushMd7 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move7);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushMd6 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move6);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushMd5 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move5);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushMd4 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move4);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushMd3 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move3);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushMd2 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move2);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushMd1 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move1);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushMd0 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move0);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushSm12 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move12);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushSm11 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move11);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushSm10 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move10);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushSm9 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move9);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushSm8 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move8);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushSm7 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move7);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushSm6 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move6);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushSm5 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move5);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushSm4 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move4);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushSm3 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move3);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushSm2 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move2);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushSm1 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move1);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushSm0 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move0);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushXs12 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move12);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushXs11 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move11);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushXs10 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move10);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushXs9 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move9);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushXs8 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move8);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushXs7 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move7);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushXs6 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move6);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushXs5 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move5);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushXs4 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move4);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushXs3 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move3);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushXs2 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move2);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushXs1 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move1);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pushXs0 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$push, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move0);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullXl12 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move12);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullXl11 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move11);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullXl10 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move10);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullXl9 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move9);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullXl8 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move8);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullXl7 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move7);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullXl6 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move6);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullXl5 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move5);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullXl4 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move4);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullXl3 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move3);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullXl2 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move2);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullXl1 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move1);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullXl0 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move0);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullLg12 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move12);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullLg11 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move11);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullLg10 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move10);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullLg9 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move9);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullLg8 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move8);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullLg7 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move7);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullLg6 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move6);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullLg5 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move5);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullLg4 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move4);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullLg3 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move3);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullLg2 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move2);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullLg1 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move1);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullLg0 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move0);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullMd12 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move12);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullMd11 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move11);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullMd10 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move10);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullMd9 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move9);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullMd8 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move8);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullMd7 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move7);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullMd6 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move6);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullMd5 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move5);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullMd4 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move4);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullMd3 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move3);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullMd2 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move2);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullMd1 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move1);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullMd0 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move0);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullSm12 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move12);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullSm11 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move11);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullSm10 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move10);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullSm9 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move9);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullSm8 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move8);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullSm7 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move7);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullSm6 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move6);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullSm5 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move5);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullSm4 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move4);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullSm3 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move3);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullSm2 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move2);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullSm1 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move1);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullSm0 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move0);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullXs12 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move12);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullXs11 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move11);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullXs10 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move10);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullXs9 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move9);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullXs8 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move8);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullXs7 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move7);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullXs6 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move6);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullXs5 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move5);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullXs4 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move4);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullXs3 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move3);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullXs2 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move2);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullXs1 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move1);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$pullXs0 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$pull, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Move0);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetXl11 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset11);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetXl10 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset10);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetXl9 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset9);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetXl8 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset8);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetXl7 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset7);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetXl6 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset6);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetXl5 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset5);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetXl4 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset4);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetXl3 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset3);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetXl2 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset2);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetXl1 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset1);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetXl0 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset0);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetLg11 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset11);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetLg10 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset10);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetLg9 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset9);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetLg8 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset8);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetLg7 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset7);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetLg6 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset6);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetLg5 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset5);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetLg4 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset4);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetLg3 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset3);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetLg2 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset2);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetLg1 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset1);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetLg0 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset0);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetMd11 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset11);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetMd10 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset10);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetMd9 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset9);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetMd8 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset8);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetMd7 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset7);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetMd6 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset6);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetMd5 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset5);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetMd4 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset4);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetMd3 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset3);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetMd2 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset2);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetMd1 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset1);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetMd0 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset0);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetSm11 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset11);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetSm10 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset10);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetSm9 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset9);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetSm8 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset8);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetSm7 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset7);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetSm6 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset6);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetSm5 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset5);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetSm4 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset4);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetSm3 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset3);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetSm2 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset2);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetSm1 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset1);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetSm0 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset0);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetXs11 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset11);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetXs10 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset10);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetXs9 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset9);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetXs8 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset8);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetXs7 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset7);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetXs6 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset6);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetXs5 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset5);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetXs4 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset4);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetXs3 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset3);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetXs2 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset2);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$offsetXs1 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$offset, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Offset1);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xlAuto = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$ColAuto);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xl12 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col12);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xl11 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col11);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xl10 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col10);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xl9 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col9);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xl8 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col8);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xl7 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col7);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xl6 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col6);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xl5 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col5);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xl4 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col4);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xl3 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col3);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xl2 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col2);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xl1 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col1);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xl = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$lgAuto = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$ColAuto);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$lg12 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col12);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$lg11 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col11);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$lg10 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col10);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$lg9 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col9);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$lg8 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col8);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$lg7 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col7);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$lg6 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col6);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$lg5 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col5);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$lg4 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col4);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$lg3 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col3);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$lg2 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col2);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$lg1 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col1);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$lg = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$mdAuto = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$ColAuto);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$md12 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col12);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$md11 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col11);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$md10 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col10);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$md9 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col9);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$md8 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col8);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$md7 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col7);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$md6 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col6);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$md5 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col5);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$md4 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col4);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$md3 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col3);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$md2 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col2);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$md1 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col1);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$md = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$smAuto = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$ColAuto);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$sm12 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col12);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$sm11 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col11);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$sm10 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col10);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$sm9 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col9);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$sm8 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col8);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$sm7 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col7);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$sm6 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col6);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$sm5 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col5);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$sm4 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col4);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$sm3 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col3);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$sm2 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col2);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$sm1 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col1);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$sm = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xsAuto = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$ColAuto);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs12 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col12);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs11 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col11);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs10 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col10);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs9 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col9);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs8 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col8);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs7 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col7);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs6 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col6);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs5 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col5);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs4 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col4);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs3 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col3);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs2 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col2);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs1 = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col1);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$width, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Col);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$bottomXl = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$colVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Bottom);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$bottomLg = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$colVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Bottom);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$bottomMd = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$colVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Bottom);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$bottomSm = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$colVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Bottom);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$bottomXs = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$colVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Bottom);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$middleXl = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$colVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Middle);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$middleLg = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$colVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Middle);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$middleMd = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$colVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Middle);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$middleSm = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$colVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Middle);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$middleXs = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$colVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Middle);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$topXl = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$colVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Top);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$topLg = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$colVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Top);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$topMd = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$colVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Top);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$topSm = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$colVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Top);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$topXs = A2(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$colVAlign, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS, _rundis$elm_bootstrap$Bootstrap_Grid_Internal$Top);
var _rundis$elm_bootstrap$Bootstrap_Grid_Col$attrs = function (attrs) {
	return _rundis$elm_bootstrap$Bootstrap_Grid_Internal$ColAttrs(attrs);
};

var _rundis$elm_bootstrap$Bootstrap_Form$renderCol = function (_p0) {
	var _p1 = _p0;
	return A2(
		_p1._0.elemFn,
		_rundis$elm_bootstrap$Bootstrap_Grid_Internal$colAttributes(_p1._0.options),
		_p1._0.children);
};
var _rundis$elm_bootstrap$Bootstrap_Form$rowValidation = function (validation) {
	return _rundis$elm_bootstrap$Bootstrap_Grid_Row$attrs(
		{
			ctor: '::',
			_0: _rundis$elm_bootstrap$Bootstrap_Form_FormInternal$validationWrapperAttribute(validation),
			_1: {ctor: '[]'}
		});
};
var _rundis$elm_bootstrap$Bootstrap_Form$rowDanger = _rundis$elm_bootstrap$Bootstrap_Form$rowValidation(_rundis$elm_bootstrap$Bootstrap_Form_FormInternal$Danger);
var _rundis$elm_bootstrap$Bootstrap_Form$rowWarning = _rundis$elm_bootstrap$Bootstrap_Form$rowValidation(_rundis$elm_bootstrap$Bootstrap_Form_FormInternal$Warning);
var _rundis$elm_bootstrap$Bootstrap_Form$rowSuccess = _rundis$elm_bootstrap$Bootstrap_Form$rowValidation(_rundis$elm_bootstrap$Bootstrap_Form_FormInternal$Success);
var _rundis$elm_bootstrap$Bootstrap_Form$row = F2(
	function (options, cols) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('form-group'),
				_1: _rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowAttributes(options)
			},
			A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Form$renderCol, cols));
	});
var _rundis$elm_bootstrap$Bootstrap_Form$applyModifier = F2(
	function (modifier, options) {
		var _p2 = modifier;
		if (_p2.ctor === 'Validation') {
			return _elm_lang$core$Native_Utils.update(
				options,
				{
					validation: _elm_lang$core$Maybe$Just(_p2._0)
				});
		} else {
			return _elm_lang$core$Native_Utils.update(
				options,
				{
					attributes: A2(_elm_lang$core$Basics_ops['++'], options.attributes, _p2._0)
				});
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Form$defaultOptions = {
	validation: _elm_lang$core$Maybe$Nothing,
	attributes: {ctor: '[]'}
};
var _rundis$elm_bootstrap$Bootstrap_Form$toAttributes = function (modifiers) {
	var options = A3(_elm_lang$core$List$foldl, _rundis$elm_bootstrap$Bootstrap_Form$applyModifier, _rundis$elm_bootstrap$Bootstrap_Form$defaultOptions, modifiers);
	return A2(
		_elm_lang$core$Basics_ops['++'],
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('form-group'),
			_1: {ctor: '[]'}
		},
		function () {
			var _p3 = options.validation;
			if (_p3.ctor === 'Just') {
				return {
					ctor: '::',
					_0: _rundis$elm_bootstrap$Bootstrap_Form_FormInternal$validationWrapperAttribute(_p3._0),
					_1: {ctor: '[]'}
				};
			} else {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					{ctor: '[]'},
					options.attributes);
			}
		}());
};
var _rundis$elm_bootstrap$Bootstrap_Form$validationText = F2(
	function (attributes, children) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('form-control-feedback'),
				_1: attributes
			},
			children);
	});
var _rundis$elm_bootstrap$Bootstrap_Form$helpInline = F2(
	function (attributes, children) {
		return A2(
			_elm_lang$html$Html$small,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('text-muted'),
				_1: attributes
			},
			children);
	});
var _rundis$elm_bootstrap$Bootstrap_Form$help = F2(
	function (attributes, children) {
		return A2(
			_elm_lang$html$Html$small,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('form-text text-muted'),
				_1: attributes
			},
			children);
	});
var _rundis$elm_bootstrap$Bootstrap_Form$label = F2(
	function (attributes, children) {
		return A2(
			_elm_lang$html$Html$label,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('form-control-label'),
				_1: attributes
			},
			children);
	});
var _rundis$elm_bootstrap$Bootstrap_Form$group = F2(
	function (options, children) {
		return A2(
			_elm_lang$html$Html$div,
			_rundis$elm_bootstrap$Bootstrap_Form$toAttributes(options),
			children);
	});
var _rundis$elm_bootstrap$Bootstrap_Form$form = F2(
	function (attributes, children) {
		return A2(_elm_lang$html$Html$form, attributes, children);
	});
var _rundis$elm_bootstrap$Bootstrap_Form$formInline = function (attributes) {
	return _rundis$elm_bootstrap$Bootstrap_Form$form(
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('form-inline'),
			_1: attributes
		});
};
var _rundis$elm_bootstrap$Bootstrap_Form$Options = F2(
	function (a, b) {
		return {validation: a, attributes: b};
	});
var _rundis$elm_bootstrap$Bootstrap_Form$Col = function (a) {
	return {ctor: 'Col', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form$col = F2(
	function (options, children) {
		return _rundis$elm_bootstrap$Bootstrap_Form$Col(
			{elemFn: _elm_lang$html$Html$div, options: options, children: children});
	});
var _rundis$elm_bootstrap$Bootstrap_Form$colLabel = F2(
	function (options, children) {
		return _rundis$elm_bootstrap$Bootstrap_Form$Col(
			{
				elemFn: _elm_lang$html$Html$label,
				options: {
					ctor: '::',
					_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$attrs(
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('col-form-label'),
							_1: {ctor: '[]'}
						}),
					_1: options
				},
				children: children
			});
	});
var _rundis$elm_bootstrap$Bootstrap_Form$colLabelSm = function (options) {
	return _rundis$elm_bootstrap$Bootstrap_Form$colLabel(
		{
			ctor: '::',
			_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$attrs(
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('col-form-label-sm'),
					_1: {ctor: '[]'}
				}),
			_1: options
		});
};
var _rundis$elm_bootstrap$Bootstrap_Form$colLabelLg = function (options) {
	return _rundis$elm_bootstrap$Bootstrap_Form$colLabel(
		{
			ctor: '::',
			_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$attrs(
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('col-form-label-lg'),
					_1: {ctor: '[]'}
				}),
			_1: options
		});
};
var _rundis$elm_bootstrap$Bootstrap_Form$Attrs = function (a) {
	return {ctor: 'Attrs', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form$Validation = function (a) {
	return {ctor: 'Validation', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form$groupSuccess = _rundis$elm_bootstrap$Bootstrap_Form$Validation(_rundis$elm_bootstrap$Bootstrap_Form_FormInternal$Success);
var _rundis$elm_bootstrap$Bootstrap_Form$groupWarning = _rundis$elm_bootstrap$Bootstrap_Form$Validation(_rundis$elm_bootstrap$Bootstrap_Form_FormInternal$Warning);
var _rundis$elm_bootstrap$Bootstrap_Form$groupDanger = _rundis$elm_bootstrap$Bootstrap_Form$Validation(_rundis$elm_bootstrap$Bootstrap_Form_FormInternal$Danger);

var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$stateAttribute = function (state) {
	var _p0 = state;
	switch (_p0.ctor) {
		case 'On':
			return _elm_lang$html$Html_Attributes$checked(true);
		case 'Off':
			return _elm_lang$html$Html_Attributes$checked(false);
		default:
			return A2(_elm_lang$html$Html_Attributes$attribute, 'indeterminate', 'true');
	}
};
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$toAttributes = function (options) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class(
				options.custom ? 'custom-control-input' : 'form-check-input'),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$type_('checkbox'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$disabled(options.disabled),
					_1: {
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$stateAttribute(options.state),
						_1: {ctor: '[]'}
					}
				}
			}
		},
		A2(
			_elm_lang$core$Basics_ops['++'],
			A2(
				_elm_lang$core$List$filterMap,
				_elm_lang$core$Basics$identity,
				{
					ctor: '::',
					_0: A2(_elm_lang$core$Maybe$map, _elm_lang$html$Html_Events$onCheck, options.onChecked),
					_1: {ctor: '[]'}
				}),
			options.attributes));
};
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$applyModifier = F2(
	function (modifier, options) {
		var _p1 = modifier;
		switch (_p1.ctor) {
			case 'Value':
				return _elm_lang$core$Native_Utils.update(
					options,
					{state: _p1._0});
			case 'Inline':
				return _elm_lang$core$Native_Utils.update(
					options,
					{inline: true});
			case 'OnChecked':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						onChecked: _elm_lang$core$Maybe$Just(_p1._0)
					});
			case 'Custom':
				return _elm_lang$core$Native_Utils.update(
					options,
					{custom: true});
			case 'Disabled':
				return _elm_lang$core$Native_Utils.update(
					options,
					{disabled: _p1._0});
			case 'Validation':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						validation: _elm_lang$core$Maybe$Just(_p1._0)
					});
			default:
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						attributes: A2(_elm_lang$core$Basics_ops['++'], options.attributes, _p1._0)
					});
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$Options = F7(
	function (a, b, c, d, e, f, g) {
		return {state: a, inline: b, custom: c, disabled: d, onChecked: e, validation: f, attributes: g};
	});
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$Checkbox = function (a) {
	return {ctor: 'Checkbox', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$create = F2(
	function (options, label) {
		return _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$Checkbox(
			{options: options, label: label});
	});
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$Attrs = function (a) {
	return {ctor: 'Attrs', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$attrs = function (attrs) {
	return _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$Attrs(attrs);
};
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$Validation = function (a) {
	return {ctor: 'Validation', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$success = _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$Validation(_rundis$elm_bootstrap$Bootstrap_Form_FormInternal$Success);
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$warning = _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$Validation(_rundis$elm_bootstrap$Bootstrap_Form_FormInternal$Warning);
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$danger = _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$Validation(_rundis$elm_bootstrap$Bootstrap_Form_FormInternal$Danger);
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$Disabled = function (a) {
	return {ctor: 'Disabled', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$disabled = function (disabled) {
	return _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$Disabled(disabled);
};
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$Custom = {ctor: 'Custom'};
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$OnChecked = function (a) {
	return {ctor: 'OnChecked', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$onCheck = function (toMsg) {
	return _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$OnChecked(toMsg);
};
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$Inline = {ctor: 'Inline'};
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$inline = _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$Inline;
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$Value = function (a) {
	return {ctor: 'Value', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$Indeterminate = {ctor: 'Indeterminate'};
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$indeterminate = _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$Value(_rundis$elm_bootstrap$Bootstrap_Form_Checkbox$Indeterminate);
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$Off = {ctor: 'Off'};
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$defaultOptions = {
	state: _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$Off,
	inline: false,
	custom: false,
	disabled: false,
	onChecked: _elm_lang$core$Maybe$Nothing,
	validation: _elm_lang$core$Maybe$Nothing,
	attributes: {ctor: '[]'}
};
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$view = function (_p2) {
	var _p3 = _p2;
	var _p5 = _p3._0;
	var opts = A3(_elm_lang$core$List$foldl, _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$applyModifier, _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$defaultOptions, _p5.options);
	var validationAttrs = function () {
		var _p4 = opts.validation;
		if (_p4.ctor === 'Just') {
			return {
				ctor: '::',
				_0: _rundis$elm_bootstrap$Bootstrap_Form_FormInternal$validationWrapperAttribute(_p4._0),
				_1: {ctor: '[]'}
			};
		} else {
			return {ctor: '[]'};
		}
	}();
	return opts.custom ? A2(
		_elm_lang$html$Html$div,
		A2(
			_elm_lang$core$Basics_ops['++'],
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$classList(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'custom-controls-stacked', _1: !opts.inline},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'd-inline-block', _1: opts.inline},
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			},
			validationAttrs),
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$label,
				A2(
					_elm_lang$core$Basics_ops['++'],
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('custom-control custom-checkbox'),
						_1: {ctor: '[]'}
					},
					validationAttrs),
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						_rundis$elm_bootstrap$Bootstrap_Form_Checkbox$toAttributes(opts),
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$span,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('custom-control-indicator'),
								_1: {ctor: '[]'}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$span,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('custom-control-description'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(_p5.label),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {ctor: '[]'}
		}) : A2(
		_elm_lang$html$Html$div,
		A2(
			_elm_lang$core$Basics_ops['++'],
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$classList(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'form-check', _1: true},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'form-check-inline', _1: opts.inline},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'disabled', _1: opts.disabled},
								_1: {ctor: '[]'}
							}
						}
					}),
				_1: {ctor: '[]'}
			},
			validationAttrs),
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$label,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('form-check-label'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						_rundis$elm_bootstrap$Bootstrap_Form_Checkbox$toAttributes(opts),
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							A2(_elm_lang$core$Basics_ops['++'], ' ', _p5.label)),
						_1: {ctor: '[]'}
					}
				}),
			_1: {ctor: '[]'}
		});
};
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$checkbox = F2(
	function (options, label) {
		return _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$view(
			A2(_rundis$elm_bootstrap$Bootstrap_Form_Checkbox$create, options, label));
	});
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$custom = function (options) {
	return function (_p6) {
		return _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$view(
			A2(
				_rundis$elm_bootstrap$Bootstrap_Form_Checkbox$create,
				{ctor: '::', _0: _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$Custom, _1: options},
				_p6));
	};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$On = {ctor: 'On'};
var _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$checked = function (isCheck) {
	return _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$Value(
		isCheck ? _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$On : _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$Off);
};

var _rundis$elm_bootstrap$Bootstrap_Form_Input$validationAttribute = function (validation) {
	return _elm_lang$html$Html_Attributes$class(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'form-control-',
			_rundis$elm_bootstrap$Bootstrap_Form_FormInternal$validationToString(validation)));
};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$typeAttribute = function (inputType) {
	return _elm_lang$html$Html_Attributes$type_(
		function () {
			var _p0 = inputType;
			switch (_p0.ctor) {
				case 'Text':
					return 'text';
				case 'Password':
					return 'password';
				case 'DatetimeLocal':
					return 'datetime-local';
				case 'Date':
					return 'date';
				case 'Month':
					return 'month';
				case 'Time':
					return 'time';
				case 'Week':
					return 'week';
				case 'Number':
					return 'number';
				case 'Email':
					return 'email';
				case 'Url':
					return 'url';
				case 'Search':
					return 'search';
				case 'Tel':
					return 'tel';
				default:
					return 'color';
			}
		}());
};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$sizeAttribute = function (size) {
	return A2(
		_elm_lang$core$Maybe$map,
		function (s) {
			return _elm_lang$html$Html_Attributes$class(
				A2(_elm_lang$core$Basics_ops['++'], 'form-control-', s));
		},
		_rundis$elm_bootstrap$Bootstrap_Grid_Internal$screenSizeOption(size));
};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$applyModifier = F2(
	function (modifier, options) {
		var _p1 = modifier;
		switch (_p1.ctor) {
			case 'Size':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						size: _elm_lang$core$Maybe$Just(_p1._0)
					});
			case 'Id':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						id: _elm_lang$core$Maybe$Just(_p1._0)
					});
			case 'Type':
				return _elm_lang$core$Native_Utils.update(
					options,
					{tipe: _p1._0});
			case 'Disabled':
				return _elm_lang$core$Native_Utils.update(
					options,
					{disabled: _p1._0});
			case 'Value':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						value: _elm_lang$core$Maybe$Just(_p1._0)
					});
			case 'DefaultValue':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						defaultValue: _elm_lang$core$Maybe$Just(_p1._0)
					});
			case 'Placeholder':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						placeholder: _elm_lang$core$Maybe$Just(_p1._0)
					});
			case 'OnInput':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						onInput: _elm_lang$core$Maybe$Just(_p1._0)
					});
			case 'Validation':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						validation: _elm_lang$core$Maybe$Just(_p1._0)
					});
			default:
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						attributes: A2(_elm_lang$core$Basics_ops['++'], options.attributes, _p1._0)
					});
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Form_Input$Options = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return {tipe: a, id: b, size: c, disabled: d, value: e, defaultValue: f, placeholder: g, onInput: h, validation: i, attributes: j};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$Input = function (a) {
	return {ctor: 'Input', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$Attrs = function (a) {
	return {ctor: 'Attrs', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$attrs = function (attrs) {
	return _rundis$elm_bootstrap$Bootstrap_Form_Input$Attrs(attrs);
};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$Placeholder = function (a) {
	return {ctor: 'Placeholder', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$placeholder = function (value) {
	return _rundis$elm_bootstrap$Bootstrap_Form_Input$Placeholder(value);
};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$Validation = function (a) {
	return {ctor: 'Validation', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$success = _rundis$elm_bootstrap$Bootstrap_Form_Input$Validation(_rundis$elm_bootstrap$Bootstrap_Form_FormInternal$Success);
var _rundis$elm_bootstrap$Bootstrap_Form_Input$warning = _rundis$elm_bootstrap$Bootstrap_Form_Input$Validation(_rundis$elm_bootstrap$Bootstrap_Form_FormInternal$Warning);
var _rundis$elm_bootstrap$Bootstrap_Form_Input$danger = _rundis$elm_bootstrap$Bootstrap_Form_Input$Validation(_rundis$elm_bootstrap$Bootstrap_Form_FormInternal$Danger);
var _rundis$elm_bootstrap$Bootstrap_Form_Input$OnInput = function (a) {
	return {ctor: 'OnInput', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$onInput = function (toMsg) {
	return _rundis$elm_bootstrap$Bootstrap_Form_Input$OnInput(toMsg);
};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$DefaultValue = function (a) {
	return {ctor: 'DefaultValue', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$defaultValue = function (value) {
	return _rundis$elm_bootstrap$Bootstrap_Form_Input$DefaultValue(value);
};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$Value = function (a) {
	return {ctor: 'Value', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$value = function (value) {
	return _rundis$elm_bootstrap$Bootstrap_Form_Input$Value(value);
};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$Disabled = function (a) {
	return {ctor: 'Disabled', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$disabled = function (disabled) {
	return _rundis$elm_bootstrap$Bootstrap_Form_Input$Disabled(disabled);
};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$Type = function (a) {
	return {ctor: 'Type', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$create = F2(
	function (tipe, options) {
		return _rundis$elm_bootstrap$Bootstrap_Form_Input$Input(
			{
				options: {
					ctor: '::',
					_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$Type(tipe),
					_1: options
				}
			});
	});
var _rundis$elm_bootstrap$Bootstrap_Form_Input$Id = function (a) {
	return {ctor: 'Id', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$id = function (id) {
	return _rundis$elm_bootstrap$Bootstrap_Form_Input$Id(id);
};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$Size = function (a) {
	return {ctor: 'Size', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$small = _rundis$elm_bootstrap$Bootstrap_Form_Input$Size(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM);
var _rundis$elm_bootstrap$Bootstrap_Form_Input$large = _rundis$elm_bootstrap$Bootstrap_Form_Input$Size(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG);
var _rundis$elm_bootstrap$Bootstrap_Form_Input$Color = {ctor: 'Color'};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$Tel = {ctor: 'Tel'};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$Search = {ctor: 'Search'};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$Url = {ctor: 'Url'};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$Email = {ctor: 'Email'};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$Number = {ctor: 'Number'};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$Week = {ctor: 'Week'};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$Time = {ctor: 'Time'};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$Month = {ctor: 'Month'};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$Date = {ctor: 'Date'};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$DatetimeLocal = {ctor: 'DatetimeLocal'};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$Password = {ctor: 'Password'};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$Text = {ctor: 'Text'};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$defaultOptions = {
	tipe: _rundis$elm_bootstrap$Bootstrap_Form_Input$Text,
	id: _elm_lang$core$Maybe$Nothing,
	size: _elm_lang$core$Maybe$Nothing,
	disabled: false,
	value: _elm_lang$core$Maybe$Nothing,
	defaultValue: _elm_lang$core$Maybe$Nothing,
	placeholder: _elm_lang$core$Maybe$Nothing,
	onInput: _elm_lang$core$Maybe$Nothing,
	validation: _elm_lang$core$Maybe$Nothing,
	attributes: {ctor: '[]'}
};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$toAttributes = function (modifiers) {
	var options = A3(_elm_lang$core$List$foldl, _rundis$elm_bootstrap$Bootstrap_Form_Input$applyModifier, _rundis$elm_bootstrap$Bootstrap_Form_Input$defaultOptions, modifiers);
	return A2(
		_elm_lang$core$Basics_ops['++'],
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('form-control'),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$disabled(options.disabled),
				_1: {
					ctor: '::',
					_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$typeAttribute(options.tipe),
					_1: {ctor: '[]'}
				}
			}
		},
		A2(
			_elm_lang$core$Basics_ops['++'],
			A2(
				_elm_lang$core$List$filterMap,
				_elm_lang$core$Basics$identity,
				{
					ctor: '::',
					_0: A2(_elm_lang$core$Maybe$map, _elm_lang$html$Html_Attributes$id, options.id),
					_1: {
						ctor: '::',
						_0: A2(_elm_lang$core$Maybe$andThen, _rundis$elm_bootstrap$Bootstrap_Form_Input$sizeAttribute, options.size),
						_1: {
							ctor: '::',
							_0: A2(_elm_lang$core$Maybe$map, _elm_lang$html$Html_Attributes$value, options.value),
							_1: {
								ctor: '::',
								_0: A2(_elm_lang$core$Maybe$map, _elm_lang$html$Html_Attributes$defaultValue, options.defaultValue),
								_1: {
									ctor: '::',
									_0: A2(_elm_lang$core$Maybe$map, _elm_lang$html$Html_Attributes$placeholder, options.placeholder),
									_1: {
										ctor: '::',
										_0: A2(_elm_lang$core$Maybe$map, _elm_lang$html$Html_Events$onInput, options.onInput),
										_1: {
											ctor: '::',
											_0: A2(_elm_lang$core$Maybe$map, _rundis$elm_bootstrap$Bootstrap_Form_Input$validationAttribute, options.validation),
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}
					}
				}),
			options.attributes));
};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$view = function (_p2) {
	var _p3 = _p2;
	return A2(
		_elm_lang$html$Html$input,
		_rundis$elm_bootstrap$Bootstrap_Form_Input$toAttributes(_p3._0.options),
		{ctor: '[]'});
};
var _rundis$elm_bootstrap$Bootstrap_Form_Input$input = F2(
	function (tipe, options) {
		return _rundis$elm_bootstrap$Bootstrap_Form_Input$view(
			A2(_rundis$elm_bootstrap$Bootstrap_Form_Input$create, tipe, options));
	});
var _rundis$elm_bootstrap$Bootstrap_Form_Input$text = _rundis$elm_bootstrap$Bootstrap_Form_Input$input(_rundis$elm_bootstrap$Bootstrap_Form_Input$Text);
var _rundis$elm_bootstrap$Bootstrap_Form_Input$password = _rundis$elm_bootstrap$Bootstrap_Form_Input$input(_rundis$elm_bootstrap$Bootstrap_Form_Input$Password);
var _rundis$elm_bootstrap$Bootstrap_Form_Input$datetimeLocal = _rundis$elm_bootstrap$Bootstrap_Form_Input$input(_rundis$elm_bootstrap$Bootstrap_Form_Input$DatetimeLocal);
var _rundis$elm_bootstrap$Bootstrap_Form_Input$date = _rundis$elm_bootstrap$Bootstrap_Form_Input$input(_rundis$elm_bootstrap$Bootstrap_Form_Input$Date);
var _rundis$elm_bootstrap$Bootstrap_Form_Input$month = _rundis$elm_bootstrap$Bootstrap_Form_Input$input(_rundis$elm_bootstrap$Bootstrap_Form_Input$Month);
var _rundis$elm_bootstrap$Bootstrap_Form_Input$time = _rundis$elm_bootstrap$Bootstrap_Form_Input$input(_rundis$elm_bootstrap$Bootstrap_Form_Input$Time);
var _rundis$elm_bootstrap$Bootstrap_Form_Input$week = _rundis$elm_bootstrap$Bootstrap_Form_Input$input(_rundis$elm_bootstrap$Bootstrap_Form_Input$Week);
var _rundis$elm_bootstrap$Bootstrap_Form_Input$number = _rundis$elm_bootstrap$Bootstrap_Form_Input$input(_rundis$elm_bootstrap$Bootstrap_Form_Input$Number);
var _rundis$elm_bootstrap$Bootstrap_Form_Input$email = _rundis$elm_bootstrap$Bootstrap_Form_Input$input(_rundis$elm_bootstrap$Bootstrap_Form_Input$Email);
var _rundis$elm_bootstrap$Bootstrap_Form_Input$url = _rundis$elm_bootstrap$Bootstrap_Form_Input$input(_rundis$elm_bootstrap$Bootstrap_Form_Input$Url);
var _rundis$elm_bootstrap$Bootstrap_Form_Input$search = _rundis$elm_bootstrap$Bootstrap_Form_Input$input(_rundis$elm_bootstrap$Bootstrap_Form_Input$Search);
var _rundis$elm_bootstrap$Bootstrap_Form_Input$tel = _rundis$elm_bootstrap$Bootstrap_Form_Input$input(_rundis$elm_bootstrap$Bootstrap_Form_Input$Tel);
var _rundis$elm_bootstrap$Bootstrap_Form_Input$color = _rundis$elm_bootstrap$Bootstrap_Form_Input$input(_rundis$elm_bootstrap$Bootstrap_Form_Input$Color);

var _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$sizeAttribute = function (size) {
	return A2(
		_elm_lang$core$Maybe$map,
		function (s) {
			return _elm_lang$html$Html_Attributes$class(
				A2(_elm_lang$core$Basics_ops['++'], 'input-group-', s));
		},
		_rundis$elm_bootstrap$Bootstrap_Grid_Internal$screenSizeOption(size));
};
var _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$view = function (_p0) {
	var _p1 = _p0;
	var _p7 = _p1._0;
	var _p2 = _p7.input;
	var input = _p2._0;
	return A2(
		_elm_lang$html$Html$div,
		A2(
			_elm_lang$core$Basics_ops['++'],
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('input-group'),
				_1: {ctor: '[]'}
			},
			A2(
				_elm_lang$core$Basics_ops['++'],
				A2(
					_elm_lang$core$List$filterMap,
					_elm_lang$core$Basics$identity,
					{
						ctor: '::',
						_0: A2(_elm_lang$core$Maybe$andThen, _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$sizeAttribute, _p7.size),
						_1: {ctor: '[]'}
					}),
				_p7.attributes)),
		A2(
			_elm_lang$core$Basics_ops['++'],
			A2(
				_elm_lang$core$List$map,
				function (_p3) {
					var _p4 = _p3;
					return _p4._0;
				},
				_p7.predecessors),
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: input,
					_1: {ctor: '[]'}
				},
				A2(
					_elm_lang$core$List$map,
					function (_p5) {
						var _p6 = _p5;
						return _p6._0;
					},
					_p7.successors))));
};
var _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$Config = function (a) {
	return {ctor: 'Config', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$config = function (input) {
	return _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$Config(
		{
			input: input,
			predecessors: {ctor: '[]'},
			successors: {ctor: '[]'},
			size: _elm_lang$core$Maybe$Nothing,
			attributes: {ctor: '[]'}
		});
};
var _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$predecessors = F2(
	function (addons, _p8) {
		var _p9 = _p8;
		return _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$Config(
			_elm_lang$core$Native_Utils.update(
				_p9._0,
				{predecessors: addons}));
	});
var _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$successors = F2(
	function (addons, _p10) {
		var _p11 = _p10;
		return _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$Config(
			_elm_lang$core$Native_Utils.update(
				_p11._0,
				{successors: addons}));
	});
var _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$large = function (_p12) {
	var _p13 = _p12;
	return _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$Config(
		_elm_lang$core$Native_Utils.update(
			_p13._0,
			{
				size: _elm_lang$core$Maybe$Just(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG)
			}));
};
var _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$small = function (_p14) {
	var _p15 = _p14;
	return _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$Config(
		_elm_lang$core$Native_Utils.update(
			_p15._0,
			{
				size: _elm_lang$core$Maybe$Just(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM)
			}));
};
var _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$attrs = F2(
	function (attributes, _p16) {
		var _p17 = _p16;
		return _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$Config(
			_elm_lang$core$Native_Utils.update(
				_p17._0,
				{attributes: attributes}));
	});
var _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$Input = function (a) {
	return {ctor: 'Input', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$input = F2(
	function (inputFn, options) {
		return _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$Input(
			inputFn(options));
	});
var _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$text = _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$input(_rundis$elm_bootstrap$Bootstrap_Form_Input$text);
var _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$password = _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$input(_rundis$elm_bootstrap$Bootstrap_Form_Input$password);
var _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$datetimeLocal = _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$input(_rundis$elm_bootstrap$Bootstrap_Form_Input$datetimeLocal);
var _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$date = _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$input(_rundis$elm_bootstrap$Bootstrap_Form_Input$date);
var _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$month = _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$input(_rundis$elm_bootstrap$Bootstrap_Form_Input$month);
var _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$time = _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$input(_rundis$elm_bootstrap$Bootstrap_Form_Input$time);
var _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$week = _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$input(_rundis$elm_bootstrap$Bootstrap_Form_Input$week);
var _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$number = _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$input(_rundis$elm_bootstrap$Bootstrap_Form_Input$number);
var _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$email = _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$input(_rundis$elm_bootstrap$Bootstrap_Form_Input$email);
var _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$url = _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$input(_rundis$elm_bootstrap$Bootstrap_Form_Input$url);
var _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$search = _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$input(_rundis$elm_bootstrap$Bootstrap_Form_Input$search);
var _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$tel = _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$input(_rundis$elm_bootstrap$Bootstrap_Form_Input$tel);
var _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$Addon = function (a) {
	return {ctor: 'Addon', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$span = F2(
	function (attributes, children) {
		return _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$Addon(
			A2(
				_elm_lang$html$Html$span,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('input-group-addon'),
					_1: attributes
				},
				children));
	});
var _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$button = F2(
	function (options, children) {
		return _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$Addon(
			A2(
				_elm_lang$html$Html$span,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('input-group-btn'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(_rundis$elm_bootstrap$Bootstrap_Button$button, options, children),
					_1: {ctor: '[]'}
				}));
	});

var _rundis$elm_bootstrap$Bootstrap_Form_Select$sizeAttribute = function (size) {
	return A2(
		_elm_lang$core$Maybe$map,
		function (s) {
			return _elm_lang$html$Html_Attributes$class(
				A2(_elm_lang$core$Basics_ops['++'], 'form-control-', s));
		},
		_rundis$elm_bootstrap$Bootstrap_Grid_Internal$screenSizeOption(size));
};
var _rundis$elm_bootstrap$Bootstrap_Form_Select$applyModifier = F2(
	function (modifier, options) {
		var _p0 = modifier;
		switch (_p0.ctor) {
			case 'Size':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						size: _elm_lang$core$Maybe$Just(_p0._0)
					});
			case 'Id':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						id: _elm_lang$core$Maybe$Just(_p0._0)
					});
			case 'Custom':
				return _elm_lang$core$Native_Utils.update(
					options,
					{custom: true});
			case 'Disabled':
				return _elm_lang$core$Native_Utils.update(
					options,
					{disabled: _p0._0});
			case 'OnChange':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						onChange: _elm_lang$core$Maybe$Just(_p0._0)
					});
			default:
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						attributes: A2(_elm_lang$core$Basics_ops['++'], options.attributes, _p0._0)
					});
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Form_Select$defaultOptions = {
	id: _elm_lang$core$Maybe$Nothing,
	size: _elm_lang$core$Maybe$Nothing,
	custom: false,
	disabled: false,
	onChange: _elm_lang$core$Maybe$Nothing,
	attributes: {ctor: '[]'}
};
var _rundis$elm_bootstrap$Bootstrap_Form_Select$customEventOnChange = function (tagger) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'change',
		A2(_elm_lang$core$Json_Decode$map, tagger, _elm_lang$html$Html_Events$targetValue));
};
var _rundis$elm_bootstrap$Bootstrap_Form_Select$toAttributes = function (modifiers) {
	var options = A3(_elm_lang$core$List$foldl, _rundis$elm_bootstrap$Bootstrap_Form_Select$applyModifier, _rundis$elm_bootstrap$Bootstrap_Form_Select$defaultOptions, modifiers);
	return A2(
		_elm_lang$core$Basics_ops['++'],
		{
			ctor: '::',
			_0: options.custom ? _elm_lang$html$Html_Attributes$class('custom-select form-control') : _elm_lang$html$Html_Attributes$class('form-control'),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$disabled(options.disabled),
				_1: {ctor: '[]'}
			}
		},
		A2(
			_elm_lang$core$Basics_ops['++'],
			A2(
				_elm_lang$core$List$filterMap,
				_elm_lang$core$Basics$identity,
				{
					ctor: '::',
					_0: A2(_elm_lang$core$Maybe$map, _elm_lang$html$Html_Attributes$id, options.id),
					_1: {
						ctor: '::',
						_0: A2(_elm_lang$core$Maybe$andThen, _rundis$elm_bootstrap$Bootstrap_Form_Select$sizeAttribute, options.size),
						_1: {
							ctor: '::',
							_0: A2(_elm_lang$core$Maybe$map, _rundis$elm_bootstrap$Bootstrap_Form_Select$customEventOnChange, options.onChange),
							_1: {ctor: '[]'}
						}
					}
				}),
			options.attributes));
};
var _rundis$elm_bootstrap$Bootstrap_Form_Select$view = function (_p1) {
	var _p2 = _p1;
	return A2(
		_elm_lang$html$Html$select,
		_rundis$elm_bootstrap$Bootstrap_Form_Select$toAttributes(_p2._0.options),
		A2(
			_elm_lang$core$List$map,
			function (_p3) {
				var _p4 = _p3;
				return _p4._0;
			},
			_p2._0.items));
};
var _rundis$elm_bootstrap$Bootstrap_Form_Select$Options = F6(
	function (a, b, c, d, e, f) {
		return {id: a, size: b, disabled: c, custom: d, onChange: e, attributes: f};
	});
var _rundis$elm_bootstrap$Bootstrap_Form_Select$Select = function (a) {
	return {ctor: 'Select', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Select$create = F2(
	function (options, items) {
		return _rundis$elm_bootstrap$Bootstrap_Form_Select$Select(
			{options: options, items: items});
	});
var _rundis$elm_bootstrap$Bootstrap_Form_Select$select = F2(
	function (options, items) {
		return _rundis$elm_bootstrap$Bootstrap_Form_Select$view(
			A2(_rundis$elm_bootstrap$Bootstrap_Form_Select$create, options, items));
	});
var _rundis$elm_bootstrap$Bootstrap_Form_Select$Item = function (a) {
	return {ctor: 'Item', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Select$item = F2(
	function (attributes, children) {
		return _rundis$elm_bootstrap$Bootstrap_Form_Select$Item(
			A2(_elm_lang$html$Html$option, attributes, children));
	});
var _rundis$elm_bootstrap$Bootstrap_Form_Select$Attrs = function (a) {
	return {ctor: 'Attrs', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Select$attrs = function (attrs) {
	return _rundis$elm_bootstrap$Bootstrap_Form_Select$Attrs(attrs);
};
var _rundis$elm_bootstrap$Bootstrap_Form_Select$OnChange = function (a) {
	return {ctor: 'OnChange', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Select$onChange = function (toMsg) {
	return _rundis$elm_bootstrap$Bootstrap_Form_Select$OnChange(toMsg);
};
var _rundis$elm_bootstrap$Bootstrap_Form_Select$Disabled = function (a) {
	return {ctor: 'Disabled', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Select$disabled = function (disabled) {
	return _rundis$elm_bootstrap$Bootstrap_Form_Select$Disabled(disabled);
};
var _rundis$elm_bootstrap$Bootstrap_Form_Select$Custom = {ctor: 'Custom'};
var _rundis$elm_bootstrap$Bootstrap_Form_Select$custom = function (options) {
	return function (_p5) {
		return _rundis$elm_bootstrap$Bootstrap_Form_Select$view(
			A2(
				_rundis$elm_bootstrap$Bootstrap_Form_Select$create,
				{ctor: '::', _0: _rundis$elm_bootstrap$Bootstrap_Form_Select$Custom, _1: options},
				_p5));
	};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Select$Id = function (a) {
	return {ctor: 'Id', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Select$id = function (id) {
	return _rundis$elm_bootstrap$Bootstrap_Form_Select$Id(id);
};
var _rundis$elm_bootstrap$Bootstrap_Form_Select$Size = function (a) {
	return {ctor: 'Size', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Select$small = _rundis$elm_bootstrap$Bootstrap_Form_Select$Size(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM);
var _rundis$elm_bootstrap$Bootstrap_Form_Select$large = _rundis$elm_bootstrap$Bootstrap_Form_Select$Size(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG);

var _rundis$elm_bootstrap$Bootstrap_Grid$renderCol = function (column) {
	var _p0 = column;
	switch (_p0.ctor) {
		case 'Column':
			return A2(
				_elm_lang$html$Html$div,
				_rundis$elm_bootstrap$Bootstrap_Grid_Internal$colAttributes(_p0._0.options),
				_p0._0.children);
		case 'ColBreak':
			return _p0._0;
		default:
			return A3(
				_elm_lang$html$Html_Keyed$node,
				'div',
				_rundis$elm_bootstrap$Bootstrap_Grid_Internal$colAttributes(_p0._0.options),
				_p0._0.children);
	}
};
var _rundis$elm_bootstrap$Bootstrap_Grid$keyedRow = F2(
	function (options, keyedCols) {
		return A3(
			_elm_lang$html$Html_Keyed$node,
			'div',
			_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowAttributes(options),
			A2(
				_elm_lang$core$List$map,
				function (_p1) {
					var _p2 = _p1;
					return {
						ctor: '_Tuple2',
						_0: _p2._0,
						_1: _rundis$elm_bootstrap$Bootstrap_Grid$renderCol(_p2._1)
					};
				},
				keyedCols));
	});
var _rundis$elm_bootstrap$Bootstrap_Grid$row = F2(
	function (options, cols) {
		return A2(
			_elm_lang$html$Html$div,
			_rundis$elm_bootstrap$Bootstrap_Grid_Internal$rowAttributes(options),
			A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Grid$renderCol, cols));
	});
var _rundis$elm_bootstrap$Bootstrap_Grid$simpleRow = function (cols) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Grid$row,
		{ctor: '[]'},
		cols);
};
var _rundis$elm_bootstrap$Bootstrap_Grid$containerFluid = F2(
	function (attributes, children) {
		return A2(
			_elm_lang$html$Html$div,
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('container-fluid'),
					_1: {ctor: '[]'}
				},
				attributes),
			children);
	});
var _rundis$elm_bootstrap$Bootstrap_Grid$container = F2(
	function (attributes, children) {
		return A2(
			_elm_lang$html$Html$div,
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('container'),
					_1: {ctor: '[]'}
				},
				attributes),
			children);
	});
var _rundis$elm_bootstrap$Bootstrap_Grid$KeyedColumn = function (a) {
	return {ctor: 'KeyedColumn', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Grid$keyedCol = F2(
	function (options, children) {
		return _rundis$elm_bootstrap$Bootstrap_Grid$KeyedColumn(
			{options: options, children: children});
	});
var _rundis$elm_bootstrap$Bootstrap_Grid$ColBreak = function (a) {
	return {ctor: 'ColBreak', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Grid$colBreak = function (attributes) {
	return _rundis$elm_bootstrap$Bootstrap_Grid$ColBreak(
		A2(
			_elm_lang$html$Html$div,
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('w-100'),
					_1: {ctor: '[]'}
				},
				attributes),
			{ctor: '[]'}));
};
var _rundis$elm_bootstrap$Bootstrap_Grid$Column = function (a) {
	return {ctor: 'Column', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Grid$col = F2(
	function (options, children) {
		return _rundis$elm_bootstrap$Bootstrap_Grid$Column(
			{options: options, children: children});
	});

var _rundis$elm_bootstrap$Bootstrap_Modal$ifElse = F3(
	function (pred, $true, $false) {
		return pred ? $true : $false;
	});
var _rundis$elm_bootstrap$Bootstrap_Modal$renderFooter = function (maybeFooter) {
	var _p0 = maybeFooter;
	if (_p0.ctor === 'Just') {
		var _p1 = _p0._0._0;
		return _elm_lang$core$Maybe$Just(
			A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('modal-footer'),
					_1: _p1.attributes
				},
				_p1.children));
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _rundis$elm_bootstrap$Bootstrap_Modal$renderBody = function (maybeBody) {
	var _p2 = maybeBody;
	if (_p2.ctor === 'Just') {
		var _p3 = _p2._0._0;
		return _elm_lang$core$Maybe$Just(
			A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('modal-body'),
					_1: _p3.attributes
				},
				_p3.children));
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _rundis$elm_bootstrap$Bootstrap_Modal$modalClass = function (option) {
	var _p4 = option;
	var _p5 = _rundis$elm_bootstrap$Bootstrap_Grid_Internal$screenSizeOption(_p4._0);
	if (_p5.ctor === 'Just') {
		return _elm_lang$core$Maybe$Just(
			_elm_lang$html$Html_Attributes$class(
				A2(_elm_lang$core$Basics_ops['++'], 'modal-', _p5._0)));
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _rundis$elm_bootstrap$Bootstrap_Modal$modalAttributes = function (options) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('modal-dialog'),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'pointer-events', _1: 'auto'},
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		},
		A2(
			_elm_lang$core$List$filterMap,
			_elm_lang$core$Basics$identity,
			A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Modal$modalClass, options)));
};
var _rundis$elm_bootstrap$Bootstrap_Modal$display = function (_p6) {
	var _p7 = _p6;
	var _p8 = _p7._0;
	return {
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$style(
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'display', _1: 'block'},
					_1: {ctor: '[]'}
				},
				A3(
					_rundis$elm_bootstrap$Bootstrap_Modal$ifElse,
					_p8,
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'pointer-events', _1: 'none'},
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'height', _1: '0px'},
						_1: {ctor: '[]'}
					}))),
		_1: {
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$classList(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'modal', _1: true},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'fade', _1: true},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'show', _1: _p8},
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {ctor: '[]'}
		}
	};
};
var _rundis$elm_bootstrap$Bootstrap_Modal$Item = F2(
	function (a, b) {
		return {attributes: a, children: b};
	});
var _rundis$elm_bootstrap$Bootstrap_Modal$Config = function (a) {
	return {ctor: 'Config', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Modal$config = function (toMsg) {
	return _rundis$elm_bootstrap$Bootstrap_Modal$Config(
		{
			toMsg: toMsg,
			options: {ctor: '[]'},
			header: _elm_lang$core$Maybe$Nothing,
			body: _elm_lang$core$Maybe$Nothing,
			footer: _elm_lang$core$Maybe$Nothing
		});
};
var _rundis$elm_bootstrap$Bootstrap_Modal$State = function (a) {
	return {ctor: 'State', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Modal$hiddenState = _rundis$elm_bootstrap$Bootstrap_Modal$State(false);
var _rundis$elm_bootstrap$Bootstrap_Modal$closeButton = function (toMsg) {
	return A2(
		_elm_lang$html$Html$button,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('close'),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(
					toMsg(_rundis$elm_bootstrap$Bootstrap_Modal$hiddenState)),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('x'),
			_1: {ctor: '[]'}
		});
};
var _rundis$elm_bootstrap$Bootstrap_Modal$renderHeader = F2(
	function (toMsg, maybeHeader) {
		var _p9 = maybeHeader;
		if (_p9.ctor === 'Just') {
			var _p10 = _p9._0._0;
			return _elm_lang$core$Maybe$Just(
				A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('modal-header'),
						_1: _p10.attributes
					},
					A2(
						_elm_lang$core$Basics_ops['++'],
						_p10.children,
						{
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Modal$closeButton(toMsg),
							_1: {ctor: '[]'}
						})));
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Modal$backdrop = F2(
	function (toMsg, _p11) {
		var _p12 = _p11;
		return _p12._0 ? {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('modal-backdrop fade show'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(
							toMsg(_rundis$elm_bootstrap$Bootstrap_Modal$hiddenState)),
						_1: {ctor: '[]'}
					}
				},
				{ctor: '[]'}),
			_1: {ctor: '[]'}
		} : {ctor: '[]'};
	});
var _rundis$elm_bootstrap$Bootstrap_Modal$view = F2(
	function (state, _p13) {
		var _p14 = _p13;
		var _p15 = _p14._0.toMsg;
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						A2(
							_elm_lang$core$Basics_ops['++'],
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$tabindex(-1),
								_1: {ctor: '[]'}
							},
							_rundis$elm_bootstrap$Bootstrap_Modal$display(state)),
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: A2(_elm_lang$html$Html_Attributes$attribute, 'role', 'document'),
									_1: _rundis$elm_bootstrap$Bootstrap_Modal$modalAttributes(_p14._0.options)
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$div,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('modal-content'),
											_1: {ctor: '[]'}
										},
										A2(
											_elm_lang$core$List$filterMap,
											_elm_lang$core$Basics$identity,
											{
												ctor: '::',
												_0: A2(_rundis$elm_bootstrap$Bootstrap_Modal$renderHeader, _p15, _p14._0.header),
												_1: {
													ctor: '::',
													_0: _rundis$elm_bootstrap$Bootstrap_Modal$renderBody(_p14._0.body),
													_1: {
														ctor: '::',
														_0: _rundis$elm_bootstrap$Bootstrap_Modal$renderFooter(_p14._0.footer),
														_1: {ctor: '[]'}
													}
												}
											})),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				},
				A2(_rundis$elm_bootstrap$Bootstrap_Modal$backdrop, _p15, state)));
	});
var _rundis$elm_bootstrap$Bootstrap_Modal$visibleState = _rundis$elm_bootstrap$Bootstrap_Modal$State(true);
var _rundis$elm_bootstrap$Bootstrap_Modal$ModalSize = function (a) {
	return {ctor: 'ModalSize', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Modal$small = function (_p16) {
	var _p17 = _p16;
	var _p18 = _p17._0;
	return _rundis$elm_bootstrap$Bootstrap_Modal$Config(
		_elm_lang$core$Native_Utils.update(
			_p18,
			{
				options: A2(
					_elm_lang$core$Basics_ops['++'],
					_p18.options,
					{
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Modal$ModalSize(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM),
						_1: {ctor: '[]'}
					})
			}));
};
var _rundis$elm_bootstrap$Bootstrap_Modal$large = function (_p19) {
	var _p20 = _p19;
	var _p21 = _p20._0;
	return _rundis$elm_bootstrap$Bootstrap_Modal$Config(
		_elm_lang$core$Native_Utils.update(
			_p21,
			{
				options: A2(
					_elm_lang$core$Basics_ops['++'],
					_p21.options,
					{
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Modal$ModalSize(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG),
						_1: {ctor: '[]'}
					})
			}));
};
var _rundis$elm_bootstrap$Bootstrap_Modal$Header = function (a) {
	return {ctor: 'Header', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Modal$header = F3(
	function (attributes, children, _p22) {
		var _p23 = _p22;
		return _rundis$elm_bootstrap$Bootstrap_Modal$Config(
			_elm_lang$core$Native_Utils.update(
				_p23._0,
				{
					header: _elm_lang$core$Maybe$Just(
						_rundis$elm_bootstrap$Bootstrap_Modal$Header(
							{attributes: attributes, children: children}))
				}));
	});
var _rundis$elm_bootstrap$Bootstrap_Modal$titledHeader = F3(
	function (itemFn, attributes, children) {
		return A2(
			_rundis$elm_bootstrap$Bootstrap_Modal$header,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					itemFn,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('modal-title'),
						_1: attributes
					},
					children),
				_1: {ctor: '[]'}
			});
	});
var _rundis$elm_bootstrap$Bootstrap_Modal$h1 = _rundis$elm_bootstrap$Bootstrap_Modal$titledHeader(_elm_lang$html$Html$h1);
var _rundis$elm_bootstrap$Bootstrap_Modal$h2 = _rundis$elm_bootstrap$Bootstrap_Modal$titledHeader(_elm_lang$html$Html$h2);
var _rundis$elm_bootstrap$Bootstrap_Modal$h3 = _rundis$elm_bootstrap$Bootstrap_Modal$titledHeader(_elm_lang$html$Html$h3);
var _rundis$elm_bootstrap$Bootstrap_Modal$h4 = _rundis$elm_bootstrap$Bootstrap_Modal$titledHeader(_elm_lang$html$Html$h4);
var _rundis$elm_bootstrap$Bootstrap_Modal$h5 = _rundis$elm_bootstrap$Bootstrap_Modal$titledHeader(_elm_lang$html$Html$h5);
var _rundis$elm_bootstrap$Bootstrap_Modal$h6 = _rundis$elm_bootstrap$Bootstrap_Modal$titledHeader(_elm_lang$html$Html$h6);
var _rundis$elm_bootstrap$Bootstrap_Modal$Body = function (a) {
	return {ctor: 'Body', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Modal$body = F3(
	function (attributes, children, _p24) {
		var _p25 = _p24;
		return _rundis$elm_bootstrap$Bootstrap_Modal$Config(
			_elm_lang$core$Native_Utils.update(
				_p25._0,
				{
					body: _elm_lang$core$Maybe$Just(
						_rundis$elm_bootstrap$Bootstrap_Modal$Body(
							{attributes: attributes, children: children}))
				}));
	});
var _rundis$elm_bootstrap$Bootstrap_Modal$Footer = function (a) {
	return {ctor: 'Footer', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Modal$footer = F3(
	function (attributes, children, _p26) {
		var _p27 = _p26;
		return _rundis$elm_bootstrap$Bootstrap_Modal$Config(
			_elm_lang$core$Native_Utils.update(
				_p27._0,
				{
					footer: _elm_lang$core$Maybe$Just(
						_rundis$elm_bootstrap$Bootstrap_Modal$Footer(
							{attributes: attributes, children: children}))
				}));
	});

var _rundis$elm_bootstrap$Bootstrap_Navbar$toRGBString = function (color) {
	var _p0 = _elm_lang$core$Color$toRgb(color);
	var red = _p0.red;
	var green = _p0.green;
	var blue = _p0.blue;
	return A2(
		_elm_lang$core$Basics_ops['++'],
		'RGB(',
		A2(
			_elm_lang$core$Basics_ops['++'],
			_elm_lang$core$Basics$toString(red),
			A2(
				_elm_lang$core$Basics_ops['++'],
				',',
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$Basics$toString(green),
					A2(
						_elm_lang$core$Basics_ops['++'],
						',',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(blue),
							')'))))));
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$backgroundColorOption = function (bgClass) {
	var _p1 = bgClass;
	switch (_p1.ctor) {
		case 'Faded':
			return _elm_lang$html$Html_Attributes$class('bg-faded');
		case 'Primary':
			return _elm_lang$html$Html_Attributes$class('bg-primary');
		case 'Success':
			return _elm_lang$html$Html_Attributes$class('bg-success');
		case 'Info':
			return _elm_lang$html$Html_Attributes$class('bg-info');
		case 'Warning':
			return _elm_lang$html$Html_Attributes$class('bg-warning');
		case 'Danger':
			return _elm_lang$html$Html_Attributes$class('bg-danger');
		case 'Inverse':
			return _elm_lang$html$Html_Attributes$class('bg-inverse');
		case 'Custom':
			return _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'background-color',
						_1: _rundis$elm_bootstrap$Bootstrap_Navbar$toRGBString(_p1._0)
					},
					_1: {ctor: '[]'}
				});
		default:
			return _elm_lang$html$Html_Attributes$class(_p1._0);
	}
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$linkModifierClass = function (modifier) {
	return _elm_lang$html$Html_Attributes$class(
		function () {
			var _p2 = modifier;
			if (_p2.ctor === 'Dark') {
				return 'navbar-inverse';
			} else {
				return 'navbar-light';
			}
		}());
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$schemeAttributes = function (_p3) {
	var _p4 = _p3;
	return {
		ctor: '::',
		_0: _rundis$elm_bootstrap$Bootstrap_Navbar$linkModifierClass(_p4.modifier),
		_1: {
			ctor: '::',
			_0: _rundis$elm_bootstrap$Bootstrap_Navbar$backgroundColorOption(_p4.bgColor),
			_1: {ctor: '[]'}
		}
	};
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$fixOption = function (fix) {
	var _p5 = fix;
	if (_p5.ctor === 'Top') {
		return 'fixed-top';
	} else {
		return 'fixed-bottom';
	}
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$navbarAttributes = function (options) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$classList(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'navbar', _1: true},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'container', _1: options.isContainer},
						_1: {ctor: '[]'}
					}
				}),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class(
					A2(
						_elm_lang$core$Basics_ops['++'],
						'navbar-toggleable',
						A2(
							_elm_lang$core$Maybe$withDefault,
							'',
							A2(
								_elm_lang$core$Maybe$map,
								function (s) {
									return A2(_elm_lang$core$Basics_ops['++'], '-', s);
								},
								_rundis$elm_bootstrap$Bootstrap_Grid_Internal$screenSizeOption(options.toggleAt))))),
				_1: {ctor: '[]'}
			}
		},
		A2(
			_elm_lang$core$Basics_ops['++'],
			function () {
				var _p6 = options.scheme;
				if (_p6.ctor === 'Just') {
					return _rundis$elm_bootstrap$Bootstrap_Navbar$schemeAttributes(_p6._0);
				} else {
					return {ctor: '[]'};
				}
			}(),
			A2(
				_elm_lang$core$Basics_ops['++'],
				function () {
					var _p7 = options.fix;
					if (_p7.ctor === 'Just') {
						return {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class(
								_rundis$elm_bootstrap$Bootstrap_Navbar$fixOption(_p7._0)),
							_1: {ctor: '[]'}
						};
					} else {
						return {ctor: '[]'};
					}
				}(),
				options.attributes)));
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$renderCustom = function (items) {
	return A2(
		_elm_lang$core$List$map,
		function (_p8) {
			var _p9 = _p8;
			return _p9._0;
		},
		items);
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$renderItemLink = function (_p10) {
	var _p11 = _p10;
	return A2(
		_elm_lang$html$Html$li,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('nav-item'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$a,
				A2(
					_elm_lang$core$Basics_ops['++'],
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('nav-link'),
						_1: {ctor: '[]'}
					},
					_p11.attributes),
				_p11.children),
			_1: {ctor: '[]'}
		});
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$maybeBrand = function (brand) {
	var _p12 = brand;
	if (_p12.ctor === 'Just') {
		return {
			ctor: '::',
			_0: _p12._0._0,
			_1: {ctor: '[]'}
		};
	} else {
		return {ctor: '[]'};
	}
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$transitionStyle = function (maybeHeight) {
	var pixelHeight = A2(
		_elm_lang$core$Maybe$withDefault,
		'0',
		A2(
			_elm_lang$core$Maybe$map,
			function (v) {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$Basics$toString(v),
					'px');
			},
			maybeHeight));
	return _elm_lang$html$Html_Attributes$style(
		{
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'position', _1: 'relative'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'height', _1: pixelHeight},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'overflow', _1: 'hidden'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: '-webkit-transition-timing-function', _1: 'ease'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: '-o-transition-timing-function', _1: 'ease'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'transition-timing-function', _1: 'ease'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: '-webkit-transition-duration', _1: '0.35s'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: '-o-transition-duration', _1: '0.35s'},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'transition-duration', _1: '0.35s'},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: '-webkit-transition-property', _1: 'height'},
												_1: {
													ctor: '::',
													_0: {ctor: '_Tuple2', _0: '-o-transition-property', _1: 'height'},
													_1: {
														ctor: '::',
														_0: {ctor: '_Tuple2', _0: 'transition-property', _1: 'height'},
														_1: {ctor: '[]'}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		});
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$toScreenSize = function (_p13) {
	var _p14 = _p13;
	var _p15 = _p14.width;
	return (_elm_lang$core$Native_Utils.cmp(_p15, 576) < 1) ? _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS : ((_elm_lang$core$Native_Utils.cmp(_p15, 768) < 1) ? _rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM : ((_elm_lang$core$Native_Utils.cmp(_p15, 992) < 1) ? _rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD : ((_elm_lang$core$Native_Utils.cmp(_p15, 1200) < 1) ? _rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG : _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL)));
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$sizeToComparable = function (size) {
	var _p16 = size;
	switch (_p16.ctor) {
		case 'XS':
			return 1;
		case 'SM':
			return 2;
		case 'MD':
			return 3;
		case 'LG':
			return 4;
		default:
			return 5;
	}
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$shouldHideMenu = F2(
	function (_p18, _p17) {
		var _p19 = _p18;
		var _p20 = _p17;
		var winMedia = function () {
			var _p21 = _p19._0.windowSize;
			if (_p21.ctor === 'Just') {
				return _rundis$elm_bootstrap$Bootstrap_Navbar$toScreenSize(_p21._0);
			} else {
				return _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS;
			}
		}();
		return _elm_lang$core$Native_Utils.cmp(
			_rundis$elm_bootstrap$Bootstrap_Navbar$sizeToComparable(winMedia),
			_rundis$elm_bootstrap$Bootstrap_Navbar$sizeToComparable(_p20._0.options.toggleAt)) > 0;
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$menuWrapperAttributes = F2(
	function (_p23, _p22) {
		var _p24 = _p23;
		var _p30 = _p24;
		var _p25 = _p22;
		var _p29 = _p25._0.withAnimation;
		var _p28 = _p25;
		var display = function () {
			var _p26 = _p24._0.height;
			if (_p26.ctor === 'Nothing') {
				return ((!_p29) || A2(_rundis$elm_bootstrap$Bootstrap_Navbar$shouldHideMenu, _p30, _p28)) ? 'flex' : 'block';
			} else {
				return 'flex';
			}
		}();
		var styleBlock = {
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'display', _1: 'block'},
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		};
		var _p27 = _p24._0.visibility;
		switch (_p27.ctor) {
			case 'Hidden':
				return {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'display', _1: display},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'width', _1: '100%'},
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				};
			case 'StartDown':
				return styleBlock;
			case 'AnimatingDown':
				return styleBlock;
			case 'AnimatingUp':
				return styleBlock;
			case 'StartUp':
				return styleBlock;
			default:
				return ((!_p29) || A2(_rundis$elm_bootstrap$Bootstrap_Navbar$shouldHideMenu, _p30, _p28)) ? {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('collapse navbar-collapse show'),
					_1: {ctor: '[]'}
				} : {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'display', _1: 'block'},
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				};
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$heightDecoder = function () {
	var resToDec = function (res) {
		var _p31 = res;
		if (_p31.ctor === 'Ok') {
			return _elm_lang$core$Json_Decode$succeed(_p31._0);
		} else {
			return _elm_lang$core$Json_Decode$fail(_p31._0);
		}
	};
	var fromNavDec = _elm_lang$core$Json_Decode$oneOf(
		{
			ctor: '::',
			_0: A2(
				_elm_lang$core$Json_Decode$at,
				{
					ctor: '::',
					_0: 'childNodes',
					_1: {
						ctor: '::',
						_0: '2',
						_1: {
							ctor: '::',
							_0: 'childNodes',
							_1: {
								ctor: '::',
								_0: '0',
								_1: {
									ctor: '::',
									_0: 'offsetHeight',
									_1: {ctor: '[]'}
								}
							}
						}
					}
				},
				_elm_lang$core$Json_Decode$float),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$core$Json_Decode$at,
					{
						ctor: '::',
						_0: 'childNodes',
						_1: {
							ctor: '::',
							_0: '1',
							_1: {
								ctor: '::',
								_0: 'childNodes',
								_1: {
									ctor: '::',
									_0: '0',
									_1: {
										ctor: '::',
										_0: 'offsetHeight',
										_1: {ctor: '[]'}
									}
								}
							}
						}
					},
					_elm_lang$core$Json_Decode$float),
				_1: {ctor: '[]'}
			}
		});
	var fromButtonDec = _debois$elm_dom$DOM$parentElement(fromNavDec);
	var tagDecoder = A3(
		_elm_lang$core$Json_Decode$map2,
		F2(
			function (tag, val) {
				return {ctor: '_Tuple2', _0: tag, _1: val};
			}),
		A2(_elm_lang$core$Json_Decode$field, 'tagName', _elm_lang$core$Json_Decode$string),
		_elm_lang$core$Json_Decode$value);
	return A2(
		_elm_lang$core$Json_Decode$andThen,
		function (_p32) {
			var _p33 = _p32;
			var _p35 = _p33._1;
			var _p34 = _p33._0;
			switch (_p34) {
				case 'NAV':
					return resToDec(
						A2(_elm_lang$core$Json_Decode$decodeValue, fromNavDec, _p35));
				case 'BUTTON':
					return resToDec(
						A2(_elm_lang$core$Json_Decode$decodeValue, fromButtonDec, _p35));
				default:
					return _elm_lang$core$Json_Decode$succeed(0);
			}
		},
		_debois$elm_dom$DOM$target(
			_debois$elm_dom$DOM$parentElement(tagDecoder)));
}();
var _rundis$elm_bootstrap$Bootstrap_Navbar$VisibilityState = F4(
	function (a, b, c, d) {
		return {visibility: a, height: b, windowSize: c, dropdowns: d};
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$ConfigRec = F6(
	function (a, b, c, d, e, f) {
		return {options: a, toMsg: b, withAnimation: c, brand: d, items: e, customItems: f};
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$Options = F5(
	function (a, b, c, d, e) {
		return {fix: a, isContainer: b, scheme: c, toggleAt: d, attributes: e};
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$Scheme = F2(
	function (a, b) {
		return {modifier: a, bgColor: b};
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$State = function (a) {
	return {ctor: 'State', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$mapState = F2(
	function (mapper, _p36) {
		var _p37 = _p36;
		return _rundis$elm_bootstrap$Bootstrap_Navbar$State(
			mapper(_p37._0));
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$initWindowSize = F2(
	function (toMsg, state) {
		return A2(
			_elm_lang$core$Task$perform,
			function (size) {
				return toMsg(
					A2(
						_rundis$elm_bootstrap$Bootstrap_Navbar$mapState,
						function (s) {
							return _elm_lang$core$Native_Utils.update(
								s,
								{
									windowSize: _elm_lang$core$Maybe$Just(size)
								});
						},
						state));
			},
			_elm_lang$window$Window$size);
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$Shown = {ctor: 'Shown'};
var _rundis$elm_bootstrap$Bootstrap_Navbar$AnimatingUp = {ctor: 'AnimatingUp'};
var _rundis$elm_bootstrap$Bootstrap_Navbar$StartUp = {ctor: 'StartUp'};
var _rundis$elm_bootstrap$Bootstrap_Navbar$AnimatingDown = {ctor: 'AnimatingDown'};
var _rundis$elm_bootstrap$Bootstrap_Navbar$StartDown = {ctor: 'StartDown'};
var _rundis$elm_bootstrap$Bootstrap_Navbar$Hidden = {ctor: 'Hidden'};
var _rundis$elm_bootstrap$Bootstrap_Navbar$initialState = function (toMsg) {
	var state = _rundis$elm_bootstrap$Bootstrap_Navbar$State(
		{visibility: _rundis$elm_bootstrap$Bootstrap_Navbar$Hidden, height: _elm_lang$core$Maybe$Nothing, windowSize: _elm_lang$core$Maybe$Nothing, dropdowns: _elm_lang$core$Dict$empty});
	return {
		ctor: '_Tuple2',
		_0: state,
		_1: A2(_rundis$elm_bootstrap$Bootstrap_Navbar$initWindowSize, toMsg, state)
	};
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$visibilityTransition = F2(
	function (withAnimation, visibility) {
		var _p38 = {ctor: '_Tuple2', _0: withAnimation, _1: visibility};
		_v22_8:
		do {
			if (_p38.ctor === '_Tuple2') {
				if (_p38._0 === true) {
					switch (_p38._1.ctor) {
						case 'Hidden':
							return _rundis$elm_bootstrap$Bootstrap_Navbar$StartDown;
						case 'StartDown':
							return _rundis$elm_bootstrap$Bootstrap_Navbar$AnimatingDown;
						case 'AnimatingDown':
							return _rundis$elm_bootstrap$Bootstrap_Navbar$Shown;
						case 'Shown':
							return _rundis$elm_bootstrap$Bootstrap_Navbar$StartUp;
						case 'StartUp':
							return _rundis$elm_bootstrap$Bootstrap_Navbar$AnimatingUp;
						default:
							return _rundis$elm_bootstrap$Bootstrap_Navbar$Hidden;
					}
				} else {
					switch (_p38._1.ctor) {
						case 'Hidden':
							return _rundis$elm_bootstrap$Bootstrap_Navbar$Shown;
						case 'Shown':
							return _rundis$elm_bootstrap$Bootstrap_Navbar$Hidden;
						default:
							break _v22_8;
					}
				}
			} else {
				break _v22_8;
			}
		} while(false);
		return _rundis$elm_bootstrap$Bootstrap_Navbar$Hidden;
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$toggleHandler = F2(
	function (_p40, _p39) {
		var _p41 = _p40;
		var _p42 = _p39;
		var updState = function (h) {
			return A2(
				_rundis$elm_bootstrap$Bootstrap_Navbar$mapState,
				function (s) {
					return _elm_lang$core$Native_Utils.update(
						s,
						{
							height: _elm_lang$core$Maybe$Just(h),
							visibility: A2(_rundis$elm_bootstrap$Bootstrap_Navbar$visibilityTransition, _p42._0.withAnimation, s.visibility)
						});
				},
				_p41);
		};
		return A2(
			_elm_lang$html$Html_Events$on,
			'click',
			A2(
				_elm_lang$core$Json_Decode$andThen,
				function (v) {
					return _elm_lang$core$Json_Decode$succeed(
						_p42._0.toMsg(
							(_elm_lang$core$Native_Utils.cmp(v, 0) > 0) ? updState(v) : updState(
								A2(_elm_lang$core$Maybe$withDefault, 0, _p41._0.height))));
				},
				_rundis$elm_bootstrap$Bootstrap_Navbar$heightDecoder));
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$transitionHandler = F2(
	function (state, _p43) {
		var _p44 = _p43;
		return _elm_lang$core$Json_Decode$succeed(
			_p44._0.toMsg(
				A2(
					_rundis$elm_bootstrap$Bootstrap_Navbar$mapState,
					function (s) {
						return _elm_lang$core$Native_Utils.update(
							s,
							{
								visibility: A2(_rundis$elm_bootstrap$Bootstrap_Navbar$visibilityTransition, _p44._0.withAnimation, s.visibility)
							});
					},
					state)));
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$menuAttributes = F2(
	function (_p46, _p45) {
		var _p47 = _p46;
		var _p53 = _p47;
		var _p52 = _p47._0.height;
		var _p48 = _p45;
		var _p51 = _p48;
		var defaults = {
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('collapse navbar-collapse'),
			_1: {ctor: '[]'}
		};
		var _p49 = _p47._0.visibility;
		switch (_p49.ctor) {
			case 'Hidden':
				var _p50 = _p52;
				if (_p50.ctor === 'Nothing') {
					return ((!_p48._0.withAnimation) || A2(_rundis$elm_bootstrap$Bootstrap_Navbar$shouldHideMenu, _p53, _p51)) ? defaults : {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(
							{
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'display', _1: 'block'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'height', _1: '0'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'overflow', _1: 'hidden'},
										_1: {ctor: '[]'}
									}
								}
							}),
						_1: {ctor: '[]'}
					};
				} else {
					return defaults;
				}
			case 'StartDown':
				return {
					ctor: '::',
					_0: _rundis$elm_bootstrap$Bootstrap_Navbar$transitionStyle(_elm_lang$core$Maybe$Nothing),
					_1: {ctor: '[]'}
				};
			case 'AnimatingDown':
				return {
					ctor: '::',
					_0: _rundis$elm_bootstrap$Bootstrap_Navbar$transitionStyle(_p52),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html_Events$on,
							'transitionend',
							A2(_rundis$elm_bootstrap$Bootstrap_Navbar$transitionHandler, _p53, _p51)),
						_1: {ctor: '[]'}
					}
				};
			case 'AnimatingUp':
				return {
					ctor: '::',
					_0: _rundis$elm_bootstrap$Bootstrap_Navbar$transitionStyle(_elm_lang$core$Maybe$Nothing),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html_Events$on,
							'transitionend',
							A2(_rundis$elm_bootstrap$Bootstrap_Navbar$transitionHandler, _p53, _p51)),
						_1: {ctor: '[]'}
					}
				};
			case 'StartUp':
				return {
					ctor: '::',
					_0: _rundis$elm_bootstrap$Bootstrap_Navbar$transitionStyle(_p52),
					_1: {ctor: '[]'}
				};
			default:
				return A2(
					_elm_lang$core$Basics_ops['++'],
					defaults,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('show'),
						_1: {ctor: '[]'}
					});
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$Closed = {ctor: 'Closed'};
var _rundis$elm_bootstrap$Bootstrap_Navbar$getOrInitDropdownStatus = F2(
	function (id, _p54) {
		var _p55 = _p54;
		return A2(
			_elm_lang$core$Maybe$withDefault,
			_rundis$elm_bootstrap$Bootstrap_Navbar$Closed,
			A2(_elm_lang$core$Dict$get, id, _p55._0.dropdowns));
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$ListenClicks = {ctor: 'ListenClicks'};
var _rundis$elm_bootstrap$Bootstrap_Navbar$Open = {ctor: 'Open'};
var _rundis$elm_bootstrap$Bootstrap_Navbar$dropdownSubscriptions = F2(
	function (_p56, toMsg) {
		var _p57 = _p56;
		var _p64 = _p57._0.dropdowns;
		var needsSub = function (s) {
			return A2(
				_elm_lang$core$List$any,
				function (_p58) {
					var _p59 = _p58;
					return _elm_lang$core$Native_Utils.eq(_p59._1, s);
				},
				_elm_lang$core$Dict$toList(_p64));
		};
		var updDropdowns = A2(
			_elm_lang$core$Dict$map,
			F2(
				function (_p60, status) {
					var _p61 = status;
					switch (_p61.ctor) {
						case 'Open':
							return _rundis$elm_bootstrap$Bootstrap_Navbar$ListenClicks;
						case 'ListenClicks':
							return _rundis$elm_bootstrap$Bootstrap_Navbar$Closed;
						default:
							return _rundis$elm_bootstrap$Bootstrap_Navbar$Closed;
					}
				}),
			_p64);
		var updState = A2(
			_rundis$elm_bootstrap$Bootstrap_Navbar$mapState,
			function (s) {
				return _elm_lang$core$Native_Utils.update(
					s,
					{dropdowns: updDropdowns});
			},
			_p57);
		return _elm_lang$core$Platform_Sub$batch(
			{
				ctor: '::',
				_0: needsSub(_rundis$elm_bootstrap$Bootstrap_Navbar$Open) ? _elm_lang$animation_frame$AnimationFrame$times(
					function (_p62) {
						return toMsg(updState);
					}) : _elm_lang$core$Platform_Sub$none,
				_1: {
					ctor: '::',
					_0: needsSub(_rundis$elm_bootstrap$Bootstrap_Navbar$ListenClicks) ? _elm_lang$mouse$Mouse$clicks(
						function (_p63) {
							return toMsg(updState);
						}) : _elm_lang$core$Platform_Sub$none,
					_1: {ctor: '[]'}
				}
			});
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$subscriptions = F2(
	function (_p65, toMsg) {
		var _p66 = _p65;
		var _p70 = _p66;
		var updState = function (v) {
			return A2(
				_rundis$elm_bootstrap$Bootstrap_Navbar$mapState,
				function (s) {
					return _elm_lang$core$Native_Utils.update(
						s,
						{visibility: v});
				},
				_p70);
		};
		return _elm_lang$core$Platform_Sub$batch(
			{
				ctor: '::',
				_0: function () {
					var _p67 = _p66._0.visibility;
					switch (_p67.ctor) {
						case 'StartDown':
							return _elm_lang$animation_frame$AnimationFrame$times(
								function (_p68) {
									return toMsg(
										updState(_rundis$elm_bootstrap$Bootstrap_Navbar$AnimatingDown));
								});
						case 'StartUp':
							return _elm_lang$animation_frame$AnimationFrame$times(
								function (_p69) {
									return toMsg(
										updState(_rundis$elm_bootstrap$Bootstrap_Navbar$AnimatingUp));
								});
						default:
							return _elm_lang$core$Platform_Sub$none;
					}
				}(),
				_1: {
					ctor: '::',
					_0: _elm_lang$window$Window$resizes(
						function (size) {
							return toMsg(
								A2(
									_rundis$elm_bootstrap$Bootstrap_Navbar$mapState,
									function (s) {
										return _elm_lang$core$Native_Utils.update(
											s,
											{
												windowSize: _elm_lang$core$Maybe$Just(size)
											});
									},
									_p70));
						}),
					_1: {
						ctor: '::',
						_0: A2(_rundis$elm_bootstrap$Bootstrap_Navbar$dropdownSubscriptions, _p70, toMsg),
						_1: {ctor: '[]'}
					}
				}
			});
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$toggleOpen = F3(
	function (state, id, _p71) {
		var _p72 = _p71;
		var currStatus = A2(_rundis$elm_bootstrap$Bootstrap_Navbar$getOrInitDropdownStatus, id, state);
		var newStatus = function () {
			var _p73 = currStatus;
			switch (_p73.ctor) {
				case 'Open':
					return _rundis$elm_bootstrap$Bootstrap_Navbar$Closed;
				case 'ListenClicks':
					return _rundis$elm_bootstrap$Bootstrap_Navbar$Closed;
				default:
					return _rundis$elm_bootstrap$Bootstrap_Navbar$Open;
			}
		}();
		return _p72._0.toMsg(
			A2(
				_rundis$elm_bootstrap$Bootstrap_Navbar$mapState,
				function (s) {
					return _elm_lang$core$Native_Utils.update(
						s,
						{
							dropdowns: A3(_elm_lang$core$Dict$insert, id, newStatus, s.dropdowns)
						});
				},
				state));
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$renderDropdownToggle = F4(
	function (state, id, config, _p74) {
		var _p75 = _p74;
		return A2(
			_elm_lang$html$Html$a,
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('nav-link dropdown-toggle'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$href('#'),
						_1: {
							ctor: '::',
							_0: A3(
								_elm_lang$html$Html_Events$onWithOptions,
								'click',
								{stopPropagation: false, preventDefault: true},
								_elm_lang$core$Json_Decode$succeed(
									A3(_rundis$elm_bootstrap$Bootstrap_Navbar$toggleOpen, state, id, config))),
							_1: {ctor: '[]'}
						}
					}
				},
				_p75._0.attributes),
			_p75._0.children);
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$renderDropdown = F3(
	function (state, _p77, _p76) {
		var _p78 = _p77;
		var _p79 = _p76;
		var _p83 = _p79._0.id;
		var needsDropup = A2(
			_elm_lang$core$Maybe$withDefault,
			false,
			A2(
				_elm_lang$core$Maybe$map,
				function (fix) {
					var _p80 = fix;
					if (_p80.ctor === 'Bottom') {
						return true;
					} else {
						return false;
					}
				},
				_p78._0.options.fix));
		return A2(
			_elm_lang$html$Html$li,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$classList(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'nav-item', _1: true},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'dropdown', _1: true},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'dropup', _1: needsDropup},
								_1: {
									ctor: '::',
									_0: {
										ctor: '_Tuple2',
										_0: 'show',
										_1: !_elm_lang$core$Native_Utils.eq(
											A2(_rundis$elm_bootstrap$Bootstrap_Navbar$getOrInitDropdownStatus, _p83, state),
											_rundis$elm_bootstrap$Bootstrap_Navbar$Closed)
									},
									_1: {ctor: '[]'}
								}
							}
						}
					}),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A4(_rundis$elm_bootstrap$Bootstrap_Navbar$renderDropdownToggle, state, _p83, _p78, _p79._0.toggle),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('dropdown-menu'),
							_1: {ctor: '[]'}
						},
						A2(
							_elm_lang$core$List$map,
							function (_p81) {
								var _p82 = _p81;
								return _p82._0;
							},
							_p79._0.items)),
					_1: {ctor: '[]'}
				}
			});
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$renderNav = F3(
	function (state, config, navItems) {
		return A2(
			_elm_lang$html$Html$ul,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('navbar-nav mr-auto'),
				_1: {ctor: '[]'}
			},
			A2(
				_elm_lang$core$List$map,
				function (item) {
					var _p84 = item;
					if (_p84.ctor === 'Item') {
						return _rundis$elm_bootstrap$Bootstrap_Navbar$renderItemLink(_p84._0);
					} else {
						return A3(_rundis$elm_bootstrap$Bootstrap_Navbar$renderDropdown, state, config, _p84._0);
					}
				},
				navItems));
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$view = F2(
	function (state, _p85) {
		var _p86 = _p85;
		var _p89 = _p86;
		var _p88 = _p86._0.brand;
		return A2(
			_elm_lang$html$Html$nav,
			_rundis$elm_bootstrap$Bootstrap_Navbar$navbarAttributes(_p86._0.options),
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class(
								A2(
									_elm_lang$core$Basics_ops['++'],
									'navbar-toggler',
									A2(
										_elm_lang$core$Maybe$withDefault,
										'',
										A2(
											_elm_lang$core$Maybe$map,
											function (_p87) {
												return ' navbar-toggler-right';
											},
											_p88)))),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$type_('button'),
								_1: {
									ctor: '::',
									_0: A2(_rundis$elm_bootstrap$Bootstrap_Navbar$toggleHandler, state, _p89),
									_1: {ctor: '[]'}
								}
							}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$span,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('navbar-toggler-icon'),
									_1: {ctor: '[]'}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				},
				A2(
					_elm_lang$core$Basics_ops['++'],
					_rundis$elm_bootstrap$Bootstrap_Navbar$maybeBrand(_p88),
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							A2(_rundis$elm_bootstrap$Bootstrap_Navbar$menuAttributes, state, _p89),
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									A2(_rundis$elm_bootstrap$Bootstrap_Navbar$menuWrapperAttributes, state, _p89),
									A2(
										_elm_lang$core$Basics_ops['++'],
										{
											ctor: '::',
											_0: A3(_rundis$elm_bootstrap$Bootstrap_Navbar$renderNav, state, _p89, _p86._0.items),
											_1: {ctor: '[]'}
										},
										_rundis$elm_bootstrap$Bootstrap_Navbar$renderCustom(_p86._0.customItems))),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					})));
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$Config = function (a) {
	return {ctor: 'Config', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$updateConfig = F2(
	function (mapper, _p90) {
		var _p91 = _p90;
		return _rundis$elm_bootstrap$Bootstrap_Navbar$Config(
			mapper(_p91._0));
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$withAnimation = function (config) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Navbar$updateConfig,
		function (conf) {
			return _elm_lang$core$Native_Utils.update(
				conf,
				{withAnimation: true});
		},
		config);
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$items = F2(
	function (items, config) {
		return A2(
			_rundis$elm_bootstrap$Bootstrap_Navbar$updateConfig,
			function (conf) {
				return _elm_lang$core$Native_Utils.update(
					conf,
					{items: items});
			},
			config);
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$customItems = F2(
	function (items, config) {
		return A2(
			_rundis$elm_bootstrap$Bootstrap_Navbar$updateConfig,
			function (conf) {
				return _elm_lang$core$Native_Utils.update(
					conf,
					{customItems: items});
			},
			config);
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$updateOptions = F2(
	function (mapper, _p92) {
		var _p93 = _p92;
		var _p94 = _p93._0;
		return _rundis$elm_bootstrap$Bootstrap_Navbar$Config(
			_elm_lang$core$Native_Utils.update(
				_p94,
				{
					options: mapper(_p94.options)
				}));
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$container = function (config) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Navbar$updateOptions,
		function (opts) {
			return _elm_lang$core$Native_Utils.update(
				opts,
				{isContainer: true});
		},
		config);
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$scheme = F3(
	function (modifier, bgColor, config) {
		return A2(
			_rundis$elm_bootstrap$Bootstrap_Navbar$updateOptions,
			function (opt) {
				return _elm_lang$core$Native_Utils.update(
					opt,
					{
						scheme: _elm_lang$core$Maybe$Just(
							{modifier: modifier, bgColor: bgColor})
					});
			},
			config);
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$toggleAt = F2(
	function (size, config) {
		return A2(
			_rundis$elm_bootstrap$Bootstrap_Navbar$updateOptions,
			function (opt) {
				return _elm_lang$core$Native_Utils.update(
					opt,
					{toggleAt: size});
			},
			config);
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$collapseSmall = _rundis$elm_bootstrap$Bootstrap_Navbar$toggleAt(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM);
var _rundis$elm_bootstrap$Bootstrap_Navbar$collapseMedium = _rundis$elm_bootstrap$Bootstrap_Navbar$toggleAt(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD);
var _rundis$elm_bootstrap$Bootstrap_Navbar$collapseLarge = _rundis$elm_bootstrap$Bootstrap_Navbar$toggleAt(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG);
var _rundis$elm_bootstrap$Bootstrap_Navbar$collapseExtraLarge = _rundis$elm_bootstrap$Bootstrap_Navbar$toggleAt(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL);
var _rundis$elm_bootstrap$Bootstrap_Navbar$attrs = F2(
	function (attrs, config) {
		return A2(
			_rundis$elm_bootstrap$Bootstrap_Navbar$updateOptions,
			function (opt) {
				return _elm_lang$core$Native_Utils.update(
					opt,
					{
						attributes: A2(_elm_lang$core$Basics_ops['++'], opt.attributes, attrs)
					});
			},
			config);
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$Bottom = {ctor: 'Bottom'};
var _rundis$elm_bootstrap$Bootstrap_Navbar$fixBottom = function (config) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Navbar$updateOptions,
		function (opts) {
			return _elm_lang$core$Native_Utils.update(
				opts,
				{
					fix: _elm_lang$core$Maybe$Just(_rundis$elm_bootstrap$Bootstrap_Navbar$Bottom)
				});
		},
		config);
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$Top = {ctor: 'Top'};
var _rundis$elm_bootstrap$Bootstrap_Navbar$fixTop = function (config) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Navbar$updateOptions,
		function (opts) {
			return _elm_lang$core$Native_Utils.update(
				opts,
				{
					fix: _elm_lang$core$Maybe$Just(_rundis$elm_bootstrap$Bootstrap_Navbar$Top)
				});
		},
		config);
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$Light = {ctor: 'Light'};
var _rundis$elm_bootstrap$Bootstrap_Navbar$Dark = {ctor: 'Dark'};
var _rundis$elm_bootstrap$Bootstrap_Navbar$Class = function (a) {
	return {ctor: 'Class', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$darkCustomClass = function (classString) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Navbar$scheme,
		_rundis$elm_bootstrap$Bootstrap_Navbar$Dark,
		_rundis$elm_bootstrap$Bootstrap_Navbar$Class(classString));
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$lightCustomClass = function (classString) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Navbar$scheme,
		_rundis$elm_bootstrap$Bootstrap_Navbar$Light,
		_rundis$elm_bootstrap$Bootstrap_Navbar$Class(classString));
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$Custom = function (a) {
	return {ctor: 'Custom', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$darkCustom = function (color) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Navbar$scheme,
		_rundis$elm_bootstrap$Bootstrap_Navbar$Dark,
		_rundis$elm_bootstrap$Bootstrap_Navbar$Custom(color));
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$lightCustom = function (color) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Navbar$scheme,
		_rundis$elm_bootstrap$Bootstrap_Navbar$Light,
		_rundis$elm_bootstrap$Bootstrap_Navbar$Custom(color));
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$Inverse = {ctor: 'Inverse'};
var _rundis$elm_bootstrap$Bootstrap_Navbar$inverse = A2(_rundis$elm_bootstrap$Bootstrap_Navbar$scheme, _rundis$elm_bootstrap$Bootstrap_Navbar$Dark, _rundis$elm_bootstrap$Bootstrap_Navbar$Inverse);
var _rundis$elm_bootstrap$Bootstrap_Navbar$Danger = {ctor: 'Danger'};
var _rundis$elm_bootstrap$Bootstrap_Navbar$danger = A2(_rundis$elm_bootstrap$Bootstrap_Navbar$scheme, _rundis$elm_bootstrap$Bootstrap_Navbar$Dark, _rundis$elm_bootstrap$Bootstrap_Navbar$Danger);
var _rundis$elm_bootstrap$Bootstrap_Navbar$Warning = {ctor: 'Warning'};
var _rundis$elm_bootstrap$Bootstrap_Navbar$warning = A2(_rundis$elm_bootstrap$Bootstrap_Navbar$scheme, _rundis$elm_bootstrap$Bootstrap_Navbar$Dark, _rundis$elm_bootstrap$Bootstrap_Navbar$Warning);
var _rundis$elm_bootstrap$Bootstrap_Navbar$Info = {ctor: 'Info'};
var _rundis$elm_bootstrap$Bootstrap_Navbar$info = A2(_rundis$elm_bootstrap$Bootstrap_Navbar$scheme, _rundis$elm_bootstrap$Bootstrap_Navbar$Dark, _rundis$elm_bootstrap$Bootstrap_Navbar$Info);
var _rundis$elm_bootstrap$Bootstrap_Navbar$Success = {ctor: 'Success'};
var _rundis$elm_bootstrap$Bootstrap_Navbar$success = A2(_rundis$elm_bootstrap$Bootstrap_Navbar$scheme, _rundis$elm_bootstrap$Bootstrap_Navbar$Dark, _rundis$elm_bootstrap$Bootstrap_Navbar$Success);
var _rundis$elm_bootstrap$Bootstrap_Navbar$Primary = {ctor: 'Primary'};
var _rundis$elm_bootstrap$Bootstrap_Navbar$primary = A2(_rundis$elm_bootstrap$Bootstrap_Navbar$scheme, _rundis$elm_bootstrap$Bootstrap_Navbar$Dark, _rundis$elm_bootstrap$Bootstrap_Navbar$Primary);
var _rundis$elm_bootstrap$Bootstrap_Navbar$Faded = {ctor: 'Faded'};
var _rundis$elm_bootstrap$Bootstrap_Navbar$config = function (toMsg) {
	return _rundis$elm_bootstrap$Bootstrap_Navbar$Config(
		{
			toMsg: toMsg,
			withAnimation: false,
			brand: _elm_lang$core$Maybe$Nothing,
			items: {ctor: '[]'},
			customItems: {ctor: '[]'},
			options: {
				fix: _elm_lang$core$Maybe$Nothing,
				isContainer: false,
				scheme: _elm_lang$core$Maybe$Just(
					{modifier: _rundis$elm_bootstrap$Bootstrap_Navbar$Light, bgColor: _rundis$elm_bootstrap$Bootstrap_Navbar$Faded}),
				toggleAt: _rundis$elm_bootstrap$Bootstrap_Grid_Internal$XS,
				attributes: {ctor: '[]'}
			}
		});
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$faded = A2(_rundis$elm_bootstrap$Bootstrap_Navbar$scheme, _rundis$elm_bootstrap$Bootstrap_Navbar$Light, _rundis$elm_bootstrap$Bootstrap_Navbar$Faded);
var _rundis$elm_bootstrap$Bootstrap_Navbar$NavDropdown = function (a) {
	return {ctor: 'NavDropdown', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$Item = function (a) {
	return {ctor: 'Item', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$itemLink = F2(
	function (attributes, children) {
		return _rundis$elm_bootstrap$Bootstrap_Navbar$Item(
			{attributes: attributes, children: children});
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$itemLinkActive = function (attributes) {
	return _rundis$elm_bootstrap$Bootstrap_Navbar$itemLink(
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('active'),
			_1: attributes
		});
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$CustomItem = function (a) {
	return {ctor: 'CustomItem', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$textItem = F2(
	function (attributes, children) {
		return _rundis$elm_bootstrap$Bootstrap_Navbar$CustomItem(
			A2(
				_elm_lang$html$Html$span,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('navbar-text'),
					_1: attributes
				},
				children));
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$formItem = F2(
	function (attributes, children) {
		return _rundis$elm_bootstrap$Bootstrap_Navbar$CustomItem(
			A2(
				_elm_lang$html$Html$form,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('form-inline'),
					_1: attributes
				},
				children));
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$customItem = function (elem) {
	return _rundis$elm_bootstrap$Bootstrap_Navbar$CustomItem(elem);
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$Brand = function (a) {
	return {ctor: 'Brand', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$brand = F3(
	function (attributes, children, config) {
		return A2(
			_rundis$elm_bootstrap$Bootstrap_Navbar$updateConfig,
			function (conf) {
				return _elm_lang$core$Native_Utils.update(
					conf,
					{
						brand: _elm_lang$core$Maybe$Just(
							_rundis$elm_bootstrap$Bootstrap_Navbar$Brand(
								A2(
									_elm_lang$html$Html$a,
									A2(
										_elm_lang$core$Basics_ops['++'],
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('navbar-brand'),
											_1: {ctor: '[]'}
										},
										attributes),
									children)))
					});
			},
			config);
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$Dropdown = function (a) {
	return {ctor: 'Dropdown', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$dropdown = function (config) {
	return _rundis$elm_bootstrap$Bootstrap_Navbar$NavDropdown(
		_rundis$elm_bootstrap$Bootstrap_Navbar$Dropdown(config));
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$DropdownToggle = function (a) {
	return {ctor: 'DropdownToggle', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$dropdownToggle = F2(
	function (attributes, children) {
		return _rundis$elm_bootstrap$Bootstrap_Navbar$DropdownToggle(
			{attributes: attributes, children: children});
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$DropdownItem = function (a) {
	return {ctor: 'DropdownItem', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Navbar$dropdownItem = F2(
	function (attributes, children) {
		return _rundis$elm_bootstrap$Bootstrap_Navbar$DropdownItem(
			A2(
				_elm_lang$html$Html$a,
				A2(
					_elm_lang$core$Basics_ops['++'],
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('dropdown-item'),
						_1: {ctor: '[]'}
					},
					attributes),
				children));
	});
var _rundis$elm_bootstrap$Bootstrap_Navbar$dropdownDivider = _rundis$elm_bootstrap$Bootstrap_Navbar$DropdownItem(
	A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('dropdown-divider'),
			_1: {ctor: '[]'}
		},
		{ctor: '[]'}));
var _rundis$elm_bootstrap$Bootstrap_Navbar$dropdownHeader = function (children) {
	return _rundis$elm_bootstrap$Bootstrap_Navbar$DropdownItem(
		A2(
			_elm_lang$html$Html$h6,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('dropdown-header'),
				_1: {ctor: '[]'}
			},
			children));
};

var _rundis$elm_bootstrap$Bootstrap_Popover$calculatePos = F2(
	function (pos, _p0) {
		var _p1 = _p0;
		var _p5 = _p1.rect;
		var _p4 = _p1.offsetWidth;
		var _p3 = _p1.offsetHeight;
		var _p2 = pos;
		switch (_p2.ctor) {
			case 'Left':
				return {left: 0 - _p4, top: (_p5.height / 2) - (_p3 / 2)};
			case 'Right':
				return {left: _p5.width, top: (_p5.height / 2) - (_p3 / 2)};
			case 'Top':
				return {left: (_p5.width / 2) - (_p4 / 2), top: 0 - _p3};
			default:
				return {left: (_p5.width / 2) - (_p4 / 2), top: _p5.height};
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Popover$isPopover = A2(
	_elm_lang$core$Json_Decode$andThen,
	function ($class) {
		return A2(_elm_lang$core$String$contains, 'popover', $class) ? _elm_lang$core$Json_Decode$succeed(true) : _elm_lang$core$Json_Decode$succeed(false);
	},
	_debois$elm_dom$DOM$className);
var _rundis$elm_bootstrap$Bootstrap_Popover$popper = F2(
	function (path, decoder) {
		return _elm_lang$core$Json_Decode$oneOf(
			{
				ctor: '::',
				_0: A2(
					_elm_lang$core$Json_Decode$andThen,
					function (res) {
						return res ? A2(
							_elm_lang$core$Json_Decode$at,
							A2(
								_elm_lang$core$Basics_ops['++'],
								path,
								{
									ctor: '::',
									_0: 'nextSibling',
									_1: {ctor: '[]'}
								}),
							decoder) : _elm_lang$core$Json_Decode$fail('');
					},
					A2(
						_elm_lang$core$Json_Decode$at,
						A2(
							_elm_lang$core$Basics_ops['++'],
							path,
							{
								ctor: '::',
								_0: 'nextSibling',
								_1: {ctor: '[]'}
							}),
						_rundis$elm_bootstrap$Bootstrap_Popover$isPopover)),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$core$Json_Decode$andThen,
						function (_p6) {
							return A2(
								_rundis$elm_bootstrap$Bootstrap_Popover$popper,
								A2(
									_elm_lang$core$Basics_ops['++'],
									path,
									{
										ctor: '::',
										_0: 'parentElement',
										_1: {ctor: '[]'}
									}),
								decoder);
						},
						A2(
							_elm_lang$core$Json_Decode$at,
							A2(
								_elm_lang$core$Basics_ops['++'],
								path,
								{
									ctor: '::',
									_0: 'parentElement',
									_1: {ctor: '[]'}
								}),
							_debois$elm_dom$DOM$className)),
					_1: {
						ctor: '::',
						_0: _elm_lang$core$Json_Decode$fail('No popover found'),
						_1: {ctor: '[]'}
					}
				}
			});
	});
var _rundis$elm_bootstrap$Bootstrap_Popover$isTrigger = A2(
	_elm_lang$core$Json_Decode$andThen,
	function ($class) {
		return A2(_elm_lang$core$String$contains, 'popover-trigger', $class) ? _elm_lang$core$Json_Decode$succeed(true) : _elm_lang$core$Json_Decode$succeed(false);
	},
	_debois$elm_dom$DOM$className);
var _rundis$elm_bootstrap$Bootstrap_Popover$trigger = function (path) {
	return _elm_lang$core$Json_Decode$oneOf(
		{
			ctor: '::',
			_0: A2(
				_elm_lang$core$Json_Decode$andThen,
				function (res) {
					return res ? A2(_elm_lang$core$Json_Decode$at, path, _debois$elm_dom$DOM$boundingClientRect) : _elm_lang$core$Json_Decode$fail('');
				},
				A2(_elm_lang$core$Json_Decode$at, path, _rundis$elm_bootstrap$Bootstrap_Popover$isTrigger)),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$core$Json_Decode$andThen,
					function (_p7) {
						return _rundis$elm_bootstrap$Bootstrap_Popover$trigger(
							A2(
								_elm_lang$core$Basics_ops['++'],
								path,
								{
									ctor: '::',
									_0: 'parentElement',
									_1: {ctor: '[]'}
								}));
					},
					A2(
						_elm_lang$core$Json_Decode$at,
						A2(
							_elm_lang$core$Basics_ops['++'],
							path,
							{
								ctor: '::',
								_0: 'parentElement',
								_1: {ctor: '[]'}
							}),
						_debois$elm_dom$DOM$className)),
				_1: {
					ctor: '::',
					_0: _elm_lang$core$Json_Decode$fail('No trigger found'),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _rundis$elm_bootstrap$Bootstrap_Popover$positionClasses = function (position) {
	var _p8 = position;
	switch (_p8.ctor) {
		case 'Left':
			return {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'bs-tether-element-attached-middle', _1: true},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'bs-tether-element-attached-right', _1: true},
					_1: {ctor: '[]'}
				}
			};
		case 'Right':
			return {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'bs-tether-element-attached-middle', _1: true},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'bs-tether-element-attached-left', _1: true},
					_1: {ctor: '[]'}
				}
			};
		case 'Top':
			return {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'bs-tether-element-attached-center', _1: true},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'bs-tether-element-attached-bottom', _1: true},
					_1: {ctor: '[]'}
				}
			};
		default:
			return {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'bs-tether-element-attached-center', _1: true},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'bs-tether-element-attached-top', _1: true},
					_1: {ctor: '[]'}
				}
			};
	}
};
var _rundis$elm_bootstrap$Bootstrap_Popover$popoverView = F2(
	function (_p10, _p9) {
		var _p11 = _p10;
		var _p19 = _p11._0.isActive;
		var _p18 = _p11._0.domState;
		var _p12 = _p9;
		var _p17 = _p12._0;
		var px = function (f) {
			return A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(f),
				'px');
		};
		var styles = _p19 ? function (pos) {
			return {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'left',
					_1: px(pos.left)
				},
				_1: {
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'top',
						_1: px(pos.top)
					},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-block'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'position', _1: 'absolute'},
							_1: {
								ctor: '::',
								_0: {
									ctor: '_Tuple2',
									_0: 'width',
									_1: px(_p18.offsetWidth)
								},
								_1: {ctor: '[]'}
							}
						}
					}
				}
			};
		}(
			A2(_rundis$elm_bootstrap$Bootstrap_Popover$calculatePos, _p17.direction, _p18)) : {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'left', _1: '-5000px'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'top', _1: '-5000px'},
				_1: {ctor: '[]'}
			}
		};
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$classList(
					A2(
						_elm_lang$core$Basics_ops['++'],
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'popover', _1: true},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'fade', _1: true},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'show', _1: _p19},
									_1: {ctor: '[]'}
								}
							}
						},
						_rundis$elm_bootstrap$Bootstrap_Popover$positionClasses(_p17.direction))),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(styles),
					_1: {ctor: '[]'}
				}
			},
			A2(
				_elm_lang$core$List$filterMap,
				_elm_lang$core$Basics$identity,
				{
					ctor: '::',
					_0: A2(
						_elm_lang$core$Maybe$map,
						function (_p13) {
							var _p14 = _p13;
							return _p14._0;
						},
						_p17.title),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$core$Maybe$map,
							function (_p15) {
								var _p16 = _p15;
								return _p16._0;
							},
							_p17.content),
						_1: {ctor: '[]'}
					}
				}));
	});
var _rundis$elm_bootstrap$Bootstrap_Popover$view = F2(
	function (state, _p20) {
		var _p21 = _p20;
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'position', _1: 'relative'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-block'},
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: _p21._0.triggerElement,
				_1: {
					ctor: '::',
					_0: A2(_rundis$elm_bootstrap$Bootstrap_Popover$popoverView, state, _p21),
					_1: {ctor: '[]'}
				}
			});
	});
var _rundis$elm_bootstrap$Bootstrap_Popover$DOMState = F3(
	function (a, b, c) {
		return {rect: a, offsetWidth: b, offsetHeight: c};
	});
var _rundis$elm_bootstrap$Bootstrap_Popover$stateDecoder = A4(
	_elm_lang$core$Json_Decode$map3,
	_rundis$elm_bootstrap$Bootstrap_Popover$DOMState,
	_rundis$elm_bootstrap$Bootstrap_Popover$trigger(
		{
			ctor: '::',
			_0: 'target',
			_1: {ctor: '[]'}
		}),
	A2(
		_rundis$elm_bootstrap$Bootstrap_Popover$popper,
		{
			ctor: '::',
			_0: 'target',
			_1: {ctor: '[]'}
		},
		_debois$elm_dom$DOM$offsetWidth),
	A2(
		_rundis$elm_bootstrap$Bootstrap_Popover$popper,
		{
			ctor: '::',
			_0: 'target',
			_1: {ctor: '[]'}
		},
		_debois$elm_dom$DOM$offsetHeight));
var _rundis$elm_bootstrap$Bootstrap_Popover$Pos = F2(
	function (a, b) {
		return {left: a, top: b};
	});
var _rundis$elm_bootstrap$Bootstrap_Popover$Config = function (a) {
	return {ctor: 'Config', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Popover$State = function (a) {
	return {ctor: 'State', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Popover$initialState = _rundis$elm_bootstrap$Bootstrap_Popover$State(
	{
		isActive: false,
		domState: {
			rect: {left: 0, top: 0, width: 0, height: 0},
			offsetWidth: 0,
			offsetHeight: 0
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Popover$forceClose = F2(
	function (_p22, toMsg) {
		var _p23 = _p22;
		return _elm_lang$core$Json_Decode$succeed(
			toMsg(
				_rundis$elm_bootstrap$Bootstrap_Popover$State(
					_elm_lang$core$Native_Utils.update(
						_p23._0,
						{isActive: false}))));
	});
var _rundis$elm_bootstrap$Bootstrap_Popover$toggleState = F2(
	function (_p24, toMsg) {
		var _p25 = _p24;
		return A2(
			_elm_lang$core$Json_Decode$andThen,
			function (v) {
				return _elm_lang$core$Json_Decode$succeed(
					toMsg(
						(!_p25._0.isActive) ? _rundis$elm_bootstrap$Bootstrap_Popover$State(
							{isActive: true, domState: v}) : _rundis$elm_bootstrap$Bootstrap_Popover$State(
							_elm_lang$core$Native_Utils.update(
								_p25._0,
								{isActive: false}))));
			},
			_rundis$elm_bootstrap$Bootstrap_Popover$stateDecoder);
	});
var _rundis$elm_bootstrap$Bootstrap_Popover$onClick = F2(
	function (state, toMsg) {
		return {
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('popover-trigger'),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html_Events$on,
					'click',
					A2(_rundis$elm_bootstrap$Bootstrap_Popover$toggleState, state, toMsg)),
				_1: {ctor: '[]'}
			}
		};
	});
var _rundis$elm_bootstrap$Bootstrap_Popover$onHover = F2(
	function (state, toMsg) {
		return {
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('popover-trigger'),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html_Events$on,
					'mouseenter',
					A2(_rundis$elm_bootstrap$Bootstrap_Popover$toggleState, state, toMsg)),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html_Events$on,
						'mouseleave',
						A2(_rundis$elm_bootstrap$Bootstrap_Popover$forceClose, state, toMsg)),
					_1: {ctor: '[]'}
				}
			}
		};
	});
var _rundis$elm_bootstrap$Bootstrap_Popover$Left = {ctor: 'Left'};
var _rundis$elm_bootstrap$Bootstrap_Popover$left = function (_p26) {
	var _p27 = _p26;
	return _rundis$elm_bootstrap$Bootstrap_Popover$Config(
		_elm_lang$core$Native_Utils.update(
			_p27._0,
			{direction: _rundis$elm_bootstrap$Bootstrap_Popover$Left}));
};
var _rundis$elm_bootstrap$Bootstrap_Popover$Bottom = {ctor: 'Bottom'};
var _rundis$elm_bootstrap$Bootstrap_Popover$bottom = function (_p28) {
	var _p29 = _p28;
	return _rundis$elm_bootstrap$Bootstrap_Popover$Config(
		_elm_lang$core$Native_Utils.update(
			_p29._0,
			{direction: _rundis$elm_bootstrap$Bootstrap_Popover$Bottom}));
};
var _rundis$elm_bootstrap$Bootstrap_Popover$Right = {ctor: 'Right'};
var _rundis$elm_bootstrap$Bootstrap_Popover$right = function (_p30) {
	var _p31 = _p30;
	return _rundis$elm_bootstrap$Bootstrap_Popover$Config(
		_elm_lang$core$Native_Utils.update(
			_p31._0,
			{direction: _rundis$elm_bootstrap$Bootstrap_Popover$Right}));
};
var _rundis$elm_bootstrap$Bootstrap_Popover$Top = {ctor: 'Top'};
var _rundis$elm_bootstrap$Bootstrap_Popover$config = function (triggerElement) {
	return _rundis$elm_bootstrap$Bootstrap_Popover$Config(
		{triggerElement: triggerElement, direction: _rundis$elm_bootstrap$Bootstrap_Popover$Top, title: _elm_lang$core$Maybe$Nothing, content: _elm_lang$core$Maybe$Nothing});
};
var _rundis$elm_bootstrap$Bootstrap_Popover$top = function (_p32) {
	var _p33 = _p32;
	return _rundis$elm_bootstrap$Bootstrap_Popover$Config(
		_elm_lang$core$Native_Utils.update(
			_p33._0,
			{direction: _rundis$elm_bootstrap$Bootstrap_Popover$Top}));
};
var _rundis$elm_bootstrap$Bootstrap_Popover$Title = function (a) {
	return {ctor: 'Title', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Popover$titlePrivate = F4(
	function (elemFn, attributes, children, _p34) {
		var _p35 = _p34;
		return _rundis$elm_bootstrap$Bootstrap_Popover$Config(
			_elm_lang$core$Native_Utils.update(
				_p35._0,
				{
					title: _elm_lang$core$Maybe$Just(
						_rundis$elm_bootstrap$Bootstrap_Popover$Title(
							A2(
								elemFn,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('popover-title'),
									_1: attributes
								},
								children)))
				}));
	});
var _rundis$elm_bootstrap$Bootstrap_Popover$title = _rundis$elm_bootstrap$Bootstrap_Popover$titlePrivate(_elm_lang$html$Html$div);
var _rundis$elm_bootstrap$Bootstrap_Popover$titleH1 = _rundis$elm_bootstrap$Bootstrap_Popover$titlePrivate(_elm_lang$html$Html$h1);
var _rundis$elm_bootstrap$Bootstrap_Popover$titleH2 = _rundis$elm_bootstrap$Bootstrap_Popover$titlePrivate(_elm_lang$html$Html$h2);
var _rundis$elm_bootstrap$Bootstrap_Popover$titleH3 = _rundis$elm_bootstrap$Bootstrap_Popover$titlePrivate(_elm_lang$html$Html$h3);
var _rundis$elm_bootstrap$Bootstrap_Popover$titleH4 = _rundis$elm_bootstrap$Bootstrap_Popover$titlePrivate(_elm_lang$html$Html$h4);
var _rundis$elm_bootstrap$Bootstrap_Popover$titleH5 = _rundis$elm_bootstrap$Bootstrap_Popover$titlePrivate(_elm_lang$html$Html$h5);
var _rundis$elm_bootstrap$Bootstrap_Popover$titleH6 = _rundis$elm_bootstrap$Bootstrap_Popover$titlePrivate(_elm_lang$html$Html$h6);
var _rundis$elm_bootstrap$Bootstrap_Popover$Content = function (a) {
	return {ctor: 'Content', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Popover$content = F3(
	function (attributes, children, _p36) {
		var _p37 = _p36;
		return _rundis$elm_bootstrap$Bootstrap_Popover$Config(
			_elm_lang$core$Native_Utils.update(
				_p37._0,
				{
					content: _elm_lang$core$Maybe$Just(
						_rundis$elm_bootstrap$Bootstrap_Popover$Content(
							A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('popover-content'),
									_1: attributes
								},
								children)))
				}));
	});

var _rundis$elm_bootstrap$Bootstrap_Progress$roleClass = function (role) {
	return _elm_lang$html$Html_Attributes$class(
		function () {
			var _p0 = role;
			switch (_p0.ctor) {
				case 'Success':
					return 'bg-success';
				case 'Info':
					return 'bg-info';
				case 'Warning':
					return 'bg-warning';
				default:
					return 'bg-danger';
			}
		}());
};
var _rundis$elm_bootstrap$Bootstrap_Progress$toAttributes = function (_p1) {
	var _p2 = _p1;
	var _p5 = _p2._0;
	return _elm_lang$core$List$concat(
		{
			ctor: '::',
			_0: {
				ctor: '::',
				_0: A2(_elm_lang$html$Html_Attributes$attribute, 'role', 'progressbar'),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html_Attributes$attribute,
						'aria-value-now',
						_elm_lang$core$Basics$toString(_p5.value)),
					_1: {
						ctor: '::',
						_0: A2(_elm_lang$html$Html_Attributes$attribute, 'aria-valuemin', '0'),
						_1: {
							ctor: '::',
							_0: A2(_elm_lang$html$Html_Attributes$attribute, 'aria-valuemax', '100'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$style(
									{
										ctor: '::',
										_0: {
											ctor: '_Tuple2',
											_0: 'width',
											_1: A2(
												_elm_lang$core$Basics_ops['++'],
												_elm_lang$core$Basics$toString(_p5.value),
												'%')
										},
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$classList(
										{
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'progress-bar', _1: true},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'progress-bar-striped', _1: _p5.striped || _p5.animated},
												_1: {
													ctor: '::',
													_0: {ctor: '_Tuple2', _0: 'progress-bar-animated', _1: _p5.animated},
													_1: {ctor: '[]'}
												}
											}
										}),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			},
			_1: {
				ctor: '::',
				_0: function () {
					var _p3 = _p5.height;
					if (_p3.ctor === 'Just') {
						return {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$style(
								{
									ctor: '::',
									_0: {
										ctor: '_Tuple2',
										_0: 'height',
										_1: A2(
											_elm_lang$core$Basics_ops['++'],
											_elm_lang$core$Basics$toString(_p3._0),
											'px')
									},
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						};
					} else {
						return {ctor: '[]'};
					}
				}(),
				_1: {
					ctor: '::',
					_0: function () {
						var _p4 = _p5.role;
						if (_p4.ctor === 'Just') {
							return {
								ctor: '::',
								_0: _rundis$elm_bootstrap$Bootstrap_Progress$roleClass(_p4._0),
								_1: {ctor: '[]'}
							};
						} else {
							return {ctor: '[]'};
						}
					}(),
					_1: {
						ctor: '::',
						_0: _p5.attributes,
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _rundis$elm_bootstrap$Bootstrap_Progress$WrapperAttrs = function (a) {
	return {ctor: 'WrapperAttrs', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Progress$wrapperAttrs = function (attrs) {
	return _rundis$elm_bootstrap$Bootstrap_Progress$WrapperAttrs(attrs);
};
var _rundis$elm_bootstrap$Bootstrap_Progress$Attrs = function (a) {
	return {ctor: 'Attrs', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Progress$attrs = function (attrs) {
	return _rundis$elm_bootstrap$Bootstrap_Progress$Attrs(attrs);
};
var _rundis$elm_bootstrap$Bootstrap_Progress$Animated = function (a) {
	return {ctor: 'Animated', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Progress$animated = _rundis$elm_bootstrap$Bootstrap_Progress$Animated(true);
var _rundis$elm_bootstrap$Bootstrap_Progress$Striped = function (a) {
	return {ctor: 'Striped', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Progress$striped = _rundis$elm_bootstrap$Bootstrap_Progress$Striped(true);
var _rundis$elm_bootstrap$Bootstrap_Progress$Roled = function (a) {
	return {ctor: 'Roled', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Progress$Label = function (a) {
	return {ctor: 'Label', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Progress$label = function (text) {
	return _rundis$elm_bootstrap$Bootstrap_Progress$Label(
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(text),
			_1: {ctor: '[]'}
		});
};
var _rundis$elm_bootstrap$Bootstrap_Progress$customLabel = function (children) {
	return _rundis$elm_bootstrap$Bootstrap_Progress$Label(children);
};
var _rundis$elm_bootstrap$Bootstrap_Progress$Height = function (a) {
	return {ctor: 'Height', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Progress$height = function (height) {
	return _rundis$elm_bootstrap$Bootstrap_Progress$Height(
		_elm_lang$core$Maybe$Just(height));
};
var _rundis$elm_bootstrap$Bootstrap_Progress$Value = function (a) {
	return {ctor: 'Value', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Progress$value = function (val) {
	return _rundis$elm_bootstrap$Bootstrap_Progress$Value(val);
};
var _rundis$elm_bootstrap$Bootstrap_Progress$Danger = {ctor: 'Danger'};
var _rundis$elm_bootstrap$Bootstrap_Progress$danger = _rundis$elm_bootstrap$Bootstrap_Progress$Roled(
	_elm_lang$core$Maybe$Just(_rundis$elm_bootstrap$Bootstrap_Progress$Danger));
var _rundis$elm_bootstrap$Bootstrap_Progress$Warning = {ctor: 'Warning'};
var _rundis$elm_bootstrap$Bootstrap_Progress$warning = _rundis$elm_bootstrap$Bootstrap_Progress$Roled(
	_elm_lang$core$Maybe$Just(_rundis$elm_bootstrap$Bootstrap_Progress$Warning));
var _rundis$elm_bootstrap$Bootstrap_Progress$Info = {ctor: 'Info'};
var _rundis$elm_bootstrap$Bootstrap_Progress$info = _rundis$elm_bootstrap$Bootstrap_Progress$Roled(
	_elm_lang$core$Maybe$Just(_rundis$elm_bootstrap$Bootstrap_Progress$Info));
var _rundis$elm_bootstrap$Bootstrap_Progress$Success = {ctor: 'Success'};
var _rundis$elm_bootstrap$Bootstrap_Progress$success = _rundis$elm_bootstrap$Bootstrap_Progress$Roled(
	_elm_lang$core$Maybe$Just(_rundis$elm_bootstrap$Bootstrap_Progress$Success));
var _rundis$elm_bootstrap$Bootstrap_Progress$Options = function (a) {
	return {ctor: 'Options', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Progress$applyOption = F2(
	function (modifier, _p6) {
		var _p7 = _p6;
		var _p9 = _p7._0;
		return _rundis$elm_bootstrap$Bootstrap_Progress$Options(
			function () {
				var _p8 = modifier;
				switch (_p8.ctor) {
					case 'Value':
						return _elm_lang$core$Native_Utils.update(
							_p9,
							{value: _p8._0});
					case 'Height':
						return _elm_lang$core$Native_Utils.update(
							_p9,
							{height: _p8._0});
					case 'Label':
						return _elm_lang$core$Native_Utils.update(
							_p9,
							{label: _p8._0});
					case 'Roled':
						return _elm_lang$core$Native_Utils.update(
							_p9,
							{role: _p8._0});
					case 'Striped':
						return _elm_lang$core$Native_Utils.update(
							_p9,
							{striped: _p8._0});
					case 'Animated':
						return _elm_lang$core$Native_Utils.update(
							_p9,
							{animated: _p8._0});
					case 'Attrs':
						return _elm_lang$core$Native_Utils.update(
							_p9,
							{attributes: _p8._0});
					default:
						return _elm_lang$core$Native_Utils.update(
							_p9,
							{wrapperAttributes: _p8._0});
				}
			}());
	});
var _rundis$elm_bootstrap$Bootstrap_Progress$defaultOptions = _rundis$elm_bootstrap$Bootstrap_Progress$Options(
	{
		value: 0,
		height: _elm_lang$core$Maybe$Nothing,
		label: {ctor: '[]'},
		role: _elm_lang$core$Maybe$Nothing,
		striped: false,
		animated: false,
		attributes: {ctor: '[]'},
		wrapperAttributes: {ctor: '[]'}
	});
var _rundis$elm_bootstrap$Bootstrap_Progress$renderBar = function (modifiers) {
	var _p10 = A3(_elm_lang$core$List$foldl, _rundis$elm_bootstrap$Bootstrap_Progress$applyOption, _rundis$elm_bootstrap$Bootstrap_Progress$defaultOptions, modifiers);
	var options = _p10;
	var opts = _p10._0;
	return A2(
		_elm_lang$html$Html$div,
		_rundis$elm_bootstrap$Bootstrap_Progress$toAttributes(options),
		opts.label);
};
var _rundis$elm_bootstrap$Bootstrap_Progress$progress = function (modifiers) {
	var _p11 = A3(_elm_lang$core$List$foldl, _rundis$elm_bootstrap$Bootstrap_Progress$applyOption, _rundis$elm_bootstrap$Bootstrap_Progress$defaultOptions, modifiers);
	var options = _p11._0;
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('progress'),
			_1: options.wrapperAttributes
		},
		{
			ctor: '::',
			_0: _rundis$elm_bootstrap$Bootstrap_Progress$renderBar(modifiers),
			_1: {ctor: '[]'}
		});
};
var _rundis$elm_bootstrap$Bootstrap_Progress$progressMulti = function (bars) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('progress'),
			_1: {ctor: '[]'}
		},
		A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Progress$renderBar, bars));
};

var _rundis$elm_bootstrap$Bootstrap_Tab$applyModifier = F2(
	function (option, options) {
		var _p0 = option;
		if (_p0.ctor === 'Attrs') {
			return _elm_lang$core$Native_Utils.update(
				options,
				{
					attributes: A2(_elm_lang$core$Basics_ops['++'], options.attributes, _p0._0)
				});
		} else {
			return _elm_lang$core$Native_Utils.update(
				options,
				{
					layout: _elm_lang$core$Maybe$Just(_p0._0)
				});
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Tab$tabAttributes = function (_p1) {
	var _p2 = _p1;
	var _p4 = _p2._0;
	return A2(
		_elm_lang$core$Basics_ops['++'],
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$classList(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'nav', _1: true},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'nav-tabs', _1: !_p4.isPill},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'nav-pills', _1: _p4.isPill},
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {ctor: '[]'}
		},
		A2(
			_elm_lang$core$Basics_ops['++'],
			function () {
				var _p3 = _p4.layout;
				if (_p3.ctor === 'Just') {
					switch (_p3._0.ctor) {
						case 'Justified':
							return {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('nav-justified'),
								_1: {ctor: '[]'}
							};
						case 'Fill':
							return {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('nav-fill'),
								_1: {ctor: '[]'}
							};
						case 'Center':
							return {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('justify-content-center'),
								_1: {ctor: '[]'}
							};
						default:
							return {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('justify-content-end'),
								_1: {ctor: '[]'}
							};
					}
				} else {
					return {ctor: '[]'};
				}
			}(),
			_p4.attributes));
};
var _rundis$elm_bootstrap$Bootstrap_Tab$transitionStyle = function (opacity) {
	return _elm_lang$html$Html_Attributes$style(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'opacity',
				_1: _elm_lang$core$Basics$toString(opacity)
			},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: '-webkit-transition', _1: 'opacity 0.15s linear'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: '-o-transition', _1: 'opacity 0.15s linear'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'transition', _1: 'opacity 0.15s linear'},
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _rundis$elm_bootstrap$Bootstrap_Tab$activeTabAttributes = F2(
	function (_p6, _p5) {
		var _p7 = _p6;
		var _p8 = _p5;
		var _p9 = _p7._0.visibility;
		switch (_p9.ctor) {
			case 'Hidden':
				return {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'display', _1: 'none'},
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				};
			case 'Start':
				return {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'display', _1: 'block'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'opacity', _1: '0'},
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				};
			default:
				return {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'display', _1: 'block'},
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Tab$transitionStyle(1),
						_1: {ctor: '[]'}
					}
				};
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Tab$renderTabPane = F5(
	function (id, active, _p10, state, config) {
		var _p11 = _p10;
		var displayAttrs = active ? A2(_rundis$elm_bootstrap$Bootstrap_Tab$activeTabAttributes, state, config) : {
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'display', _1: 'none'},
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		};
		return A2(
			_elm_lang$html$Html$div,
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$id(id),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('tab-pane'),
						_1: {ctor: '[]'}
					}
				},
				A2(_elm_lang$core$Basics_ops['++'], displayAttrs, _p11._0.attributes)),
			_p11._0.children);
	});
var _rundis$elm_bootstrap$Bootstrap_Tab$getActiveItem = F2(
	function (_p13, _p12) {
		var _p14 = _p13;
		var _p15 = _p12;
		var _p20 = _p15._0.items;
		var _p16 = _p14._0.activeTab;
		if (_p16.ctor === 'Nothing') {
			return _elm_lang$core$List$head(_p20);
		} else {
			return function (found) {
				var _p17 = found;
				if (_p17.ctor === 'Just') {
					return _elm_lang$core$Maybe$Just(_p17._0);
				} else {
					return _elm_lang$core$List$head(_p20);
				}
			}(
				_elm_lang$core$List$head(
					A2(
						_elm_lang$core$List$filter,
						function (_p18) {
							var _p19 = _p18;
							return _elm_lang$core$Native_Utils.eq(_p19._0.id, _p16._0);
						},
						_p20)));
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Tab$Options = F3(
	function (a, b, c) {
		return {layout: a, isPill: b, attributes: c};
	});
var _rundis$elm_bootstrap$Bootstrap_Tab$State = function (a) {
	return {ctor: 'State', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Tab$Attrs = function (a) {
	return {ctor: 'Attrs', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Tab$Layout = function (a) {
	return {ctor: 'Layout', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Tab$Justified = {ctor: 'Justified'};
var _rundis$elm_bootstrap$Bootstrap_Tab$Fill = {ctor: 'Fill'};
var _rundis$elm_bootstrap$Bootstrap_Tab$Right = {ctor: 'Right'};
var _rundis$elm_bootstrap$Bootstrap_Tab$Center = {ctor: 'Center'};
var _rundis$elm_bootstrap$Bootstrap_Tab$Showing = {ctor: 'Showing'};
var _rundis$elm_bootstrap$Bootstrap_Tab$subscriptions = F2(
	function (_p21, toMsg) {
		var _p22 = _p21;
		var _p25 = _p22._0;
		var _p23 = _p25.visibility;
		if (_p23.ctor === 'Start') {
			return _elm_lang$animation_frame$AnimationFrame$times(
				function (_p24) {
					return toMsg(
						_rundis$elm_bootstrap$Bootstrap_Tab$State(
							_elm_lang$core$Native_Utils.update(
								_p25,
								{visibility: _rundis$elm_bootstrap$Bootstrap_Tab$Showing})));
				});
		} else {
			return _elm_lang$core$Platform_Sub$none;
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Tab$initialState = _rundis$elm_bootstrap$Bootstrap_Tab$State(
	{activeTab: _elm_lang$core$Maybe$Nothing, visibility: _rundis$elm_bootstrap$Bootstrap_Tab$Showing});
var _rundis$elm_bootstrap$Bootstrap_Tab$customInitialState = function (id) {
	return _rundis$elm_bootstrap$Bootstrap_Tab$State(
		{
			activeTab: _elm_lang$core$Maybe$Just(id),
			visibility: _rundis$elm_bootstrap$Bootstrap_Tab$Showing
		});
};
var _rundis$elm_bootstrap$Bootstrap_Tab$Start = {ctor: 'Start'};
var _rundis$elm_bootstrap$Bootstrap_Tab$visibilityTransition = F2(
	function (withAnimation, visibility) {
		var _p26 = {ctor: '_Tuple2', _0: withAnimation, _1: visibility};
		_v14_2:
		do {
			if ((_p26.ctor === '_Tuple2') && (_p26._0 === true)) {
				switch (_p26._1.ctor) {
					case 'Hidden':
						return _rundis$elm_bootstrap$Bootstrap_Tab$Start;
					case 'Start':
						return _rundis$elm_bootstrap$Bootstrap_Tab$Showing;
					default:
						break _v14_2;
				}
			} else {
				break _v14_2;
			}
		} while(false);
		return _rundis$elm_bootstrap$Bootstrap_Tab$Showing;
	});
var _rundis$elm_bootstrap$Bootstrap_Tab$transitionHandler = F3(
	function (toMsg, _p27, withAnimation) {
		var _p28 = _p27;
		var _p29 = _p28._0;
		return _elm_lang$core$Json_Decode$succeed(
			toMsg(
				_rundis$elm_bootstrap$Bootstrap_Tab$State(
					_elm_lang$core$Native_Utils.update(
						_p29,
						{
							visibility: A2(_rundis$elm_bootstrap$Bootstrap_Tab$visibilityTransition, withAnimation, _p29.visibility)
						}))));
	});
var _rundis$elm_bootstrap$Bootstrap_Tab$Hidden = {ctor: 'Hidden'};
var _rundis$elm_bootstrap$Bootstrap_Tab$renderLink = F4(
	function (id, active, _p31, _p30) {
		var _p32 = _p31;
		var _p33 = _p30;
		return A2(
			_elm_lang$html$Html$li,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('nav-item'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$a,
					A2(
						_elm_lang$core$Basics_ops['++'],
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$classList(
								{
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'nav-link', _1: true},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'active', _1: active},
										_1: {ctor: '[]'}
									}
								}),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$href(
									A2(_elm_lang$core$Basics_ops['++'], '#', id)),
								_1: {
									ctor: '::',
									_0: A3(
										_elm_lang$html$Html_Events$onWithOptions,
										'click',
										{stopPropagation: false, preventDefault: active || (!_p33._0.useHash)},
										_elm_lang$core$Json_Decode$succeed(
											_p33._0.toMsg(
												_rundis$elm_bootstrap$Bootstrap_Tab$State(
													{
														activeTab: _elm_lang$core$Maybe$Just(id),
														visibility: A2(_rundis$elm_bootstrap$Bootstrap_Tab$visibilityTransition, _p33._0.withAnimation && (!active), _rundis$elm_bootstrap$Bootstrap_Tab$Hidden)
													})))),
									_1: {ctor: '[]'}
								}
							}
						},
						_p32._0.attributes),
					_p32._0.children),
				_1: {ctor: '[]'}
			});
	});
var _rundis$elm_bootstrap$Bootstrap_Tab$view = F2(
	function (state, _p34) {
		var _p35 = _p34;
		var _p45 = _p35._0.items;
		var _p44 = _p35;
		var _p36 = A2(_rundis$elm_bootstrap$Bootstrap_Tab$getActiveItem, state, _p44);
		if (_p36.ctor === 'Nothing') {
			return A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$ul,
						_rundis$elm_bootstrap$Bootstrap_Tab$tabAttributes(_p44),
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('tab-content'),
								_1: {ctor: '[]'}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}
				});
		} else {
			var _p43 = _p36._0._0;
			return A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$ul,
						_rundis$elm_bootstrap$Bootstrap_Tab$tabAttributes(_p44),
						A2(
							_elm_lang$core$List$map,
							function (_p37) {
								var _p38 = _p37;
								var _p39 = _p38._0.id;
								return A4(
									_rundis$elm_bootstrap$Bootstrap_Tab$renderLink,
									_p39,
									_elm_lang$core$Native_Utils.eq(_p39, _p43.id),
									_p38._0.link,
									_p44);
							},
							_p45)),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('tab-content'),
								_1: {ctor: '[]'}
							},
							A2(
								_elm_lang$core$List$map,
								function (_p40) {
									var _p41 = _p40;
									var _p42 = _p41._0.id;
									return A5(
										_rundis$elm_bootstrap$Bootstrap_Tab$renderTabPane,
										_p42,
										_elm_lang$core$Native_Utils.eq(_p42, _p43.id),
										_p41._0.pane,
										state,
										_p44);
								},
								_p45)),
						_1: {ctor: '[]'}
					}
				});
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Tab$Config = function (a) {
	return {ctor: 'Config', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Tab$config = function (toMsg) {
	return _rundis$elm_bootstrap$Bootstrap_Tab$Config(
		{
			toMsg: toMsg,
			items: {ctor: '[]'},
			isPill: false,
			withAnimation: false,
			layout: _elm_lang$core$Maybe$Nothing,
			attributes: {ctor: '[]'},
			useHash: false
		});
};
var _rundis$elm_bootstrap$Bootstrap_Tab$items = F2(
	function (items, _p46) {
		var _p47 = _p46;
		return _rundis$elm_bootstrap$Bootstrap_Tab$Config(
			_elm_lang$core$Native_Utils.update(
				_p47._0,
				{items: items}));
	});
var _rundis$elm_bootstrap$Bootstrap_Tab$layout = F2(
	function (layout, _p48) {
		var _p49 = _p48;
		return _rundis$elm_bootstrap$Bootstrap_Tab$Config(
			_elm_lang$core$Native_Utils.update(
				_p49._0,
				{
					layout: _elm_lang$core$Maybe$Just(layout)
				}));
	});
var _rundis$elm_bootstrap$Bootstrap_Tab$justified = _rundis$elm_bootstrap$Bootstrap_Tab$layout(_rundis$elm_bootstrap$Bootstrap_Tab$Justified);
var _rundis$elm_bootstrap$Bootstrap_Tab$fill = _rundis$elm_bootstrap$Bootstrap_Tab$layout(_rundis$elm_bootstrap$Bootstrap_Tab$Fill);
var _rundis$elm_bootstrap$Bootstrap_Tab$center = _rundis$elm_bootstrap$Bootstrap_Tab$layout(_rundis$elm_bootstrap$Bootstrap_Tab$Center);
var _rundis$elm_bootstrap$Bootstrap_Tab$right = _rundis$elm_bootstrap$Bootstrap_Tab$layout(_rundis$elm_bootstrap$Bootstrap_Tab$Right);
var _rundis$elm_bootstrap$Bootstrap_Tab$pills = function (_p50) {
	var _p51 = _p50;
	return _rundis$elm_bootstrap$Bootstrap_Tab$Config(
		_elm_lang$core$Native_Utils.update(
			_p51._0,
			{isPill: true}));
};
var _rundis$elm_bootstrap$Bootstrap_Tab$withAnimation = function (_p52) {
	var _p53 = _p52;
	return _rundis$elm_bootstrap$Bootstrap_Tab$Config(
		_elm_lang$core$Native_Utils.update(
			_p53._0,
			{withAnimation: true}));
};
var _rundis$elm_bootstrap$Bootstrap_Tab$attrs = F2(
	function (attrs, _p54) {
		var _p55 = _p54;
		var _p56 = _p55._0;
		return _rundis$elm_bootstrap$Bootstrap_Tab$Config(
			_elm_lang$core$Native_Utils.update(
				_p56,
				{
					attributes: A2(_elm_lang$core$Basics_ops['++'], _p56.attributes, attrs)
				}));
	});
var _rundis$elm_bootstrap$Bootstrap_Tab$useHash = F2(
	function (use, _p57) {
		var _p58 = _p57;
		return _rundis$elm_bootstrap$Bootstrap_Tab$Config(
			_elm_lang$core$Native_Utils.update(
				_p58._0,
				{useHash: use}));
	});
var _rundis$elm_bootstrap$Bootstrap_Tab$Item = function (a) {
	return {ctor: 'Item', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Tab$item = function (_p59) {
	var _p60 = _p59;
	return _rundis$elm_bootstrap$Bootstrap_Tab$Item(
		{id: _p60.id, link: _p60.link, pane: _p60.pane});
};
var _rundis$elm_bootstrap$Bootstrap_Tab$Link = function (a) {
	return {ctor: 'Link', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Tab$link = F2(
	function (attributes, children) {
		return _rundis$elm_bootstrap$Bootstrap_Tab$Link(
			{attributes: attributes, children: children});
	});
var _rundis$elm_bootstrap$Bootstrap_Tab$Pane = function (a) {
	return {ctor: 'Pane', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Tab$pane = F2(
	function (attributes, children) {
		return _rundis$elm_bootstrap$Bootstrap_Tab$Pane(
			{attributes: attributes, children: children});
	});

var _rundis$elm_bootstrap$Bootstrap_Table$roleOption = function (role) {
	var _p0 = role;
	switch (_p0.ctor) {
		case 'Active':
			return 'active';
		case 'Success':
			return 'success';
		case 'Warning':
			return 'warning';
		case 'Danger':
			return 'danger';
		default:
			return 'info';
	}
};
var _rundis$elm_bootstrap$Bootstrap_Table$cellAttribute = function (option) {
	var _p1 = option;
	switch (_p1.ctor) {
		case 'RoledCell':
			return _elm_lang$html$Html_Attributes$class(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'table-',
					_rundis$elm_bootstrap$Bootstrap_Table$roleOption(_p1._0)));
		case 'InversedCell':
			return _elm_lang$html$Html_Attributes$class(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'bg-',
					_rundis$elm_bootstrap$Bootstrap_Table$roleOption(_p1._0)));
		default:
			return _p1._0;
	}
};
var _rundis$elm_bootstrap$Bootstrap_Table$cellAttributes = function (options) {
	return A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Table$cellAttribute, options);
};
var _rundis$elm_bootstrap$Bootstrap_Table$rowClass = function (option) {
	var _p2 = option;
	switch (_p2.ctor) {
		case 'RoledRow':
			return _elm_lang$html$Html_Attributes$class(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'table-',
					_rundis$elm_bootstrap$Bootstrap_Table$roleOption(_p2._0)));
		case 'InversedRow':
			return _elm_lang$html$Html_Attributes$class(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'bg-',
					_rundis$elm_bootstrap$Bootstrap_Table$roleOption(_p2._0)));
		default:
			return _p2._0;
	}
};
var _rundis$elm_bootstrap$Bootstrap_Table$rowAttributes = function (options) {
	return A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Table$rowClass, options);
};
var _rundis$elm_bootstrap$Bootstrap_Table$theadAttribute = function (option) {
	var _p3 = option;
	switch (_p3.ctor) {
		case 'InversedHead':
			return _elm_lang$html$Html_Attributes$class('thead-inverse');
		case 'DefaultHead':
			return _elm_lang$html$Html_Attributes$class('thead-default');
		default:
			return _p3._0;
	}
};
var _rundis$elm_bootstrap$Bootstrap_Table$theadAttributes = function (options) {
	return A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Table$theadAttribute, options);
};
var _rundis$elm_bootstrap$Bootstrap_Table$tableClass = function (option) {
	var _p4 = option;
	switch (_p4.ctor) {
		case 'Inversed':
			return _elm_lang$core$Maybe$Just(
				_elm_lang$html$Html_Attributes$class('table-inverse'));
		case 'Striped':
			return _elm_lang$core$Maybe$Just(
				_elm_lang$html$Html_Attributes$class('table-striped'));
		case 'Bordered':
			return _elm_lang$core$Maybe$Just(
				_elm_lang$html$Html_Attributes$class('table-bordered'));
		case 'Hover':
			return _elm_lang$core$Maybe$Just(
				_elm_lang$html$Html_Attributes$class('table-hover'));
		case 'Small':
			return _elm_lang$core$Maybe$Just(
				_elm_lang$html$Html_Attributes$class('table-sm'));
		case 'Responsive':
			return _elm_lang$core$Maybe$Nothing;
		case 'Reflow':
			return _elm_lang$core$Maybe$Just(
				_elm_lang$html$Html_Attributes$class('table-reflow'));
		default:
			return _elm_lang$core$Maybe$Just(_p4._0);
	}
};
var _rundis$elm_bootstrap$Bootstrap_Table$tableAttributes = function (options) {
	return {
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$class('table'),
		_1: A2(
			_elm_lang$core$List$filterMap,
			_elm_lang$core$Basics$identity,
			A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Table$tableClass, options))
	};
};
var _rundis$elm_bootstrap$Bootstrap_Table$renderCell = function (cell) {
	var _p5 = cell;
	if (_p5.ctor === 'Td') {
		return A2(
			_elm_lang$html$Html$td,
			_rundis$elm_bootstrap$Bootstrap_Table$cellAttributes(_p5._0.options),
			_p5._0.children);
	} else {
		return A2(
			_elm_lang$html$Html$th,
			_rundis$elm_bootstrap$Bootstrap_Table$cellAttributes(_p5._0.options),
			_p5._0.children);
	}
};
var _rundis$elm_bootstrap$Bootstrap_Table$renderRow = function (row) {
	var _p6 = row;
	if (_p6.ctor === 'Row') {
		return A2(
			_elm_lang$html$Html$tr,
			_rundis$elm_bootstrap$Bootstrap_Table$rowAttributes(_p6._0.options),
			A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Table$renderCell, _p6._0.cells));
	} else {
		return A3(
			_elm_lang$html$Html_Keyed$node,
			'tr',
			_rundis$elm_bootstrap$Bootstrap_Table$rowAttributes(_p6._0.options),
			A2(
				_elm_lang$core$List$map,
				function (_p7) {
					var _p8 = _p7;
					return {
						ctor: '_Tuple2',
						_0: _p8._0,
						_1: _rundis$elm_bootstrap$Bootstrap_Table$renderCell(_p8._1)
					};
				},
				_p6._0.cells));
	}
};
var _rundis$elm_bootstrap$Bootstrap_Table$renderTHead = function (_p9) {
	var _p10 = _p9;
	return A2(
		_elm_lang$html$Html$thead,
		_rundis$elm_bootstrap$Bootstrap_Table$theadAttributes(_p10._0.options),
		A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Table$renderRow, _p10._0.rows));
};
var _rundis$elm_bootstrap$Bootstrap_Table$wrapResponsiveWhen = F2(
	function (isResponsive, table) {
		return isResponsive ? A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('table-responsive'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: table,
				_1: {ctor: '[]'}
			}) : table;
	});
var _rundis$elm_bootstrap$Bootstrap_Table$RowConfig = F2(
	function (a, b) {
		return {options: a, cells: b};
	});
var _rundis$elm_bootstrap$Bootstrap_Table$CellConfig = F2(
	function (a, b) {
		return {options: a, children: b};
	});
var _rundis$elm_bootstrap$Bootstrap_Table$TableAttr = function (a) {
	return {ctor: 'TableAttr', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$attr = function (attr) {
	return _rundis$elm_bootstrap$Bootstrap_Table$TableAttr(attr);
};
var _rundis$elm_bootstrap$Bootstrap_Table$Reflow = {ctor: 'Reflow'};
var _rundis$elm_bootstrap$Bootstrap_Table$reflow = _rundis$elm_bootstrap$Bootstrap_Table$Reflow;
var _rundis$elm_bootstrap$Bootstrap_Table$Responsive = {ctor: 'Responsive'};
var _rundis$elm_bootstrap$Bootstrap_Table$responsive = _rundis$elm_bootstrap$Bootstrap_Table$Responsive;
var _rundis$elm_bootstrap$Bootstrap_Table$Small = {ctor: 'Small'};
var _rundis$elm_bootstrap$Bootstrap_Table$small = _rundis$elm_bootstrap$Bootstrap_Table$Small;
var _rundis$elm_bootstrap$Bootstrap_Table$Hover = {ctor: 'Hover'};
var _rundis$elm_bootstrap$Bootstrap_Table$hover = _rundis$elm_bootstrap$Bootstrap_Table$Hover;
var _rundis$elm_bootstrap$Bootstrap_Table$Bordered = {ctor: 'Bordered'};
var _rundis$elm_bootstrap$Bootstrap_Table$bordered = _rundis$elm_bootstrap$Bootstrap_Table$Bordered;
var _rundis$elm_bootstrap$Bootstrap_Table$Striped = {ctor: 'Striped'};
var _rundis$elm_bootstrap$Bootstrap_Table$striped = _rundis$elm_bootstrap$Bootstrap_Table$Striped;
var _rundis$elm_bootstrap$Bootstrap_Table$Inversed = {ctor: 'Inversed'};
var _rundis$elm_bootstrap$Bootstrap_Table$inversed = _rundis$elm_bootstrap$Bootstrap_Table$Inversed;
var _rundis$elm_bootstrap$Bootstrap_Table$HeadAttr = function (a) {
	return {ctor: 'HeadAttr', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$headAttr = function (attr) {
	return _rundis$elm_bootstrap$Bootstrap_Table$HeadAttr(attr);
};
var _rundis$elm_bootstrap$Bootstrap_Table$DefaultHead = {ctor: 'DefaultHead'};
var _rundis$elm_bootstrap$Bootstrap_Table$defaultHead = _rundis$elm_bootstrap$Bootstrap_Table$DefaultHead;
var _rundis$elm_bootstrap$Bootstrap_Table$InversedHead = {ctor: 'InversedHead'};
var _rundis$elm_bootstrap$Bootstrap_Table$inversedHead = _rundis$elm_bootstrap$Bootstrap_Table$InversedHead;
var _rundis$elm_bootstrap$Bootstrap_Table$RowAttr = function (a) {
	return {ctor: 'RowAttr', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$rowAttr = function (attr) {
	return _rundis$elm_bootstrap$Bootstrap_Table$RowAttr(attr);
};
var _rundis$elm_bootstrap$Bootstrap_Table$InversedRow = function (a) {
	return {ctor: 'InversedRow', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$RoledRow = function (a) {
	return {ctor: 'RoledRow', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$CellAttr = function (a) {
	return {ctor: 'CellAttr', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$cellAttr = function (attr) {
	return _rundis$elm_bootstrap$Bootstrap_Table$CellAttr(attr);
};
var _rundis$elm_bootstrap$Bootstrap_Table$InversedCell = function (a) {
	return {ctor: 'InversedCell', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$RoledCell = function (a) {
	return {ctor: 'RoledCell', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$Info = {ctor: 'Info'};
var _rundis$elm_bootstrap$Bootstrap_Table$rowInfo = _rundis$elm_bootstrap$Bootstrap_Table$RoledRow(_rundis$elm_bootstrap$Bootstrap_Table$Info);
var _rundis$elm_bootstrap$Bootstrap_Table$cellInfo = _rundis$elm_bootstrap$Bootstrap_Table$RoledCell(_rundis$elm_bootstrap$Bootstrap_Table$Info);
var _rundis$elm_bootstrap$Bootstrap_Table$Danger = {ctor: 'Danger'};
var _rundis$elm_bootstrap$Bootstrap_Table$rowDanger = _rundis$elm_bootstrap$Bootstrap_Table$RoledRow(_rundis$elm_bootstrap$Bootstrap_Table$Danger);
var _rundis$elm_bootstrap$Bootstrap_Table$cellDanger = _rundis$elm_bootstrap$Bootstrap_Table$RoledCell(_rundis$elm_bootstrap$Bootstrap_Table$Danger);
var _rundis$elm_bootstrap$Bootstrap_Table$Warning = {ctor: 'Warning'};
var _rundis$elm_bootstrap$Bootstrap_Table$rowWarning = _rundis$elm_bootstrap$Bootstrap_Table$RoledRow(_rundis$elm_bootstrap$Bootstrap_Table$Warning);
var _rundis$elm_bootstrap$Bootstrap_Table$cellWarning = _rundis$elm_bootstrap$Bootstrap_Table$RoledCell(_rundis$elm_bootstrap$Bootstrap_Table$Warning);
var _rundis$elm_bootstrap$Bootstrap_Table$Success = {ctor: 'Success'};
var _rundis$elm_bootstrap$Bootstrap_Table$rowSuccess = _rundis$elm_bootstrap$Bootstrap_Table$RoledRow(_rundis$elm_bootstrap$Bootstrap_Table$Success);
var _rundis$elm_bootstrap$Bootstrap_Table$cellSuccess = _rundis$elm_bootstrap$Bootstrap_Table$RoledCell(_rundis$elm_bootstrap$Bootstrap_Table$Success);
var _rundis$elm_bootstrap$Bootstrap_Table$Active = {ctor: 'Active'};
var _rundis$elm_bootstrap$Bootstrap_Table$rowActive = _rundis$elm_bootstrap$Bootstrap_Table$RoledRow(_rundis$elm_bootstrap$Bootstrap_Table$Active);
var _rundis$elm_bootstrap$Bootstrap_Table$cellActive = _rundis$elm_bootstrap$Bootstrap_Table$RoledCell(_rundis$elm_bootstrap$Bootstrap_Table$Active);
var _rundis$elm_bootstrap$Bootstrap_Table$KeyedRow = function (a) {
	return {ctor: 'KeyedRow', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$keyedTr = F2(
	function (options, keyedCells) {
		return _rundis$elm_bootstrap$Bootstrap_Table$KeyedRow(
			{options: options, cells: keyedCells});
	});
var _rundis$elm_bootstrap$Bootstrap_Table$Row = function (a) {
	return {ctor: 'Row', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$tr = F2(
	function (options, cells) {
		return _rundis$elm_bootstrap$Bootstrap_Table$Row(
			{options: options, cells: cells});
	});
var _rundis$elm_bootstrap$Bootstrap_Table$Th = function (a) {
	return {ctor: 'Th', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$addScopeIfTh = function (cell) {
	var _p11 = cell;
	if (_p11.ctor === 'Th') {
		var _p12 = _p11._0;
		return _rundis$elm_bootstrap$Bootstrap_Table$Th(
			_elm_lang$core$Native_Utils.update(
				_p12,
				{
					options: {
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Table$cellAttr(
							_elm_lang$html$Html_Attributes$scope('row')),
						_1: _p12.options
					}
				}));
	} else {
		return cell;
	}
};
var _rundis$elm_bootstrap$Bootstrap_Table$maybeAddScopeToFirstCell = function (row) {
	var _p13 = row;
	if (_p13.ctor === 'Row') {
		var _p14 = _p13._0.cells;
		if (_p14.ctor === '[]') {
			return row;
		} else {
			return _rundis$elm_bootstrap$Bootstrap_Table$Row(
				{
					options: _p13._0.options,
					cells: {
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Table$addScopeIfTh(_p14._0),
						_1: _p14._1
					}
				});
		}
	} else {
		var _p15 = _p13._0.cells;
		if (_p15.ctor === '[]') {
			return row;
		} else {
			return _rundis$elm_bootstrap$Bootstrap_Table$KeyedRow(
				{
					options: _p13._0.options,
					cells: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: _p15._0._0,
							_1: _rundis$elm_bootstrap$Bootstrap_Table$addScopeIfTh(_p15._0._1)
						},
						_1: _p15._1
					}
				});
		}
	}
};
var _rundis$elm_bootstrap$Bootstrap_Table$renderTBody = function (body) {
	var _p16 = body;
	if (_p16.ctor === 'TBody') {
		return A2(
			_elm_lang$html$Html$tbody,
			_p16._0.attributes,
			A2(
				_elm_lang$core$List$map,
				function (row) {
					return _rundis$elm_bootstrap$Bootstrap_Table$renderRow(
						_rundis$elm_bootstrap$Bootstrap_Table$maybeAddScopeToFirstCell(row));
				},
				_p16._0.rows));
	} else {
		return A3(
			_elm_lang$html$Html_Keyed$node,
			'tbody',
			_p16._0.attributes,
			A2(
				_elm_lang$core$List$map,
				function (_p17) {
					var _p18 = _p17;
					return {
						ctor: '_Tuple2',
						_0: _p18._0,
						_1: _rundis$elm_bootstrap$Bootstrap_Table$renderRow(
							_rundis$elm_bootstrap$Bootstrap_Table$maybeAddScopeToFirstCell(_p18._1))
					};
				},
				_p16._0.rows));
	}
};
var _rundis$elm_bootstrap$Bootstrap_Table$th = F2(
	function (options, children) {
		return _rundis$elm_bootstrap$Bootstrap_Table$Th(
			{options: options, children: children});
	});
var _rundis$elm_bootstrap$Bootstrap_Table$Td = function (a) {
	return {ctor: 'Td', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$mapInversedCell = function (cell) {
	var inverseOptions = function (options) {
		return A2(
			_elm_lang$core$List$map,
			function (opt) {
				var _p19 = opt;
				if (_p19.ctor === 'RoledCell') {
					return _rundis$elm_bootstrap$Bootstrap_Table$InversedCell(_p19._0);
				} else {
					return opt;
				}
			},
			options);
	};
	var _p20 = cell;
	if (_p20.ctor === 'Th') {
		var _p21 = _p20._0;
		return _rundis$elm_bootstrap$Bootstrap_Table$Th(
			_elm_lang$core$Native_Utils.update(
				_p21,
				{
					options: inverseOptions(_p21.options)
				}));
	} else {
		var _p22 = _p20._0;
		return _rundis$elm_bootstrap$Bootstrap_Table$Td(
			_elm_lang$core$Native_Utils.update(
				_p22,
				{
					options: inverseOptions(_p22.options)
				}));
	}
};
var _rundis$elm_bootstrap$Bootstrap_Table$mapInversedRow = function (row) {
	var inversedOptions = function (options) {
		return A2(
			_elm_lang$core$List$map,
			function (opt) {
				var _p23 = opt;
				if (_p23.ctor === 'RoledRow') {
					return _rundis$elm_bootstrap$Bootstrap_Table$InversedRow(_p23._0);
				} else {
					return opt;
				}
			},
			options);
	};
	var _p24 = row;
	if (_p24.ctor === 'Row') {
		return _rundis$elm_bootstrap$Bootstrap_Table$Row(
			{
				options: inversedOptions(_p24._0.options),
				cells: A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Table$mapInversedCell, _p24._0.cells)
			});
	} else {
		return _rundis$elm_bootstrap$Bootstrap_Table$KeyedRow(
			{
				options: inversedOptions(_p24._0.options),
				cells: A2(
					_elm_lang$core$List$map,
					function (_p25) {
						var _p26 = _p25;
						return {
							ctor: '_Tuple2',
							_0: _p26._0,
							_1: _rundis$elm_bootstrap$Bootstrap_Table$mapInversedCell(_p26._1)
						};
					},
					_p24._0.cells)
			});
	}
};
var _rundis$elm_bootstrap$Bootstrap_Table$td = F2(
	function (options, children) {
		return _rundis$elm_bootstrap$Bootstrap_Table$Td(
			{options: options, children: children});
	});
var _rundis$elm_bootstrap$Bootstrap_Table$THead = function (a) {
	return {ctor: 'THead', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$maybeMapInversedTHead = F2(
	function (isTableInversed, _p27) {
		var _p28 = _p27;
		var _p29 = _p28._0;
		var isHeadInversed = A2(
			_elm_lang$core$List$any,
			function (opt) {
				return _elm_lang$core$Native_Utils.eq(opt, _rundis$elm_bootstrap$Bootstrap_Table$InversedHead);
			},
			_p29.options);
		return _rundis$elm_bootstrap$Bootstrap_Table$THead(
			(isTableInversed || isHeadInversed) ? _elm_lang$core$Native_Utils.update(
				_p29,
				{
					rows: A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Table$mapInversedRow, _p29.rows)
				}) : _p29);
	});
var _rundis$elm_bootstrap$Bootstrap_Table$thead = F2(
	function (options, rows) {
		return _rundis$elm_bootstrap$Bootstrap_Table$THead(
			{options: options, rows: rows});
	});
var _rundis$elm_bootstrap$Bootstrap_Table$simpleThead = function (cells) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Table$thead,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_rundis$elm_bootstrap$Bootstrap_Table$tr,
				{ctor: '[]'},
				cells),
			_1: {ctor: '[]'}
		});
};
var _rundis$elm_bootstrap$Bootstrap_Table$KeyedTBody = function (a) {
	return {ctor: 'KeyedTBody', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$keyedTBody = F2(
	function (attributes, rows) {
		return _rundis$elm_bootstrap$Bootstrap_Table$KeyedTBody(
			{attributes: attributes, rows: rows});
	});
var _rundis$elm_bootstrap$Bootstrap_Table$TBody = function (a) {
	return {ctor: 'TBody', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$maybeMapInversedTBody = F2(
	function (isTableInversed, tbody) {
		var _p30 = {ctor: '_Tuple2', _0: isTableInversed, _1: tbody};
		if (_p30._0 === false) {
			return tbody;
		} else {
			if (_p30._1.ctor === 'TBody') {
				var _p31 = _p30._1._0;
				return _rundis$elm_bootstrap$Bootstrap_Table$TBody(
					_elm_lang$core$Native_Utils.update(
						_p31,
						{
							rows: A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Table$mapInversedRow, _p31.rows)
						}));
			} else {
				var _p34 = _p30._1._0;
				return _rundis$elm_bootstrap$Bootstrap_Table$KeyedTBody(
					_elm_lang$core$Native_Utils.update(
						_p34,
						{
							rows: A2(
								_elm_lang$core$List$map,
								function (_p32) {
									var _p33 = _p32;
									return {
										ctor: '_Tuple2',
										_0: _p33._0,
										_1: _rundis$elm_bootstrap$Bootstrap_Table$mapInversedRow(_p33._1)
									};
								},
								_p34.rows)
						}));
			}
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Table$table = function (_p35) {
	var _p36 = _p35;
	var _p37 = _p36.options;
	var isInversed = A2(
		_elm_lang$core$List$any,
		function (opt) {
			return _elm_lang$core$Native_Utils.eq(opt, _rundis$elm_bootstrap$Bootstrap_Table$Inversed);
		},
		_p37);
	var isResponsive = A2(
		_elm_lang$core$List$any,
		function (opt) {
			return _elm_lang$core$Native_Utils.eq(opt, _rundis$elm_bootstrap$Bootstrap_Table$Responsive);
		},
		_p37);
	var classOptions = A2(
		_elm_lang$core$List$filter,
		function (opt) {
			return !_elm_lang$core$Native_Utils.eq(opt, _rundis$elm_bootstrap$Bootstrap_Table$Responsive);
		},
		_p37);
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Table$wrapResponsiveWhen,
		isResponsive,
		A2(
			_elm_lang$html$Html$table,
			_rundis$elm_bootstrap$Bootstrap_Table$tableAttributes(classOptions),
			{
				ctor: '::',
				_0: _rundis$elm_bootstrap$Bootstrap_Table$renderTHead(
					A2(_rundis$elm_bootstrap$Bootstrap_Table$maybeMapInversedTHead, isInversed, _p36.thead)),
				_1: {
					ctor: '::',
					_0: _rundis$elm_bootstrap$Bootstrap_Table$renderTBody(
						A2(_rundis$elm_bootstrap$Bootstrap_Table$maybeMapInversedTBody, isInversed, _p36.tbody)),
					_1: {ctor: '[]'}
				}
			}));
};
var _rundis$elm_bootstrap$Bootstrap_Table$simpleTable = function (_p38) {
	var _p39 = _p38;
	return _rundis$elm_bootstrap$Bootstrap_Table$table(
		{
			options: {ctor: '[]'},
			thead: _p39._0,
			tbody: _p39._1
		});
};
var _rundis$elm_bootstrap$Bootstrap_Table$tbody = F2(
	function (attributes, rows) {
		return _rundis$elm_bootstrap$Bootstrap_Table$TBody(
			{attributes: attributes, rows: rows});
	});

var _saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops = _saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops || {};
_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['<&>'] = F2(
	function (x, f) {
		return A2(_elm_lang$core$Task$andThen, f, x);
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops = _saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops || {};
_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'] = F2(
	function (t1, t2) {
		return A2(
			_elm_lang$core$Task$andThen,
			function (_p0) {
				return t2;
			},
			t1);
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Helpers$statusInfo = function (status) {
	var _p1 = status;
	switch (_p1) {
		case 'ok':
			return A2(
				_elm_lang$core$Json_Decode$map,
				_elm_lang$core$Result$Ok,
				A2(_elm_lang$core$Json_Decode$field, 'response', _elm_lang$core$Json_Decode$value));
		case 'error':
			return A2(
				_elm_lang$core$Json_Decode$map,
				_elm_lang$core$Result$Err,
				A2(_elm_lang$core$Json_Decode$field, 'response', _elm_lang$core$Json_Decode$value));
		default:
			return _elm_lang$core$Json_Decode$fail(
				A2(_elm_lang$core$Basics_ops['++'], status, ' is a not supported status'));
	}
};
var _saschatimme$elm_phoenix$Phoenix_Internal_Helpers$decodeReplyPayload = function (value) {
	var result = A2(
		_elm_lang$core$Json_Decode$decodeValue,
		A2(
			_elm_lang$core$Json_Decode$andThen,
			_saschatimme$elm_phoenix$Phoenix_Internal_Helpers$statusInfo,
			A2(_elm_lang$core$Json_Decode$field, 'status', _elm_lang$core$Json_Decode$string)),
		value);
	var _p2 = result;
	if (_p2.ctor === 'Err') {
		var _p3 = _elm_lang$core$Debug$log(_p2._0);
		return _elm_lang$core$Maybe$Nothing;
	} else {
		return _elm_lang$core$Maybe$Just(_p2._0);
	}
};
var _saschatimme$elm_phoenix$Phoenix_Internal_Helpers$add = F2(
	function (value, maybeList) {
		var _p4 = maybeList;
		if (_p4.ctor === 'Nothing') {
			return _elm_lang$core$Maybe$Just(
				{
					ctor: '::',
					_0: value,
					_1: {ctor: '[]'}
				});
		} else {
			return _elm_lang$core$Maybe$Just(
				{ctor: '::', _0: value, _1: _p4._0});
		}
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Helpers$removeIn = F3(
	function (a, b, dict) {
		var remove = function (maybeDict_) {
			var _p5 = maybeDict_;
			if (_p5.ctor === 'Nothing') {
				return _elm_lang$core$Maybe$Nothing;
			} else {
				var newDict = A2(_elm_lang$core$Dict$remove, b, _p5._0);
				return _elm_lang$core$Dict$isEmpty(newDict) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(newDict);
			}
		};
		return A3(_elm_lang$core$Dict$update, a, remove, dict);
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Helpers$insertIn = F4(
	function (a, b, value, dict) {
		var update_ = function (maybeValue) {
			var _p6 = maybeValue;
			if (_p6.ctor === 'Nothing') {
				return _elm_lang$core$Maybe$Just(
					A2(_elm_lang$core$Dict$singleton, b, value));
			} else {
				return _elm_lang$core$Maybe$Just(
					A3(_elm_lang$core$Dict$insert, b, value, _p6._0));
			}
		};
		return A3(_elm_lang$core$Dict$update, a, update_, dict);
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Helpers$updateIn = F4(
	function (a, b, update, dict) {
		var update_ = function (maybeDict) {
			var dict_ = A3(
				_elm_lang$core$Dict$update,
				b,
				update,
				A2(_elm_lang$core$Maybe$withDefault, _elm_lang$core$Dict$empty, maybeDict));
			return _elm_lang$core$Dict$isEmpty(dict_) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(dict_);
		};
		return A3(_elm_lang$core$Dict$update, a, update_, dict);
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Helpers$getIn = F3(
	function (a, b, dict) {
		return A2(
			_elm_lang$core$Maybe$andThen,
			_elm_lang$core$Dict$get(b),
			A2(_elm_lang$core$Dict$get, a, dict));
	});

var _saschatimme$elm_phoenix$Phoenix_Push$map = F2(
	function (func, push) {
		var f = _elm_lang$core$Maybe$map(
			F2(
				function (x, y) {
					return function (_p0) {
						return x(
							y(_p0));
					};
				})(func));
		return _elm_lang$core$Native_Utils.update(
			push,
			{
				onOk: f(push.onOk),
				onError: f(push.onError)
			});
	});
var _saschatimme$elm_phoenix$Phoenix_Push$onError = F2(
	function (cb, push) {
		return _elm_lang$core$Native_Utils.update(
			push,
			{
				onError: _elm_lang$core$Maybe$Just(cb)
			});
	});
var _saschatimme$elm_phoenix$Phoenix_Push$onOk = F2(
	function (cb, push) {
		return _elm_lang$core$Native_Utils.update(
			push,
			{
				onOk: _elm_lang$core$Maybe$Just(cb)
			});
	});
var _saschatimme$elm_phoenix$Phoenix_Push$withPayload = F2(
	function (payload, push) {
		return _elm_lang$core$Native_Utils.update(
			push,
			{payload: payload});
	});
var _saschatimme$elm_phoenix$Phoenix_Push$PhoenixPush = F5(
	function (a, b, c, d, e) {
		return {topic: a, event: b, payload: c, onOk: d, onError: e};
	});
var _saschatimme$elm_phoenix$Phoenix_Push$init = F2(
	function (topic, event) {
		return A5(
			_saschatimme$elm_phoenix$Phoenix_Push$PhoenixPush,
			topic,
			event,
			_elm_lang$core$Json_Encode$object(
				{ctor: '[]'}),
			_elm_lang$core$Maybe$Nothing,
			_elm_lang$core$Maybe$Nothing);
	});

var _saschatimme$elm_phoenix$Phoenix_Internal_Message$encode = function (_p0) {
	var _p1 = _p0;
	return A2(
		_elm_lang$core$Json_Encode$encode,
		0,
		_elm_lang$core$Json_Encode$object(
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'topic',
					_1: _elm_lang$core$Json_Encode$string(_p1.topic)
				},
				_1: {
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'event',
						_1: _elm_lang$core$Json_Encode$string(_p1.event)
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'ref',
							_1: A2(
								_elm_lang$core$Maybe$withDefault,
								_elm_lang$core$Json_Encode$null,
								A2(_elm_lang$core$Maybe$map, _elm_lang$core$Json_Encode$int, _p1.ref))
						},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'payload', _1: _p1.payload},
							_1: {ctor: '[]'}
						}
					}
				}
			}));
};
var _saschatimme$elm_phoenix$Phoenix_Internal_Message$ref = F2(
	function (ref_, message) {
		return _elm_lang$core$Native_Utils.update(
			message,
			{
				ref: _elm_lang$core$Maybe$Just(ref_)
			});
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Message$payload = F2(
	function (payload_, message) {
		return _elm_lang$core$Native_Utils.update(
			message,
			{payload: payload_});
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Message$Message = F4(
	function (a, b, c, d) {
		return {topic: a, event: b, payload: c, ref: d};
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Message$init = F2(
	function (topic, event) {
		return A4(
			_saschatimme$elm_phoenix$Phoenix_Internal_Message$Message,
			topic,
			event,
			_elm_lang$core$Json_Encode$object(
				{ctor: '[]'}),
			_elm_lang$core$Maybe$Nothing);
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Message$fromPush = function (push) {
	return A2(
		_saschatimme$elm_phoenix$Phoenix_Internal_Message$payload,
		push.payload,
		A2(_saschatimme$elm_phoenix$Phoenix_Internal_Message$init, push.topic, push.event));
};
var _saschatimme$elm_phoenix$Phoenix_Internal_Message$decode = function (msg) {
	var decoder = A5(
		_elm_lang$core$Json_Decode$map4,
		_saschatimme$elm_phoenix$Phoenix_Internal_Message$Message,
		A2(_elm_lang$core$Json_Decode$field, 'topic', _elm_lang$core$Json_Decode$string),
		A2(_elm_lang$core$Json_Decode$field, 'event', _elm_lang$core$Json_Decode$string),
		A2(_elm_lang$core$Json_Decode$field, 'payload', _elm_lang$core$Json_Decode$value),
		A2(
			_elm_lang$core$Json_Decode$field,
			'ref',
			_elm_lang$core$Json_Decode$oneOf(
				{
					ctor: '::',
					_0: A2(_elm_lang$core$Json_Decode$map, _elm_lang$core$Maybe$Just, _elm_lang$core$Json_Decode$int),
					_1: {
						ctor: '::',
						_0: _elm_lang$core$Json_Decode$null(_elm_lang$core$Maybe$Nothing),
						_1: {ctor: '[]'}
					}
				})));
	return A2(_elm_lang$core$Json_Decode$decodeString, decoder, msg);
};

var _saschatimme$elm_phoenix$Phoenix_Channel$withDebug = function (channel) {
	return _elm_lang$core$Native_Utils.update(
		channel,
		{debug: true});
};
var _saschatimme$elm_phoenix$Phoenix_Channel$map = F2(
	function (func, chan) {
		var f = _elm_lang$core$Maybe$map(
			F2(
				function (x, y) {
					return function (_p0) {
						return x(
							y(_p0));
					};
				})(func));
		var channel = _elm_lang$core$Native_Utils.update(
			chan,
			{
				onJoin: f(chan.onJoin),
				onJoinError: f(chan.onJoinError),
				onError: A2(_elm_lang$core$Maybe$map, func, chan.onError),
				onDisconnect: A2(_elm_lang$core$Maybe$map, func, chan.onDisconnect),
				onRejoin: f(chan.onRejoin),
				onLeave: f(chan.onLeave),
				onLeaveError: f(chan.onLeaveError),
				on: A2(
					_elm_lang$core$Dict$map,
					F2(
						function (_p1, a) {
							return function (_p2) {
								return func(
									a(_p2));
							};
						}),
					chan.on)
			});
		return channel;
	});
var _saschatimme$elm_phoenix$Phoenix_Channel$onLeaveError = F2(
	function (onLeaveError_, chan) {
		return _elm_lang$core$Native_Utils.update(
			chan,
			{
				onLeaveError: _elm_lang$core$Maybe$Just(onLeaveError_)
			});
	});
var _saschatimme$elm_phoenix$Phoenix_Channel$onLeave = F2(
	function (onLeave_, chan) {
		return _elm_lang$core$Native_Utils.update(
			chan,
			{
				onLeave: _elm_lang$core$Maybe$Just(onLeave_)
			});
	});
var _saschatimme$elm_phoenix$Phoenix_Channel$onRejoin = F2(
	function (onRejoin_, chan) {
		return _elm_lang$core$Native_Utils.update(
			chan,
			{
				onRejoin: _elm_lang$core$Maybe$Just(onRejoin_)
			});
	});
var _saschatimme$elm_phoenix$Phoenix_Channel$onDisconnect = F2(
	function (onDisconnect_, chan) {
		return _elm_lang$core$Native_Utils.update(
			chan,
			{
				onDisconnect: _elm_lang$core$Maybe$Just(onDisconnect_)
			});
	});
var _saschatimme$elm_phoenix$Phoenix_Channel$onError = F2(
	function (onError_, chan) {
		return _elm_lang$core$Native_Utils.update(
			chan,
			{
				onError: _elm_lang$core$Maybe$Just(onError_)
			});
	});
var _saschatimme$elm_phoenix$Phoenix_Channel$onJoinError = F2(
	function (onJoinError_, chan) {
		return _elm_lang$core$Native_Utils.update(
			chan,
			{
				onJoinError: _elm_lang$core$Maybe$Just(onJoinError_)
			});
	});
var _saschatimme$elm_phoenix$Phoenix_Channel$onJoin = F2(
	function (onJoin_, chan) {
		var _p3 = chan.onRejoin;
		if (_p3.ctor === 'Nothing') {
			return _elm_lang$core$Native_Utils.update(
				chan,
				{
					onJoin: _elm_lang$core$Maybe$Just(onJoin_),
					onRejoin: _elm_lang$core$Maybe$Just(onJoin_)
				});
		} else {
			return _elm_lang$core$Native_Utils.update(
				chan,
				{
					onJoin: _elm_lang$core$Maybe$Just(onJoin_)
				});
		}
	});
var _saschatimme$elm_phoenix$Phoenix_Channel$on = F3(
	function (event, cb, chan) {
		return _elm_lang$core$Native_Utils.update(
			chan,
			{
				on: A3(_elm_lang$core$Dict$insert, event, cb, chan.on)
			});
	});
var _saschatimme$elm_phoenix$Phoenix_Channel$withPayload = F2(
	function (payload_, chan) {
		return _elm_lang$core$Native_Utils.update(
			chan,
			{
				payload: _elm_lang$core$Maybe$Just(payload_)
			});
	});
var _saschatimme$elm_phoenix$Phoenix_Channel$init = function (topic) {
	return {topic: topic, payload: _elm_lang$core$Maybe$Nothing, onJoin: _elm_lang$core$Maybe$Nothing, onJoinError: _elm_lang$core$Maybe$Nothing, onDisconnect: _elm_lang$core$Maybe$Nothing, onError: _elm_lang$core$Maybe$Nothing, onRejoin: _elm_lang$core$Maybe$Nothing, onLeave: _elm_lang$core$Maybe$Nothing, onLeaveError: _elm_lang$core$Maybe$Nothing, on: _elm_lang$core$Dict$empty, debug: false};
};
var _saschatimme$elm_phoenix$Phoenix_Channel$PhoenixChannel = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return {topic: a, payload: b, onJoin: c, onJoinError: d, onDisconnect: e, onError: f, onRejoin: g, onLeave: h, onLeaveError: i, on: j, debug: k};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};

var _saschatimme$elm_phoenix$Phoenix_Internal_Channel$get = F3(
	function (endpoint, topic, channelsDict) {
		return A3(_saschatimme$elm_phoenix$Phoenix_Internal_Helpers$getIn, endpoint, topic, channelsDict);
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Channel$getState = F3(
	function (endpoint, topic, channelsDict) {
		return A2(
			_elm_lang$core$Maybe$map,
			function (_p0) {
				var _p1 = _p0;
				return _p1.state;
			},
			A3(_saschatimme$elm_phoenix$Phoenix_Internal_Channel$get, endpoint, topic, channelsDict));
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Channel$leaveMessage = function (_p2) {
	var _p3 = _p2;
	return A2(_saschatimme$elm_phoenix$Phoenix_Internal_Message$init, _p3.channel.topic, 'phx_leave');
};
var _saschatimme$elm_phoenix$Phoenix_Internal_Channel$joinMessage = function (_p4) {
	var _p5 = _p4;
	var _p7 = _p5.channel;
	var base = A2(_saschatimme$elm_phoenix$Phoenix_Internal_Message$init, _p7.topic, 'phx_join');
	var _p6 = _p7.payload;
	if (_p6.ctor === 'Nothing') {
		return base;
	} else {
		return A2(_saschatimme$elm_phoenix$Phoenix_Internal_Message$payload, _p6._0, base);
	}
};
var _saschatimme$elm_phoenix$Phoenix_Internal_Channel$InternalChannel = F2(
	function (a, b) {
		return {state: a, channel: b};
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Channel$map = F2(
	function (func, _p8) {
		var _p9 = _p8;
		return A2(
			_saschatimme$elm_phoenix$Phoenix_Internal_Channel$InternalChannel,
			_p9.state,
			A2(_saschatimme$elm_phoenix$Phoenix_Channel$map, func, _p9.channel));
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Channel$updateState = F2(
	function (state, internalChannel) {
		if (internalChannel.channel.debug) {
			var _p10 = function () {
				var _p11 = {ctor: '_Tuple2', _0: state, _1: internalChannel.state};
				_v5_5:
				do {
					if (_p11.ctor === '_Tuple2') {
						switch (_p11._0.ctor) {
							case 'Closed':
								if (_p11._1.ctor === 'Closed') {
									return state;
								} else {
									break _v5_5;
								}
							case 'Joining':
								if (_p11._1.ctor === 'Joining') {
									return state;
								} else {
									break _v5_5;
								}
							case 'Joined':
								if (_p11._1.ctor === 'Joined') {
									return state;
								} else {
									break _v5_5;
								}
							case 'Errored':
								if (_p11._1.ctor === 'Errored') {
									return state;
								} else {
									break _v5_5;
								}
							default:
								if (_p11._1.ctor === 'Disconnected') {
									return state;
								} else {
									break _v5_5;
								}
						}
					} else {
						break _v5_5;
					}
				} while(false);
				return A2(
					_elm_lang$core$Debug$log,
					A2(
						_elm_lang$core$Basics_ops['++'],
						'Channel \"',
						A2(_elm_lang$core$Basics_ops['++'], internalChannel.channel.topic, '\"')),
					state);
			}();
			return A2(_saschatimme$elm_phoenix$Phoenix_Internal_Channel$InternalChannel, state, internalChannel.channel);
		} else {
			return A2(_saschatimme$elm_phoenix$Phoenix_Internal_Channel$InternalChannel, state, internalChannel.channel);
		}
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Channel$insertState = F4(
	function (endpoint, topic, state, dict) {
		var update = _elm_lang$core$Maybe$map(
			_saschatimme$elm_phoenix$Phoenix_Internal_Channel$updateState(state));
		return A4(_saschatimme$elm_phoenix$Phoenix_Internal_Helpers$updateIn, endpoint, topic, update, dict);
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Channel$updatePayload = F2(
	function (payload, _p12) {
		var _p13 = _p12;
		return A2(
			_saschatimme$elm_phoenix$Phoenix_Internal_Channel$InternalChannel,
			_p13.state,
			_elm_lang$core$Native_Utils.update(
				_p13.channel,
				{payload: payload}));
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Channel$updateOn = F2(
	function (on, _p14) {
		var _p15 = _p14;
		return A2(
			_saschatimme$elm_phoenix$Phoenix_Internal_Channel$InternalChannel,
			_p15.state,
			_elm_lang$core$Native_Utils.update(
				_p15.channel,
				{on: on}));
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Channel$Disconnected = {ctor: 'Disconnected'};
var _saschatimme$elm_phoenix$Phoenix_Internal_Channel$Errored = {ctor: 'Errored'};
var _saschatimme$elm_phoenix$Phoenix_Internal_Channel$Joined = {ctor: 'Joined'};
var _saschatimme$elm_phoenix$Phoenix_Internal_Channel$Joining = {ctor: 'Joining'};
var _saschatimme$elm_phoenix$Phoenix_Internal_Channel$Closed = {ctor: 'Closed'};

var _saschatimme$elm_phoenix$Phoenix_Socket$map = F2(
	function (func, socket) {
		return _elm_lang$core$Native_Utils.update(
			socket,
			{
				onClose: A2(
					_elm_lang$core$Maybe$map,
					F2(
						function (x, y) {
							return function (_p0) {
								return x(
									y(_p0));
							};
						})(func),
					socket.onClose),
				onNormalClose: A2(_elm_lang$core$Maybe$map, func, socket.onNormalClose),
				onAbnormalClose: A2(_elm_lang$core$Maybe$map, func, socket.onAbnormalClose)
			});
	});
var _saschatimme$elm_phoenix$Phoenix_Socket$defaultReconnectTimer = function (failedAttempts) {
	return (_elm_lang$core$Native_Utils.cmp(failedAttempts, 1) < 0) ? 0 : _elm_lang$core$Basics$toFloat(
		10 * Math.pow(2, failedAttempts));
};
var _saschatimme$elm_phoenix$Phoenix_Socket$onClose = F2(
	function (onClose_, socket) {
		return _elm_lang$core$Native_Utils.update(
			socket,
			{
				onClose: _elm_lang$core$Maybe$Just(onClose_)
			});
	});
var _saschatimme$elm_phoenix$Phoenix_Socket$onNormalClose = F2(
	function (onNormalClose_, socket) {
		return _elm_lang$core$Native_Utils.update(
			socket,
			{
				onNormalClose: _elm_lang$core$Maybe$Just(onNormalClose_)
			});
	});
var _saschatimme$elm_phoenix$Phoenix_Socket$onAbnormalClose = F2(
	function (onAbnormalClose_, socket) {
		return _elm_lang$core$Native_Utils.update(
			socket,
			{
				onAbnormalClose: _elm_lang$core$Maybe$Just(onAbnormalClose_)
			});
	});
var _saschatimme$elm_phoenix$Phoenix_Socket$withDebug = function (socket) {
	return _elm_lang$core$Native_Utils.update(
		socket,
		{debug: true});
};
var _saschatimme$elm_phoenix$Phoenix_Socket$reconnectTimer = F2(
	function (timerFunc, socket) {
		return _elm_lang$core$Native_Utils.update(
			socket,
			{reconnectTimer: timerFunc});
	});
var _saschatimme$elm_phoenix$Phoenix_Socket$withoutHeartbeat = function (socket) {
	return _elm_lang$core$Native_Utils.update(
		socket,
		{withoutHeartbeat: true});
};
var _saschatimme$elm_phoenix$Phoenix_Socket$heartbeatIntervallSeconds = F2(
	function (intervall, socket) {
		return _elm_lang$core$Native_Utils.update(
			socket,
			{
				heartbeatIntervall: _elm_lang$core$Basics$toFloat(intervall) * _elm_lang$core$Time$second
			});
	});
var _saschatimme$elm_phoenix$Phoenix_Socket$withParams = F2(
	function (params, socket) {
		return _elm_lang$core$Native_Utils.update(
			socket,
			{params: params});
	});
var _saschatimme$elm_phoenix$Phoenix_Socket$init = function (endpoint) {
	return {
		endpoint: endpoint,
		params: {ctor: '[]'},
		heartbeatIntervall: 30 * _elm_lang$core$Time$second,
		withoutHeartbeat: false,
		reconnectTimer: _saschatimme$elm_phoenix$Phoenix_Socket$defaultReconnectTimer,
		debug: false,
		onClose: _elm_lang$core$Maybe$Nothing,
		onAbnormalClose: _elm_lang$core$Maybe$Nothing,
		onNormalClose: _elm_lang$core$Maybe$Nothing
	};
};
var _saschatimme$elm_phoenix$Phoenix_Socket$PhoenixSocket = F9(
	function (a, b, c, d, e, f, g, h, i) {
		return {endpoint: a, params: b, heartbeatIntervall: c, withoutHeartbeat: d, reconnectTimer: e, debug: f, onClose: g, onAbnormalClose: h, onNormalClose: i};
	});

var _saschatimme$elm_phoenix$Phoenix_Internal_Socket$debugLogMessage = F2(
	function (_p0, msg) {
		var _p1 = _p0;
		return _p1.socket.debug ? A2(_elm_lang$core$Debug$log, 'Received', msg) : msg;
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Socket$ref = function (_p2) {
	var _p3 = _p2;
	var _p4 = _p3.connection;
	if (_p4.ctor === 'Connected') {
		return _elm_lang$core$Maybe$Just(_p4._1);
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _saschatimme$elm_phoenix$Phoenix_Internal_Socket$get = F2(
	function (endpoint, dict) {
		return A2(_elm_lang$core$Dict$get, endpoint, dict);
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Socket$getRef = F2(
	function (endpoint, dict) {
		return A2(
			_elm_lang$core$Maybe$andThen,
			_saschatimme$elm_phoenix$Phoenix_Internal_Socket$ref,
			A2(_saschatimme$elm_phoenix$Phoenix_Internal_Socket$get, endpoint, dict));
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Socket$close = function (_p5) {
	var _p6 = _p5;
	var _p7 = _p6.connection;
	switch (_p7.ctor) {
		case 'Opening':
			return _elm_lang$core$Process$kill(_p7._1);
		case 'Connected':
			return _elm_lang$websocket$WebSocket_LowLevel$close(_p7._0);
		default:
			return _elm_lang$core$Task$succeed(
				{ctor: '_Tuple0'});
	}
};
var _saschatimme$elm_phoenix$Phoenix_Internal_Socket$after = function (backoff) {
	return (_elm_lang$core$Native_Utils.cmp(backoff, 1) < 0) ? _elm_lang$core$Task$succeed(
		{ctor: '_Tuple0'}) : _elm_lang$core$Process$sleep(backoff);
};
var _saschatimme$elm_phoenix$Phoenix_Internal_Socket$open = F2(
	function (_p8, settings) {
		var _p9 = _p8;
		var _p12 = _p9.socket;
		var query = A2(
			_elm_lang$core$String$join,
			'&',
			A2(
				_elm_lang$core$List$map,
				function (_p10) {
					var _p11 = _p10;
					return A2(
						_elm_lang$core$Basics_ops['++'],
						_p11._0,
						A2(_elm_lang$core$Basics_ops['++'], '=', _p11._1));
				},
				_p12.params));
		var url = A2(_elm_lang$core$String$contains, '?', _p12.endpoint) ? A2(
			_elm_lang$core$Basics_ops['++'],
			_p12.endpoint,
			A2(_elm_lang$core$Basics_ops['++'], '&', query)) : A2(
			_elm_lang$core$Basics_ops['++'],
			_p12.endpoint,
			A2(_elm_lang$core$Basics_ops['++'], '?', query));
		return A2(_elm_lang$websocket$WebSocket_LowLevel$open, url, settings);
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Socket$push = F2(
	function (message, _p13) {
		var _p14 = _p13;
		var _p19 = _p14.socket;
		var _p15 = _p14.connection;
		if (_p15.ctor === 'Connected') {
			var _p18 = _p15._1;
			var message_ = _p19.debug ? A2(
				_elm_lang$core$Debug$log,
				'Send',
				A2(_saschatimme$elm_phoenix$Phoenix_Internal_Message$ref, _p18, message)) : A2(_saschatimme$elm_phoenix$Phoenix_Internal_Message$ref, _p18, message);
			return A2(
				_elm_lang$core$Task$map,
				function (maybeBadSend) {
					var _p16 = maybeBadSend;
					if (_p16.ctor === 'Nothing') {
						return _elm_lang$core$Maybe$Just(_p18);
					} else {
						if (_p19.debug) {
							var _p17 = A2(_elm_lang$core$Debug$log, 'BadSend', _p16._0);
							return _elm_lang$core$Maybe$Nothing;
						} else {
							return _elm_lang$core$Maybe$Nothing;
						}
					}
				},
				A2(
					_elm_lang$websocket$WebSocket_LowLevel$send,
					_p15._0,
					_saschatimme$elm_phoenix$Phoenix_Internal_Message$encode(message_)));
		} else {
			return _elm_lang$core$Task$succeed(_elm_lang$core$Maybe$Nothing);
		}
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Socket$isOpening = function (internalSocket) {
	var _p20 = internalSocket.connection;
	if (_p20.ctor === 'Opening') {
		return true;
	} else {
		return false;
	}
};
var _saschatimme$elm_phoenix$Phoenix_Internal_Socket$InternalSocket = F2(
	function (a, b) {
		return {connection: a, socket: b};
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Socket$Connected = F2(
	function (a, b) {
		return {ctor: 'Connected', _0: a, _1: b};
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Socket$connected = F2(
	function (ws, socket) {
		return _elm_lang$core$Native_Utils.update(
			socket,
			{
				connection: A2(_saschatimme$elm_phoenix$Phoenix_Internal_Socket$Connected, ws, 0)
			});
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Socket$increaseRef = function (socket) {
	var _p21 = socket.connection;
	if (_p21.ctor === 'Connected') {
		return _elm_lang$core$Native_Utils.update(
			socket,
			{
				connection: A2(_saschatimme$elm_phoenix$Phoenix_Internal_Socket$Connected, _p21._0, _p21._1 + 1)
			});
	} else {
		return socket;
	}
};
var _saschatimme$elm_phoenix$Phoenix_Internal_Socket$Opening = F2(
	function (a, b) {
		return {ctor: 'Opening', _0: a, _1: b};
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Socket$opening = F3(
	function (backoff, pid, socket) {
		return _elm_lang$core$Native_Utils.update(
			socket,
			{
				connection: A2(_saschatimme$elm_phoenix$Phoenix_Internal_Socket$Opening, backoff, pid)
			});
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Socket$resetBackoff = function (connection) {
	var _p22 = connection;
	if (_p22.ctor === 'Opening') {
		return A2(_saschatimme$elm_phoenix$Phoenix_Internal_Socket$Opening, 0, _p22._1);
	} else {
		return connection;
	}
};
var _saschatimme$elm_phoenix$Phoenix_Internal_Socket$update = F2(
	function (nextSocket, _p23) {
		var _p24 = _p23;
		var _p25 = _p24.connection;
		var updatedConnection = (!_elm_lang$core$Native_Utils.eq(nextSocket.params, _p24.socket.params)) ? _saschatimme$elm_phoenix$Phoenix_Internal_Socket$resetBackoff(_p25) : _p25;
		return A2(_saschatimme$elm_phoenix$Phoenix_Internal_Socket$InternalSocket, updatedConnection, nextSocket);
	});
var _saschatimme$elm_phoenix$Phoenix_Internal_Socket$Closed = {ctor: 'Closed'};
var _saschatimme$elm_phoenix$Phoenix_Internal_Socket$internalSocket = function (socket) {
	return {connection: _saschatimme$elm_phoenix$Phoenix_Internal_Socket$Closed, socket: socket};
};

var _saschatimme$elm_phoenix$Phoenix$after = function (backoff) {
	return (_elm_lang$core$Native_Utils.cmp(backoff, 1) < 0) ? _elm_lang$core$Task$succeed(
		{ctor: '_Tuple0'}) : _elm_lang$core$Process$sleep(backoff);
};
var _saschatimme$elm_phoenix$Phoenix$heartbeatMessage = A2(_saschatimme$elm_phoenix$Phoenix_Internal_Message$init, 'phoenix', 'heartbeat');
var _saschatimme$elm_phoenix$Phoenix$handleChannelDisconnect = F3(
	function (router, endpoint, state) {
		var _p0 = A2(_elm_lang$core$Dict$get, endpoint, state.channels);
		if (_p0.ctor === 'Nothing') {
			return _elm_lang$core$Task$succeed(state);
		} else {
			var _p8 = _p0._0;
			var updateChannel = F2(
				function (_p1, channel) {
					var _p2 = channel.state;
					if (_p2.ctor === 'Errored') {
						return channel;
					} else {
						return A2(_saschatimme$elm_phoenix$Phoenix_Internal_Channel$updateState, _saschatimme$elm_phoenix$Phoenix_Internal_Channel$Disconnected, channel);
					}
				});
			var updatedEndpointChannels = A2(_elm_lang$core$Dict$map, updateChannel, _p8);
			var notifyApp = function (_p3) {
				var _p4 = _p3;
				var _p5 = _p4.state;
				if (_p5.ctor === 'Joined') {
					var _p6 = _p4.channel.onDisconnect;
					if (_p6.ctor === 'Nothing') {
						return _elm_lang$core$Task$succeed(
							{ctor: '_Tuple0'});
					} else {
						return A2(_elm_lang$core$Platform$sendToApp, router, _p6._0);
					}
				} else {
					return _elm_lang$core$Task$succeed(
						{ctor: '_Tuple0'});
				}
			};
			var notify = A3(
				_elm_lang$core$Dict$foldl,
				F3(
					function (_p7, channel, task) {
						return A2(
							_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'],
							task,
							notifyApp(channel));
					}),
				_elm_lang$core$Task$succeed(
					{ctor: '_Tuple0'}),
				_p8);
			return A2(
				_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'],
				notify,
				_elm_lang$core$Task$succeed(
					_elm_lang$core$Native_Utils.update(
						state,
						{
							channels: A3(_elm_lang$core$Dict$insert, endpoint, updatedEndpointChannels, state.channels)
						})));
		}
	});
var _saschatimme$elm_phoenix$Phoenix$getEventCb = F3(
	function (endpoint, message, channels) {
		var _p9 = A3(_saschatimme$elm_phoenix$Phoenix_Internal_Helpers$getIn, endpoint, message.topic, channels);
		if (_p9.ctor === 'Nothing') {
			return _elm_lang$core$Maybe$Nothing;
		} else {
			return A2(_elm_lang$core$Dict$get, message.event, _p9._0.channel.on);
		}
	});
var _saschatimme$elm_phoenix$Phoenix$dispatchMessage = F4(
	function (router, endpoint, message, channels) {
		var _p10 = A3(_saschatimme$elm_phoenix$Phoenix$getEventCb, endpoint, message, channels);
		if (_p10.ctor === 'Nothing') {
			return _elm_lang$core$Task$succeed(
				{ctor: '_Tuple0'});
		} else {
			return A2(
				_elm_lang$core$Platform$sendToApp,
				router,
				_p10._0(message.payload));
		}
	});
var _saschatimme$elm_phoenix$Phoenix$handleSelfcallback = F4(
	function (router, endpoint, message, selfCallbacks) {
		var _p11 = message.ref;
		if (_p11.ctor === 'Nothing') {
			return _elm_lang$core$Task$succeed(selfCallbacks);
		} else {
			var _p13 = _p11._0;
			var _p12 = A2(_elm_lang$core$Dict$get, _p13, selfCallbacks);
			if (_p12.ctor === 'Nothing') {
				return _elm_lang$core$Task$succeed(selfCallbacks);
			} else {
				return A2(
					_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'],
					A2(
						_elm_lang$core$Platform$sendToSelf,
						router,
						_p12._0(message)),
					_elm_lang$core$Task$succeed(
						A2(_elm_lang$core$Dict$remove, _p13, selfCallbacks)));
			}
		}
	});
var _saschatimme$elm_phoenix$Phoenix$insertSelfCallback = F3(
	function (ref, maybeSelfCb, state) {
		var _p14 = maybeSelfCb;
		if (_p14.ctor === 'Nothing') {
			return state;
		} else {
			return _elm_lang$core$Native_Utils.update(
				state,
				{
					selfCallbacks: A3(_elm_lang$core$Dict$insert, ref, _p14._0, state.selfCallbacks)
				});
		}
	});
var _saschatimme$elm_phoenix$Phoenix$insertSocket = F3(
	function (endpoint, socket, state) {
		return _elm_lang$core$Native_Utils.update(
			state,
			{
				sockets: A3(_elm_lang$core$Dict$insert, endpoint, socket, state.sockets)
			});
	});
var _saschatimme$elm_phoenix$Phoenix$pushSocket_ = F4(
	function (endpoint, message, maybeSelfCb, state) {
		var _p15 = A2(_elm_lang$core$Dict$get, endpoint, state.sockets);
		if (_p15.ctor === 'Nothing') {
			return _elm_lang$core$Task$succeed(state);
		} else {
			var _p17 = _p15._0;
			return A2(
				_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['<&>'],
				A2(_saschatimme$elm_phoenix$Phoenix_Internal_Socket$push, message, _p17),
				function (maybeRef) {
					var _p16 = maybeRef;
					if (_p16.ctor === 'Nothing') {
						return _elm_lang$core$Task$succeed(state);
					} else {
						return _elm_lang$core$Task$succeed(
							A3(
								_saschatimme$elm_phoenix$Phoenix$insertSelfCallback,
								_p16._0,
								maybeSelfCb,
								A3(
									_saschatimme$elm_phoenix$Phoenix$insertSocket,
									endpoint,
									_saschatimme$elm_phoenix$Phoenix_Internal_Socket$increaseRef(_p17),
									state)));
					}
				});
		}
	});
var _saschatimme$elm_phoenix$Phoenix$pushSocket = F4(
	function (endpoint, message, selfCb, state) {
		var queuedState = _elm_lang$core$Task$succeed(
			_elm_lang$core$Native_Utils.update(
				state,
				{
					channelQueues: A4(
						_saschatimme$elm_phoenix$Phoenix_Internal_Helpers$updateIn,
						endpoint,
						message.topic,
						_saschatimme$elm_phoenix$Phoenix_Internal_Helpers$add(
							{ctor: '_Tuple2', _0: message, _1: selfCb}),
						state.channelQueues)
				}));
		var afterSocketPush = F2(
			function (socket, maybeRef) {
				var _p18 = maybeRef;
				if (_p18.ctor === 'Nothing') {
					return queuedState;
				} else {
					return _elm_lang$core$Task$succeed(
						A3(
							_saschatimme$elm_phoenix$Phoenix$insertSelfCallback,
							_p18._0,
							selfCb,
							A3(
								_saschatimme$elm_phoenix$Phoenix$insertSocket,
								endpoint,
								_saschatimme$elm_phoenix$Phoenix_Internal_Socket$increaseRef(socket),
								state)));
				}
			});
		var _p19 = A2(_elm_lang$core$Dict$get, endpoint, state.sockets);
		if (_p19.ctor === 'Nothing') {
			return queuedState;
		} else {
			var _p24 = _p19._0;
			var _p20 = A3(_saschatimme$elm_phoenix$Phoenix_Internal_Channel$get, endpoint, message.topic, state.channels);
			if (_p20.ctor === 'Nothing') {
				var _p21 = A2(_elm_lang$core$Debug$log, 'Queued message (no channel exists)', message);
				return queuedState;
			} else {
				var _p22 = _p20._0.state;
				if (_p22.ctor === 'Joined') {
					return A2(
						_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['<&>'],
						A2(_saschatimme$elm_phoenix$Phoenix_Internal_Socket$push, message, _p24),
						afterSocketPush(_p24));
				} else {
					var _p23 = A2(_elm_lang$core$Debug$log, 'Queued message (channel not joined)', message);
					return queuedState;
				}
			}
		}
	});
var _saschatimme$elm_phoenix$Phoenix$processQueue = F3(
	function (endpoint, messages, state) {
		var _p25 = messages;
		if (_p25.ctor === '[]') {
			return _elm_lang$core$Task$succeed(state);
		} else {
			return A2(
				_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['<&>'],
				A4(_saschatimme$elm_phoenix$Phoenix$pushSocket, endpoint, _p25._0._0, _p25._0._1, state),
				A2(_saschatimme$elm_phoenix$Phoenix$processQueue, endpoint, _p25._1));
		}
	});
var _saschatimme$elm_phoenix$Phoenix$removeChannelQueue = F3(
	function (endpoint, topic, state) {
		return _elm_lang$core$Native_Utils.update(
			state,
			{
				channelQueues: A3(_saschatimme$elm_phoenix$Phoenix_Internal_Helpers$removeIn, endpoint, topic, state.channelQueues)
			});
	});
var _saschatimme$elm_phoenix$Phoenix$updateSelfCallbacks = F2(
	function (selfCallbacks, state) {
		return _elm_lang$core$Native_Utils.update(
			state,
			{selfCallbacks: selfCallbacks});
	});
var _saschatimme$elm_phoenix$Phoenix$updateChannels = F2(
	function (channels, state) {
		return _elm_lang$core$Native_Utils.update(
			state,
			{channels: channels});
	});
var _saschatimme$elm_phoenix$Phoenix$updateSocket = F3(
	function (endpoint, socket, state) {
		return _elm_lang$core$Native_Utils.update(
			state,
			{
				sockets: A3(_elm_lang$core$Dict$insert, endpoint, socket, state.sockets)
			});
	});
var _saschatimme$elm_phoenix$Phoenix$buildChannelsDict = F2(
	function (subs, dict) {
		var _p26 = subs;
		if (_p26.ctor === '[]') {
			return dict;
		} else {
			var internalChan = function (chan) {
				return A2(_saschatimme$elm_phoenix$Phoenix_Internal_Channel$InternalChannel, _saschatimme$elm_phoenix$Phoenix_Internal_Channel$Closed, chan);
			};
			var build = F2(
				function (chan, dict_) {
					return A2(
						_saschatimme$elm_phoenix$Phoenix$buildChannelsDict,
						_p26._1,
						A4(
							_saschatimme$elm_phoenix$Phoenix_Internal_Helpers$insertIn,
							_p26._0._0.endpoint,
							chan.topic,
							internalChan(chan),
							dict_));
				});
			return A3(_elm_lang$core$List$foldl, build, dict, _p26._0._1);
		}
	});
var _saschatimme$elm_phoenix$Phoenix$buildSocketsDict = function (subs) {
	var insert = F2(
		function (sub, dict) {
			var _p27 = sub;
			var _p28 = _p27._0;
			return A3(_elm_lang$core$Dict$insert, _p28.endpoint, _p28, dict);
		});
	return A3(_elm_lang$core$List$foldl, insert, _elm_lang$core$Dict$empty, subs);
};
var _saschatimme$elm_phoenix$Phoenix$subscription = _elm_lang$core$Native_Platform.leaf('Phoenix');
var _saschatimme$elm_phoenix$Phoenix$command = _elm_lang$core$Native_Platform.leaf('Phoenix');
var _saschatimme$elm_phoenix$Phoenix$State = F4(
	function (a, b, c, d) {
		return {sockets: a, channels: b, selfCallbacks: c, channelQueues: d};
	});
var _saschatimme$elm_phoenix$Phoenix$init = _elm_lang$core$Task$succeed(
	A4(_saschatimme$elm_phoenix$Phoenix$State, _elm_lang$core$Dict$empty, _elm_lang$core$Dict$empty, _elm_lang$core$Dict$empty, _elm_lang$core$Dict$empty));
var _saschatimme$elm_phoenix$Phoenix$Connect = F2(
	function (a, b) {
		return {ctor: 'Connect', _0: a, _1: b};
	});
var _saschatimme$elm_phoenix$Phoenix$connect = F2(
	function (socket, channels) {
		return _saschatimme$elm_phoenix$Phoenix$subscription(
			A2(_saschatimme$elm_phoenix$Phoenix$Connect, socket, channels));
	});
var _saschatimme$elm_phoenix$Phoenix$subMap = F2(
	function (func, sub) {
		var _p29 = sub;
		return A2(
			_saschatimme$elm_phoenix$Phoenix$Connect,
			A2(_saschatimme$elm_phoenix$Phoenix_Socket$map, func, _p29._0),
			A2(
				_elm_lang$core$List$map,
				_saschatimme$elm_phoenix$Phoenix_Channel$map(func),
				_p29._1));
	});
var _saschatimme$elm_phoenix$Phoenix$Send = F2(
	function (a, b) {
		return {ctor: 'Send', _0: a, _1: b};
	});
var _saschatimme$elm_phoenix$Phoenix$push = F2(
	function (endpoint, push_) {
		return _saschatimme$elm_phoenix$Phoenix$command(
			A2(_saschatimme$elm_phoenix$Phoenix$Send, endpoint, push_));
	});
var _saschatimme$elm_phoenix$Phoenix$cmdMap = F2(
	function (func, cmd) {
		var _p30 = cmd;
		return A2(
			_saschatimme$elm_phoenix$Phoenix$Send,
			_p30._0,
			A2(_saschatimme$elm_phoenix$Phoenix_Push$map, func, _p30._1));
	});
var _saschatimme$elm_phoenix$Phoenix$PushResponse = F2(
	function (a, b) {
		return {ctor: 'PushResponse', _0: a, _1: b};
	});
var _saschatimme$elm_phoenix$Phoenix$sendPushsHelp = F2(
	function (cmds, state) {
		var _p31 = cmds;
		if (_p31.ctor === '[]') {
			return _elm_lang$core$Task$succeed(state);
		} else {
			var _p32 = _p31._0._1;
			var message = _saschatimme$elm_phoenix$Phoenix_Internal_Message$fromPush(_p32);
			return A2(
				_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['<&>'],
				A4(
					_saschatimme$elm_phoenix$Phoenix$pushSocket,
					_p31._0._0,
					message,
					_elm_lang$core$Maybe$Just(
						_saschatimme$elm_phoenix$Phoenix$PushResponse(_p32)),
					state),
				_saschatimme$elm_phoenix$Phoenix$sendPushsHelp(_p31._1));
		}
	});
var _saschatimme$elm_phoenix$Phoenix$SendHeartbeat = function (a) {
	return {ctor: 'SendHeartbeat', _0: a};
};
var _saschatimme$elm_phoenix$Phoenix$heartbeat = F3(
	function (router, endpoint, state) {
		var _p33 = A2(_elm_lang$core$Dict$get, endpoint, state.sockets);
		if (_p33.ctor === 'Just') {
			var _p34 = _p33._0.socket;
			return _p34.withoutHeartbeat ? _elm_lang$core$Task$succeed(state) : A2(
				_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'],
				_elm_lang$core$Process$spawn(
					A2(
						_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'],
						_elm_lang$core$Process$sleep(_p34.heartbeatIntervall),
						A2(
							_elm_lang$core$Platform$sendToSelf,
							router,
							_saschatimme$elm_phoenix$Phoenix$SendHeartbeat(endpoint)))),
				A4(_saschatimme$elm_phoenix$Phoenix$pushSocket_, endpoint, _saschatimme$elm_phoenix$Phoenix$heartbeatMessage, _elm_lang$core$Maybe$Nothing, state));
		} else {
			return _elm_lang$core$Task$succeed(state);
		}
	});
var _saschatimme$elm_phoenix$Phoenix$GoodJoin = F2(
	function (a, b) {
		return {ctor: 'GoodJoin', _0: a, _1: b};
	});
var _saschatimme$elm_phoenix$Phoenix$handleChannelJoinReply = F6(
	function (router, endpoint, topic, message, prevState, channels) {
		var newChannels = function (state) {
			return _elm_lang$core$Task$succeed(
				A4(_saschatimme$elm_phoenix$Phoenix_Internal_Channel$insertState, endpoint, topic, state, channels));
		};
		var handlePayload = F2(
			function (_p35, payload) {
				var _p36 = _p35;
				var _p43 = _p36.channel;
				var _p37 = payload;
				if (_p37.ctor === 'Err') {
					var _p38 = _p43.onJoinError;
					if (_p38.ctor === 'Nothing') {
						return newChannels(_saschatimme$elm_phoenix$Phoenix_Internal_Channel$Errored);
					} else {
						return A2(
							_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'],
							A2(
								_elm_lang$core$Platform$sendToApp,
								router,
								_p38._0(_p37._0)),
							newChannels(_saschatimme$elm_phoenix$Phoenix_Internal_Channel$Errored));
					}
				} else {
					var _p42 = _p37._0;
					var join = A2(
						_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'],
						A2(
							_elm_lang$core$Platform$sendToSelf,
							router,
							A2(_saschatimme$elm_phoenix$Phoenix$GoodJoin, endpoint, topic)),
						newChannels(_saschatimme$elm_phoenix$Phoenix_Internal_Channel$Joined));
					var _p39 = prevState;
					if (_p39.ctor === 'Disconnected') {
						var _p40 = _p43.onRejoin;
						if (_p40.ctor === 'Nothing') {
							return join;
						} else {
							return A2(
								_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'],
								A2(
									_elm_lang$core$Platform$sendToApp,
									router,
									_p40._0(_p42)),
								join);
						}
					} else {
						var _p41 = _p43.onJoin;
						if (_p41.ctor === 'Nothing') {
							return join;
						} else {
							return A2(
								_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'],
								A2(
									_elm_lang$core$Platform$sendToApp,
									router,
									_p41._0(_p42)),
								join);
						}
					}
				}
			});
		var maybePayload = _saschatimme$elm_phoenix$Phoenix_Internal_Helpers$decodeReplyPayload(message.payload);
		var maybeChannel = A3(_saschatimme$elm_phoenix$Phoenix_Internal_Channel$get, endpoint, topic, channels);
		return A2(
			_elm_lang$core$Maybe$withDefault,
			_elm_lang$core$Task$succeed(channels),
			A3(_elm_lang$core$Maybe$map2, handlePayload, maybeChannel, maybePayload));
	});
var _saschatimme$elm_phoenix$Phoenix$ChannelJoinReply = F4(
	function (a, b, c, d) {
		return {ctor: 'ChannelJoinReply', _0: a, _1: b, _2: c, _3: d};
	});
var _saschatimme$elm_phoenix$Phoenix$sendJoinHelper = F3(
	function (endpoint, channels, state) {
		var _p44 = channels;
		if (_p44.ctor === '[]') {
			return _elm_lang$core$Task$succeed(state);
		} else {
			var _p45 = _p44._0;
			var newChannel = A2(_saschatimme$elm_phoenix$Phoenix_Internal_Channel$updateState, _saschatimme$elm_phoenix$Phoenix_Internal_Channel$Joining, _p45);
			var newChannels = A4(_saschatimme$elm_phoenix$Phoenix_Internal_Helpers$insertIn, endpoint, _p45.channel.topic, newChannel, state.channels);
			var message = _saschatimme$elm_phoenix$Phoenix_Internal_Channel$joinMessage(_p45);
			var selfCb = A3(_saschatimme$elm_phoenix$Phoenix$ChannelJoinReply, endpoint, _p45.channel.topic, _p45.state);
			return A2(
				_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['<&>'],
				A4(
					_saschatimme$elm_phoenix$Phoenix$pushSocket_,
					endpoint,
					message,
					_elm_lang$core$Maybe$Just(selfCb),
					A2(_saschatimme$elm_phoenix$Phoenix$updateChannels, newChannels, state)),
				function (newState) {
					return A3(_saschatimme$elm_phoenix$Phoenix$sendJoinHelper, endpoint, _p44._1, newState);
				});
		}
	});
var _saschatimme$elm_phoenix$Phoenix$handlePhoenixMessage = F4(
	function (router, endpoint, message, state) {
		var _p46 = message.event;
		switch (_p46) {
			case 'phx_error':
				var _p47 = A3(_saschatimme$elm_phoenix$Phoenix_Internal_Helpers$getIn, endpoint, message.topic, state.channels);
				if (_p47.ctor === 'Nothing') {
					return _elm_lang$core$Task$succeed(state);
				} else {
					var _p49 = _p47._0;
					var sendToApp = function () {
						var _p48 = _p49.channel.onError;
						if (_p48.ctor === 'Nothing') {
							return _elm_lang$core$Task$succeed(
								{ctor: '_Tuple0'});
						} else {
							return A2(_elm_lang$core$Platform$sendToApp, router, _p48._0);
						}
					}();
					var newChannel = A2(_saschatimme$elm_phoenix$Phoenix_Internal_Channel$updateState, _saschatimme$elm_phoenix$Phoenix_Internal_Channel$Errored, _p49);
					return A2(
						_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'],
						sendToApp,
						A3(
							_saschatimme$elm_phoenix$Phoenix$sendJoinHelper,
							endpoint,
							{
								ctor: '::',
								_0: newChannel,
								_1: {ctor: '[]'}
							},
							state));
				}
			case 'phx_close':
				return _elm_lang$core$Task$succeed(state);
			default:
				return _elm_lang$core$Task$succeed(state);
		}
	});
var _saschatimme$elm_phoenix$Phoenix$rejoinAllChannels = F2(
	function (endpoint, state) {
		var _p50 = A2(_elm_lang$core$Dict$get, endpoint, state.channels);
		if (_p50.ctor === 'Nothing') {
			return _elm_lang$core$Task$succeed(state);
		} else {
			return A3(
				_saschatimme$elm_phoenix$Phoenix$sendJoinHelper,
				endpoint,
				_elm_lang$core$Dict$values(_p50._0),
				state);
		}
	});
var _saschatimme$elm_phoenix$Phoenix$ChannelLeaveReply = F3(
	function (a, b, c) {
		return {ctor: 'ChannelLeaveReply', _0: a, _1: b, _2: c};
	});
var _saschatimme$elm_phoenix$Phoenix$LeaveChannel = F2(
	function (a, b) {
		return {ctor: 'LeaveChannel', _0: a, _1: b};
	});
var _saschatimme$elm_phoenix$Phoenix$sendLeaveChannel = F3(
	function (router, endpoint, internalChannel) {
		var _p51 = internalChannel.state;
		if (_p51.ctor === 'Joined') {
			return A2(
				_elm_lang$core$Platform$sendToSelf,
				router,
				A2(_saschatimme$elm_phoenix$Phoenix$LeaveChannel, endpoint, internalChannel));
		} else {
			return _elm_lang$core$Task$succeed(
				{ctor: '_Tuple0'});
		}
	});
var _saschatimme$elm_phoenix$Phoenix$JoinChannel = F2(
	function (a, b) {
		return {ctor: 'JoinChannel', _0: a, _1: b};
	});
var _saschatimme$elm_phoenix$Phoenix$sendJoinChannel = F3(
	function (router, endpoint, internalChannel) {
		return A2(
			_elm_lang$core$Platform$sendToSelf,
			router,
			A2(_saschatimme$elm_phoenix$Phoenix$JoinChannel, endpoint, internalChannel));
	});
var _saschatimme$elm_phoenix$Phoenix$handleEndpointChannelsUpdate = F4(
	function (router, endpoint, definedChannels, stateChannels) {
		var rightStep = F3(
			function (topic, state, getNewChannels) {
				return A2(
					_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'],
					A3(_saschatimme$elm_phoenix$Phoenix$sendLeaveChannel, router, endpoint, state),
					getNewChannels);
			});
		var bothStep = F4(
			function (topic, defined, state, getNewChannels) {
				var channel = A2(
					_saschatimme$elm_phoenix$Phoenix_Internal_Channel$updateOn,
					defined.channel.on,
					A2(_saschatimme$elm_phoenix$Phoenix_Internal_Channel$updatePayload, defined.channel.payload, state));
				return A2(
					_elm_lang$core$Task$map,
					A2(_elm_lang$core$Dict$insert, topic, channel),
					getNewChannels);
			});
		var leftStep = F3(
			function (topic, defined, getNewChannels) {
				return A2(
					_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'],
					A3(_saschatimme$elm_phoenix$Phoenix$sendJoinChannel, router, endpoint, defined),
					A2(
						_elm_lang$core$Task$map,
						A2(_elm_lang$core$Dict$insert, topic, defined),
						getNewChannels));
			});
		return A6(
			_elm_lang$core$Dict$merge,
			leftStep,
			bothStep,
			rightStep,
			definedChannels,
			stateChannels,
			_elm_lang$core$Task$succeed(_elm_lang$core$Dict$empty));
	});
var _saschatimme$elm_phoenix$Phoenix$handleChannelsUpdate = F3(
	function (router, definedChannels, internalChannels) {
		var rightStep = F3(
			function (endpoint, stateEndpointChannels, getNewChannels) {
				var sendLeave = A3(
					_elm_lang$core$List$foldl,
					F2(
						function (channel, task) {
							return A2(
								_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'],
								task,
								A3(_saschatimme$elm_phoenix$Phoenix$sendLeaveChannel, router, endpoint, channel));
						}),
					_elm_lang$core$Task$succeed(
						{ctor: '_Tuple0'}),
					_elm_lang$core$Dict$values(stateEndpointChannels));
				return A2(_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'], sendLeave, getNewChannels);
			});
		var bothStep = F4(
			function (endpoint, definedEndpointChannels, stateEndpointChannels, getNewChannels) {
				var getEndpointChannels = A4(_saschatimme$elm_phoenix$Phoenix$handleEndpointChannelsUpdate, router, endpoint, definedEndpointChannels, stateEndpointChannels);
				return A3(
					_elm_lang$core$Task$map2,
					F2(
						function (endpointChannels, newChannels) {
							return A3(_elm_lang$core$Dict$insert, endpoint, endpointChannels, newChannels);
						}),
					getEndpointChannels,
					getNewChannels);
			});
		var leftStep = F3(
			function (endpoint, definedEndpointChannels, getNewChannels) {
				var insert = function (newChannels) {
					return _elm_lang$core$Task$succeed(
						A3(_elm_lang$core$Dict$insert, endpoint, definedEndpointChannels, newChannels));
				};
				var sendJoin = A3(
					_elm_lang$core$List$foldl,
					F2(
						function (channel, task) {
							return A2(
								_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'],
								task,
								A3(_saschatimme$elm_phoenix$Phoenix$sendJoinChannel, router, endpoint, channel));
						}),
					_elm_lang$core$Task$succeed(
						{ctor: '_Tuple0'}),
					_elm_lang$core$Dict$values(definedEndpointChannels));
				return A2(
					_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['<&>'],
					A2(_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'], sendJoin, getNewChannels),
					insert);
			});
		return A6(
			_elm_lang$core$Dict$merge,
			leftStep,
			bothStep,
			rightStep,
			definedChannels,
			internalChannels,
			_elm_lang$core$Task$succeed(_elm_lang$core$Dict$empty));
	});
var _saschatimme$elm_phoenix$Phoenix$Register = {ctor: 'Register'};
var _saschatimme$elm_phoenix$Phoenix$BadOpen = F2(
	function (a, b) {
		return {ctor: 'BadOpen', _0: a, _1: b};
	});
var _saschatimme$elm_phoenix$Phoenix$GoodOpen = F2(
	function (a, b) {
		return {ctor: 'GoodOpen', _0: a, _1: b};
	});
var _saschatimme$elm_phoenix$Phoenix$Die = F2(
	function (a, b) {
		return {ctor: 'Die', _0: a, _1: b};
	});
var _saschatimme$elm_phoenix$Phoenix$Receive = F2(
	function (a, b) {
		return {ctor: 'Receive', _0: a, _1: b};
	});
var _saschatimme$elm_phoenix$Phoenix$open = F2(
	function (socket, router) {
		var onMessage = F2(
			function (_p52, msg) {
				var _p53 = _saschatimme$elm_phoenix$Phoenix_Internal_Message$decode(msg);
				if (_p53.ctor === 'Ok') {
					return A2(
						_elm_lang$core$Platform$sendToSelf,
						router,
						A2(
							_saschatimme$elm_phoenix$Phoenix$Receive,
							socket.socket.endpoint,
							A2(_saschatimme$elm_phoenix$Phoenix_Internal_Socket$debugLogMessage, socket, _p53._0)));
				} else {
					return _elm_lang$core$Task$succeed(
						{ctor: '_Tuple0'});
				}
			});
		return A2(
			_saschatimme$elm_phoenix$Phoenix_Internal_Socket$open,
			socket,
			{
				onMessage: onMessage,
				onClose: function (details) {
					return A2(
						_elm_lang$core$Platform$sendToSelf,
						router,
						A2(_saschatimme$elm_phoenix$Phoenix$Die, socket.socket.endpoint, details));
				}
			});
	});
var _saschatimme$elm_phoenix$Phoenix$attemptOpen = F3(
	function (router, backoff, _p54) {
		var _p55 = _p54;
		var _p56 = _p55.socket;
		var badOpen = function (details) {
			return A2(
				_elm_lang$core$Platform$sendToSelf,
				router,
				A2(_saschatimme$elm_phoenix$Phoenix$BadOpen, _p56.endpoint, details));
		};
		var goodOpen = function (ws) {
			return A2(
				_elm_lang$core$Platform$sendToSelf,
				router,
				A2(_saschatimme$elm_phoenix$Phoenix$GoodOpen, _p56.endpoint, ws));
		};
		var actuallyAttemptOpen = A2(
			_elm_lang$core$Task$onError,
			badOpen,
			A2(
				_elm_lang$core$Task$andThen,
				goodOpen,
				A2(_saschatimme$elm_phoenix$Phoenix$open, _p55, router)));
		return _elm_lang$core$Process$spawn(
			A2(
				_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'],
				_saschatimme$elm_phoenix$Phoenix$after(backoff),
				actuallyAttemptOpen));
	});
var _saschatimme$elm_phoenix$Phoenix$handleSocketsUpdate = F3(
	function (router, definedSockets, stateSockets) {
		var removedSocketsStep = F3(
			function (endpoint, stateSocket, taskChain) {
				return A2(
					_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'],
					_saschatimme$elm_phoenix$Phoenix_Internal_Socket$close(stateSocket),
					taskChain);
			});
		var retainedSocketsStep = F4(
			function (endpoint, definedSocket, stateSocket, taskChain) {
				return A2(
					_elm_lang$core$Task$map,
					A2(
						_elm_lang$core$Dict$insert,
						endpoint,
						A2(_saschatimme$elm_phoenix$Phoenix_Internal_Socket$update, definedSocket, stateSocket)),
					taskChain);
			});
		var addedSocketsStep = F3(
			function (endpoint, definedSocket, taskChain) {
				var socket = _saschatimme$elm_phoenix$Phoenix_Internal_Socket$internalSocket(definedSocket);
				return A2(
					_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['<&>'],
					taskChain,
					function (addedSockets) {
						return A2(
							_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['<&>'],
							A3(_saschatimme$elm_phoenix$Phoenix$attemptOpen, router, 0, socket),
							function (pid) {
								return _elm_lang$core$Task$succeed(
									A3(
										_elm_lang$core$Dict$insert,
										endpoint,
										A3(_saschatimme$elm_phoenix$Phoenix_Internal_Socket$opening, 0, pid, socket),
										addedSockets));
							});
					});
			});
		return A6(
			_elm_lang$core$Dict$merge,
			addedSocketsStep,
			retainedSocketsStep,
			removedSocketsStep,
			definedSockets,
			stateSockets,
			_elm_lang$core$Task$succeed(_elm_lang$core$Dict$empty));
	});
var _saschatimme$elm_phoenix$Phoenix$onEffects = F4(
	function (router, cmds, subs, state) {
		var definedChannels = A2(_saschatimme$elm_phoenix$Phoenix$buildChannelsDict, subs, _elm_lang$core$Dict$empty);
		var definedSockets = _saschatimme$elm_phoenix$Phoenix$buildSocketsDict(subs);
		var updateState = function (newState) {
			var getNewSockets = A3(_saschatimme$elm_phoenix$Phoenix$handleSocketsUpdate, router, definedSockets, newState.sockets);
			var getNewChannels = A3(_saschatimme$elm_phoenix$Phoenix$handleChannelsUpdate, router, definedChannels, newState.channels);
			return A3(
				_elm_lang$core$Task$map2,
				F2(
					function (newSockets, newChannels) {
						return _elm_lang$core$Native_Utils.update(
							newState,
							{sockets: newSockets, channels: newChannels});
					}),
				getNewSockets,
				getNewChannels);
		};
		return A2(
			_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['<&>'],
			A2(_saschatimme$elm_phoenix$Phoenix$sendPushsHelp, cmds, state),
			function (newState) {
				return updateState(newState);
			});
	});
var _saschatimme$elm_phoenix$Phoenix$onSelfMsg = F3(
	function (router, selfMsg, state) {
		var _p57 = selfMsg;
		switch (_p57.ctor) {
			case 'GoodOpen':
				var _p61 = _p57._0;
				var _p58 = A2(_saschatimme$elm_phoenix$Phoenix_Internal_Socket$get, _p61, state.sockets);
				if (_p58.ctor === 'Just') {
					var _p60 = _p58._0;
					var state_ = A3(
						_saschatimme$elm_phoenix$Phoenix$insertSocket,
						_p61,
						A2(_saschatimme$elm_phoenix$Phoenix_Internal_Socket$connected, _p57._1, _p60),
						state);
					var _p59 = _p60.socket.debug ? A2(_elm_lang$core$Debug$log, 'WebSocket connected with ', _p61) : _p61;
					return A2(
						_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['<&>'],
						A3(_saschatimme$elm_phoenix$Phoenix$heartbeat, router, _p61, state_),
						function (newState) {
							return A2(_saschatimme$elm_phoenix$Phoenix$rejoinAllChannels, _p61, newState);
						});
				} else {
					return _elm_lang$core$Task$succeed(state);
				}
			case 'BadOpen':
				var _p67 = _p57._0;
				var _p66 = _p57._1;
				var _p62 = A2(_elm_lang$core$Dict$get, _p67, state.sockets);
				if (_p62.ctor === 'Nothing') {
					return _elm_lang$core$Task$succeed(state);
				} else {
					var _p65 = _p62._0;
					var backoffIteration = function () {
						var _p63 = _p65.connection;
						if (_p63.ctor === 'Opening') {
							return _p63._0 + 1;
						} else {
							return 0;
						}
					}();
					var backoff = _p65.socket.reconnectTimer(backoffIteration);
					var newState = function (pid) {
						return A3(
							_saschatimme$elm_phoenix$Phoenix$updateSocket,
							_p67,
							A3(_saschatimme$elm_phoenix$Phoenix_Internal_Socket$opening, backoffIteration, pid, _p65),
							state);
					};
					var _p64 = _p65.socket.debug ? A2(
						_elm_lang$core$Debug$log,
						A2(_elm_lang$core$Basics_ops['++'], 'WebSocket couldn_t connect with ', _p67),
						_p66) : _p66;
					return A2(
						_elm_lang$core$Task$map,
						newState,
						A3(_saschatimme$elm_phoenix$Phoenix$attemptOpen, router, backoff, _p65));
				}
			case 'Die':
				var _p73 = _p57._0;
				var _p72 = _p57._1;
				var _p68 = A2(_elm_lang$core$Dict$get, _p73, state.sockets);
				if (_p68.ctor === 'Nothing') {
					return _elm_lang$core$Task$succeed(state);
				} else {
					var _p71 = _p68._0.socket;
					var _p70 = _p68._0;
					var notifyOnAbnormalClose = (_saschatimme$elm_phoenix$Phoenix_Internal_Socket$isOpening(_p70) || (!_elm_lang$core$Native_Utils.eq(_p72.code, 1006))) ? _elm_lang$core$Task$succeed(
						{ctor: '_Tuple0'}) : A2(
						_elm_lang$core$Maybe$withDefault,
						_elm_lang$core$Task$succeed(
							{ctor: '_Tuple0'}),
						A2(
							_elm_lang$core$Maybe$map,
							_elm_lang$core$Platform$sendToApp(router),
							_p71.onAbnormalClose));
					var notifyOnNormalClose = (_saschatimme$elm_phoenix$Phoenix_Internal_Socket$isOpening(_p70) || (!_elm_lang$core$Native_Utils.eq(_p72.code, 1000))) ? _elm_lang$core$Task$succeed(
						{ctor: '_Tuple0'}) : A2(
						_elm_lang$core$Maybe$withDefault,
						_elm_lang$core$Task$succeed(
							{ctor: '_Tuple0'}),
						A2(
							_elm_lang$core$Maybe$map,
							_elm_lang$core$Platform$sendToApp(router),
							_p71.onNormalClose));
					var notifyOnClose = _saschatimme$elm_phoenix$Phoenix_Internal_Socket$isOpening(_p70) ? _elm_lang$core$Task$succeed(
						{ctor: '_Tuple0'}) : A2(
						_elm_lang$core$Maybe$withDefault,
						_elm_lang$core$Task$succeed(
							{ctor: '_Tuple0'}),
						A2(
							_elm_lang$core$Maybe$map,
							function (onClose) {
								return A2(
									_elm_lang$core$Platform$sendToApp,
									router,
									onClose(_p72));
							},
							_p71.onClose));
					var getNewState = A3(_saschatimme$elm_phoenix$Phoenix$handleChannelDisconnect, router, _p73, state);
					var backoffIteration = function () {
						var _p69 = _p68._0.connection;
						if (_p69.ctor === 'Opening') {
							return _p69._0 + 1;
						} else {
							return 0;
						}
					}();
					var backoff = _p71.reconnectTimer(backoffIteration);
					var finalNewState = function (pid) {
						return A2(
							_elm_lang$core$Task$map,
							A2(
								_saschatimme$elm_phoenix$Phoenix$updateSocket,
								_p73,
								A3(_saschatimme$elm_phoenix$Phoenix_Internal_Socket$opening, backoffIteration, pid, _p70)),
							getNewState);
					};
					return A2(
						_elm_lang$core$Task$andThen,
						finalNewState,
						A2(
							_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'],
							A2(
								_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'],
								A2(_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'], notifyOnClose, notifyOnNormalClose),
								notifyOnAbnormalClose),
							A3(_saschatimme$elm_phoenix$Phoenix$attemptOpen, router, backoff, _p70)));
				}
			case 'Receive':
				var _p75 = _p57._1;
				var _p74 = _p57._0;
				return A2(
					_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['<&>'],
					A2(
						_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'],
						A4(_saschatimme$elm_phoenix$Phoenix$dispatchMessage, router, _p74, _p75, state.channels),
						A2(
							_elm_lang$core$Task$map,
							function (selfCbs) {
								return A2(_saschatimme$elm_phoenix$Phoenix$updateSelfCallbacks, selfCbs, state);
							},
							A4(_saschatimme$elm_phoenix$Phoenix$handleSelfcallback, router, _p74, _p75, state.selfCallbacks))),
					A3(_saschatimme$elm_phoenix$Phoenix$handlePhoenixMessage, router, _p74, _p75));
			case 'ChannelJoinReply':
				return A2(
					_elm_lang$core$Task$map,
					function (newChannels) {
						return A2(_saschatimme$elm_phoenix$Phoenix$updateChannels, newChannels, state);
					},
					A6(_saschatimme$elm_phoenix$Phoenix$handleChannelJoinReply, router, _p57._0, _p57._1, _p57._3, _p57._2, state.channels));
			case 'JoinChannel':
				var _p79 = _p57._1;
				var _p78 = _p57._0;
				var _p76 = A2(_elm_lang$core$Dict$get, _p78, state.sockets);
				if (_p76.ctor === 'Nothing') {
					return _elm_lang$core$Task$succeed(state);
				} else {
					var _p77 = _p76._0.connection;
					if (_p77.ctor === 'Connected') {
						return A4(
							_saschatimme$elm_phoenix$Phoenix$pushSocket_,
							_p78,
							_saschatimme$elm_phoenix$Phoenix_Internal_Channel$joinMessage(_p79),
							_elm_lang$core$Maybe$Just(
								A3(_saschatimme$elm_phoenix$Phoenix$ChannelJoinReply, _p78, _p79.channel.topic, _p79.state)),
							state);
					} else {
						return _elm_lang$core$Task$succeed(state);
					}
				}
			case 'LeaveChannel':
				var _p83 = _p57._1;
				var _p82 = _p57._0;
				var _p80 = A2(_elm_lang$core$Dict$get, _p82, state.sockets);
				if (_p80.ctor === 'Nothing') {
					return _elm_lang$core$Task$succeed(state);
				} else {
					var _p81 = _p83.state;
					if (_p81.ctor === 'Joined') {
						return A4(
							_saschatimme$elm_phoenix$Phoenix$pushSocket_,
							_p82,
							_saschatimme$elm_phoenix$Phoenix_Internal_Channel$leaveMessage(_p83),
							_elm_lang$core$Maybe$Just(
								A2(_saschatimme$elm_phoenix$Phoenix$ChannelLeaveReply, _p82, _p83)),
							state);
					} else {
						return _elm_lang$core$Task$succeed(state);
					}
				}
			case 'ChannelLeaveReply':
				var _p88 = _p57._1.channel;
				var _p84 = _saschatimme$elm_phoenix$Phoenix_Internal_Helpers$decodeReplyPayload(_p57._2.payload);
				if (_p84.ctor === 'Nothing') {
					return _elm_lang$core$Task$succeed(state);
				} else {
					var _p85 = _p84._0;
					if (_p85.ctor === 'Err') {
						var _p86 = _p88.onLeaveError;
						if (_p86.ctor === 'Nothing') {
							return _elm_lang$core$Task$succeed(state);
						} else {
							return A2(
								_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'],
								A2(
									_elm_lang$core$Platform$sendToApp,
									router,
									_p86._0(_p85._0)),
								_elm_lang$core$Task$succeed(state));
						}
					} else {
						var _p87 = _p88.onLeave;
						if (_p87.ctor === 'Nothing') {
							return _elm_lang$core$Task$succeed(state);
						} else {
							return A2(
								_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'],
								A2(
									_elm_lang$core$Platform$sendToApp,
									router,
									_p87._0(_p85._0)),
								_elm_lang$core$Task$succeed(state));
						}
					}
				}
			case 'SendHeartbeat':
				return A3(_saschatimme$elm_phoenix$Phoenix$heartbeat, router, _p57._0, state);
			case 'GoodJoin':
				var _p91 = _p57._1;
				var _p90 = _p57._0;
				var _p89 = A3(_saschatimme$elm_phoenix$Phoenix_Internal_Helpers$getIn, _p90, _p91, state.channelQueues);
				if (_p89.ctor === 'Nothing') {
					return _elm_lang$core$Task$succeed(state);
				} else {
					return A2(
						_elm_lang$core$Task$map,
						A2(_saschatimme$elm_phoenix$Phoenix$removeChannelQueue, _p90, _p91),
						A3(_saschatimme$elm_phoenix$Phoenix$processQueue, _p90, _p89._0, state));
				}
			case 'PushResponse':
				var _p96 = _p57._0;
				var _p92 = _saschatimme$elm_phoenix$Phoenix_Internal_Helpers$decodeReplyPayload(_p57._1.payload);
				if (_p92.ctor === 'Nothing') {
					return _elm_lang$core$Task$succeed(state);
				} else {
					var _p93 = _p92._0;
					if (_p93.ctor === 'Err') {
						var _p94 = _p96.onError;
						if (_p94.ctor === 'Nothing') {
							return _elm_lang$core$Task$succeed(state);
						} else {
							return A2(
								_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'],
								A2(
									_elm_lang$core$Platform$sendToApp,
									router,
									_p94._0(_p93._0)),
								_elm_lang$core$Task$succeed(state));
						}
					} else {
						var _p95 = _p96.onOk;
						if (_p95.ctor === 'Nothing') {
							return _elm_lang$core$Task$succeed(state);
						} else {
							return A2(
								_saschatimme$elm_phoenix$Phoenix_Internal_Helpers_ops['&>'],
								A2(
									_elm_lang$core$Platform$sendToApp,
									router,
									_p95._0(_p93._0)),
								_elm_lang$core$Task$succeed(state));
						}
					}
				}
			default:
				return _elm_lang$core$Task$succeed(state);
		}
	});
_elm_lang$core$Native_Platform.effectManagers['Phoenix'] = {pkg: 'saschatimme/elm-phoenix', init: _saschatimme$elm_phoenix$Phoenix$init, onEffects: _saschatimme$elm_phoenix$Phoenix$onEffects, onSelfMsg: _saschatimme$elm_phoenix$Phoenix$onSelfMsg, tag: 'fx', cmdMap: _saschatimme$elm_phoenix$Phoenix$cmdMap, subMap: _saschatimme$elm_phoenix$Phoenix$subMap};

var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$sectionConfig = function (_p0) {
	var _p1 = _p0;
	return {toId: _p1.toId, getData: _p1.getData, ul: _p1.ul, li: _p1.li};
};
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$viewWithSectionsConfig = function (_p2) {
	var _p3 = _p2;
	return {toId: _p3.toId, ul: _p3.ul, li: _p3.li, section: _p3.section};
};
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$viewConfig = function (_p4) {
	var _p5 = _p4;
	return {toId: _p5.toId, ul: _p5.ul, li: _p5.li};
};
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$getPrevious = F3(
	function (id, selectedId, resultId) {
		return _elm_lang$core$Native_Utils.eq(selectedId, id) ? _elm_lang$core$Maybe$Just(id) : (_elm_lang$core$Native_Utils.eq(
			A2(_elm_lang$core$Maybe$withDefault, '', resultId),
			id) ? _elm_lang$core$Maybe$Just(selectedId) : resultId);
	});
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$getNextItemId = F2(
	function (ids, selectedId) {
		return A2(
			_elm_lang$core$Maybe$withDefault,
			selectedId,
			A3(
				_elm_lang$core$List$foldl,
				_thebritican$elm_autocomplete$Autocomplete_Autocomplete$getPrevious(selectedId),
				_elm_lang$core$Maybe$Nothing,
				ids));
	});
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$getPreviousItemId = F2(
	function (ids, selectedId) {
		return A2(
			_elm_lang$core$Maybe$withDefault,
			selectedId,
			A3(
				_elm_lang$core$List$foldr,
				_thebritican$elm_autocomplete$Autocomplete_Autocomplete$getPrevious(selectedId),
				_elm_lang$core$Maybe$Nothing,
				ids));
	});
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$navigateWithKey = F3(
	function (code, ids, maybeId) {
		var _p6 = code;
		switch (_p6) {
			case 38:
				return A2(
					_elm_lang$core$Maybe$map,
					_thebritican$elm_autocomplete$Autocomplete_Autocomplete$getPreviousItemId(ids),
					maybeId);
			case 40:
				return A2(
					_elm_lang$core$Maybe$map,
					_thebritican$elm_autocomplete$Autocomplete_Autocomplete$getNextItemId(ids),
					maybeId);
			default:
				return maybeId;
		}
	});
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$resetMouseStateWithId = F3(
	function (separateSelections, id, state) {
		return separateSelections ? {
			key: state.key,
			mouse: _elm_lang$core$Maybe$Just(id)
		} : {
			key: _elm_lang$core$Maybe$Just(id),
			mouse: _elm_lang$core$Maybe$Just(id)
		};
	});
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$updateConfig = function (_p7) {
	var _p8 = _p7;
	return {toId: _p8.toId, onKeyDown: _p8.onKeyDown, onTooLow: _p8.onTooLow, onTooHigh: _p8.onTooHigh, onMouseEnter: _p8.onMouseEnter, onMouseLeave: _p8.onMouseLeave, onMouseClick: _p8.onMouseClick, separateSelections: _p8.separateSelections};
};
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$empty = {key: _elm_lang$core$Maybe$Nothing, mouse: _elm_lang$core$Maybe$Nothing};
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$reset = F2(
	function (_p10, _p9) {
		var _p11 = _p10;
		var _p12 = _p9;
		return _p11.separateSelections ? {key: _elm_lang$core$Maybe$Nothing, mouse: _p12.mouse} : _thebritican$elm_autocomplete$Autocomplete_Autocomplete$empty;
	});
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$resetToFirst = F3(
	function (config, data, state) {
		var _p13 = config;
		var toId = _p13.toId;
		var separateSelections = _p13.separateSelections;
		var setFirstItem = F2(
			function (datum, newState) {
				return _elm_lang$core$Native_Utils.update(
					newState,
					{
						key: _elm_lang$core$Maybe$Just(
							toId(datum))
					});
			});
		var _p14 = _elm_lang$core$List$head(data);
		if (_p14.ctor === 'Nothing') {
			return _thebritican$elm_autocomplete$Autocomplete_Autocomplete$empty;
		} else {
			var _p15 = _p14._0;
			return separateSelections ? A2(
				setFirstItem,
				_p15,
				A2(_thebritican$elm_autocomplete$Autocomplete_Autocomplete$reset, config, state)) : A2(setFirstItem, _p15, _thebritican$elm_autocomplete$Autocomplete_Autocomplete$empty);
		}
	});
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$resetToFirstItem = F4(
	function (config, data, howManyToShow, state) {
		return A3(
			_thebritican$elm_autocomplete$Autocomplete_Autocomplete$resetToFirst,
			config,
			A2(_elm_lang$core$List$take, howManyToShow, data),
			state);
	});
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$resetToLastItem = F4(
	function (config, data, howManyToShow, state) {
		var reversedData = _elm_lang$core$List$reverse(
			A2(_elm_lang$core$List$take, howManyToShow, data));
		return A3(_thebritican$elm_autocomplete$Autocomplete_Autocomplete$resetToFirst, config, reversedData, state);
	});
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$State = F2(
	function (a, b) {
		return {key: a, mouse: b};
	});
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$UpdateConfig = F8(
	function (a, b, c, d, e, f, g, h) {
		return {onKeyDown: a, onTooLow: b, onTooHigh: c, onMouseEnter: d, onMouseLeave: e, onMouseClick: f, toId: g, separateSelections: h};
	});
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$HtmlDetails = F2(
	function (a, b) {
		return {attributes: a, children: b};
	});
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$ViewConfig = F3(
	function (a, b, c) {
		return {toId: a, ul: b, li: c};
	});
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$ViewWithSectionsConfig = F4(
	function (a, b, c, d) {
		return {toId: a, ul: b, li: c, section: d};
	});
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$SectionConfig = F4(
	function (a, b, c, d) {
		return {toId: a, getData: b, ul: c, li: d};
	});
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$SectionNode = F3(
	function (a, b, c) {
		return {nodeType: a, attributes: b, children: c};
	});
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$NoOp = {ctor: 'NoOp'};
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$mapNeverToMsg = function (msg) {
	return A2(
		_elm_lang$html$Html_Attributes$map,
		function (_p16) {
			return _thebritican$elm_autocomplete$Autocomplete_Autocomplete$NoOp;
		},
		msg);
};
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$MouseClick = function (a) {
	return {ctor: 'MouseClick', _0: a};
};
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$MouseLeave = function (a) {
	return {ctor: 'MouseLeave', _0: a};
};
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$MouseEnter = function (a) {
	return {ctor: 'MouseEnter', _0: a};
};
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$viewData = F3(
	function (_p18, _p17, data) {
		var _p19 = _p18;
		var _p20 = _p17;
		var id = _p19.toId(data);
		var isSelected = function (maybeId) {
			var _p21 = maybeId;
			if (_p21.ctor === 'Just') {
				return _elm_lang$core$Native_Utils.eq(_p21._0, id);
			} else {
				return false;
			}
		};
		var listItemData = A3(
			_p19.li,
			isSelected(_p20.key),
			isSelected(_p20.mouse),
			data);
		var customAttributes = A2(_elm_lang$core$List$map, _thebritican$elm_autocomplete$Autocomplete_Autocomplete$mapNeverToMsg, listItemData.attributes);
		var customLiAttr = A2(
			_elm_lang$core$List$append,
			customAttributes,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onMouseEnter(
					_thebritican$elm_autocomplete$Autocomplete_Autocomplete$MouseEnter(id)),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onMouseLeave(
						_thebritican$elm_autocomplete$Autocomplete_Autocomplete$MouseLeave(id)),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(
							_thebritican$elm_autocomplete$Autocomplete_Autocomplete$MouseClick(id)),
						_1: {ctor: '[]'}
					}
				}
			});
		return A2(
			_elm_lang$html$Html$li,
			customLiAttr,
			A2(
				_elm_lang$core$List$map,
				_elm_lang$html$Html$map(
					function (html) {
						return _thebritican$elm_autocomplete$Autocomplete_Autocomplete$NoOp;
					}),
				listItemData.children));
	});
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$viewSection = F3(
	function (config, state, section) {
		var getKeyedItems = function (datum) {
			return {
				ctor: '_Tuple2',
				_0: config.toId(datum),
				_1: A3(_thebritican$elm_autocomplete$Autocomplete_Autocomplete$viewData, config, state, datum)
			};
		};
		var viewItemList = A2(
			_elm_lang$html$Html_Keyed$ul,
			A2(_elm_lang$core$List$map, _thebritican$elm_autocomplete$Autocomplete_Autocomplete$mapNeverToMsg, config.ul),
			A2(
				_elm_lang$core$List$map,
				getKeyedItems,
				config.section.getData(section)));
		var sectionNode = config.section.li(section);
		var attributes = A2(_elm_lang$core$List$map, _thebritican$elm_autocomplete$Autocomplete_Autocomplete$mapNeverToMsg, sectionNode.attributes);
		var customChildren = A2(
			_elm_lang$core$List$map,
			_elm_lang$html$Html$map(
				function (html) {
					return _thebritican$elm_autocomplete$Autocomplete_Autocomplete$NoOp;
				}),
			sectionNode.children);
		var children = A2(
			_elm_lang$core$List$append,
			customChildren,
			{
				ctor: '::',
				_0: viewItemList,
				_1: {ctor: '[]'}
			});
		return A2(
			_elm_lang$html$Html$li,
			attributes,
			{
				ctor: '::',
				_0: A3(_elm_lang$html$Html$node, sectionNode.nodeType, attributes, children),
				_1: {ctor: '[]'}
			});
	});
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$viewWithSections = F4(
	function (config, howManyToShow, state, sections) {
		var getKeyedItems = function (section) {
			return {
				ctor: '_Tuple2',
				_0: config.section.toId(section),
				_1: A3(_thebritican$elm_autocomplete$Autocomplete_Autocomplete$viewSection, config, state, section)
			};
		};
		return A2(
			_elm_lang$html$Html_Keyed$ul,
			A2(_elm_lang$core$List$map, _thebritican$elm_autocomplete$Autocomplete_Autocomplete$mapNeverToMsg, config.section.ul),
			A2(_elm_lang$core$List$map, getKeyedItems, sections));
	});
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$viewItem = F3(
	function (_p23, _p22, data) {
		var _p24 = _p23;
		var _p25 = _p22;
		var id = _p24.toId(data);
		var isSelected = function (maybeId) {
			var _p26 = maybeId;
			if (_p26.ctor === 'Just') {
				return _elm_lang$core$Native_Utils.eq(_p26._0, id);
			} else {
				return false;
			}
		};
		var listItemData = A3(
			_p24.li,
			isSelected(_p25.key),
			isSelected(_p25.mouse),
			data);
		var customAttributes = A2(_elm_lang$core$List$map, _thebritican$elm_autocomplete$Autocomplete_Autocomplete$mapNeverToMsg, listItemData.attributes);
		var customLiAttr = A2(
			_elm_lang$core$List$append,
			customAttributes,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onMouseEnter(
					_thebritican$elm_autocomplete$Autocomplete_Autocomplete$MouseEnter(id)),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onMouseLeave(
						_thebritican$elm_autocomplete$Autocomplete_Autocomplete$MouseLeave(id)),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(
							_thebritican$elm_autocomplete$Autocomplete_Autocomplete$MouseClick(id)),
						_1: {ctor: '[]'}
					}
				}
			});
		return A2(
			_elm_lang$html$Html$li,
			customLiAttr,
			A2(
				_elm_lang$core$List$map,
				_elm_lang$html$Html$map(
					function (html) {
						return _thebritican$elm_autocomplete$Autocomplete_Autocomplete$NoOp;
					}),
				listItemData.children));
	});
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$viewList = F4(
	function (config, howManyToShow, state, data) {
		var getKeyedItems = function (datum) {
			return {
				ctor: '_Tuple2',
				_0: config.toId(datum),
				_1: A3(_thebritican$elm_autocomplete$Autocomplete_Autocomplete$viewItem, config, state, datum)
			};
		};
		var customUlAttr = A2(_elm_lang$core$List$map, _thebritican$elm_autocomplete$Autocomplete_Autocomplete$mapNeverToMsg, config.ul);
		return A2(
			_elm_lang$html$Html_Keyed$ul,
			customUlAttr,
			A2(
				_elm_lang$core$List$map,
				getKeyedItems,
				A2(_elm_lang$core$List$take, howManyToShow, data)));
	});
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$view = F4(
	function (config, howManyToShow, state, data) {
		return A4(_thebritican$elm_autocomplete$Autocomplete_Autocomplete$viewList, config, howManyToShow, state, data);
	});
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$WentTooHigh = {ctor: 'WentTooHigh'};
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$WentTooLow = {ctor: 'WentTooLow'};
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$update = F5(
	function (config, msg, howManyToShow, state, data) {
		update:
		while (true) {
			var _p27 = msg;
			switch (_p27.ctor) {
				case 'KeyDown':
					var _p28 = _p27._0;
					var boundedList = A2(
						_elm_lang$core$List$take,
						howManyToShow,
						A2(_elm_lang$core$List$map, config.toId, data));
					var newKey = A3(_thebritican$elm_autocomplete$Autocomplete_Autocomplete$navigateWithKey, _p28, boundedList, state.key);
					if (_elm_lang$core$Native_Utils.eq(newKey, state.key) && _elm_lang$core$Native_Utils.eq(_p28, 38)) {
						var _v15 = config,
							_v16 = _thebritican$elm_autocomplete$Autocomplete_Autocomplete$WentTooHigh,
							_v17 = howManyToShow,
							_v18 = state,
							_v19 = data;
						config = _v15;
						msg = _v16;
						howManyToShow = _v17;
						state = _v18;
						data = _v19;
						continue update;
					} else {
						if (_elm_lang$core$Native_Utils.eq(newKey, state.key) && _elm_lang$core$Native_Utils.eq(_p28, 40)) {
							var _v20 = config,
								_v21 = _thebritican$elm_autocomplete$Autocomplete_Autocomplete$WentTooLow,
								_v22 = howManyToShow,
								_v23 = state,
								_v24 = data;
							config = _v20;
							msg = _v21;
							howManyToShow = _v22;
							state = _v23;
							data = _v24;
							continue update;
						} else {
							if (config.separateSelections) {
								return {
									ctor: '_Tuple2',
									_0: _elm_lang$core$Native_Utils.update(
										state,
										{key: newKey}),
									_1: A2(config.onKeyDown, _p28, newKey)
								};
							} else {
								return {
									ctor: '_Tuple2',
									_0: {key: newKey, mouse: newKey},
									_1: A2(config.onKeyDown, _p28, newKey)
								};
							}
						}
					}
				case 'WentTooLow':
					return {ctor: '_Tuple2', _0: state, _1: config.onTooLow};
				case 'WentTooHigh':
					return {ctor: '_Tuple2', _0: state, _1: config.onTooHigh};
				case 'MouseEnter':
					var _p29 = _p27._0;
					return {
						ctor: '_Tuple2',
						_0: A3(_thebritican$elm_autocomplete$Autocomplete_Autocomplete$resetMouseStateWithId, config.separateSelections, _p29, state),
						_1: config.onMouseEnter(_p29)
					};
				case 'MouseLeave':
					var _p30 = _p27._0;
					return {
						ctor: '_Tuple2',
						_0: A3(_thebritican$elm_autocomplete$Autocomplete_Autocomplete$resetMouseStateWithId, config.separateSelections, _p30, state),
						_1: config.onMouseLeave(_p30)
					};
				case 'MouseClick':
					var _p31 = _p27._0;
					return {
						ctor: '_Tuple2',
						_0: A3(_thebritican$elm_autocomplete$Autocomplete_Autocomplete$resetMouseStateWithId, config.separateSelections, _p31, state),
						_1: config.onMouseClick(_p31)
					};
				default:
					return {ctor: '_Tuple2', _0: state, _1: _elm_lang$core$Maybe$Nothing};
			}
		}
	});
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$KeyDown = function (a) {
	return {ctor: 'KeyDown', _0: a};
};
var _thebritican$elm_autocomplete$Autocomplete_Autocomplete$subscription = _elm_lang$keyboard$Keyboard$downs(_thebritican$elm_autocomplete$Autocomplete_Autocomplete$KeyDown);

var _thebritican$elm_autocomplete$Autocomplete$HtmlDetails = F2(
	function (a, b) {
		return {attributes: a, children: b};
	});
var _thebritican$elm_autocomplete$Autocomplete$SectionNode = F3(
	function (a, b, c) {
		return {nodeType: a, attributes: b, children: c};
	});
var _thebritican$elm_autocomplete$Autocomplete$State = function (a) {
	return {ctor: 'State', _0: a};
};
var _thebritican$elm_autocomplete$Autocomplete$empty = _thebritican$elm_autocomplete$Autocomplete$State(_thebritican$elm_autocomplete$Autocomplete_Autocomplete$empty);
var _thebritican$elm_autocomplete$Autocomplete$reset = F2(
	function (_p1, _p0) {
		var _p2 = _p1;
		var _p3 = _p0;
		return _thebritican$elm_autocomplete$Autocomplete$State(
			A2(_thebritican$elm_autocomplete$Autocomplete_Autocomplete$reset, _p2._0, _p3._0));
	});
var _thebritican$elm_autocomplete$Autocomplete$resetToFirstItem = F4(
	function (_p5, data, howManyToShow, _p4) {
		var _p6 = _p5;
		var _p7 = _p4;
		return _thebritican$elm_autocomplete$Autocomplete$State(
			A4(_thebritican$elm_autocomplete$Autocomplete_Autocomplete$resetToFirstItem, _p6._0, data, howManyToShow, _p7._0));
	});
var _thebritican$elm_autocomplete$Autocomplete$resetToLastItem = F4(
	function (_p9, data, howManyToShow, _p8) {
		var _p10 = _p9;
		var _p11 = _p8;
		return _thebritican$elm_autocomplete$Autocomplete$State(
			A4(_thebritican$elm_autocomplete$Autocomplete_Autocomplete$resetToLastItem, _p10._0, data, howManyToShow, _p11._0));
	});
var _thebritican$elm_autocomplete$Autocomplete$update = F5(
	function (_p14, _p13, howManyToShow, _p12, data) {
		var _p15 = _p14;
		var _p16 = _p13;
		var _p17 = _p12;
		var _p18 = A5(_thebritican$elm_autocomplete$Autocomplete_Autocomplete$update, _p15._0, _p16._0, howManyToShow, _p17._0, data);
		var newState = _p18._0;
		var maybeMsg = _p18._1;
		return {
			ctor: '_Tuple2',
			_0: _thebritican$elm_autocomplete$Autocomplete$State(newState),
			_1: maybeMsg
		};
	});
var _thebritican$elm_autocomplete$Autocomplete$Msg = function (a) {
	return {ctor: 'Msg', _0: a};
};
var _thebritican$elm_autocomplete$Autocomplete$subscription = A2(_elm_lang$core$Platform_Sub$map, _thebritican$elm_autocomplete$Autocomplete$Msg, _thebritican$elm_autocomplete$Autocomplete_Autocomplete$subscription);
var _thebritican$elm_autocomplete$Autocomplete$view = F4(
	function (_p20, howManyToShow, _p19, data) {
		var _p21 = _p20;
		var _p22 = _p19;
		return A2(
			_elm_lang$html$Html$map,
			_thebritican$elm_autocomplete$Autocomplete$Msg,
			A4(_thebritican$elm_autocomplete$Autocomplete_Autocomplete$view, _p21._0, howManyToShow, _p22._0, data));
	});
var _thebritican$elm_autocomplete$Autocomplete$viewWithSections = F4(
	function (_p24, howManyToShow, _p23, sections) {
		var _p25 = _p24;
		var _p26 = _p23;
		return A2(
			_elm_lang$html$Html$map,
			_thebritican$elm_autocomplete$Autocomplete$Msg,
			A4(_thebritican$elm_autocomplete$Autocomplete_Autocomplete$viewWithSections, _p25._0, howManyToShow, _p26._0, sections));
	});
var _thebritican$elm_autocomplete$Autocomplete$UpdateConfig = function (a) {
	return {ctor: 'UpdateConfig', _0: a};
};
var _thebritican$elm_autocomplete$Autocomplete$updateConfig = function (config) {
	return _thebritican$elm_autocomplete$Autocomplete$UpdateConfig(
		_thebritican$elm_autocomplete$Autocomplete_Autocomplete$updateConfig(config));
};
var _thebritican$elm_autocomplete$Autocomplete$ViewConfig = function (a) {
	return {ctor: 'ViewConfig', _0: a};
};
var _thebritican$elm_autocomplete$Autocomplete$viewConfig = function (config) {
	return _thebritican$elm_autocomplete$Autocomplete$ViewConfig(
		_thebritican$elm_autocomplete$Autocomplete_Autocomplete$viewConfig(config));
};
var _thebritican$elm_autocomplete$Autocomplete$ViewWithSectionsConfig = function (a) {
	return {ctor: 'ViewWithSectionsConfig', _0: a};
};
var _thebritican$elm_autocomplete$Autocomplete$viewWithSectionsConfig = function (config) {
	return _thebritican$elm_autocomplete$Autocomplete$ViewWithSectionsConfig(
		function () {
			var _p27 = config.section;
			return _thebritican$elm_autocomplete$Autocomplete_Autocomplete$viewWithSectionsConfig(
				_elm_lang$core$Native_Utils.update(
					config,
					{section: _p27._0}));
		}());
};
var _thebritican$elm_autocomplete$Autocomplete$SectionConfig = function (a) {
	return {ctor: 'SectionConfig', _0: a};
};
var _thebritican$elm_autocomplete$Autocomplete$sectionConfig = function (section) {
	return _thebritican$elm_autocomplete$Autocomplete$SectionConfig(
		_thebritican$elm_autocomplete$Autocomplete_Autocomplete$sectionConfig(section));
};

var _user$project$Common_Connection$socketUrl = 'ws://localhost:4000/socket/websocket?vsn=1.0.0';
var _user$project$Common_Connection$pushEvent = F2(
	function (roomAndTopic, event) {
		var errorHandler = function () {
			var _p0 = event.onOk;
			if (_p0.ctor === 'Nothing') {
				return _elm_lang$core$Basics$identity;
			} else {
				return _saschatimme$elm_phoenix$Phoenix_Push$onError(_p0._0);
			}
		}();
		var okayHandler = function () {
			var _p1 = event.onOk;
			if (_p1.ctor === 'Nothing') {
				return _elm_lang$core$Basics$identity;
			} else {
				return _saschatimme$elm_phoenix$Phoenix_Push$onOk(_p1._0);
			}
		}();
		var pushPayload = function () {
			var _p2 = event.payload;
			if (_p2.ctor === 'Nothing') {
				return _elm_lang$core$Basics$identity;
			} else {
				return _saschatimme$elm_phoenix$Phoenix_Push$withPayload(_p2._0);
			}
		}();
		return A2(
			_saschatimme$elm_phoenix$Phoenix$push,
			_user$project$Common_Connection$socketUrl,
			errorHandler(
				okayHandler(
					pushPayload(
						A2(_saschatimme$elm_phoenix$Phoenix_Push$init, roomAndTopic, event.name)))));
	});
var _user$project$Common_Connection$push = F2(
	function (roomAndTopic, events) {
		return A2(
			_elm_lang$core$List$map,
			_user$project$Common_Connection$pushEvent(roomAndTopic),
			events);
	});

var _user$project$Common_LocalDebug$printDebugLog = _elm_lang$core$Debug$log;
var _user$project$Common_LocalDebug$log = F4(
	function (globalDebugLevel, debugLevel, label, payload) {
		var execDebug = A2(_user$project$Common_LocalDebug$printDebugLog, label, payload);
		var _p0 = {ctor: '_Tuple2', _0: globalDebugLevel, _1: debugLevel};
		switch (_p0._1.ctor) {
			case 'Development':
				if (_p0._0.ctor === 'Development') {
					var x = execDebug;
					return true;
				} else {
					return false;
				}
			case 'Staging':
				if (_p0._0.ctor === 'Staging') {
					var x = execDebug;
					return true;
				} else {
					return false;
				}
			default:
				var x = execDebug;
				return true;
		}
	});
var _user$project$Common_LocalDebug$Production = {ctor: 'Production'};
var _user$project$Common_LocalDebug$Staging = {ctor: 'Staging'};
var _user$project$Common_LocalDebug$Development = {ctor: 'Development'};

var _user$project$Data_Alert$Alert = F2(
	function (a, b) {
		return {id: a, alertType: b};
	});
var _user$project$Data_Alert$Danger = function (a) {
	return {ctor: 'Danger', _0: a};
};
var _user$project$Data_Alert$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _user$project$Data_Alert$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _user$project$Data_Alert$Warning = function (a) {
	return {ctor: 'Warning', _0: a};
};
var _user$project$Data_Alert$Info = function (a) {
	return {ctor: 'Info', _0: a};
};
var _user$project$Data_Alert$Basic = function (a) {
	return {ctor: 'Basic', _0: a};
};

var _user$project$Data_AuthToken$authTokenToString = function (_p0) {
	var _p1 = _p0;
	return _p1._0;
};
var _user$project$Data_AuthToken$encode = function (_p2) {
	var _p3 = _p2;
	return _elm_lang$core$Json_Encode$string(_p3._0);
};
var _user$project$Data_AuthToken$AuthToken = function (a) {
	return {ctor: 'AuthToken', _0: a};
};
var _user$project$Data_AuthToken$decoder = A2(_elm_lang$core$Json_Decode$map, _user$project$Data_AuthToken$AuthToken, _elm_lang$core$Json_Decode$string);

var _user$project$Data_File$mimeTypeValue = function (mime) {
	var _p0 = mime;
	switch (_p0.ctor) {
		case 'Text':
			return _p0._0;
		case 'Image':
			return _p0._0;
		case 'Audio':
			return _p0._0;
		case 'Video':
			return _p0._0;
		default:
			return _p0._0;
	}
};
var _user$project$Data_File$File = F4(
	function (a, b, c, d) {
		return {name: a, size: b, mimeType: c, data: d};
	});
var _user$project$Data_File$Application = function (a) {
	return {ctor: 'Application', _0: a};
};
var _user$project$Data_File$Video = function (a) {
	return {ctor: 'Video', _0: a};
};
var _user$project$Data_File$Audio = function (a) {
	return {ctor: 'Audio', _0: a};
};
var _user$project$Data_File$Image = function (a) {
	return {ctor: 'Image', _0: a};
};
var _user$project$Data_File$Text = function (a) {
	return {ctor: 'Text', _0: a};
};
var _user$project$Data_File$mimeTypeDecoder = function () {
	var mime = function (input) {
		return A2(_elm_lang$core$String$startsWith, 'text', input) ? _elm_lang$core$Json_Decode$succeed(
			_user$project$Data_File$Text(input)) : (A2(_elm_lang$core$String$startsWith, 'image', input) ? _elm_lang$core$Json_Decode$succeed(
			_user$project$Data_File$Image(input)) : (A2(_elm_lang$core$String$startsWith, 'audio', input) ? _elm_lang$core$Json_Decode$succeed(
			_user$project$Data_File$Audio(input)) : (A2(_elm_lang$core$String$startsWith, 'video', input) ? _elm_lang$core$Json_Decode$succeed(
			_user$project$Data_File$Video(input)) : (A2(_elm_lang$core$String$startsWith, 'application', input) ? _elm_lang$core$Json_Decode$succeed(
			_user$project$Data_File$Application(input)) : _elm_lang$core$Json_Decode$fail(
			A2(_elm_lang$core$Basics_ops['++'], 'could not parse mime type of ', input))))));
	};
	return A2(_elm_lang$core$Json_Decode$andThen, mime, _elm_lang$core$Json_Decode$string);
}();
var _user$project$Data_File$fileDecoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'data',
	_elm_lang$core$Json_Decode$string,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'type',
		_user$project$Data_File$mimeTypeDecoder,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'size',
			_elm_lang$core$Json_Decode$float,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'name',
				_elm_lang$core$Json_Decode$string,
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Data_File$File)))));
var _user$project$Data_File$Error = {ctor: 'Error'};
var _user$project$Data_File$InvalidType = {ctor: 'InvalidType'};
var _user$project$Data_File$FileTooLarge = {ctor: 'FileTooLarge'};
var _user$project$Data_File$errorDecoder = A2(
	_elm_lang$core$Json_Decode$map,
	function (code) {
		var _p1 = code;
		switch (_p1) {
			case -1:
				return _user$project$Data_File$FileTooLarge;
			case -2:
				return _user$project$Data_File$InvalidType;
			default:
				return _user$project$Data_File$Error;
		}
	},
	_elm_lang$core$Json_Decode$int);
var _user$project$Data_File$selectedFileDecoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _elm_lang$core$Result$Ok, _user$project$Data_File$fileDecoder),
		_1: {
			ctor: '::',
			_0: A2(_elm_lang$core$Json_Decode$map, _elm_lang$core$Result$Err, _user$project$Data_File$errorDecoder),
			_1: {ctor: '[]'}
		}
	});

var _user$project$Data_Loader$Error = {ctor: 'Error'};
var _user$project$Data_Loader$Success = {ctor: 'Success'};
var _user$project$Data_Loader$Warning = {ctor: 'Warning'};
var _user$project$Data_Loader$Info = {ctor: 'Info'};

var _user$project$Data_LocalStorageChange$nullableString = _elm_lang$core$Json_Decode$nullable(_elm_lang$core$Json_Decode$string);
var _user$project$Data_LocalStorageChange$Change = F4(
	function (a, b, c, d) {
		return {key: a, newValue: b, oldValue: c, url: d};
	});
var _user$project$Data_LocalStorageChange$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'url',
	_elm_lang$core$Json_Decode$string,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'oldValue',
		_user$project$Data_LocalStorageChange$nullableString,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'newValue',
			_user$project$Data_LocalStorageChange$nullableString,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'key',
				_user$project$Data_LocalStorageChange$nullableString,
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Data_LocalStorageChange$Change)))));

var _user$project$Data_UserPhoto$photoToUrl = function (_p0) {
	var _p1 = _p0;
	var _p2 = _p1._0;
	if (_p2.ctor === 'Nothing') {
		return 'https://static.productionready.io/images/smiley-cyrus.jpg';
	} else {
		return _p2._0;
	}
};
var _user$project$Data_UserPhoto$toMaybeString = function (_p3) {
	var _p4 = _p3;
	return _p4._0;
};
var _user$project$Data_UserPhoto$encode = function (_p5) {
	var _p6 = _p5;
	return A2(_elm_community$json_extra$Json_Encode_Extra$maybe, _elm_lang$core$Json_Encode$string, _p6._0);
};
var _user$project$Data_UserPhoto$src = function (_p7) {
	return _elm_lang$html$Html_Attributes$src(
		_user$project$Data_UserPhoto$photoToUrl(_p7));
};
var _user$project$Data_UserPhoto$UserPhoto = function (a) {
	return {ctor: 'UserPhoto', _0: a};
};
var _user$project$Data_UserPhoto$decoder = A2(
	_elm_lang$core$Json_Decode$map,
	_user$project$Data_UserPhoto$UserPhoto,
	_elm_lang$core$Json_Decode$nullable(_elm_lang$core$Json_Decode$string));

var _user$project$Util$webDataToMaybe = function (webData) {
	var _p0 = webData;
	if (_p0.ctor === 'Success') {
		return _elm_lang$core$Maybe$Just(_p0._0);
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _user$project$Util$nl2br = A2(_elm_community$string_extra$String_Extra$replace, '\n', '<br/>');
var _user$project$Util$boolToDisplayString = function ($boolean) {
	var _p1 = $boolean;
	if (_p1 === true) {
		return 'Yes';
	} else {
		return 'No';
	}
};
var _user$project$Util$dateTimeFormatString = '%m/%d/%Y %H:%i:%s';
var _user$project$Util$dateFormatString = '%m/%d/%Y';
var _user$project$Util$onChange = function (handler) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'change',
		A2(
			_elm_lang$core$Json_Decode$map,
			handler,
			A2(
				_elm_lang$core$Json_Decode$at,
				{
					ctor: '::',
					_0: 'target',
					_1: {
						ctor: '::',
						_0: 'value',
						_1: {ctor: '[]'}
					}
				},
				_elm_lang$core$Json_Decode$string)));
};
var _user$project$Util$fuzzyPattern = function (q) {
	return A2(
		_elm_lang$core$String$join,
		'(.{0,})',
		_elm_lang$core$String$words(
			_elm_lang$core$String$trim(
				_elm_lang$core$String$toLower(q))));
};
var _user$project$Util$fuzzySearch = F2(
	function (a, b) {
		return A2(
			_elm_lang$core$Regex$contains,
			_elm_lang$core$Regex$regex(
				_user$project$Util$fuzzyPattern(a)),
			_elm_lang$core$String$toLower(b));
	});
var _user$project$Util$justValues = _elm_lang$core$List$filterMap(_elm_lang$core$Basics$identity);
var _user$project$Util$replace = F3(
	function (from, to, str) {
		return A2(
			_elm_lang$core$String$join,
			to,
			A2(_elm_lang$core$String$split, from, str));
	});
var _user$project$Util$stringToIdAttr = function (s) {
	return _elm_lang$core$String$toLower(
		A3(_user$project$Util$replace, ' ', '_', s));
};
var _user$project$Util$dateInSeconds = function (date) {
	var x = A2(
		_elm_lang$core$Debug$log,
		'',
		{
			date: date,
			time: _elm_lang$core$Date$toTime(date)
		});
	return _elm_lang$core$Basics$floor(
		_elm_lang$core$Time$inSeconds(
			_elm_lang$core$Date$toTime(date)));
};
var _user$project$Util$dateInMilli = function (date) {
	return _elm_lang$core$Time$inMilliseconds(
		_elm_lang$core$Date$toTime(date));
};
var _user$project$Util$minutesToDays = F2(
	function (x, y) {
		return x / y;
	})(14400);
var _user$project$Util$daysToSeconds = F2(
	function (x, y) {
		return x * y;
	})(86400);
var _user$project$Util$secondsToMillseconds = F2(
	function (x, y) {
		return x * y;
	})(1000);
var _user$project$Util$millsecondsToSeconds = F2(
	function (x, y) {
		return x * y;
	})(1.0e-3);
var _user$project$Util$send = function (msg) {
	return A2(
		_elm_lang$core$Task$perform,
		_elm_lang$core$Basics$identity,
		_elm_lang$core$Task$succeed(msg));
};
var _user$project$Util$initDtm = A7(_rluiten$elm_date_extra$Date_Extra_Create$dateFromFields, 2020, _elm_lang$core$Date$Jan, 1, 0, 0, 0, 0);
var _user$project$Util$dFormat = function (dtm) {
	return A2(
		_elm_lang$core$Result$withDefault,
		'n/a',
		A2(
			_elm_lang$core$Result$map,
			A2(_rluiten$elm_date_extra$Date_Extra_Format$format, _rluiten$elm_date_extra$Date_Extra_Config_Config_en_us$config, _rluiten$elm_date_extra$Date_Extra_Config_Config_en_us$config.format.date),
			dtm));
};
var _user$project$Util$dateFormat = function (dateTimeString) {
	return A2(
		_elm_lang$core$Result$withDefault,
		'n/a',
		A2(
			_elm_lang$core$Result$map,
			A2(_rluiten$elm_date_extra$Date_Extra_Format$format, _rluiten$elm_date_extra$Date_Extra_Config_Config_en_us$config, _rluiten$elm_date_extra$Date_Extra_Config_Config_en_us$config.format.date),
			_elm_lang$core$Date$fromString(dateTimeString)));
};
var _user$project$Util$dtmFormat = function (dtm) {
	return A2(
		_elm_lang$core$Result$withDefault,
		'n/a',
		A2(
			_elm_lang$core$Result$map,
			A2(_rluiten$elm_date_extra$Date_Extra_Format$format, _rluiten$elm_date_extra$Date_Extra_Config_Config_en_us$config, _rluiten$elm_date_extra$Date_Extra_Config_Config_en_us$config.format.dateTime),
			dtm));
};
var _user$project$Util$dateTimeFormat = function (dateTimeString) {
	return A2(
		_elm_lang$core$Result$withDefault,
		'n/a',
		A2(
			_elm_lang$core$Result$map,
			A2(_rluiten$elm_date_extra$Date_Extra_Format$format, _rluiten$elm_date_extra$Date_Extra_Config_Config_en_us$config, _rluiten$elm_date_extra$Date_Extra_Config_Config_en_us$config.format.dateTime),
			_elm_lang$core$Date$fromString(dateTimeString)));
};
var _user$project$Util$convertStringToTimestamp = function (dateString) {
	var _p2 = _elm_lang$core$Date$fromString(dateString);
	if (_p2.ctor === 'Ok') {
		return _elm_lang$core$Date$toTime(_p2._0) / 1000;
	} else {
		var x = _elm_lang$core$Debug$log('Error occurred converting date to time');
		return 0;
	}
};
var _user$project$Util$delay = F2(
	function (time, msg) {
		return A2(
			_elm_lang$core$Task$perform,
			_elm_lang$core$Basics$identity,
			A2(
				_elm_lang$core$Task$andThen,
				_elm_lang$core$Basics$always(
					_elm_lang$core$Task$succeed(msg)),
				_elm_lang$core$Process$sleep(time)));
	});
var _user$project$Util$appendErrors = F2(
	function (model, errors) {
		return _elm_lang$core$Native_Utils.update(
			model,
			{
				errors: A2(_elm_lang$core$Basics_ops['++'], model.errors, errors)
			});
	});
var _user$project$Util$onClickStopPropagation = function (msg) {
	return A3(
		_elm_lang$html$Html_Events$onWithOptions,
		'click',
		_elm_lang$core$Native_Utils.update(
			_elm_lang$html$Html_Events$defaultOptions,
			{stopPropagation: true}),
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _user$project$Util$viewIf = F2(
	function (condition, content) {
		return condition ? content : _elm_lang$html$Html$text('');
	});
var _user$project$Util_ops = _user$project$Util_ops || {};
_user$project$Util_ops['=>'] = F2(
	function (v0, v1) {
		return {ctor: '_Tuple2', _0: v0, _1: v1};
	});
var _user$project$Util$pair = F2(
	function (first, second) {
		return A2(_user$project$Util_ops['=>'], first, second);
	});

var _user$project$Data_User$fullNameToHtml = function (_p0) {
	var _p1 = _p0;
	return _elm_lang$html$Html$text(_p1._0);
};
var _user$project$Data_User$encodeFullName = function (_p2) {
	var _p3 = _p2;
	return _elm_lang$core$Json_Encode$string(_p3._0);
};
var _user$project$Data_User$fullNameToString = function (_p4) {
	var _p5 = _p4;
	return _p5._0;
};
var _user$project$Data_User$usernameToHtml = function (_p6) {
	var _p7 = _p6;
	return _elm_lang$html$Html$text(_p7._0);
};
var _user$project$Data_User$encodeUsername = function (_p8) {
	var _p9 = _p8;
	return _elm_lang$core$Json_Encode$string(_p9._0);
};
var _user$project$Data_User$usernameToString = function (_p10) {
	var _p11 = _p10;
	return _p11._0;
};
var _user$project$Data_User$getUsername = function (user) {
	var _p12 = user;
	if (_p12.ctor === 'Nothing') {
		return '';
	} else {
		return _user$project$Data_User$usernameToString(_p12._0.username);
	}
};
var _user$project$Data_User$encode = function (user) {
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: A2(
				_user$project$Util_ops['=>'],
				'id',
				_elm_lang$core$Json_Encode$float(user.id)),
			_1: {
				ctor: '::',
				_0: A2(
					_user$project$Util_ops['=>'],
					'email',
					_elm_lang$core$Json_Encode$string(user.email)),
				_1: {
					ctor: '::',
					_0: A2(
						_user$project$Util_ops['=>'],
						'guardian_token',
						_user$project$Data_AuthToken$encode(user.guardian_token)),
					_1: {
						ctor: '::',
						_0: A2(
							_user$project$Util_ops['=>'],
							'username',
							_user$project$Data_User$encodeUsername(user.username)),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Data_User$User = F4(
	function (a, b, c, d) {
		return {id: a, email: b, guardian_token: c, username: d};
	});
var _user$project$Data_User$Username = function (a) {
	return {ctor: 'Username', _0: a};
};
var _user$project$Data_User$usernameParser = A2(
	_evancz$url_parser$UrlParser$custom,
	'USERNAME',
	function (_p13) {
		return _elm_lang$core$Result$Ok(
			_user$project$Data_User$Username(_p13));
	});
var _user$project$Data_User$usernameDecoder = A2(_elm_lang$core$Json_Decode$map, _user$project$Data_User$Username, _elm_lang$core$Json_Decode$string);
var _user$project$Data_User$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'username',
	_user$project$Data_User$usernameDecoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'guardian_token',
		_user$project$Data_AuthToken$decoder,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'email',
			_elm_lang$core$Json_Decode$string,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'id',
				_elm_lang$core$Json_Decode$float,
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Data_User$User)))));
var _user$project$Data_User$FullName = function (a) {
	return {ctor: 'FullName', _0: a};
};
var _user$project$Data_User$fullNameDecoder = A2(_elm_lang$core$Json_Decode$map, _user$project$Data_User$FullName, _elm_lang$core$Json_Decode$string);

var _user$project$Data_Session$Session = F2(
	function (a, b) {
		return {user: a, navbarState: b};
	});

var _user$project$Common_Icons$iconContainerClasses = function (isEnabled) {
	return _elm_lang$html$Html_Attributes$classList(
		{
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'icon-action', _1: true},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'disabled', _1: !isEnabled},
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Common_Icons$iconContainer = function (isEnabled) {
	return _elm_lang$html$Html$span(
		{
			ctor: '::',
			_0: _user$project$Common_Icons$iconContainerClasses(isEnabled),
			_1: {ctor: '[]'}
		});
};
var _user$project$Common_Icons$basicIconWithPopover = F3(
	function (icon, isEnabled, event) {
		return _rundis$elm_bootstrap$Bootstrap_Popover$config(
			A2(
				_elm_lang$html$Html$span,
				{
					ctor: '::',
					_0: _user$project$Common_Icons$iconContainerClasses(isEnabled),
					_1: event
				},
				{
					ctor: '::',
					_0: icon,
					_1: {ctor: '[]'}
				}));
	});
var _user$project$Common_Icons$basicIconWithClickPopover = F4(
	function (icon, isEnabled, msg, state) {
		return A3(
			_user$project$Common_Icons$basicIconWithPopover,
			icon,
			isEnabled,
			A2(_rundis$elm_bootstrap$Bootstrap_Popover$onClick, state, msg));
	});
var _user$project$Common_Icons$basicIconWithHoverPopover = F4(
	function (icon, isEnabled, msg, state) {
		return A3(
			_user$project$Common_Icons$basicIconWithPopover,
			icon,
			isEnabled,
			A2(_rundis$elm_bootstrap$Bootstrap_Popover$onHover, state, msg));
	});
var _user$project$Common_Icons$customFAIcon = function (className) {
	return A2(
		_elm_lang$html$Html$i,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class(
				A2(_elm_lang$core$Basics_ops['++'], 'fa fa-', className)),
			_1: {ctor: '[]'}
		},
		{ctor: '[]'});
};
var _user$project$Common_Icons$basicIcon = F2(
	function (icon, isEnabled) {
		return icon;
	});
var _user$project$Common_Icons$actionIconWithPopover = F4(
	function (icon, isEnabled, container, event) {
		var containerAttrs = _elm_lang$html$Html$span(
			{
				ctor: '::',
				_0: _user$project$Common_Icons$iconContainerClasses(isEnabled),
				_1: event
			});
		var iconElem = function () {
			var _p0 = container;
			if (_p0.ctor === 'Nothing') {
				return containerAttrs(
					{
						ctor: '::',
						_0: A2(_user$project$Common_Icons$basicIcon, icon, isEnabled),
						_1: {ctor: '[]'}
					});
			} else {
				return containerAttrs(
					{
						ctor: '::',
						_0: _p0._0(
							{
								ctor: '::',
								_0: A2(_user$project$Common_Icons$basicIcon, icon, isEnabled),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					});
			}
		}();
		return _rundis$elm_bootstrap$Bootstrap_Popover$config(iconElem);
	});
var _user$project$Common_Icons$actionIconWithHoverPopover = F5(
	function (icon, isEnabled, container, msg, state) {
		return A4(
			_user$project$Common_Icons$actionIconWithPopover,
			icon,
			isEnabled,
			container,
			A2(_rundis$elm_bootstrap$Bootstrap_Popover$onHover, state, msg));
	});
var _user$project$Common_Icons$actionIconWithClickPopover = F5(
	function (icon, isEnabled, container, msg, state) {
		return A4(
			_user$project$Common_Icons$actionIconWithPopover,
			icon,
			isEnabled,
			container,
			A2(_rundis$elm_bootstrap$Bootstrap_Popover$onClick, state, msg));
	});
var _user$project$Common_Icons$actionIcon = F3(
	function (icon, isEnabled, container) {
		var iconElem = function () {
			var _p1 = container;
			if (_p1.ctor === 'Nothing') {
				return A2(
					_user$project$Common_Icons$iconContainer,
					isEnabled,
					{
						ctor: '::',
						_0: A2(_user$project$Common_Icons$basicIcon, icon, isEnabled),
						_1: {ctor: '[]'}
					});
			} else {
				return A2(
					_user$project$Common_Icons$iconContainer,
					isEnabled,
					{
						ctor: '::',
						_0: _p1._0(
							{
								ctor: '::',
								_0: A2(_user$project$Common_Icons$basicIcon, icon, isEnabled),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					});
			}
		}();
		return iconElem;
	});
var _user$project$Common_Icons$actionIconProps = {color: _elm_lang$core$Color$black, disabledColor: _elm_lang$core$Color$gray, size: 14};
var _user$project$Common_Icons$ActionIcon = F3(
	function (a, b, c) {
		return {color: a, disabledColor: b, size: c};
	});

var _user$project$Data_Security_ApplicationPermissions$encodeListOfStrings = function (listOfStrings) {
	return _elm_lang$core$Json_Encode$list(
		A2(_elm_lang$core$List$map, _elm_lang$core$Json_Encode$string, listOfStrings));
};
var _user$project$Data_Security_ApplicationPermissions$encodePermissionSets = function (dict) {
	return _elm_lang$core$Json_Encode$object(
		_elm_lang$core$Dict$toList(
			A2(
				_elm_lang$core$Dict$map,
				_elm_lang$core$Basics$always(_user$project$Data_Security_ApplicationPermissions$encodeListOfStrings),
				dict)));
};
var _user$project$Data_Security_ApplicationPermissions$appPermissionSetsEncoder = function (set) {
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'permissionSets',
				_1: _user$project$Data_Security_ApplicationPermissions$encodePermissionSets(set.permissionSets)
			},
			_1: {ctor: '[]'}
		});
};
var _user$project$Data_Security_ApplicationPermissions$permissionDecoder = _elm_lang$core$Json_Decode$string;
var _user$project$Data_Security_ApplicationPermissions$permissionListDecoder = _elm_lang$core$Json_Decode$list(_user$project$Data_Security_ApplicationPermissions$permissionDecoder);
var _user$project$Data_Security_ApplicationPermissions$permissionSetDecoder = _elm_lang$core$Json_Decode$dict(_user$project$Data_Security_ApplicationPermissions$permissionListDecoder);
var _user$project$Data_Security_ApplicationPermissions$AppPermissionSets = function (a) {
	return {permissionSets: a};
};
var _user$project$Data_Security_ApplicationPermissions$appPermissionSetsDecoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'permissionSets',
	_user$project$Data_Security_ApplicationPermissions$permissionSetDecoder,
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Data_Security_ApplicationPermissions$AppPermissionSets));

var _user$project$Data_Security_ApplicationRoles$appRoleEncoder = function (role) {
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'id',
				_1: _elm_lang$core$Json_Encode$float(role.id)
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'name',
					_1: _elm_lang$core$Json_Encode$string(role.name)
				},
				_1: {
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'permissions',
						_1: _user$project$Data_Security_ApplicationPermissions$encodePermissionSets(role.permissions)
					},
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Data_Security_ApplicationRoles$newWithName = function (withName) {
	return {id: 0.0, name: withName, permissions: _elm_lang$core$Dict$empty};
};
var _user$project$Data_Security_ApplicationRoles$ApplicationRole = F3(
	function (a, b, c) {
		return {id: a, name: b, permissions: c};
	});
var _user$project$Data_Security_ApplicationRoles$aplicationRoleDecoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'permissions',
	_user$project$Data_Security_ApplicationPermissions$permissionSetDecoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'name',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'id',
			_elm_lang$core$Json_Decode$float,
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Data_Security_ApplicationRoles$ApplicationRole))));
var _user$project$Data_Security_ApplicationRoles$aplicationRolesDecoder = _elm_lang$core$Json_Decode$list(_user$project$Data_Security_ApplicationRoles$aplicationRoleDecoder);
var _user$project$Data_Security_ApplicationRoles$decoder = A2(
	_elm_lang$core$Json_Decode$at,
	{
		ctor: '::',
		_0: 'app_roles',
		_1: {ctor: '[]'}
	},
	_user$project$Data_Security_ApplicationRoles$aplicationRolesDecoder);

var _user$project$Views_Remote$emptyTable = F2(
	function (options, thead) {
		return _rundis$elm_bootstrap$Bootstrap_Table$table(
			{
				options: options,
				thead: thead,
				tbody: A2(
					_rundis$elm_bootstrap$Bootstrap_Table$tbody,
					{ctor: '[]'},
					{ctor: '[]'})
			});
	});
var _user$project$Views_Remote$tableBodyState = F3(
	function (options, thead, body) {
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_user$project$Views_Remote$emptyTable, options, thead),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('table-body-state'),
							_1: {ctor: '[]'}
						},
						body),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$Views_Remote$custom = function (_p0) {
	var _p1 = _p0;
	var _p2 = _p1.remote;
	switch (_p2.ctor) {
		case 'NotAsked':
			return _p1.initial;
		case 'Loading':
			return _p1.loading;
		case 'Success':
			return _p2._0;
		default:
			return _p2._0;
	}
};
var _user$project$Views_Remote$table = function (_p3) {
	var _p4 = _p3;
	var _p7 = _p4.thead;
	var _p6 = _p4.options;
	return _user$project$Views_Remote$custom(
		{
			initial: A2(_user$project$Views_Remote$emptyTable, _p6, _p7),
			loading: A3(
				_user$project$Views_Remote$tableBodyState,
				_p6,
				_p7,
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$i,
						{
							ctor: '::',
							_0: A2(_elm_lang$html$Html_Attributes$attribute, 'aria-hidden', 'true'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('fa fa-spinner fa-pulse'),
								_1: {ctor: '[]'}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html$text(_p4.loading),
						_1: {ctor: '[]'}
					}
				}),
			remote: A2(
				_krisajenkins$remotedata$RemoteData$mapError,
				function (_p5) {
					return A3(
						_user$project$Views_Remote$tableBodyState,
						_p6,
						_p7,
						{
							ctor: '::',
							_0: A2(_user$project$Common_Icons$basicIcon, _Fresheyeball$elm_font_awesome$FontAwesome_Web$exclamation_triangle, false),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html$text(_p4.error),
								_1: {ctor: '[]'}
							}
						});
				},
				A2(
					_krisajenkins$remotedata$RemoteData$map,
					function (body) {
						return _rundis$elm_bootstrap$Bootstrap_Table$table(
							{options: _p6, thead: _p7, tbody: body});
					},
					_p4.tbody))
		});
};
var _user$project$Views_Remote$simple = function (_p8) {
	var _p9 = _p8;
	return _user$project$Views_Remote$custom(
		{
			initial: _elm_lang$html$Html$text(''),
			loading: A2(
				_elm_lang$html$Html$span,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('remote-state'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$i,
						{
							ctor: '::',
							_0: A2(_elm_lang$html$Html_Attributes$attribute, 'aria-hidden', 'true'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('fa fa-spinner fa-pulse'),
								_1: {ctor: '[]'}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html$text(_p9.loading),
						_1: {ctor: '[]'}
					}
				}),
			remote: A2(
				_krisajenkins$remotedata$RemoteData$mapError,
				function (_p10) {
					return A2(
						_elm_lang$html$Html$span,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('remote-state'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(_user$project$Common_Icons$basicIcon, _Fresheyeball$elm_font_awesome$FontAwesome_Web$exclamation_triangle, false),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html$text(_p9.error),
								_1: {ctor: '[]'}
							}
						});
				},
				_p9.remote)
		});
};
var _user$project$Views_Remote$SimpleConfig = F3(
	function (a, b, c) {
		return {error: a, loading: b, remote: c};
	});
var _user$project$Views_Remote$TableConfig = F5(
	function (a, b, c, d, e) {
		return {error: a, loading: b, options: c, thead: d, tbody: e};
	});
var _user$project$Views_Remote$Config = F3(
	function (a, b, c) {
		return {initial: a, loading: b, remote: c};
	});

var _user$project$Page_Administration_Security$emptyPermSetTable = A2(
	_rundis$elm_bootstrap$Bootstrap_Table$tbody,
	{ctor: '[]'},
	{
		ctor: '::',
		_0: A2(
			_rundis$elm_bootstrap$Bootstrap_Table$tr,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_rundis$elm_bootstrap$Bootstrap_Table$td,
					A2(
						_elm_lang$core$List$map,
						_rundis$elm_bootstrap$Bootstrap_Table$cellAttr,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('no-result text-center'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$colspan(4),
								_1: {ctor: '[]'}
							}
						}),
					{
						ctor: '::',
						_0: A2(_user$project$Common_Icons$basicIcon, _Fresheyeball$elm_font_awesome$FontAwesome_Web$info_circle, false),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html$text(_krisajenkins$elm_exts$Exts_Html$nbsp),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html$text('No Permissions in this Role. Use Add button ...'),
								_1: {ctor: '[]'}
							}
						}
					}),
				_1: {ctor: '[]'}
			}),
		_1: {ctor: '[]'}
	});
var _user$project$Page_Administration_Security$rolePermSetTableHeader = _rundis$elm_bootstrap$Bootstrap_Table$simpleThead(
	{
		ctor: '::',
		_0: A2(
			_rundis$elm_bootstrap$Bootstrap_Table$th,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text('System Page/Permission Set Name'),
				_1: {ctor: '[]'}
			}),
		_1: {
			ctor: '::',
			_0: A2(
				_rundis$elm_bootstrap$Bootstrap_Table$th,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Permissions'),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		}
	});
var _user$project$Page_Administration_Security$permissionBitsMap = F2(
	function (setBits, roleBits) {
		return A2(
			_elm_lang$core$List$map,
			function (aSetBit) {
				return {
					ctor: '_Tuple2',
					_0: aSetBit,
					_1: A2(_elm_lang$core$List$member, aSetBit, roleBits)
				};
			},
			setBits);
	});
var _user$project$Page_Administration_Security$emptyBitsTable = F2(
	function (setName, fullBitsOfTheSet) {
		return A2(
			_rundis$elm_bootstrap$Bootstrap_Table$tr,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_rundis$elm_bootstrap$Bootstrap_Table$td,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(setName),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: function () {
						var _p0 = fullBitsOfTheSet;
						if (_p0.ctor === 'Nothing') {
							return A2(
								_rundis$elm_bootstrap$Bootstrap_Table$td,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('No bits set For this one ...'),
									_1: {ctor: '[]'}
								});
						} else {
							return A2(
								_rundis$elm_bootstrap$Bootstrap_Table$td,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(
										_elm_lang$core$Basics$toString(_p0._0)),
									_1: {ctor: '[]'}
								});
						}
					}(),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$Page_Administration_Security$emptyPermSetsTable = A2(
	_rundis$elm_bootstrap$Bootstrap_Table$tbody,
	{ctor: '[]'},
	{
		ctor: '::',
		_0: A2(
			_rundis$elm_bootstrap$Bootstrap_Table$tr,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_rundis$elm_bootstrap$Bootstrap_Table$td,
					A2(
						_elm_lang$core$List$map,
						_rundis$elm_bootstrap$Bootstrap_Table$cellAttr,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('no-result text-center'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$colspan(4),
								_1: {ctor: '[]'}
							}
						}),
					{
						ctor: '::',
						_0: A2(_user$project$Common_Icons$basicIcon, _Fresheyeball$elm_font_awesome$FontAwesome_Web$info_circle, false),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html$text(_krisajenkins$elm_exts$Exts_Html$nbsp),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html$text('Set has No Permissions ...'),
								_1: {ctor: '[]'}
							}
						}
					}),
				_1: {ctor: '[]'}
			}),
		_1: {ctor: '[]'}
	});
var _user$project$Page_Administration_Security$appPermissionBitsView = F3(
	function (setName, setBits, faIcon) {
		return A2(
			_rundis$elm_bootstrap$Bootstrap_Grid$containerFluid,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_rundis$elm_bootstrap$Bootstrap_Grid$row,
					{ctor: '[]'},
					A2(
						_elm_lang$core$List$map,
						function (bitName) {
							return A2(
								_rundis$elm_bootstrap$Bootstrap_Grid$col,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(bitName),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html$text(_krisajenkins$elm_exts$Exts_Html$nbsp),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html$text(_krisajenkins$elm_exts$Exts_Html$nbsp),
											_1: {
												ctor: '::',
												_0: faIcon,
												_1: {ctor: '[]'}
											}
										}
									}
								});
						},
						setBits)),
				_1: {ctor: '[]'}
			});
	});
var _user$project$Page_Administration_Security$errorCard = F2(
	function (setName, reason) {
		return {
			ctor: '::',
			_0: _rundis$elm_bootstrap$Bootstrap_Accordion$card(
				{
					id: 'notFound',
					options: {ctor: '[]'},
					header: A2(
						_rundis$elm_bootstrap$Bootstrap_Accordion$header,
						{ctor: '[]'},
						A2(
							_rundis$elm_bootstrap$Bootstrap_Accordion$toggle,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(
									A2(
										_elm_lang$core$Basics_ops['++'],
										setName,
										A2(_elm_lang$core$Basics_ops['++'], ' Not available: ', reason))),
								_1: {ctor: '[]'}
							})),
					blocks: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		};
	});
var _user$project$Page_Administration_Security$permSetMatches = F3(
	function (role, appPermSets, searchRoleSetName) {
		var _p1 = A2(_elm_lang$core$Dict$get, role.name, searchRoleSetName);
		if (_p1.ctor === 'Just') {
			var _p3 = _p1._0;
			var _p2 = {
				ctor: '_Tuple2',
				_0: _p3,
				_1: _elm_lang$core$String$isEmpty(
					A2(_elm_lang$core$Maybe$withDefault, '', _p3))
			};
			if (((_p2.ctor === '_Tuple2') && (_p2._0.ctor === 'Just')) && (_p2._1 === false)) {
				return _elm_lang$core$Dict$keys(
					A2(
						_elm_lang$core$Dict$filter,
						F2(
							function (setName, perms) {
								return A2(
									_elm_lang$core$String$contains,
									_elm_lang$core$String$toUpper(_p2._0._0),
									_elm_lang$core$String$toUpper(setName));
							}),
						A2(
							_elm_lang$core$Dict$filter,
							F2(
								function (setName, perms) {
									return !A2(_elm_lang$core$Dict$member, setName, role.permissions);
								}),
							appPermSets)));
			} else {
				return {ctor: '[]'};
			}
		} else {
			return {ctor: '[]'};
		}
	});
var _user$project$Page_Administration_Security$channels = F2(
	function (auth, handlers) {
		return A3(
			_saschatimme$elm_phoenix$Phoenix_Channel$on,
			'app_roles',
			handlers.onAppRoles,
			A3(
				_saschatimme$elm_phoenix$Phoenix_Channel$on,
				'app_permission_sets',
				handlers.onAppPermissionsSet,
				A2(
					_saschatimme$elm_phoenix$Phoenix_Channel$withPayload,
					_elm_lang$core$Json_Encode$object(
						{
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'username',
								_1: _elm_lang$core$Json_Encode$string(auth.username)
							},
							_1: {
								ctor: '::',
								_0: {
									ctor: '_Tuple2',
									_0: 'guardian_token',
									_1: _elm_lang$core$Json_Encode$string(auth.token)
								},
								_1: {ctor: '[]'}
							}
						}),
					_saschatimme$elm_phoenix$Phoenix_Channel$init(
						A2(_elm_lang$core$Basics_ops['++'], 'admin:', auth.username)))));
	});
var _user$project$Page_Administration_Security$selectAppPermSet = F2(
	function (selectedSet, appPermissionSets) {
		var _p4 = appPermissionSets;
		if (_p4.ctor === 'Success') {
			var _p5 = _elm_lang$core$List$head(
				_elm_lang$core$Dict$toList(
					A2(
						_elm_lang$core$Dict$filter,
						F2(
							function (key, value) {
								return _elm_lang$core$Native_Utils.eq(
									_elm_lang$core$String$toUpper(key),
									selectedSet);
							}),
						_p4._0.permissionSets)));
			if (_p5.ctor === 'Just') {
				return _elm_lang$core$Maybe$Just(_p5._0);
			} else {
				return _elm_lang$core$Maybe$Nothing;
			}
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _user$project$Page_Administration_Security$addSetToRole = F3(
	function (appRoles, roleName, setName) {
		return A2(
			_elm_lang$core$List$map,
			function (role) {
				var _p6 = _elm_lang$core$Native_Utils.eq(role.name, roleName);
				if (_p6 === true) {
					return _elm_lang$core$Native_Utils.update(
						role,
						{
							permissions: A3(
								_elm_lang$core$Dict$insert,
								setName,
								{ctor: '[]'},
								role.permissions)
						});
				} else {
					return role;
				}
			},
			appRoles);
	});
var _user$project$Page_Administration_Security$removeSetFromRole = F2(
	function (setName, appRole) {
		return _elm_lang$core$Native_Utils.update(
			appRole,
			{
				permissions: A2(_elm_lang$core$Dict$remove, setName, appRole.permissions)
			});
	});
var _user$project$Page_Administration_Security$setBit = F4(
	function (role, setName, bitName, bitValue) {
		return _elm_lang$core$Native_Utils.update(
			role,
			{
				permissions: _elm_lang$core$Dict$fromList(
					A2(
						_elm_lang$core$List$map,
						function (_p7) {
							var _p8 = _p7;
							var _p12 = _p8._1;
							var _p11 = _p8._0;
							var _p9 = _elm_lang$core$Native_Utils.eq(_p11, setName);
							if (_p9 === true) {
								return {
									ctor: '_Tuple2',
									_0: _p11,
									_1: function () {
										var _p10 = bitValue;
										if (_p10 === true) {
											return {ctor: '::', _0: bitName, _1: _p12};
										} else {
											return A2(
												_elm_lang$core$List$filter,
												function (aBitName) {
													return !_elm_lang$core$Native_Utils.eq(aBitName, bitName);
												},
												_p12);
										}
									}()
								};
							} else {
								return {ctor: '_Tuple2', _0: _p11, _1: _p12};
							}
						},
						_elm_lang$core$Dict$toList(role.permissions)))
			});
	});
var _user$project$Page_Administration_Security$flip = F5(
	function (appRoles, roleName, setName, bitName, bitValue) {
		return A2(
			_elm_lang$core$List$map,
			function (role) {
				var _p13 = _elm_lang$core$Native_Utils.eq(role.name, roleName);
				if (_p13 === true) {
					return A4(_user$project$Page_Administration_Security$setBit, role, setName, bitName, bitValue);
				} else {
					return role;
				}
			},
			appRoles);
	});
var _user$project$Page_Administration_Security$initialModel = function (user) {
	return {
		errors: {ctor: '[]'},
		saveAppPermsEnabled: false,
		saveAppRolesEnabled: false,
		deletedRoles: {ctor: '[]'},
		appRoles: _krisajenkins$remotedata$RemoteData$Loading,
		appPermissionSets: _krisajenkins$remotedata$RemoteData$Loading,
		tabState: _rundis$elm_bootstrap$Bootstrap_Tab$initialState,
		user: user,
		searchRoleName: '',
		searchSetName: '',
		searchBitNames: _elm_lang$core$Dict$empty,
		searchRoleSetName: _elm_lang$core$Dict$empty,
		accordionState: _rundis$elm_bootstrap$Bootstrap_Accordion$initialState,
		debounce: _mpizenberg$elm_debounce$Control$initialState
	};
};
var _user$project$Page_Administration_Security$Model = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return {errors: a, saveAppPermsEnabled: b, saveAppRolesEnabled: c, deletedRoles: d, appRoles: e, appPermissionSets: f, tabState: g, user: h, searchRoleName: i, searchSetName: j, searchBitNames: k, searchRoleSetName: l, accordionState: m, debounce: n};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _user$project$Page_Administration_Security$NoOption = {ctor: 'NoOption'};
var _user$project$Page_Administration_Security$AddSetBit = function (a) {
	return {ctor: 'AddSetBit', _0: a};
};
var _user$project$Page_Administration_Security$SearchBitName = F2(
	function (a, b) {
		return {ctor: 'SearchBitName', _0: a, _1: b};
	});
var _user$project$Page_Administration_Security$SearchSetName = function (a) {
	return {ctor: 'SearchSetName', _0: a};
};
var _user$project$Page_Administration_Security$SearchRoleName = function (a) {
	return {ctor: 'SearchRoleName', _0: a};
};
var _user$project$Page_Administration_Security$TabMsg = function (a) {
	return {ctor: 'TabMsg', _0: a};
};
var _user$project$Page_Administration_Security$Debounce = function (a) {
	return {ctor: 'Debounce', _0: a};
};
var _user$project$Page_Administration_Security$ReceiveAppPermissionSets = function (a) {
	return {ctor: 'ReceiveAppPermissionSets', _0: a};
};
var _user$project$Page_Administration_Security$eventAppPermissionSets = function (model) {
	return {
		name: 'app_permission_sets',
		payload: _elm_lang$core$Maybe$Just(
			_elm_lang$core$Json_Encode$object(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'app_name',
						_1: _elm_lang$core$Json_Encode$string('app_ui')
					},
					_1: {ctor: '[]'}
				})),
		onOk: _elm_lang$core$Maybe$Just(
			function (response) {
				return _user$project$Page_Administration_Security$ReceiveAppPermissionSets(response);
			}),
		onError: _elm_lang$core$Maybe$Nothing
	};
};
var _user$project$Page_Administration_Security$ReceiveAppRoles = function (a) {
	return {ctor: 'ReceiveAppRoles', _0: a};
};
var _user$project$Page_Administration_Security$eventAppRoles = function (model) {
	return {
		name: 'app_roles',
		payload: _elm_lang$core$Maybe$Just(
			_elm_lang$core$Json_Encode$object(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'app_name',
						_1: _elm_lang$core$Json_Encode$string('app_ui')
					},
					_1: {ctor: '[]'}
				})),
		onOk: _elm_lang$core$Maybe$Just(
			function (response) {
				return _user$project$Page_Administration_Security$ReceiveAppRoles(response);
			}),
		onError: _elm_lang$core$Maybe$Nothing
	};
};
var _user$project$Page_Administration_Security$init = function (user) {
	var model = _user$project$Page_Administration_Security$initialModel(user);
	var endpoint = A2(
		_elm_lang$core$Basics_ops['++'],
		'admin:',
		_user$project$Data_User$getUsername(model.user));
	var events = {
		ctor: '::',
		_0: _user$project$Page_Administration_Security$eventAppPermissionSets(model),
		_1: {
			ctor: '::',
			_0: _user$project$Page_Administration_Security$eventAppRoles(model),
			_1: {ctor: '[]'}
		}
	};
	return A2(
		_user$project$Util_ops['=>'],
		model,
		_elm_lang$core$Platform_Cmd$batch(
			A2(_user$project$Common_Connection$push, endpoint, events)));
};
var _user$project$Page_Administration_Security$AccordionMsg = function (a) {
	return {ctor: 'AccordionMsg', _0: a};
};
var _user$project$Page_Administration_Security$RemoveAppPermBit = F2(
	function (a, b) {
		return {ctor: 'RemoveAppPermBit', _0: a, _1: b};
	});
var _user$project$Page_Administration_Security$appPermissionBitsRemoveView = F2(
	function (setName, setBits) {
		return A2(
			_rundis$elm_bootstrap$Bootstrap_Grid$containerFluid,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_rundis$elm_bootstrap$Bootstrap_Grid$row,
					{ctor: '[]'},
					A2(
						_elm_lang$core$List$map,
						function (bitName) {
							return A2(
								_rundis$elm_bootstrap$Bootstrap_Grid$col,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$span,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onClick(
												A2(_user$project$Page_Administration_Security$RemoveAppPermBit, setName, bitName)),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text(bitName),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html$text(_krisajenkins$elm_exts$Exts_Html$nbsp),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html$text(_krisajenkins$elm_exts$Exts_Html$nbsp),
													_1: {
														ctor: '::',
														_0: _Fresheyeball$elm_font_awesome$FontAwesome_Web$remove,
														_1: {ctor: '[]'}
													}
												}
											}
										}),
									_1: {ctor: '[]'}
								});
						},
						setBits)),
				_1: {ctor: '[]'}
			});
	});
var _user$project$Page_Administration_Security$SaveAppPermSets = {ctor: 'SaveAppPermSets'};
var _user$project$Page_Administration_Security$AddRole = function (a) {
	return {ctor: 'AddRole', _0: a};
};
var _user$project$Page_Administration_Security$AddAppPermSet = function (a) {
	return {ctor: 'AddAppPermSet', _0: a};
};
var _user$project$Page_Administration_Security$RemoveAppPermSet = function (a) {
	return {ctor: 'RemoveAppPermSet', _0: a};
};
var _user$project$Page_Administration_Security$appPermissionBitsCard = F3(
	function (searchBitName, setName, setBits) {
		return _rundis$elm_bootstrap$Bootstrap_Accordion$card(
			{
				id: setName,
				options: {
					ctor: '::',
					_0: _rundis$elm_bootstrap$Bootstrap_Card$outlineSuccess,
					_1: {
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Card$align(_rundis$elm_bootstrap$Bootstrap_Text$alignXsLeft),
						_1: {ctor: '[]'}
					}
				},
				header: A2(
					_rundis$elm_bootstrap$Bootstrap_Accordion$prependHeader,
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$span,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _Fresheyeball$elm_font_awesome$FontAwesome_Web$shield,
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html$text(_krisajenkins$elm_exts$Exts_Html$nbsp),
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					},
					A2(
						_rundis$elm_bootstrap$Bootstrap_Accordion$appendHeader,
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$span,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(
										_user$project$Page_Administration_Security$RemoveAppPermSet(setName)),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$style(
											{
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'float', _1: 'right'},
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								},
								{
									ctor: '::',
									_0: _Fresheyeball$elm_font_awesome$FontAwesome_Web$remove,
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$span,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text(_krisajenkins$elm_exts$Exts_Html$nbsp),
										_1: {
											ctor: '::',
											_0: A3(_user$project$Page_Administration_Security$appPermissionBitsView, setName, setBits, _Fresheyeball$elm_font_awesome$FontAwesome_Web$check),
											_1: {ctor: '[]'}
										}
									}),
								_1: {ctor: '[]'}
							}
						},
						A2(
							_rundis$elm_bootstrap$Bootstrap_Accordion$header,
							{ctor: '[]'},
							A2(
								_rundis$elm_bootstrap$Bootstrap_Accordion$toggle,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(_krisajenkins$elm_exts$Exts_Html$nbsp),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html$text(setName),
										_1: {ctor: '[]'}
									}
								})))),
				blocks: {
					ctor: '::',
					_0: A2(
						_rundis$elm_bootstrap$Bootstrap_Accordion$block,
						{
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Card$blockAlign(_rundis$elm_bootstrap$Bootstrap_Text$alignXsLeft),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_rundis$elm_bootstrap$Bootstrap_Card$text,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: A2(_user$project$Page_Administration_Security$appPermissionBitsRemoveView, setName, setBits),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_rundis$elm_bootstrap$Bootstrap_Card$blockQuote,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: A2(
											_rundis$elm_bootstrap$Bootstrap_Grid$containerFluid,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: A2(
													_rundis$elm_bootstrap$Bootstrap_Grid$row,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: A2(
															_rundis$elm_bootstrap$Bootstrap_Grid$col,
															{
																ctor: '::',
																_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs12,
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$text(
																	{
																		ctor: '::',
																		_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$id('bitName'),
																		_1: {
																			ctor: '::',
																			_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$attrs(
																				{
																					ctor: '::',
																					_0: _elm_lang$html$Html_Attributes$placeholder('Enter Bit Name'),
																					_1: {
																						ctor: '::',
																						_0: A2(
																							_elm_lang$html$Html_Attributes$map,
																							A2(_mpizenberg$elm_debounce$Control_Debounce$trailing, _user$project$Page_Administration_Security$Debounce, 1 * _elm_lang$core$Time$second),
																							_elm_lang$html$Html_Events$onInput(
																								_user$project$Page_Administration_Security$SearchBitName(setName))),
																						_1: {
																							ctor: '::',
																							_0: _elm_lang$html$Html_Attributes$class('ml-sm-2 my-2'),
																							_1: {
																								ctor: '::',
																								_0: _elm_lang$html$Html_Attributes$style(
																									{
																										ctor: '::',
																										_0: {ctor: '_Tuple2', _0: 'width', _1: '40%'},
																										_1: {
																											ctor: '::',
																											_0: {ctor: '_Tuple2', _0: 'float', _1: 'left'},
																											_1: {ctor: '[]'}
																										}
																									}),
																								_1: {ctor: '[]'}
																							}
																						}
																					}
																				}),
																			_1: {ctor: '[]'}
																		}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_rundis$elm_bootstrap$Bootstrap_Button$linkButton,
																		{
																			ctor: '::',
																			_0: _rundis$elm_bootstrap$Bootstrap_Button$primary,
																			_1: {
																				ctor: '::',
																				_0: _rundis$elm_bootstrap$Bootstrap_Button$attrs(
																					{
																						ctor: '::',
																						_0: _elm_lang$html$Html_Attributes$style(
																							{
																								ctor: '::',
																								_0: {ctor: '_Tuple2', _0: 'width', _1: '10%'},
																								_1: {
																									ctor: '::',
																									_0: {ctor: '_Tuple2', _0: 'float', _1: 'left'},
																									_1: {ctor: '[]'}
																								}
																							}),
																						_1: {
																							ctor: '::',
																							_0: _elm_lang$html$Html_Attributes$class('ml-sm-2 my-2'),
																							_1: {
																								ctor: '::',
																								_0: _elm_lang$html$Html_Events$onClick(
																									_user$project$Page_Administration_Security$AddSetBit(setName)),
																								_1: {ctor: '[]'}
																							}
																						}
																					}),
																				_1: {ctor: '[]'}
																			}
																		},
																		{
																			ctor: '::',
																			_0: _elm_lang$html$Html$text('Add'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}
															}),
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$Page_Administration_Security$appPermSetsData = F2(
	function (searchBitNames, fullPermBits) {
		return A3(
			_elm_lang$core$List$map2,
			F2(
				function (_p15, _p14) {
					var _p16 = _p15;
					var _p17 = _p14;
					return A3(_user$project$Page_Administration_Security$appPermissionBitsCard, _p16._1, _p17._0, _p17._1);
				}),
			_elm_lang$core$Dict$toList(searchBitNames),
			_elm_lang$core$Dict$toList(fullPermBits));
	});
var _user$project$Page_Administration_Security$appPermSetsCards = F3(
	function (setSearchName, searchBitNames, appPermSets) {
		var _p18 = appPermSets;
		switch (_p18.ctor) {
			case 'NotAsked':
				return A2(_user$project$Page_Administration_Security$errorCard, setSearchName, 'Initialising ...');
			case 'Loading':
				return A2(_user$project$Page_Administration_Security$errorCard, setSearchName, 'Loading ...');
			case 'Failure':
				return A2(
					_user$project$Page_Administration_Security$errorCard,
					setSearchName,
					_elm_lang$core$Basics$toString(_p18._0));
			default:
				return A2(
					_user$project$Page_Administration_Security$appPermSetsData,
					searchBitNames,
					A2(
						_elm_lang$core$Dict$filter,
						F2(
							function (setName, perms) {
								return _elm_lang$core$String$isEmpty(setSearchName) || A2(
									_elm_lang$core$String$contains,
									_elm_lang$core$String$toUpper(setSearchName),
									_elm_lang$core$String$toUpper(setName));
							}),
						_p18._0.permissionSets));
		}
	});
var _user$project$Page_Administration_Security$SaveRoles = {ctor: 'SaveRoles'};
var _user$project$Page_Administration_Security$DeleteRole = function (a) {
	return {ctor: 'DeleteRole', _0: a};
};
var _user$project$Page_Administration_Security$AddSetToRole = F2(
	function (a, b) {
		return {ctor: 'AddSetToRole', _0: a, _1: b};
	});
var _user$project$Page_Administration_Security$SearchRoleSet = F2(
	function (a, b) {
		return {ctor: 'SearchRoleSet', _0: a, _1: b};
	});
var _user$project$Page_Administration_Security$RemoveBit = F3(
	function (a, b, c) {
		return {ctor: 'RemoveBit', _0: a, _1: b, _2: c};
	});
var _user$project$Page_Administration_Security$AddBit = F3(
	function (a, b, c) {
		return {ctor: 'AddBit', _0: a, _1: b, _2: c};
	});
var _user$project$Page_Administration_Security$drawBit = F4(
	function (roleName, setName, checked, bitName) {
		var _p19 = checked;
		if (_p19 === true) {
			return {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$span,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(
							A3(_user$project$Page_Administration_Security$RemoveBit, roleName, setName, bitName)),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(bitName),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html$text(_krisajenkins$elm_exts$Exts_Html$nbsp),
							_1: {
								ctor: '::',
								_0: _Fresheyeball$elm_font_awesome$FontAwesome_Web$check_square_o,
								_1: {ctor: '[]'}
							}
						}
					}),
				_1: {ctor: '[]'}
			};
		} else {
			return {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$span,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(
							A3(_user$project$Page_Administration_Security$AddBit, roleName, setName, bitName)),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(bitName),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html$text(_krisajenkins$elm_exts$Exts_Html$nbsp),
							_1: {
								ctor: '::',
								_0: _Fresheyeball$elm_font_awesome$FontAwesome_Web$square_o,
								_1: {ctor: '[]'}
							}
						}
					}),
				_1: {ctor: '[]'}
			};
		}
	});
var _user$project$Page_Administration_Security$permissionBitsView = F4(
	function (roleName, roleSetName, setBits, roleBits) {
		var drawBitCurried = A2(_user$project$Page_Administration_Security$drawBit, roleName, roleSetName);
		var columnList = A2(_user$project$Page_Administration_Security$permissionBitsMap, setBits, roleBits);
		return A2(
			_rundis$elm_bootstrap$Bootstrap_Grid$containerFluid,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_rundis$elm_bootstrap$Bootstrap_Grid$row,
					{ctor: '[]'},
					A2(
						_elm_lang$core$List$map,
						function (_p20) {
							var _p21 = _p20;
							return A2(
								_rundis$elm_bootstrap$Bootstrap_Grid$col,
								{ctor: '[]'},
								A2(drawBitCurried, _p21._1, _p21._0));
						},
						columnList)),
				_1: {ctor: '[]'}
			});
	});
var _user$project$Page_Administration_Security$DropSetFromRole = F2(
	function (a, b) {
		return {ctor: 'DropSetFromRole', _0: a, _1: b};
	});
var _user$project$Page_Administration_Security$permSetTableRaw = F3(
	function (roleName, appPermissionSets, roleSet) {
		var _p22 = roleSet;
		var roleSetName = _p22._0;
		var roleBits = _p22._1;
		var fullSetBits = A2(_elm_lang$core$Dict$get, roleSetName, appPermissionSets);
		var _p23 = fullSetBits;
		if (_p23.ctor === 'Nothing') {
			return A2(
				_rundis$elm_bootstrap$Bootstrap_Table$tr,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_rundis$elm_bootstrap$Bootstrap_Table$td,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(roleSetName),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_rundis$elm_bootstrap$Bootstrap_Table$td,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Invalid Set name In Role: Application Permission Set not Found ...'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				});
		} else {
			return A2(
				_rundis$elm_bootstrap$Bootstrap_Table$tr,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_rundis$elm_bootstrap$Bootstrap_Table$td,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(roleSetName),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_rundis$elm_bootstrap$Bootstrap_Table$td,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A4(_user$project$Page_Administration_Security$permissionBitsView, roleName, roleSetName, _p23._0, roleBits),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$span,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onClick(
												A2(_user$project$Page_Administration_Security$DropSetFromRole, roleName, roleSetName)),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$style(
													{
														ctor: '::',
														_0: {ctor: '_Tuple2', _0: 'float', _1: 'right'},
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}
										},
										{
											ctor: '::',
											_0: _Fresheyeball$elm_font_awesome$FontAwesome_Web$remove,
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					}
				});
		}
	});
var _user$project$Page_Administration_Security$rolePermSetsView = F3(
	function (roleName, fullPermBits, rolePermSets) {
		var rolePermsList = _elm_lang$core$Dict$toList(rolePermSets);
		return _user$project$Views_Remote$table(
			{
				error: 'Failure to load Role Permissions',
				loading: 'loading...',
				options: {
					ctor: '::',
					_0: _rundis$elm_bootstrap$Bootstrap_Table$small,
					_1: {
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Table$bordered,
						_1: {
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Table$responsive,
							_1: {
								ctor: '::',
								_0: _rundis$elm_bootstrap$Bootstrap_Table$striped,
								_1: {ctor: '[]'}
							}
						}
					}
				},
				thead: _user$project$Page_Administration_Security$rolePermSetTableHeader,
				tbody: A2(
					_krisajenkins$remotedata$RemoteData$map,
					function (setBits) {
						return _elm_lang$core$List$isEmpty(setBits) ? _user$project$Page_Administration_Security$emptyPermSetsTable : A2(
							_rundis$elm_bootstrap$Bootstrap_Table$tbody,
							{ctor: '[]'},
							A2(
								_elm_lang$core$List$map,
								A2(_user$project$Page_Administration_Security$permSetTableRaw, roleName, fullPermBits),
								setBits));
					},
					_krisajenkins$remotedata$RemoteData$succeed(rolePermsList))
			});
	});
var _user$project$Page_Administration_Security$roleCard = F3(
	function (appPermSets, searchRoleSetName, role) {
		var legitSets = A2(_elm_lang$core$Dict$intersect, role.permissions, appPermSets);
		var fullPermissionBitSets = A2(_elm_lang$core$Dict$intersect, appPermSets, legitSets);
		return _rundis$elm_bootstrap$Bootstrap_Accordion$card(
			{
				id: role.name,
				options: {
					ctor: '::',
					_0: _rundis$elm_bootstrap$Bootstrap_Card$outlineSuccess,
					_1: {
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Card$align(_rundis$elm_bootstrap$Bootstrap_Text$alignXsLeft),
						_1: {ctor: '[]'}
					}
				},
				header: A2(
					_rundis$elm_bootstrap$Bootstrap_Accordion$prependHeader,
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$span,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _Fresheyeball$elm_font_awesome$FontAwesome_Web$diamond,
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html$text(_krisajenkins$elm_exts$Exts_Html$nbsp),
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					},
					A2(
						_rundis$elm_bootstrap$Bootstrap_Accordion$appendHeader,
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$span,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(
										_user$project$Page_Administration_Security$DeleteRole(role.name)),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$style(
											{
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'float', _1: 'right'},
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								},
								{
									ctor: '::',
									_0: _Fresheyeball$elm_font_awesome$FontAwesome_Web$remove,
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$span,
									{ctor: '[]'},
									{ctor: '[]'}),
								_1: {ctor: '[]'}
							}
						},
						A2(
							_rundis$elm_bootstrap$Bootstrap_Accordion$header,
							{ctor: '[]'},
							A2(
								_rundis$elm_bootstrap$Bootstrap_Accordion$toggle,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(_krisajenkins$elm_exts$Exts_Html$nbsp),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html$text(role.name),
										_1: {ctor: '[]'}
									}
								})))),
				blocks: {
					ctor: '::',
					_0: A2(
						_rundis$elm_bootstrap$Bootstrap_Accordion$block,
						{
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Card$blockAlign(_rundis$elm_bootstrap$Bootstrap_Text$alignXsLeft),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_rundis$elm_bootstrap$Bootstrap_Card$blockQuote,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$view(
										A2(
											_rundis$elm_bootstrap$Bootstrap_Form_InputGroup$attrs,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$style(
													{
														ctor: '::',
														_0: {ctor: '_Tuple2', _0: 'width', _1: '30%'},
														_1: {
															ctor: '::',
															_0: {ctor: '_Tuple2', _0: 'float', _1: 'left'},
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class('ml-sm-3 my-3'),
													_1: {ctor: '[]'}
												}
											},
											_rundis$elm_bootstrap$Bootstrap_Form_InputGroup$small(
												_rundis$elm_bootstrap$Bootstrap_Form_InputGroup$config(
													_rundis$elm_bootstrap$Bootstrap_Form_InputGroup$text(
														{
															ctor: '::',
															_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$id('roleSetName'),
															_1: {
																ctor: '::',
																_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$attrs(
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html_Attributes$placeholder('Enter Permission  Set Name'),
																		_1: {
																			ctor: '::',
																			_0: A2(
																				_elm_lang$html$Html_Attributes$map,
																				A2(_mpizenberg$elm_debounce$Control_Debounce$trailing, _user$project$Page_Administration_Security$Debounce, 1 * _elm_lang$core$Time$second),
																				_elm_lang$html$Html_Events$onInput(
																					_user$project$Page_Administration_Security$SearchRoleSet(role.name))),
																			_1: {ctor: '[]'}
																		}
																	}),
																_1: {ctor: '[]'}
															}
														}))))),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Accordion$listGroup(
							A2(
								_elm_lang$core$List$map,
								function (aMatch) {
									return A2(
										_rundis$elm_bootstrap$Bootstrap_ListGroup$li,
										{
											ctor: '::',
											_0: _rundis$elm_bootstrap$Bootstrap_ListGroup$success,
											_1: {
												ctor: '::',
												_0: _rundis$elm_bootstrap$Bootstrap_ListGroup$attrs(
													{
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$class('ml-sm-3 my-3'),
														_1: {
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$style(
																{
																	ctor: '::',
																	_0: {ctor: '_Tuple2', _0: 'float', _1: 'left'},
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {ctor: '[]'}
											}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text(aMatch),
											_1: {
												ctor: '::',
												_0: A2(
													_rundis$elm_bootstrap$Bootstrap_Button$linkButton,
													{
														ctor: '::',
														_0: _rundis$elm_bootstrap$Bootstrap_Button$primary,
														_1: {
															ctor: '::',
															_0: _rundis$elm_bootstrap$Bootstrap_Button$attrs(
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$style(
																		{
																			ctor: '::',
																			_0: {ctor: '_Tuple2', _0: 'width', _1: '10%'},
																			_1: {
																				ctor: '::',
																				_0: {ctor: '_Tuple2', _0: 'float', _1: 'right'},
																				_1: {ctor: '[]'}
																			}
																		}),
																	_1: {
																		ctor: '::',
																		_0: _elm_lang$html$Html_Attributes$class('ml-sm-3 my-3'),
																		_1: {
																			ctor: '::',
																			_0: _elm_lang$html$Html_Events$onClick(
																				A2(_user$project$Page_Administration_Security$AddSetToRole, aMatch, role.name)),
																			_1: {ctor: '[]'}
																		}
																	}
																}),
															_1: {ctor: '[]'}
														}
													},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('Add'),
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}
										});
								},
								A3(_user$project$Page_Administration_Security$permSetMatches, role, appPermSets, searchRoleSetName))),
						_1: {
							ctor: '::',
							_0: A2(
								_rundis$elm_bootstrap$Bootstrap_Accordion$block,
								{
									ctor: '::',
									_0: _rundis$elm_bootstrap$Bootstrap_Card$blockAlign(_rundis$elm_bootstrap$Bootstrap_Text$alignXsLeft),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_rundis$elm_bootstrap$Bootstrap_Card$blockQuote,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: A3(_user$project$Page_Administration_Security$rolePermSetsView, role.name, fullPermissionBitSets, legitSets),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}
			});
	});
var _user$project$Page_Administration_Security$rolesAccordion = F3(
	function (roles, appPermSets, searchRoleSetName) {
		return function (aRole) {
			return _elm_lang$core$List$isEmpty(roles) ? A2(_user$project$Page_Administration_Security$errorCard, 'Application Roles', 'No Roles defined for this Application ') : A2(
				_elm_lang$core$List$map,
				A2(_user$project$Page_Administration_Security$roleCard, appPermSets.permissionSets, searchRoleSetName),
				aRole);
		}(roles);
	});
var _user$project$Page_Administration_Security$showRoles = F4(
	function (roleFilter, appRoles, appPermissionSets, searchRoleSetName) {
		var filter = _elm_lang$core$List$filter(
			function (role) {
				return _elm_lang$core$String$isEmpty(roleFilter) || A2(
					_elm_lang$core$String$contains,
					_elm_lang$core$String$toUpper(roleFilter),
					_elm_lang$core$String$toUpper(role.name));
			});
		var _p24 = appRoles;
		switch (_p24.ctor) {
			case 'NotAsked':
				return A2(_user$project$Page_Administration_Security$errorCard, roleFilter, 'Initialising Roles');
			case 'Loading':
				return A2(_user$project$Page_Administration_Security$errorCard, roleFilter, 'Loading Roles ...');
			case 'Failure':
				return A2(
					_user$project$Page_Administration_Security$errorCard,
					roleFilter,
					_elm_lang$core$Basics$toString(_p24._0));
			default:
				var _p25 = appPermissionSets;
				switch (_p25.ctor) {
					case 'NotAsked':
						return A2(_user$project$Page_Administration_Security$errorCard, roleFilter, 'Initialising Permission Sets');
					case 'Loading':
						return A2(_user$project$Page_Administration_Security$errorCard, roleFilter, 'Loading Permission Sets ...');
					case 'Failure':
						return A2(
							_user$project$Page_Administration_Security$errorCard,
							roleFilter,
							A2(
								_elm_lang$core$Basics_ops['++'],
								'Error Loading Permission Sets: ',
								_elm_lang$core$Basics$toString(_p25._0)));
					default:
						var _p26 = filter(_p24._0);
						if (_p26.ctor === '[]') {
							return A2(_user$project$Page_Administration_Security$errorCard, roleFilter, 'No Matching Roles Found ');
						} else {
							return A3(_user$project$Page_Administration_Security$rolesAccordion, _p26, _p25._0, searchRoleSetName);
						}
				}
		}
	});
var _user$project$Page_Administration_Security$view = function (model) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Grid$containerFluid,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('mainContainer'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_rundis$elm_bootstrap$Bootstrap_Grid$row,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_rundis$elm_bootstrap$Bootstrap_Grid$col,
						{
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs12,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(_krisajenkins$elm_exts$Exts_Html$nbsp),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_rundis$elm_bootstrap$Bootstrap_Grid$row,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_rundis$elm_bootstrap$Bootstrap_Grid$col,
							{
								ctor: '::',
								_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs12,
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$h5,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Administration / Security'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_rundis$elm_bootstrap$Bootstrap_Grid$row,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: A2(
								_rundis$elm_bootstrap$Bootstrap_Grid$col,
								{
									ctor: '::',
									_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs12,
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(_krisajenkins$elm_exts$Exts_Html$nbsp),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_rundis$elm_bootstrap$Bootstrap_Grid$row,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(
									_rundis$elm_bootstrap$Bootstrap_Grid$col,
									{
										ctor: '::',
										_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs12,
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: A2(
											_rundis$elm_bootstrap$Bootstrap_Tab$view,
											model.tabState,
											A2(
												_rundis$elm_bootstrap$Bootstrap_Tab$items,
												{
													ctor: '::',
													_0: _rundis$elm_bootstrap$Bootstrap_Tab$item(
														{
															id: 'appRoles',
															link: A2(
																_rundis$elm_bootstrap$Bootstrap_Tab$link,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html$text('Application Roles'),
																	_1: {ctor: '[]'}
																}),
															pane: A2(
																_rundis$elm_bootstrap$Bootstrap_Tab$pane,
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$class('mt-3'),
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: A2(
																		_rundis$elm_bootstrap$Bootstrap_Grid$containerFluid,
																		{ctor: '[]'},
																		{
																			ctor: '::',
																			_0: A2(
																				_rundis$elm_bootstrap$Bootstrap_Grid$row,
																				{ctor: '[]'},
																				{
																					ctor: '::',
																					_0: A2(
																						_rundis$elm_bootstrap$Bootstrap_Grid$col,
																						{
																							ctor: '::',
																							_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs12,
																							_1: {ctor: '[]'}
																						},
																						{
																							ctor: '::',
																							_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$text(
																								{
																									ctor: '::',
																									_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$small,
																									_1: {
																										ctor: '::',
																										_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$attrs(
																											{
																												ctor: '::',
																												_0: A2(
																													_elm_lang$html$Html_Attributes$map,
																													A2(_mpizenberg$elm_debounce$Control_Debounce$trailing, _user$project$Page_Administration_Security$Debounce, 1 * _elm_lang$core$Time$second),
																													_elm_lang$html$Html_Events$onInput(_user$project$Page_Administration_Security$SearchRoleName)),
																												_1: {
																													ctor: '::',
																													_0: _elm_lang$html$Html_Attributes$class('ml-sm-2 my-2'),
																													_1: {
																														ctor: '::',
																														_0: _elm_lang$html$Html_Attributes$style(
																															{
																																ctor: '::',
																																_0: {ctor: '_Tuple2', _0: 'width', _1: '40%'},
																																_1: {
																																	ctor: '::',
																																	_0: {ctor: '_Tuple2', _0: 'float', _1: 'left'},
																																	_1: {ctor: '[]'}
																																}
																															}),
																														_1: {
																															ctor: '::',
																															_0: _elm_lang$html$Html_Attributes$placeholder('Role Name'),
																															_1: {ctor: '[]'}
																														}
																													}
																												}
																											}),
																										_1: {ctor: '[]'}
																									}
																								}),
																							_1: {
																								ctor: '::',
																								_0: A2(
																									_rundis$elm_bootstrap$Bootstrap_Button$linkButton,
																									{
																										ctor: '::',
																										_0: _rundis$elm_bootstrap$Bootstrap_Button$small,
																										_1: {
																											ctor: '::',
																											_0: _rundis$elm_bootstrap$Bootstrap_Button$primary,
																											_1: {
																												ctor: '::',
																												_0: _rundis$elm_bootstrap$Bootstrap_Button$attrs(
																													{
																														ctor: '::',
																														_0: _elm_lang$html$Html_Attributes$style(
																															{
																																ctor: '::',
																																_0: {ctor: '_Tuple2', _0: 'float', _1: 'left'},
																																_1: {ctor: '[]'}
																															}),
																														_1: {
																															ctor: '::',
																															_0: _elm_lang$html$Html_Attributes$class('ml-sm-2 my-2'),
																															_1: {
																																ctor: '::',
																																_0: _elm_lang$html$Html_Events$onClick(
																																	_user$project$Page_Administration_Security$AddRole(model.searchRoleName)),
																																_1: {ctor: '[]'}
																															}
																														}
																													}),
																												_1: {ctor: '[]'}
																											}
																										}
																									},
																									{
																										ctor: '::',
																										_0: _elm_lang$html$Html$text('Add Role'),
																										_1: {
																											ctor: '::',
																											_0: A2(_user$project$Common_Icons$basicIcon, _Fresheyeball$elm_font_awesome$FontAwesome_Web$plus, false),
																											_1: {ctor: '[]'}
																										}
																									}),
																								_1: {
																									ctor: '::',
																									_0: A2(
																										_rundis$elm_bootstrap$Bootstrap_Button$linkButton,
																										{
																											ctor: '::',
																											_0: _rundis$elm_bootstrap$Bootstrap_Button$small,
																											_1: {
																												ctor: '::',
																												_0: _rundis$elm_bootstrap$Bootstrap_Button$primary,
																												_1: {
																													ctor: '::',
																													_0: _rundis$elm_bootstrap$Bootstrap_Button$disabled(!model.saveAppRolesEnabled),
																													_1: {
																														ctor: '::',
																														_0: _rundis$elm_bootstrap$Bootstrap_Button$attrs(
																															{
																																ctor: '::',
																																_0: _elm_lang$html$Html_Attributes$class('ml-sm-2 my-2'),
																																_1: {
																																	ctor: '::',
																																	_0: _elm_lang$html$Html_Attributes$style(
																																		{
																																			ctor: '::',
																																			_0: {ctor: '_Tuple2', _0: 'float', _1: 'right'},
																																			_1: {ctor: '[]'}
																																		}),
																																	_1: {
																																		ctor: '::',
																																		_0: _elm_lang$html$Html_Events$onClick(_user$project$Page_Administration_Security$SaveRoles),
																																		_1: {ctor: '[]'}
																																	}
																																}
																															}),
																														_1: {ctor: '[]'}
																													}
																												}
																											}
																										},
																										{
																											ctor: '::',
																											_0: _elm_lang$html$Html$text('Save Roles'),
																											_1: {
																												ctor: '::',
																												_0: A2(_user$project$Common_Icons$basicIcon, _Fresheyeball$elm_font_awesome$FontAwesome_Web$check, false),
																												_1: {ctor: '[]'}
																											}
																										}),
																									_1: {ctor: '[]'}
																								}
																							}
																						}),
																					_1: {ctor: '[]'}
																				}),
																			_1: {
																				ctor: '::',
																				_0: A2(
																					_rundis$elm_bootstrap$Bootstrap_Grid$row,
																					{ctor: '[]'},
																					{
																						ctor: '::',
																						_0: A2(
																							_rundis$elm_bootstrap$Bootstrap_Grid$col,
																							{ctor: '[]'},
																							{
																								ctor: '::',
																								_0: A2(
																									_rundis$elm_bootstrap$Bootstrap_Accordion$view,
																									model.accordionState,
																									A2(
																										_rundis$elm_bootstrap$Bootstrap_Accordion$cards,
																										A4(_user$project$Page_Administration_Security$showRoles, model.searchRoleName, model.appRoles, model.appPermissionSets, model.searchRoleSetName),
																										_rundis$elm_bootstrap$Bootstrap_Accordion$withAnimation(
																											_rundis$elm_bootstrap$Bootstrap_Accordion$config(_user$project$Page_Administration_Security$AccordionMsg)))),
																								_1: {ctor: '[]'}
																							}),
																						_1: {ctor: '[]'}
																					}),
																				_1: {ctor: '[]'}
																			}
																		}),
																	_1: {ctor: '[]'}
																})
														}),
													_1: {
														ctor: '::',
														_0: _rundis$elm_bootstrap$Bootstrap_Tab$item(
															{
																id: 'appPerms',
																link: A2(
																	_rundis$elm_bootstrap$Bootstrap_Tab$link,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html$text('Application Permission Sets'),
																		_1: {ctor: '[]'}
																	}),
																pane: A2(
																	_rundis$elm_bootstrap$Bootstrap_Tab$pane,
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html_Attributes$class('mt-3'),
																		_1: {ctor: '[]'}
																	},
																	{
																		ctor: '::',
																		_0: A2(
																			_rundis$elm_bootstrap$Bootstrap_Grid$containerFluid,
																			{ctor: '[]'},
																			{
																				ctor: '::',
																				_0: A2(
																					_rundis$elm_bootstrap$Bootstrap_Grid$row,
																					{ctor: '[]'},
																					{
																						ctor: '::',
																						_0: A2(
																							_rundis$elm_bootstrap$Bootstrap_Grid$col,
																							{
																								ctor: '::',
																								_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs12,
																								_1: {ctor: '[]'}
																							},
																							{
																								ctor: '::',
																								_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$text(
																									{
																										ctor: '::',
																										_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$small,
																										_1: {
																											ctor: '::',
																											_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$attrs(
																												{
																													ctor: '::',
																													_0: A2(
																														_elm_lang$html$Html_Attributes$map,
																														A2(_mpizenberg$elm_debounce$Control_Debounce$trailing, _user$project$Page_Administration_Security$Debounce, 1 * _elm_lang$core$Time$second),
																														_elm_lang$html$Html_Events$onInput(_user$project$Page_Administration_Security$SearchSetName)),
																													_1: {
																														ctor: '::',
																														_0: _elm_lang$html$Html_Attributes$class('ml-sm-2 my-2'),
																														_1: {
																															ctor: '::',
																															_0: _elm_lang$html$Html_Attributes$style(
																																{
																																	ctor: '::',
																																	_0: {ctor: '_Tuple2', _0: 'float', _1: 'left'},
																																	_1: {
																																		ctor: '::',
																																		_0: {ctor: '_Tuple2', _0: 'width', _1: '40%'},
																																		_1: {ctor: '[]'}
																																	}
																																}),
																															_1: {
																																ctor: '::',
																																_0: _elm_lang$html$Html_Attributes$placeholder('Permission Set Name'),
																																_1: {ctor: '[]'}
																															}
																														}
																													}
																												}),
																											_1: {ctor: '[]'}
																										}
																									}),
																								_1: {
																									ctor: '::',
																									_0: A2(
																										_rundis$elm_bootstrap$Bootstrap_Button$linkButton,
																										{
																											ctor: '::',
																											_0: _rundis$elm_bootstrap$Bootstrap_Button$small,
																											_1: {
																												ctor: '::',
																												_0: _rundis$elm_bootstrap$Bootstrap_Button$primary,
																												_1: {
																													ctor: '::',
																													_0: _rundis$elm_bootstrap$Bootstrap_Button$attrs(
																														{
																															ctor: '::',
																															_0: _elm_lang$html$Html_Attributes$class('ml-sm-2 my-2'),
																															_1: {
																																ctor: '::',
																																_0: _elm_lang$html$Html_Attributes$style(
																																	{
																																		ctor: '::',
																																		_0: {ctor: '_Tuple2', _0: 'float', _1: 'left'},
																																		_1: {ctor: '[]'}
																																	}),
																																_1: {
																																	ctor: '::',
																																	_0: _elm_lang$html$Html_Events$onClick(
																																		_user$project$Page_Administration_Security$AddAppPermSet(model.searchSetName)),
																																	_1: {ctor: '[]'}
																																}
																															}
																														}),
																													_1: {ctor: '[]'}
																												}
																											}
																										},
																										{
																											ctor: '::',
																											_0: _elm_lang$html$Html$text('Add Permission Set'),
																											_1: {
																												ctor: '::',
																												_0: A2(_user$project$Common_Icons$basicIcon, _Fresheyeball$elm_font_awesome$FontAwesome_Web$plus, false),
																												_1: {ctor: '[]'}
																											}
																										}),
																									_1: {
																										ctor: '::',
																										_0: A2(
																											_rundis$elm_bootstrap$Bootstrap_Button$linkButton,
																											{
																												ctor: '::',
																												_0: _rundis$elm_bootstrap$Bootstrap_Button$small,
																												_1: {
																													ctor: '::',
																													_0: _rundis$elm_bootstrap$Bootstrap_Button$primary,
																													_1: {
																														ctor: '::',
																														_0: _rundis$elm_bootstrap$Bootstrap_Button$disabled(!model.saveAppPermsEnabled),
																														_1: {
																															ctor: '::',
																															_0: _rundis$elm_bootstrap$Bootstrap_Button$attrs(
																																{
																																	ctor: '::',
																																	_0: _elm_lang$html$Html_Attributes$class('ml-sm-2 my-2'),
																																	_1: {
																																		ctor: '::',
																																		_0: _elm_lang$html$Html_Attributes$style(
																																			{
																																				ctor: '::',
																																				_0: {ctor: '_Tuple2', _0: 'float', _1: 'right'},
																																				_1: {ctor: '[]'}
																																			}),
																																		_1: {
																																			ctor: '::',
																																			_0: _elm_lang$html$Html_Events$onClick(_user$project$Page_Administration_Security$SaveAppPermSets),
																																			_1: {ctor: '[]'}
																																		}
																																	}
																																}),
																															_1: {ctor: '[]'}
																														}
																													}
																												}
																											},
																											{
																												ctor: '::',
																												_0: _elm_lang$html$Html$text('Save App Permission Sets'),
																												_1: {
																													ctor: '::',
																													_0: A2(_user$project$Common_Icons$basicIcon, _Fresheyeball$elm_font_awesome$FontAwesome_Web$check, false),
																													_1: {ctor: '[]'}
																												}
																											}),
																										_1: {ctor: '[]'}
																									}
																								}
																							}),
																						_1: {ctor: '[]'}
																					}),
																				_1: {
																					ctor: '::',
																					_0: A2(
																						_rundis$elm_bootstrap$Bootstrap_Grid$row,
																						{ctor: '[]'},
																						{
																							ctor: '::',
																							_0: A2(
																								_rundis$elm_bootstrap$Bootstrap_Grid$col,
																								{ctor: '[]'},
																								{
																									ctor: '::',
																									_0: A2(
																										_rundis$elm_bootstrap$Bootstrap_Accordion$view,
																										model.accordionState,
																										A2(
																											_rundis$elm_bootstrap$Bootstrap_Accordion$cards,
																											A3(_user$project$Page_Administration_Security$appPermSetsCards, model.searchSetName, model.searchBitNames, model.appPermissionSets),
																											_rundis$elm_bootstrap$Bootstrap_Accordion$withAnimation(
																												_rundis$elm_bootstrap$Bootstrap_Accordion$config(_user$project$Page_Administration_Security$AccordionMsg)))),
																									_1: {ctor: '[]'}
																								}),
																							_1: {ctor: '[]'}
																						}),
																					_1: {ctor: '[]'}
																				}
																			}),
																		_1: {ctor: '[]'}
																	})
															}),
														_1: {ctor: '[]'}
													}
												},
												_rundis$elm_bootstrap$Bootstrap_Tab$config(_user$project$Page_Administration_Security$TabMsg))),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Page_Administration_Security$NoOp = {ctor: 'NoOp'};
var _user$project$Page_Administration_Security$update = F2(
	function (msg, model) {
		var _p27 = msg;
		switch (_p27.ctor) {
			case 'Debounce':
				return A2(
					_user$project$Util_ops['=>'],
					A3(
						_mpizenberg$elm_debounce$Control$update,
						function (state) {
							return _elm_lang$core$Native_Utils.update(
								model,
								{debounce: state});
						},
						model.debounce,
						_p27._0),
					_user$project$Page_Administration_Security$NoOp);
			case 'SearchRoleSet':
				var _p30 = _p27._1;
				var _p29 = _p27._0;
				var newModel = function () {
					var _p28 = {
						ctor: '_Tuple2',
						_0: model.appRoles,
						_1: _elm_lang$core$String$isEmpty(
							_elm_lang$core$String$trim(_p30))
					};
					if (((_p28.ctor === '_Tuple2') && (_p28._0.ctor === 'Success')) && (_p28._1 === false)) {
						return _elm_lang$core$Native_Utils.update(
							model,
							{
								searchRoleSetName: A3(
									_elm_lang$core$Dict$insert,
									_p29,
									_elm_lang$core$Maybe$Just(
										_elm_lang$core$String$trim(_p30)),
									model.searchRoleSetName)
							});
					} else {
						return _elm_lang$core$Native_Utils.update(
							model,
							{
								searchRoleSetName: A3(_elm_lang$core$Dict$insert, _p29, _elm_lang$core$Maybe$Nothing, model.searchRoleSetName)
							});
					}
				}();
				return A2(
					_user$project$Util_ops['=>'],
					A2(_user$project$Util_ops['=>'], newModel, _elm_lang$core$Platform_Cmd$none),
					_user$project$Page_Administration_Security$NoOp);
			case 'AddSetToRole':
				var _p32 = _p27._0;
				var newModel = function () {
					var _p31 = {
						ctor: '_Tuple2',
						_0: model.appRoles,
						_1: _elm_lang$core$String$isEmpty(
							_elm_lang$core$String$trim(_p32))
					};
					if (((_p31.ctor === '_Tuple2') && (_p31._0.ctor === 'Success')) && (_p31._1 === false)) {
						return _elm_lang$core$Native_Utils.update(
							model,
							{
								saveAppRolesEnabled: true,
								appRoles: _krisajenkins$remotedata$RemoteData$succeed(
									A3(_user$project$Page_Administration_Security$addSetToRole, _p31._0._0, _p27._1, _p32))
							});
					} else {
						return model;
					}
				}();
				return A2(
					_user$project$Util_ops['=>'],
					A2(_user$project$Util_ops['=>'], newModel, _elm_lang$core$Platform_Cmd$none),
					_user$project$Page_Administration_Security$NoOp);
			case 'AddBit':
				var _p34 = _p27._2;
				var newModel = function () {
					var _p33 = {
						ctor: '_Tuple2',
						_0: model.appRoles,
						_1: _elm_lang$core$String$isEmpty(
							_elm_lang$core$String$trim(_p34))
					};
					if (((_p33.ctor === '_Tuple2') && (_p33._0.ctor === 'Success')) && (_p33._1 === false)) {
						return _elm_lang$core$Native_Utils.update(
							model,
							{
								saveAppRolesEnabled: true,
								appRoles: _krisajenkins$remotedata$RemoteData$succeed(
									A5(_user$project$Page_Administration_Security$flip, _p33._0._0, _p27._0, _p27._1, _p34, true))
							});
					} else {
						return model;
					}
				}();
				return A2(
					_user$project$Util_ops['=>'],
					A2(_user$project$Util_ops['=>'], newModel, _elm_lang$core$Platform_Cmd$none),
					_user$project$Page_Administration_Security$NoOp);
			case 'RemoveBit':
				var newModel = function () {
					var _p35 = model.appRoles;
					if (_p35.ctor === 'Success') {
						return _elm_lang$core$Native_Utils.update(
							model,
							{
								saveAppRolesEnabled: true,
								appRoles: _krisajenkins$remotedata$RemoteData$succeed(
									A5(_user$project$Page_Administration_Security$flip, _p35._0, _p27._0, _p27._1, _p27._2, false))
							});
					} else {
						return model;
					}
				}();
				return A2(
					_user$project$Util_ops['=>'],
					A2(_user$project$Util_ops['=>'], newModel, _elm_lang$core$Platform_Cmd$none),
					_user$project$Page_Administration_Security$NoOp);
			case 'DropSetFromRole':
				var newModel = function () {
					var _p36 = model.appRoles;
					if (_p36.ctor === 'Success') {
						var updatedRoles = A2(
							_elm_lang$core$List$map,
							function (role) {
								var _p37 = _elm_lang$core$Native_Utils.eq(role.name, _p27._0);
								if (_p37 === true) {
									return A2(_user$project$Page_Administration_Security$removeSetFromRole, _p27._1, role);
								} else {
									return role;
								}
							},
							_p36._0);
						return _elm_lang$core$Native_Utils.update(
							model,
							{
								saveAppRolesEnabled: true,
								appRoles: _krisajenkins$remotedata$RemoteData$succeed(updatedRoles)
							});
					} else {
						return model;
					}
				}();
				return A2(
					_user$project$Util_ops['=>'],
					A2(_user$project$Util_ops['=>'], newModel, _elm_lang$core$Platform_Cmd$none),
					_user$project$Page_Administration_Security$NoOp);
			case 'DeleteRole':
				var newModel = function () {
					var _p38 = model.appRoles;
					if (_p38.ctor === 'Success') {
						var _p39 = A2(
							_elm_lang$core$List$partition,
							function (role) {
								return _elm_lang$core$Native_Utils.eq(role.name, _p27._0);
							},
							_p38._0);
						var deletedAppRoles = _p39._0;
						var keptRoles = _p39._1;
						return _elm_lang$core$Native_Utils.update(
							model,
							{
								saveAppRolesEnabled: true,
								appRoles: _krisajenkins$remotedata$RemoteData$succeed(keptRoles),
								deletedRoles: A2(_elm_lang$core$Basics_ops['++'], deletedAppRoles, model.deletedRoles)
							});
					} else {
						return model;
					}
				}();
				return A2(
					_user$project$Util_ops['=>'],
					A2(_user$project$Util_ops['=>'], newModel, _elm_lang$core$Platform_Cmd$none),
					_user$project$Page_Administration_Security$NoOp);
			case 'SaveRoles':
				var _p40 = model.appRoles;
				if (_p40.ctor === 'Success') {
					var cmds = A2(
						_user$project$Common_Connection$push,
						A2(
							_elm_lang$core$Basics_ops['++'],
							'admin:',
							_user$project$Data_User$getUsername(model.user)),
						{
							ctor: '::',
							_0: {
								name: 'save_app_roles',
								payload: _elm_lang$core$Maybe$Just(
									_elm_lang$core$Json_Encode$object(
										{
											ctor: '::',
											_0: {
												ctor: '_Tuple2',
												_0: 'updated',
												_1: _elm_lang$core$Json_Encode$list(
													A2(
														_elm_lang$core$List$map,
														function (role) {
															return _user$project$Data_Security_ApplicationRoles$appRoleEncoder(role);
														},
														_p40._0))
											},
											_1: {
												ctor: '::',
												_0: {
													ctor: '_Tuple2',
													_0: 'deleted',
													_1: _elm_lang$core$Json_Encode$list(
														A2(
															_elm_lang$core$List$map,
															function (role) {
																return _user$project$Data_Security_ApplicationRoles$appRoleEncoder(role);
															},
															model.deletedRoles))
												},
												_1: {ctor: '[]'}
											}
										})),
								onOk: _elm_lang$core$Maybe$Just(
									function (response) {
										return _user$project$Page_Administration_Security$ReceiveAppRoles(response);
									}),
								onError: _elm_lang$core$Maybe$Nothing
							},
							_1: {ctor: '[]'}
						});
					return A2(
						_user$project$Util_ops['=>'],
						A2(
							_user$project$Util_ops['=>'],
							_elm_lang$core$Native_Utils.update(
								model,
								{
									deletedRoles: {ctor: '[]'},
									saveAppRolesEnabled: false,
									appRoles: _krisajenkins$remotedata$RemoteData$Loading
								}),
							_elm_lang$core$Platform_Cmd$batch(cmds)),
						_user$project$Page_Administration_Security$NoOp);
				} else {
					return A2(
						_user$project$Util_ops['=>'],
						A2(_user$project$Util_ops['=>'], model, _elm_lang$core$Platform_Cmd$none),
						_user$project$Page_Administration_Security$NoOp);
				}
			case 'SaveAppPermSets':
				var _p41 = model.appPermissionSets;
				if (_p41.ctor === 'Success') {
					var cmds = A2(
						_user$project$Common_Connection$push,
						A2(
							_elm_lang$core$Basics_ops['++'],
							'admin:',
							_user$project$Data_User$getUsername(model.user)),
						{
							ctor: '::',
							_0: {
								name: 'save_app_perm_sets',
								payload: _elm_lang$core$Maybe$Just(
									_user$project$Data_Security_ApplicationPermissions$appPermissionSetsEncoder(_p41._0)),
								onOk: _elm_lang$core$Maybe$Just(
									function (response) {
										return _user$project$Page_Administration_Security$ReceiveAppPermissionSets(response);
									}),
								onError: _elm_lang$core$Maybe$Nothing
							},
							_1: {ctor: '[]'}
						});
					return A2(
						_user$project$Util_ops['=>'],
						A2(
							_user$project$Util_ops['=>'],
							_elm_lang$core$Native_Utils.update(
								model,
								{saveAppPermsEnabled: false, appPermissionSets: _krisajenkins$remotedata$RemoteData$Loading}),
							_elm_lang$core$Platform_Cmd$batch(cmds)),
						_user$project$Page_Administration_Security$NoOp);
				} else {
					return A2(
						_user$project$Util_ops['=>'],
						A2(_user$project$Util_ops['=>'], model, _elm_lang$core$Platform_Cmd$none),
						_user$project$Page_Administration_Security$NoOp);
				}
			case 'RemoveAppPermSet':
				var newModel = function () {
					var _p42 = model.appPermissionSets;
					if (_p42.ctor === 'Success') {
						var _p43 = _p42._0;
						var updatedAppPermSet = _krisajenkins$remotedata$RemoteData$succeed(
							_elm_lang$core$Native_Utils.update(
								_p43,
								{
									permissionSets: A2(_elm_lang$core$Dict$remove, _p27._0, _p43.permissionSets)
								}));
						return _elm_lang$core$Native_Utils.update(
							model,
							{saveAppPermsEnabled: true, appPermissionSets: updatedAppPermSet});
					} else {
						return model;
					}
				}();
				return A2(
					_user$project$Util_ops['=>'],
					A2(_user$project$Util_ops['=>'], newModel, _elm_lang$core$Platform_Cmd$none),
					_user$project$Page_Administration_Security$NoOp);
			case 'RemoveAppPermBit':
				var _p46 = _p27._0;
				var newModel = function () {
					var _p44 = model.appPermissionSets;
					if (_p44.ctor === 'Success') {
						var _p45 = _p44._0;
						var newBits = A3(
							_elm_community$maybe_extra$Maybe_Extra$unwrap,
							{ctor: '[]'},
							function (bits) {
								return A2(
									_elm_lang$core$List$filter,
									function (aBit) {
										return !_elm_lang$core$Native_Utils.eq(aBit, _p27._1);
									},
									bits);
							},
							A2(_elm_lang$core$Dict$get, _p46, _p45.permissionSets));
						var updatedAppPermSet = _krisajenkins$remotedata$RemoteData$succeed(
							_elm_lang$core$Native_Utils.update(
								_p45,
								{
									permissionSets: A3(_elm_lang$core$Dict$insert, _p46, newBits, _p45.permissionSets)
								}));
						return _elm_lang$core$Native_Utils.update(
							model,
							{saveAppPermsEnabled: true, appPermissionSets: updatedAppPermSet});
					} else {
						return model;
					}
				}();
				return A2(
					_user$project$Util_ops['=>'],
					A2(_user$project$Util_ops['=>'], newModel, _elm_lang$core$Platform_Cmd$none),
					_user$project$Page_Administration_Security$NoOp);
			case 'AccordionMsg':
				return A2(
					_user$project$Util_ops['=>'],
					A2(
						_user$project$Util_ops['=>'],
						_elm_lang$core$Native_Utils.update(
							model,
							{accordionState: _p27._0}),
						_elm_lang$core$Platform_Cmd$none),
					_user$project$Page_Administration_Security$NoOp);
			case 'SearchSetName':
				return A2(
					_user$project$Util_ops['=>'],
					A2(
						_user$project$Util_ops['=>'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								searchSetName: _elm_lang$core$String$trim(_p27._0)
							}),
						_elm_lang$core$Platform_Cmd$none),
					_user$project$Page_Administration_Security$NoOp);
			case 'SearchBitName':
				var _p48 = _p27._1;
				var _p47 = _elm_lang$core$String$isEmpty(
					_elm_lang$core$String$trim(_p48));
				if (_p47 === false) {
					return A2(
						_user$project$Util_ops['=>'],
						A2(
							_user$project$Util_ops['=>'],
							_elm_lang$core$Native_Utils.update(
								model,
								{
									searchBitNames: A3(
										_elm_lang$core$Dict$insert,
										_p27._0,
										_elm_lang$core$Maybe$Just(
											_elm_lang$core$String$trim(_p48)),
										model.searchBitNames)
								}),
							_elm_lang$core$Platform_Cmd$none),
						_user$project$Page_Administration_Security$NoOp);
				} else {
					return A2(
						_user$project$Util_ops['=>'],
						A2(_user$project$Util_ops['=>'], model, _elm_lang$core$Platform_Cmd$none),
						_user$project$Page_Administration_Security$NoOp);
				}
			case 'AddAppPermSet':
				var _p51 = _p27._0;
				var newModel = function () {
					var _p49 = {
						ctor: '_Tuple2',
						_0: model.appPermissionSets,
						_1: _elm_lang$core$String$isEmpty(
							_elm_lang$core$String$trim(_p51))
					};
					if (((_p49.ctor === '_Tuple2') && (_p49._0.ctor === 'Success')) && (_p49._1 === false)) {
						var _p50 = _p49._0._0;
						var updatedAppPermSet = _krisajenkins$remotedata$RemoteData$succeed(
							_elm_lang$core$Native_Utils.update(
								_p50,
								{
									permissionSets: A3(
										_elm_lang$core$Dict$insert,
										_elm_lang$core$String$trim(_p51),
										{ctor: '[]'},
										_p50.permissionSets)
								}));
						return _elm_lang$core$Native_Utils.update(
							model,
							{saveAppPermsEnabled: true, appPermissionSets: updatedAppPermSet});
					} else {
						return model;
					}
				}();
				return A2(
					_user$project$Util_ops['=>'],
					A2(_user$project$Util_ops['=>'], newModel, _elm_lang$core$Platform_Cmd$none),
					_user$project$Page_Administration_Security$NoOp);
			case 'AddRole':
				var _p55 = _p27._0;
				var newModel = function () {
					var _p52 = {
						ctor: '_Tuple2',
						_0: model.appRoles,
						_1: _elm_lang$core$String$isEmpty(
							_elm_lang$core$String$trim(_p55))
					};
					if ((_p52._0.ctor === 'Success') && (_p52._1 === false)) {
						var _p54 = _p52._0._0;
						var roleNam = _elm_lang$core$String$trim(_p55);
						var updatedAppRoles = function () {
							var _p53 = A2(
								_elm_lang$core$List$filter,
								function (role) {
									return _elm_lang$core$Native_Utils.eq(role.name, roleNam);
								},
								_p54);
							if (_p53.ctor === '[]') {
								return A2(
									_elm_lang$core$Basics_ops['++'],
									_p54,
									{
										ctor: '::',
										_0: _user$project$Data_Security_ApplicationRoles$newWithName(roleNam),
										_1: {ctor: '[]'}
									});
							} else {
								return _p54;
							}
						}();
						return _elm_lang$core$Native_Utils.update(
							model,
							{
								saveAppRolesEnabled: true,
								appRoles: _krisajenkins$remotedata$RemoteData$succeed(updatedAppRoles)
							});
					} else {
						return model;
					}
				}();
				return A2(
					_user$project$Util_ops['=>'],
					A2(_user$project$Util_ops['=>'], newModel, _elm_lang$core$Platform_Cmd$none),
					_user$project$Page_Administration_Security$NoOp);
			case 'AddSetBit':
				var _p63 = _p27._0;
				var newModel = function () {
					var _p56 = {
						ctor: '_Tuple2',
						_0: model.appPermissionSets,
						_1: _elm_lang$core$String$isEmpty(
							_elm_lang$core$String$trim(_p63))
					};
					if (((_p56.ctor === '_Tuple2') && (_p56._0.ctor === 'Success')) && (_p56._1 === false)) {
						var _p62 = _p56._0._0;
						var setNam = _elm_lang$core$String$trim(_p63);
						var bits = A2(_elm_lang$core$Dict$get, setNam, _p62.permissionSets);
						var bitName = A2(_elm_lang$core$Dict$get, setNam, model.searchBitNames);
						var newBits = function () {
							var _p57 = {ctor: '_Tuple2', _0: bits, _1: bitName};
							if ((_p57._0.ctor === 'Just') && (_p57._1.ctor === 'Just')) {
								var _p61 = _p57._0._0;
								var _p58 = _p57._1._0;
								if (_p58.ctor === 'Just') {
									var _p60 = _p58._0;
									var _p59 = A2(_elm_lang$core$List$member, _p60, _p61);
									if (_p59 === true) {
										return _p61;
									} else {
										return A2(
											_elm_lang$core$List$append,
											_p61,
											{
												ctor: '::',
												_0: _p60,
												_1: {ctor: '[]'}
											});
									}
								} else {
									return _p61;
								}
							} else {
								return {ctor: '[]'};
							}
						}();
						var updatedAppPermSet = _krisajenkins$remotedata$RemoteData$succeed(
							_elm_lang$core$Native_Utils.update(
								_p62,
								{
									permissionSets: A3(_elm_lang$core$Dict$insert, setNam, newBits, _p62.permissionSets)
								}));
						return _elm_lang$core$Native_Utils.update(
							model,
							{saveAppPermsEnabled: true, appPermissionSets: updatedAppPermSet});
					} else {
						return model;
					}
				}();
				return A2(
					_user$project$Util_ops['=>'],
					A2(_user$project$Util_ops['=>'], newModel, _elm_lang$core$Platform_Cmd$none),
					_user$project$Page_Administration_Security$NoOp);
			case 'SearchRoleName':
				return A2(
					_user$project$Util_ops['=>'],
					A2(
						_user$project$Util_ops['=>'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								searchRoleName: _elm_lang$core$String$trim(_p27._0)
							}),
						_elm_lang$core$Platform_Cmd$none),
					_user$project$Page_Administration_Security$NoOp);
			case 'ReceiveAppPermissionSets':
				var _p64 = A2(_elm_lang$core$Json_Decode$decodeValue, _user$project$Data_Security_ApplicationPermissions$appPermissionSetsDecoder, _p27._0);
				if (_p64.ctor === 'Ok') {
					var _p65 = _p64._0;
					var newSearchBitNames = _elm_lang$core$Dict$fromList(
						A2(
							_elm_lang$core$List$map,
							function (setName) {
								return {ctor: '_Tuple2', _0: setName, _1: _elm_lang$core$Maybe$Nothing};
							},
							_elm_lang$core$Dict$keys(_p65.permissionSets)));
					return A2(
						_user$project$Util_ops['=>'],
						A2(
							_user$project$Util_ops['=>'],
							_elm_lang$core$Native_Utils.update(
								model,
								{
									appPermissionSets: _krisajenkins$remotedata$RemoteData$succeed(_p65),
									saveAppPermsEnabled: false,
									searchBitNames: newSearchBitNames
								}),
							_elm_lang$core$Platform_Cmd$none),
						_user$project$Page_Administration_Security$NoOp);
				} else {
					var _p66 = _p64._0;
					return A2(
						_user$project$Util_ops['=>'],
						A2(
							_user$project$Util_ops['=>'],
							_elm_lang$core$Native_Utils.update(
								model,
								{
									appPermissionSets: _krisajenkins$remotedata$RemoteData$Failure(
										{ctor: '_Tuple2', _0: _p66, _1: _p66}),
									saveAppPermsEnabled: false,
									searchBitNames: _elm_lang$core$Dict$empty
								}),
							_elm_lang$core$Platform_Cmd$none),
						_user$project$Page_Administration_Security$NoOp);
				}
			case 'ReceiveAppRoles':
				var _p67 = A2(_elm_lang$core$Json_Decode$decodeValue, _user$project$Data_Security_ApplicationRoles$decoder, _p27._0);
				if (_p67.ctor === 'Ok') {
					return A2(
						_user$project$Util_ops['=>'],
						A2(
							_user$project$Util_ops['=>'],
							_elm_lang$core$Native_Utils.update(
								model,
								{
									appRoles: _krisajenkins$remotedata$RemoteData$succeed(_p67._0)
								}),
							_elm_lang$core$Platform_Cmd$none),
						_user$project$Page_Administration_Security$NoOp);
				} else {
					var _p68 = _p67._0;
					return A2(
						_user$project$Util_ops['=>'],
						A2(
							_user$project$Util_ops['=>'],
							_elm_lang$core$Native_Utils.update(
								model,
								{
									appRoles: _krisajenkins$remotedata$RemoteData$Failure(
										{ctor: '_Tuple2', _0: _p68, _1: _p68})
								}),
							_elm_lang$core$Platform_Cmd$none),
						_user$project$Page_Administration_Security$NoOp);
				}
			case 'TabMsg':
				return A2(
					_user$project$Util_ops['=>'],
					A2(
						_user$project$Util_ops['=>'],
						_elm_lang$core$Native_Utils.update(
							model,
							{tabState: _p27._0}),
						_elm_lang$core$Platform_Cmd$none),
					_user$project$Page_Administration_Security$NoOp);
			default:
				return A2(
					_user$project$Util_ops['=>'],
					A2(_user$project$Util_ops['=>'], model, _elm_lang$core$Platform_Cmd$none),
					_user$project$Page_Administration_Security$NoOp);
		}
	});

var _user$project$Common_Form_Button$Data = F4(
	function (a, b, c, d) {
		return {label: a, icon: b, typeStyle: c, onClick: d};
	});

var _user$project$Common_Role$Danger = {ctor: 'Danger'};
var _user$project$Common_Role$Success = {ctor: 'Success'};
var _user$project$Common_Role$Warning = {ctor: 'Warning'};
var _user$project$Common_Role$Info = {ctor: 'Info'};

var _user$project$Common_Validation_Integer$max32BitInt = 2147483647;

var _user$project$Common_Validation_Pattern$any = function (_p0) {
	var _p1 = _p0;
	return A2(
		_elm_lang$core$Basics_ops['++'],
		'^[\\S\\s]{',
		A2(
			_elm_lang$core$Basics_ops['++'],
			_p1._0,
			A2(
				_elm_lang$core$Basics_ops['++'],
				',',
				A2(_elm_lang$core$Basics_ops['++'], _p1._1, '}$'))));
};
var _user$project$Common_Validation_Pattern$password = '^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$';
var _user$project$Common_Validation_Pattern$email = function (_p2) {
	var _p3 = _p2;
	return A2(
		_elm_lang$core$Basics_ops['++'],
		'^(?=.{',
		A2(
			_elm_lang$core$Basics_ops['++'],
			_p3._0,
			A2(
				_elm_lang$core$Basics_ops['++'],
				',',
				A2(_elm_lang$core$Basics_ops['++'], _p3._1, '}$)[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}'))));
};
var _user$project$Common_Validation_Pattern$mac = '(^(([A-Fa-f0-9]{2}[:]?){5}[A-Fa-f0-9]{2}[,]?)+$)';
var _user$project$Common_Validation_Pattern$zipCode = '(^\\d{5}(-\\d{4})?$)|(^[ABCEGHJKLMNPRSTVXY]{1}\\d{1}[A-Z]{1} *\\d{1}[A-Z]{1}\\d{1}$)';
var _user$project$Common_Validation_Pattern$date = '(([0-9]{2})([\\/]{1})([0-9]{2})([\\/]{1})([0-9]{2,4}))';
var _user$project$Common_Validation_Pattern$decimal = function (_p4) {
	var _p5 = _p4;
	return A2(
		_elm_lang$core$Basics_ops['++'],
		'(^[0-9\\.\\-]{',
		A2(
			_elm_lang$core$Basics_ops['++'],
			_p5._0,
			A2(
				_elm_lang$core$Basics_ops['++'],
				',',
				A2(_elm_lang$core$Basics_ops['++'], _p5._1, '}$)'))));
};
var _user$project$Common_Validation_Pattern$phone = function (_p6) {
	var _p7 = _p6;
	return A2(
		_elm_lang$core$Basics_ops['++'],
		'(^[0-9]{',
		A2(
			_elm_lang$core$Basics_ops['++'],
			_p7._0,
			A2(
				_elm_lang$core$Basics_ops['++'],
				',',
				A2(_elm_lang$core$Basics_ops['++'], _p7._1, '}$)'))));
};
var _user$project$Common_Validation_Pattern$number = function (_p8) {
	var _p9 = _p8;
	return A2(
		_elm_lang$core$Basics_ops['++'],
		'(^[0-9]{',
		A2(
			_elm_lang$core$Basics_ops['++'],
			_p9._0,
			A2(
				_elm_lang$core$Basics_ops['++'],
				',',
				A2(_elm_lang$core$Basics_ops['++'], _p9._1, '}$)'))));
};
var _user$project$Common_Validation_Pattern$ipv4Address = '^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$';
var _user$project$Common_Validation_Pattern$stringExtended = function (_p10) {
	var _p11 = _p10;
	return A2(
		_elm_lang$core$Basics_ops['++'],
		'(^[a-zA-Z0-9\\/\\&\\#\\ \\\'\\.\\+\\-\\?\\$\\(\\)\\<\\>\\@\\,\\!\\\"]{',
		A2(
			_elm_lang$core$Basics_ops['++'],
			_p11._0,
			A2(
				_elm_lang$core$Basics_ops['++'],
				',',
				A2(_elm_lang$core$Basics_ops['++'], _p11._1, '}$)'))));
};
var _user$project$Common_Validation_Pattern$stringBasic = function (_p12) {
	var _p13 = _p12;
	return A2(
		_elm_lang$core$Basics_ops['++'],
		'^[a-zA-Z0-9\\ ]{',
		A2(
			_elm_lang$core$Basics_ops['++'],
			_p13._0,
			A2(
				_elm_lang$core$Basics_ops['++'],
				',',
				A2(_elm_lang$core$Basics_ops['++'], _p13._1, '}$'))));
};

var _user$project$Common_Validation$matchPattern = F2(
	function (value, regex) {
		var matchCharacters = A3(
			_elm_lang$core$Regex$find,
			_elm_lang$core$Regex$AtMost(1),
			regex,
			value);
		return _elm_lang$core$List$isEmpty(matchCharacters) ? _elm_lang$core$Result$Err('Pattern doesn\'t match') : _elm_lang$core$Result$Ok(value);
	});
var _user$project$Common_Validation$validatePattern = F3(
	function (errorMessage, pattern, value) {
		return A2(
			_elm_lang$core$Result$mapError,
			function (_p0) {
				return errorMessage;
			},
			A2(
				_user$project$Common_Validation$matchPattern,
				value,
				_elm_lang$core$Regex$regex(pattern)));
	});
var _user$project$Common_Validation$patternBounds = F2(
	function (min, max) {
		return {
			ctor: '_Tuple2',
			_0: A2(
				_elm_lang$core$Maybe$withDefault,
				'0',
				A2(_elm_lang$core$Maybe$map, _elm_lang$core$Basics$toString, min)),
			_1: A2(
				_elm_lang$core$Maybe$withDefault,
				_elm_lang$core$Basics$toString(_user$project$Common_Validation_Integer$max32BitInt),
				A2(_elm_lang$core$Maybe$map, _elm_lang$core$Basics$toString, max))
		};
	});
var _user$project$Common_Validation$oneOfError = 'Please select an item from the list';
var _user$project$Common_Validation$passwordError = 'Password must contain at least 8 characters, one lowercase letter, one uppercase letter, and a number';
var _user$project$Common_Validation$selectAnOptionError = 'Please select an option';
var _user$project$Common_Validation$emailError = 'Field must contain a valid email address';
var _user$project$Common_Validation$requiredError = 'Value required';
var _user$project$Common_Validation$zipCodeError = 'Field must contain a valid zip code';
var _user$project$Common_Validation$macError = 'Field must contain a valid mac address';
var _user$project$Common_Validation$dateError = 'Field must contain a valid date format (ex: 06/21/1978)';
var _user$project$Common_Validation$decimalError = 'Field must contain a valid decimal value';
var _user$project$Common_Validation$phoneError = F2(
	function (min, max) {
		var _p1 = A2(_user$project$Common_Validation$patternBounds, min, max);
		var stringMin = _p1._0;
		var stringMax = _p1._1;
		return A2(
			_elm_lang$core$Basics_ops['++'],
			'Must contain only numbers and be between ',
			A2(
				_elm_lang$core$Basics_ops['++'],
				stringMin,
				A2(
					_elm_lang$core$Basics_ops['++'],
					' and ',
					A2(_elm_lang$core$Basics_ops['++'], stringMax, ' characters'))));
	});
var _user$project$Common_Validation$quantityError = F2(
	function (min, max) {
		var _p2 = {ctor: '_Tuple2', _0: min, _1: max};
		if (_p2._0.ctor === 'Just') {
			if (_p2._1.ctor === 'Just') {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					'Must contain only numbers and be between ',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(_p2._0._0),
						A2(
							_elm_lang$core$Basics_ops['++'],
							' and ',
							A2(
								_elm_lang$core$Basics_ops['++'],
								_elm_lang$core$Basics$toString(_p2._1._0),
								' characters'))));
			} else {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					'Must contain only numbers and have at least ',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(_p2._0._0),
						' characters'));
			}
		} else {
			if (_p2._1.ctor === 'Just') {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					'Must contain only numbers and have at most ',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(_p2._1._0),
						' characters'));
			} else {
				return 'Must contain only numbers';
			}
		}
	});
var _user$project$Common_Validation$ipv4Error = 'Must contain a valid IPv4 address';
var _user$project$Common_Validation$anyStringError = F2(
	function (min, max) {
		var _p3 = A2(_user$project$Common_Validation$patternBounds, min, max);
		var stringMin = _p3._0;
		var stringMax = _p3._1;
		var _p4 = {ctor: '_Tuple2', _0: min, _1: max};
		if (_p4._0.ctor === 'Just') {
			if (_p4._1.ctor === 'Just') {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					'Must be between ',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(_p4._0._0),
						A2(
							_elm_lang$core$Basics_ops['++'],
							' and ',
							A2(
								_elm_lang$core$Basics_ops['++'],
								_elm_lang$core$Basics$toString(_p4._1._0),
								' characters'))));
			} else {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					'Must be at least ',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(_p4._0._0),
						' characters'));
			}
		} else {
			if (_p4._1.ctor === 'Just') {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					'Must be at most ',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(_p4._1._0),
						' characters'));
			} else {
				return '';
			}
		}
	});
var _user$project$Common_Validation$extendedStringError = F2(
	function (min, max) {
		var _p5 = A2(_user$project$Common_Validation$patternBounds, min, max);
		var stringMin = _p5._0;
		var stringMax = _p5._1;
		var _p6 = {ctor: '_Tuple2', _0: min, _1: max};
		if (_p6._0.ctor === 'Just') {
			if (_p6._1.ctor === 'Just') {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					'Must be alphanumeric and between ',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(_p6._0._0),
						A2(
							_elm_lang$core$Basics_ops['++'],
							' and ',
							A2(
								_elm_lang$core$Basics_ops['++'],
								_elm_lang$core$Basics$toString(_p6._1._0),
								' characters'))));
			} else {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					'Must be alphanumeric and have at least ',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(_p6._0._0),
						' characters'));
			}
		} else {
			if (_p6._1.ctor === 'Just') {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					'Must be alphanumeric  and have at most ',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(_p6._1._0),
						' characters'));
			} else {
				return 'Must be alphanumeric ';
			}
		}
	});
var _user$project$Common_Validation$basicStringError = F2(
	function (min, max) {
		var _p7 = A2(_user$project$Common_Validation$patternBounds, min, max);
		var stringMin = _p7._0;
		var stringMax = _p7._1;
		var _p8 = {ctor: '_Tuple2', _0: min, _1: max};
		if (_p8._0.ctor === 'Just') {
			if (_p8._1.ctor === 'Just') {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					'Must be alphanumeric and between ',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(_p8._0._0),
						A2(
							_elm_lang$core$Basics_ops['++'],
							' and ',
							A2(
								_elm_lang$core$Basics_ops['++'],
								_elm_lang$core$Basics$toString(_p8._1._0),
								' characters'))));
			} else {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					'Must be alphanumeric and have at least ',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(_p8._0._0),
						' characters'));
			}
		} else {
			if (_p8._1.ctor === 'Just') {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					'Must be alphanumeric  and have at most ',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(_p8._1._0),
						' characters'));
			} else {
				return 'Must be alphanumeric ';
			}
		}
	});
var _user$project$Common_Validation$withBackup = F2(
	function (backup, value) {
		var _p9 = value;
		if (_p9.ctor === 'Invalid') {
			return _ericgj$elm_validation$Validation$Valid(backup);
		} else {
			return value;
		}
	});
var _user$project$Common_Validation$defaultSelectOptionId = 0;
var _user$project$Common_Validation$nonEmptySet = function (value) {
	return _elm_lang$core$Set$isEmpty(value) ? function (_p10) {
		return _elm_lang$core$Result$Err(_user$project$Common_Validation$selectAnOptionError);
	} : function (_p11) {
		return _elm_lang$core$Result$Ok(value);
	};
};
var _user$project$Common_Validation$required = function (value) {
	return _elm_lang$core$String$isEmpty(value) ? _elm_lang$core$Result$Err(_user$project$Common_Validation$requiredError) : _elm_lang$core$Result$Ok(value);
};
var _user$project$Common_Validation$oneOf = F2(
	function (options, value) {
		return A2(
			_elm_lang$core$List$any,
			function (_p12) {
				var _p13 = _p12;
				return _elm_lang$core$Native_Utils.eq(_p13.label, value);
			},
			options) ? _elm_lang$core$Result$Ok(value) : _elm_lang$core$Result$Err(_user$project$Common_Validation$oneOfError);
	});
var _user$project$Common_Validation$notDefaultOption = function (value) {
	return (!_elm_lang$core$Native_Utils.eq(
		value,
		_elm_lang$core$Basics$toString(_user$project$Common_Validation$defaultSelectOptionId))) ? _elm_lang$core$Result$Ok(value) : _elm_lang$core$Result$Err(_user$project$Common_Validation$selectAnOptionError);
};
var _user$project$Common_Validation$password = A2(_user$project$Common_Validation$validatePattern, _user$project$Common_Validation$passwordError, _user$project$Common_Validation_Pattern$password);
var _user$project$Common_Validation$email = F3(
	function (min, max, text) {
		var bounds = A2(_user$project$Common_Validation$patternBounds, min, max);
		return A3(
			_user$project$Common_Validation$validatePattern,
			_user$project$Common_Validation$emailError,
			_user$project$Common_Validation_Pattern$email(bounds),
			text);
	});
var _user$project$Common_Validation$zipCode = A2(_user$project$Common_Validation$validatePattern, _user$project$Common_Validation$zipCodeError, _user$project$Common_Validation_Pattern$zipCode);
var _user$project$Common_Validation$mac = A2(_user$project$Common_Validation$validatePattern, _user$project$Common_Validation$macError, _user$project$Common_Validation_Pattern$mac);
var _user$project$Common_Validation$date = A2(_user$project$Common_Validation$validatePattern, _user$project$Common_Validation$dateError, _user$project$Common_Validation_Pattern$date);
var _user$project$Common_Validation$decimal = F3(
	function (min, max, text) {
		var bounds = A2(_user$project$Common_Validation$patternBounds, min, max);
		return A2(
			_elm_lang$core$Result$andThen,
			_elm_lang$core$String$toFloat,
			A3(
				_user$project$Common_Validation$validatePattern,
				_user$project$Common_Validation$decimalError,
				_user$project$Common_Validation_Pattern$decimal(bounds),
				text));
	});
var _user$project$Common_Validation$phone = F3(
	function (min, max, text) {
		var errorMessage = A2(_user$project$Common_Validation$phoneError, min, max);
		var bounds = A2(_user$project$Common_Validation$patternBounds, min, max);
		return A3(
			_user$project$Common_Validation$validatePattern,
			errorMessage,
			_user$project$Common_Validation_Pattern$phone(bounds),
			text);
	});
var _user$project$Common_Validation$quantity = F3(
	function (min, max, text) {
		var errorMessage = A2(_user$project$Common_Validation$quantityError, min, max);
		var bounds = A2(_user$project$Common_Validation$patternBounds, min, max);
		return A2(
			_elm_lang$core$Result$andThen,
			_elm_lang$core$String$toInt,
			A3(
				_user$project$Common_Validation$validatePattern,
				errorMessage,
				_user$project$Common_Validation_Pattern$number(bounds),
				text));
	});
var _user$project$Common_Validation$ipv4Address = A2(_user$project$Common_Validation$validatePattern, _user$project$Common_Validation$ipv4Error, _user$project$Common_Validation_Pattern$ipv4Address);
var _user$project$Common_Validation$any = F3(
	function (min, max, text) {
		var errorMessage = A2(_user$project$Common_Validation$anyStringError, min, max);
		var bounds = A2(_user$project$Common_Validation$patternBounds, min, max);
		return A3(
			_user$project$Common_Validation$validatePattern,
			errorMessage,
			_user$project$Common_Validation_Pattern$any(bounds),
			text);
	});
var _user$project$Common_Validation$extendedString = F3(
	function (min, max, text) {
		var errorMessage = A2(_user$project$Common_Validation$extendedStringError, min, max);
		var bounds = A2(_user$project$Common_Validation$patternBounds, min, max);
		return A3(
			_user$project$Common_Validation$validatePattern,
			errorMessage,
			_user$project$Common_Validation_Pattern$stringExtended(bounds),
			text);
	});
var _user$project$Common_Validation$basicString = F3(
	function (min, max, text) {
		var errorMessage = A2(_user$project$Common_Validation$basicStringError, min, max);
		var bounds = A2(_user$project$Common_Validation$patternBounds, min, max);
		return A3(
			_user$project$Common_Validation$validatePattern,
			errorMessage,
			_user$project$Common_Validation_Pattern$stringBasic(bounds),
			text);
	});

var _user$project$Common_Form_Field$parseMinMax = function (field) {
	var fieldMax = function () {
		var _p0 = field.max;
		if (_p0.ctor === 'Nothing') {
			return '';
		} else {
			return _elm_lang$core$Basics$toString(_p0._0);
		}
	}();
	var fieldMin = function () {
		var _p1 = field.min;
		if (_p1.ctor === 'Nothing') {
			return '0';
		} else {
			return _elm_lang$core$Basics$toString(_p1._0);
		}
	}();
	return {ctor: '_Tuple2', _0: fieldMin, _1: fieldMax};
};
var _user$project$Common_Form_Field$updateOptions = F3(
	function (field, options, fs) {
		return A2(
			_elm_lang$core$List$map,
			function (f) {
				return _elm_lang$core$Native_Utils.eq(field, f.id) ? function (f) {
					return _elm_lang$core$Native_Utils.update(
						f,
						{
							options: _elm_lang$core$Maybe$Just(options)
						});
				}(f) : f;
			},
			fs);
	});
var _user$project$Common_Form_Field$valueFromSelected = function (field) {
	return A2(
		_elm_lang$core$Maybe$withDefault,
		field.value,
		A2(
			_elm_lang$core$Maybe$map,
			function (_) {
				return _.label;
			},
			A2(
				_elm_lang$core$Maybe$andThen,
				_krisajenkins$elm_exts$Exts_List$firstMatch(
					function (_p2) {
						var _p3 = _p2;
						return _elm_lang$core$Native_Utils.eq(_p3.id, field.value);
					}),
				field.options)));
};
var _user$project$Common_Form_Field$defaultSelectId = '-1';
var _user$project$Common_Form_Field$selectDefaultOption = function (field) {
	var _p4 = field.fieldType;
	if (_p4.ctor === 'SelectList') {
		return _elm_lang$core$Native_Utils.update(
			field,
			{value: _user$project$Common_Form_Field$defaultSelectId});
	} else {
		return field;
	}
};
var _user$project$Common_Form_Field$Data = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return function (o) {
															return function (p) {
																return function (q) {
																	return function (r) {
																		return function (s) {
																			return {dataType: a, id: b, fieldType: c, label: d, value: e, min: f, max: g, size: h, width: i, validation: j, onUpdate: k, options: l, optionsLoading: m, columnSizes: n, required: o, readOnly: p, disabled: q, keyedId: r, invalidMessage: s};
																		};
																	};
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _user$project$Common_Form_Field$ValidationStatus = F3(
	function (a, b, c) {
		return {isValid: a, message: b, role: c};
	});
var _user$project$Common_Form_Field$SelectOption = F3(
	function (a, b, c) {
		return {id: a, label: b, $default: c};
	});
var _user$project$Common_Form_Field$Password = {ctor: 'Password'};
var _user$project$Common_Form_Field$Email = {ctor: 'Email'};
var _user$project$Common_Form_Field$ZipCode = {ctor: 'ZipCode'};
var _user$project$Common_Form_Field$Mac = {ctor: 'Mac'};
var _user$project$Common_Form_Field$DateOnly = {ctor: 'DateOnly'};
var _user$project$Common_Form_Field$Decimal = {ctor: 'Decimal'};
var _user$project$Common_Form_Field$Phone = {ctor: 'Phone'};
var _user$project$Common_Form_Field$Number = {ctor: 'Number'};
var _user$project$Common_Form_Field$IPv4Address = {ctor: 'IPv4Address'};
var _user$project$Common_Form_Field$StringExtended = {ctor: 'StringExtended'};
var _user$project$Common_Form_Field$StringBasic = {ctor: 'StringBasic'};
var _user$project$Common_Form_Field$ControlGroup = F2(
	function (a, b) {
		return {ctor: 'ControlGroup', _0: a, _1: b};
	});
var _user$project$Common_Form_Field$Link = {ctor: 'Link'};
var _user$project$Common_Form_Field$Autocomplete = {ctor: 'Autocomplete'};
var _user$project$Common_Form_Field$Quantity = {ctor: 'Quantity'};
var _user$project$Common_Form_Field$Radio = {ctor: 'Radio'};
var _user$project$Common_Form_Field$SelectList = {ctor: 'SelectList'};
var _user$project$Common_Form_Field$Checkbox = {ctor: 'Checkbox'};
var _user$project$Common_Form_Field$ViewOnly = {ctor: 'ViewOnly'};
var _user$project$Common_Form_Field$viewOnly = function (field) {
	var value = function () {
		var _p5 = field.fieldType;
		if (_p5.ctor === 'SelectList') {
			return _user$project$Common_Form_Field$valueFromSelected(field);
		} else {
			return field.value;
		}
	}();
	return _elm_lang$core$Native_Utils.update(
		field,
		{fieldType: _user$project$Common_Form_Field$ViewOnly, value: value});
};
var _user$project$Common_Form_Field$TextArea = {ctor: 'TextArea'};
var _user$project$Common_Form_Field$Text = {ctor: 'Text'};
var _user$project$Common_Form_Field$Multiple = {ctor: 'Multiple'};
var _user$project$Common_Form_Field$Single = {ctor: 'Single'};
var _user$project$Common_Form_Field$NotValid = {ctor: 'NotValid'};
var _user$project$Common_Form_Field$Valid = {ctor: 'Valid'};
var _user$project$Common_Form_Field$Initial = {ctor: 'Initial'};
var _user$project$Common_Form_Field$validate = function (field) {
	var isDefaultSelection = _elm_lang$core$Native_Utils.eq(field.value, _user$project$Common_Form_Field$defaultSelectId);
	var fieldMinMax = _user$project$Common_Form_Field$parseMinMax(field);
	var _p6 = fieldMinMax;
	var fieldMin = _p6._0;
	var fieldMax = _p6._1;
	var intMin = _elm_lang$core$Result$toMaybe(
		_elm_lang$core$String$toInt(fieldMin));
	var intMax = _elm_lang$core$Result$toMaybe(
		_elm_lang$core$String$toInt(fieldMax));
	var validatedResult = function () {
		var _p7 = field.dataType;
		switch (_p7.ctor) {
			case 'StringBasic':
				return A3(_user$project$Common_Validation$basicString, intMin, intMax, field.value);
			case 'StringExtended':
				return A3(_user$project$Common_Validation$extendedString, intMin, intMax, field.value);
			case 'IPv4Address':
				return _user$project$Common_Validation$ipv4Address(field.value);
			case 'Number':
				return A2(
					_elm_lang$core$Result$map,
					_elm_lang$core$Basics$toString,
					A3(_user$project$Common_Validation$quantity, intMin, intMax, field.value));
			case 'Phone':
				return A3(_user$project$Common_Validation$phone, intMin, intMax, field.value);
			case 'Decimal':
				return A2(
					_elm_lang$core$Result$map,
					_elm_lang$core$Basics$toString,
					A3(
						_user$project$Common_Validation$decimal,
						_elm_lang$core$Result$toMaybe(
							_elm_lang$core$String$toFloat(fieldMin)),
						_elm_lang$core$Result$toMaybe(
							_elm_lang$core$String$toFloat(fieldMax)),
						field.value));
			case 'DateOnly':
				return _user$project$Common_Validation$date(field.value);
			case 'Mac':
				return _user$project$Common_Validation$mac(field.value);
			case 'ZipCode':
				return _user$project$Common_Validation$zipCode(field.value);
			case 'Email':
				return A3(_user$project$Common_Validation$email, intMin, intMax, field.value);
			default:
				return _user$project$Common_Validation$password(field.value);
		}
	}();
	var validatedResultWithCustomError = A2(
		_elm_lang$core$Result$mapError,
		function (e) {
			return A2(_elm_lang$core$Maybe$withDefault, e, field.invalidMessage);
		},
		validatedResult);
	var validationStatus = function () {
		if (_elm_lang$core$String$isEmpty(field.value) && (!field.required)) {
			return _user$project$Common_Form_Field$Valid;
		} else {
			var _p8 = validatedResultWithCustomError;
			if (_p8.ctor === 'Ok') {
				return _user$project$Common_Form_Field$Valid;
			} else {
				return _user$project$Common_Form_Field$NotValid;
			}
		}
	}();
	var updatedIsValid = function () {
		var _p9 = field.fieldType;
		if (_p9.ctor === 'SelectList') {
			var _p10 = {ctor: '_Tuple2', _0: isDefaultSelection, _1: field.required};
			if ((_p10.ctor === '_Tuple2') && (_p10._0 === true)) {
				if (_p10._1 === true) {
					return _user$project$Common_Form_Field$NotValid;
				} else {
					return _user$project$Common_Form_Field$Initial;
				}
			} else {
				return validationStatus;
			}
		} else {
			return validationStatus;
		}
	}();
	var invalidMessage = function () {
		var _p11 = validatedResult;
		if (_p11.ctor === 'Ok') {
			return '';
		} else {
			return _p11._0;
		}
	}();
	var _p12 = function () {
		var _p13 = updatedIsValid;
		switch (_p13.ctor) {
			case 'Initial':
				return {ctor: '_Tuple2', _0: _elm_lang$core$Maybe$Nothing, _1: _elm_lang$core$Maybe$Nothing};
			case 'Valid':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Maybe$Just(_user$project$Common_Role$Success),
					_1: _elm_lang$core$Maybe$Nothing
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Maybe$Just(_user$project$Common_Role$Danger),
					_1: _elm_lang$core$Maybe$Just(invalidMessage)
				};
		}
	}();
	var updatedRole = _p12._0;
	var updatedMessage = _p12._1;
	var _p14 = field.validation;
	var isValid = _p14.isValid;
	var message = _p14.message;
	var role = _p14.role;
	return _elm_lang$core$Native_Utils.update(
		field,
		{
			validation: {isValid: updatedIsValid, message: updatedMessage, role: updatedRole}
		});
};
var _user$project$Common_Form_Field$updateValue = F4(
	function (field, value, forceValue, fs) {
		return A2(
			_elm_lang$core$List$map,
			function (f) {
				var keyedId = forceValue ? (f.keyedId + 1) : f.keyedId;
				return _elm_lang$core$Native_Utils.eq(field, f.id) ? _user$project$Common_Form_Field$validate(
					function (f) {
						return _elm_lang$core$Native_Utils.update(
							f,
							{value: value, keyedId: keyedId});
					}(f)) : f;
			},
			fs);
	});
var _user$project$Common_Form_Field$update = F4(
	function (msg, fields, field, value) {
		var fn = function () {
			var _p15 = msg;
			switch (_p15.ctor) {
				case 'SetLoadingStatus':
					return _elm_lang$core$Basics$identity;
				case 'SetOptions':
					return A2(_user$project$Common_Form_Field$updateOptions, field, _p15._0);
				case 'SetDisplayAndValue':
					return A3(_user$project$Common_Form_Field$updateValue, field, value, true);
				default:
					return A3(_user$project$Common_Form_Field$updateValue, field, value, false);
			}
		}();
		return A2(_elm_lang$core$List$map, fn, fields);
	});
var _user$project$Common_Form_Field$Em = {ctor: 'Em'};
var _user$project$Common_Form_Field$Px = {ctor: 'Px'};
var _user$project$Common_Form_Field$Rem = {ctor: 'Rem'};
var _user$project$Common_Form_Field$SetLoadingStatus = {ctor: 'SetLoadingStatus'};
var _user$project$Common_Form_Field$GetValues = {ctor: 'GetValues'};
var _user$project$Common_Form_Field$SetOptions = function (a) {
	return {ctor: 'SetOptions', _0: a};
};
var _user$project$Common_Form_Field$SetDisplayAndValue = {ctor: 'SetDisplayAndValue'};
var _user$project$Common_Form_Field$SetValue = {ctor: 'SetValue'};

var _user$project$Common_Form$defaultInvalidMessage = 'There are problems with this form. Please resolve them and click \"Save\"';
var _user$project$Common_Form$getFieldValue = F2(
	function (id, form) {
		return A2(
			_elm_lang$core$Maybe$withDefault,
			'',
			A2(
				_elm_lang$core$Maybe$map,
				function (_) {
					return _.value;
				},
				_elm_lang$core$List$head(
					A2(
						_elm_lang$core$List$filter,
						function (field) {
							return _elm_lang$core$Native_Utils.eq(field.id, id);
						},
						form))));
	});
var _user$project$Common_Form$getFormFieldData = F2(
	function (form, ids) {
		var fieldList = A2(
			_elm_lang$core$List$map,
			function (f) {
				var field = _user$project$Common_Form_Field$validate(f);
				return {id: field.id, value: field.value, isValid: field.validation.isValid};
			},
			_elm_lang$core$List$concat(form.fields));
		return fieldList;
	});
var _user$project$Common_Form$buildWidthStyles = function (options) {
	var _p0 = options;
	if (_p0.ctor === 'Nothing') {
		return _elm_lang$core$Basics$identity;
	} else {
		return _elm_lang$core$Basics$identity;
	}
};
var _user$project$Common_Form$fieldDefaults = {padding: 5, width: 14, validIconWidth: 20};
var _user$project$Common_Form$toFieldWidth = function (size) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		_elm_lang$core$Basics$toString(((size * _user$project$Common_Form$fieldDefaults.width) + _user$project$Common_Form$fieldDefaults.padding) + _user$project$Common_Form$fieldDefaults.validIconWidth),
		'px');
};
var _user$project$Common_Form$alertIcon = function (role) {
	var _p1 = role;
	switch (_p1.ctor) {
		case 'Success':
			return _Fresheyeball$elm_font_awesome$FontAwesome_Web$check;
		case 'Warning':
			return _Fresheyeball$elm_font_awesome$FontAwesome_Web$exclamation_triangle;
		case 'Danger':
			return _Fresheyeball$elm_font_awesome$FontAwesome_Web$exclamation_triangle;
		default:
			return _Fresheyeball$elm_font_awesome$FontAwesome_Web$info_circle;
	}
};
var _user$project$Common_Form$alertType = function (role) {
	var _p2 = role;
	switch (_p2.ctor) {
		case 'Success':
			return _rundis$elm_bootstrap$Bootstrap_Alert$success;
		case 'Warning':
			return _rundis$elm_bootstrap$Bootstrap_Alert$warning;
		case 'Danger':
			return _rundis$elm_bootstrap$Bootstrap_Alert$danger;
		default:
			return _rundis$elm_bootstrap$Bootstrap_Alert$info;
	}
};
var _user$project$Common_Form$updateFields = F2(
	function (form, fields) {
		return _elm_lang$core$Native_Utils.update(
			form,
			{fields: fields});
	});
var _user$project$Common_Form$update = F2(
	function (form, fields) {
		return _elm_lang$core$Native_Utils.update(
			form,
			{fields: fields});
	});
var _user$project$Common_Form$buildSelectRole = function (role) {
	var _p3 = role;
	switch (_p3.ctor) {
		case 'Success':
			return {ctor: '[]'};
		case 'Warning':
			return {ctor: '[]'};
		case 'Danger':
			return {ctor: '[]'};
		default:
			return {ctor: '[]'};
	}
};
var _user$project$Common_Form$buildInputRole = function (role) {
	var _p4 = role;
	switch (_p4.ctor) {
		case 'Success':
			return {
				ctor: '::',
				_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$success,
				_1: {ctor: '[]'}
			};
		case 'Warning':
			return {
				ctor: '::',
				_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$warning,
				_1: {ctor: '[]'}
			};
		case 'Danger':
			return {
				ctor: '::',
				_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$danger,
				_1: {ctor: '[]'}
			};
		default:
			return {ctor: '[]'};
	}
};
var _user$project$Common_Form$buildGroupConfig = function (role) {
	var _p5 = role;
	switch (_p5.ctor) {
		case 'Success':
			return {
				ctor: '::',
				_0: _rundis$elm_bootstrap$Bootstrap_Form$groupSuccess,
				_1: {ctor: '[]'}
			};
		case 'Warning':
			return {
				ctor: '::',
				_0: _rundis$elm_bootstrap$Bootstrap_Form$groupWarning,
				_1: {ctor: '[]'}
			};
		case 'Danger':
			return {
				ctor: '::',
				_0: _rundis$elm_bootstrap$Bootstrap_Form$groupDanger,
				_1: {ctor: '[]'}
			};
		default:
			return {ctor: '[]'};
	}
};
var _user$project$Common_Form$textLabel = function (label) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Form$label,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(label),
			_1: {ctor: '[]'}
		});
};
var _user$project$Common_Form$updateIntTextValue = F2(
	function (update, value) {
		return A2(
			_elm_lang$core$Maybe$map,
			_elm_lang$core$Basics$toString,
			A2(
				_elm_lang$core$Maybe$map,
				update,
				_elm_lang$core$Result$toMaybe(
					_elm_lang$core$String$toInt(value))));
	});
var _user$project$Common_Form$validateNumericString = F4(
	function (validator, $default, empty, value) {
		return _elm_lang$core$String$isEmpty(value) ? empty : A2(
			_elm_lang$core$Result$withDefault,
			$default,
			A2(
				_elm_lang$core$Result$map,
				_elm_lang$core$Basics$toString,
				A2(
					_elm_lang$core$Result$map,
					validator,
					_elm_lang$core$String$toInt(value))));
	});
var _user$project$Common_Form$buildControlGroupField = F3(
	function (field, selection, buttonTitles) {
		var titles = _elm_lang$core$Set$toList(buttonTitles);
		var controlGroup = function () {
			var _p6 = selection;
			if (_p6.ctor === 'Single') {
				return A2(
					_rundis$elm_bootstrap$Bootstrap_ButtonGroup$radioButtonGroup,
					{
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_ButtonGroup$small,
						_1: {ctor: '[]'}
					},
					A2(
						_elm_lang$core$List$map,
						function (title) {
							return A3(
								_rundis$elm_bootstrap$Bootstrap_ButtonGroup$radioButton,
								_elm_lang$core$Native_Utils.eq(title, field.value),
								_user$project$Util$justValues(
									{
										ctor: '::',
										_0: _elm_lang$core$Maybe$Just(_rundis$elm_bootstrap$Bootstrap_Button$primary),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$core$Maybe$map,
												function (handler) {
													return _rundis$elm_bootstrap$Bootstrap_Button$onClick(
														handler(title));
												},
												field.onUpdate),
											_1: {ctor: '[]'}
										}
									}),
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(title),
									_1: {ctor: '[]'}
								});
						},
						titles));
			} else {
				return A2(
					_rundis$elm_bootstrap$Bootstrap_ButtonGroup$checkboxButtonGroup,
					{
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_ButtonGroup$small,
						_1: {ctor: '[]'}
					},
					A2(
						_elm_lang$core$List$map,
						function (title) {
							var delim = ',';
							var checked = A2(_elm_lang$core$String$contains, title, field.value);
							var newValue = checked ? (A2(_elm_lang$core$String$contains, delim, field.value) ? A2(
								_elm_lang$core$String$join,
								delim,
								A2(
									_elm_lang$core$List$filter,
									function (text) {
										return !_elm_lang$core$Native_Utils.eq(text, title);
									},
									A2(_elm_lang$core$String$split, delim, field.value))) : '') : (A2(_elm_lang$core$String$contains, delim, field.value) ? A2(
								_elm_lang$core$String$join,
								delim,
								A2(
									F2(
										function (x, y) {
											return {ctor: '::', _0: x, _1: y};
										}),
									title,
									A2(_elm_lang$core$String$split, delim, field.value))) : ((!_elm_lang$core$String$isEmpty(field.value)) ? A2(
								_elm_lang$core$String$join,
								delim,
								{
									ctor: '::',
									_0: field.value,
									_1: {
										ctor: '::',
										_0: title,
										_1: {ctor: '[]'}
									}
								}) : title));
							return A3(
								_rundis$elm_bootstrap$Bootstrap_ButtonGroup$checkboxButton,
								checked,
								_user$project$Util$justValues(
									{
										ctor: '::',
										_0: _elm_lang$core$Maybe$Just(_rundis$elm_bootstrap$Bootstrap_Button$primary),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$core$Maybe$map,
												function (handler) {
													return _rundis$elm_bootstrap$Bootstrap_Button$onClick(
														handler(newValue));
												},
												field.onUpdate),
											_1: {ctor: '[]'}
										}
									}),
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(title),
									_1: {ctor: '[]'}
								});
						},
						titles));
			}
		}();
		var labelElement = A2(
			_elm_lang$core$Maybe$map,
			function (value) {
				return A2(
					_rundis$elm_bootstrap$Bootstrap_Form$label,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(
							{
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'margin-right', _1: '0.5em'},
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(value),
						_1: {ctor: '[]'}
					});
			},
			field.label);
		var children = _user$project$Util$justValues(
			{
				ctor: '::',
				_0: labelElement,
				_1: {
					ctor: '::',
					_0: _elm_lang$core$Maybe$Just(controlGroup),
					_1: {ctor: '[]'}
				}
			});
		var groupConfig = A2(
			_elm_lang$core$Maybe$withDefault,
			{ctor: '[]'},
			A2(_elm_lang$core$Maybe$map, _user$project$Common_Form$buildGroupConfig, field.validation.role));
		return A2(_rundis$elm_bootstrap$Bootstrap_Form$group, groupConfig, children);
	});
var _user$project$Common_Form$buildLinkField = function (field) {
	var onClickHandler = A2(
		_elm_lang$core$Maybe$map,
		function (handler) {
			return _rundis$elm_bootstrap$Bootstrap_Button$onClick(
				handler(field.value));
		},
		field.onUpdate);
	var linkValue = A2(
		_rundis$elm_bootstrap$Bootstrap_Button$button,
		_user$project$Util$justValues(
			{
				ctor: '::',
				_0: _elm_lang$core$Maybe$Just(_rundis$elm_bootstrap$Bootstrap_Button$roleLink),
				_1: {
					ctor: '::',
					_0: onClickHandler,
					_1: {ctor: '[]'}
				}
			}),
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(field.value),
			_1: {ctor: '[]'}
		});
	var labelElement = A2(
		_elm_lang$core$Maybe$map,
		function (value) {
			return A2(
				_rundis$elm_bootstrap$Bootstrap_Form$label,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(value),
					_1: {ctor: '[]'}
				});
		},
		field.label);
	var children = _user$project$Util$justValues(
		{
			ctor: '::',
			_0: labelElement,
			_1: {
				ctor: '::',
				_0: _elm_lang$core$Maybe$Just(linkValue),
				_1: {ctor: '[]'}
			}
		});
	var groupConfig = A2(
		_elm_lang$core$Maybe$withDefault,
		{ctor: '[]'},
		A2(_elm_lang$core$Maybe$map, _user$project$Common_Form$buildGroupConfig, field.validation.role));
	return A2(_rundis$elm_bootstrap$Bootstrap_Form$group, groupConfig, children);
};
var _user$project$Common_Form$buildAutocompleteField = F2(
	function (menuView, field) {
		var maxAttr = function () {
			var _p7 = {ctor: '_Tuple2', _0: field.max, _1: field.dataType};
			if (_p7._0.ctor === 'Just') {
				return _elm_lang$core$Maybe$Just(
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$maxlength(_p7._0._0),
						_1: {ctor: '[]'}
					});
			} else {
				switch (_p7._1.ctor) {
					case 'IPv4Address':
						return _elm_lang$core$Maybe$Just(
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$maxlength(15),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$style(
										{
											ctor: '::',
											_0: {
												ctor: '_Tuple2',
												_0: 'width',
												_1: _user$project$Common_Form$toFieldWidth(15)
											},
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							});
					case 'DateOnly':
						return _elm_lang$core$Maybe$Just(
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$maxlength(10),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$style(
										{
											ctor: '::',
											_0: {
												ctor: '_Tuple2',
												_0: 'width',
												_1: _user$project$Common_Form$toFieldWidth(7)
											},
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							});
					case 'Mac':
						return _elm_lang$core$Maybe$Just(
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$maxlength(17),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$style(
										{
											ctor: '::',
											_0: {
												ctor: '_Tuple2',
												_0: 'width',
												_1: _user$project$Common_Form$toFieldWidth(10)
											},
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							});
					default:
						return _elm_lang$core$Maybe$Nothing;
				}
			}
		}();
		var onUpdateHandler = A2(_elm_lang$core$Maybe$map, _elm_lang$html$Html_Events$onInput, field.onUpdate);
		var fieldAttrs = A2(
			_elm_lang$core$Basics_ops['++'],
			_user$project$Util$justValues(
				{
					ctor: '::',
					_0: onUpdateHandler,
					_1: {
						ctor: '::',
						_0: _elm_lang$core$Maybe$Just(
							_elm_lang$html$Html_Attributes$autocomplete(false)),
						_1: {ctor: '[]'}
					}
				}),
			A2(
				_elm_lang$core$Maybe$withDefault,
				{ctor: '[]'},
				maxAttr));
		var labelElement = A2(
			_elm_lang$core$Maybe$map,
			function (value) {
				return A2(
					_rundis$elm_bootstrap$Bootstrap_Form$label,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(value),
						_1: {ctor: '[]'}
					});
			},
			field.label);
		var validationText = function () {
			var _p8 = {ctor: '_Tuple2', _0: field.validation.isValid, _1: field.validation.message};
			if (_p8._1.ctor === 'Nothing') {
				return _elm_lang$core$Maybe$Nothing;
			} else {
				if (_p8._0.ctor === 'Initial') {
					return _elm_lang$core$Maybe$Nothing;
				} else {
					return _elm_lang$core$Maybe$Just(
						A2(
							_rundis$elm_bootstrap$Bootstrap_Form$validationText,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(_p8._1._0),
								_1: {ctor: '[]'}
							}));
				}
			}
		}();
		var inputRoleConfig = A2(
			_elm_lang$core$Maybe$withDefault,
			{ctor: '[]'},
			A2(_elm_lang$core$Maybe$map, _user$project$Common_Form$buildInputRole, field.validation.role));
		var fieldElement = _rundis$elm_bootstrap$Bootstrap_Form_Input$text(
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$attrs(fieldAttrs),
					_1: {
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$small,
						_1: {
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$value(field.value),
							_1: {ctor: '[]'}
						}
					}
				},
				inputRoleConfig));
		var children = _user$project$Util$justValues(
			{
				ctor: '::',
				_0: labelElement,
				_1: {
					ctor: '::',
					_0: _elm_lang$core$Maybe$Just(fieldElement),
					_1: {
						ctor: '::',
						_0: _elm_lang$core$Maybe$Just(menuView),
						_1: {ctor: '[]'}
					}
				}
			});
		var groupConfig = A2(
			_elm_lang$core$Maybe$withDefault,
			{ctor: '[]'},
			A2(_elm_lang$core$Maybe$map, _user$project$Common_Form$buildGroupConfig, field.validation.role));
		return A2(_rundis$elm_bootstrap$Bootstrap_Form$group, groupConfig, children);
	});
var _user$project$Common_Form$buildQuantityField = function (field) {
	var clickHandler = A2(
		_elm_lang$core$Maybe$map2,
		F2(
			function (inputHandler, value) {
				return _rundis$elm_bootstrap$Bootstrap_Button$onClick(
					inputHandler(value));
			}),
		field.onUpdate);
	var maxValue = A2(_elm_lang$core$Maybe$withDefault, 100, field.max);
	var minValue = A2(_elm_lang$core$Maybe$withDefault, 0, field.min);
	var stringMinValue = _elm_lang$core$Basics$toString(minValue);
	var boundedUpdate = A2(_elm_lang$core$Basics$clamp, minValue, maxValue);
	var boundedValue = A4(_user$project$Common_Form$validateNumericString, boundedUpdate, stringMinValue, stringMinValue, field.value);
	var decrement = A2(
		_user$project$Common_Form$updateIntTextValue,
		function (value) {
			return value - 1;
		},
		boundedValue);
	var decrementClickHandler = clickHandler(decrement);
	var increment = A2(
		_user$project$Common_Form$updateIntTextValue,
		function (value) {
			return value + 1;
		},
		boundedValue);
	var incrementClickHandler = clickHandler(increment);
	var numericOnlyInputHandler = function (handler) {
		return _rundis$elm_bootstrap$Bootstrap_Form_Input$onInput(
			function (input) {
				return handler(
					A4(
						_user$project$Common_Form$validateNumericString,
						boundedUpdate,
						field.value,
						_elm_lang$core$Basics$toString(minValue),
						input));
			});
	};
	var onInputHandler = A2(_elm_lang$core$Maybe$map, numericOnlyInputHandler, field.onUpdate);
	var options = _user$project$Util$justValues(
		{
			ctor: '::',
			_0: _elm_lang$core$Maybe$Just(
				_rundis$elm_bootstrap$Bootstrap_Form_Input$value(boundedValue)),
			_1: {
				ctor: '::',
				_0: onInputHandler,
				_1: {ctor: '[]'}
			}
		});
	var inputGroup = _rundis$elm_bootstrap$Bootstrap_Form_InputGroup$view(
		A2(
			_rundis$elm_bootstrap$Bootstrap_Form_InputGroup$successors,
			{
				ctor: '::',
				_0: A2(
					_rundis$elm_bootstrap$Bootstrap_Form_InputGroup$button,
					_user$project$Util$justValues(
						{
							ctor: '::',
							_0: incrementClickHandler,
							_1: {ctor: '[]'}
						}),
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('+'),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			},
			A2(
				_rundis$elm_bootstrap$Bootstrap_Form_InputGroup$predecessors,
				{
					ctor: '::',
					_0: A2(
						_rundis$elm_bootstrap$Bootstrap_Form_InputGroup$button,
						_user$project$Util$justValues(
							{
								ctor: '::',
								_0: decrementClickHandler,
								_1: {ctor: '[]'}
							}),
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('-'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				},
				_rundis$elm_bootstrap$Bootstrap_Form_InputGroup$small(
					_rundis$elm_bootstrap$Bootstrap_Form_InputGroup$config(
						_rundis$elm_bootstrap$Bootstrap_Form_InputGroup$text(options))))));
	var labelElement = A2(_elm_lang$core$Maybe$map, _user$project$Common_Form$textLabel, field.label);
	var children = _user$project$Util$justValues(
		{
			ctor: '::',
			_0: labelElement,
			_1: {
				ctor: '::',
				_0: _elm_lang$core$Maybe$Just(inputGroup),
				_1: {ctor: '[]'}
			}
		});
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Form$group,
		{ctor: '[]'},
		children);
};
var _user$project$Common_Form$buildSelectField = function (field) {
	var attrs = {
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$value(field.value),
		_1: {ctor: '[]'}
	};
	var fieldLoader = field.optionsLoading ? A2(
		_elm_lang$html$Html$span,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('select-loader'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$i,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('fa fa-circle-o-notch fa-spin fa-1x fa-fw'),
					_1: {ctor: '[]'}
				},
				{ctor: '[]'}),
			_1: {ctor: '[]'}
		}) : _elm_lang$html$Html$text('');
	var fieldOptions = function () {
		var _p9 = field.options;
		if (_p9.ctor === 'Nothing') {
			return {ctor: '[]'};
		} else {
			return A2(
				_elm_lang$core$List$sortBy,
				function (_) {
					return _.label;
				},
				_p9._0);
		}
	}();
	var fieldOptionsWithDefault = {
		ctor: '::',
		_0: {id: _user$project$Common_Form_Field$defaultSelectId, label: 'Select an Option', $default: true},
		_1: fieldOptions
	};
	var buildStyle = function (currentList) {
		var _p10 = field.max;
		if (_p10.ctor === 'Nothing') {
			return currentList;
		} else {
			return currentList;
		}
	};
	var maxAttr = function (currentList) {
		var _p11 = {ctor: '_Tuple2', _0: field.max, _1: field.dataType};
		if (_p11._0.ctor === 'Just') {
			return _elm_lang$core$List$concat(
				{
					ctor: '::',
					_0: currentList,
					_1: {
						ctor: '::',
						_0: {
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Form_Select$attrs(
								buildStyle(
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$maxlength(_p11._0._0),
										_1: {ctor: '[]'}
									})),
							_1: {ctor: '[]'}
						},
						_1: {ctor: '[]'}
					}
				});
		} else {
			switch (_p11._1.ctor) {
				case 'IPv4Address':
					return _elm_lang$core$List$concat(
						{
							ctor: '::',
							_0: currentList,
							_1: {
								ctor: '::',
								_0: {
									ctor: '::',
									_0: _rundis$elm_bootstrap$Bootstrap_Form_Select$attrs(
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$maxlength(15),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$style(
													{
														ctor: '::',
														_0: {
															ctor: '_Tuple2',
															_0: 'width',
															_1: _user$project$Common_Form$toFieldWidth(15)
														},
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}
										}),
									_1: {ctor: '[]'}
								},
								_1: {ctor: '[]'}
							}
						});
				case 'DateOnly':
					return _elm_lang$core$List$concat(
						{
							ctor: '::',
							_0: currentList,
							_1: {
								ctor: '::',
								_0: {
									ctor: '::',
									_0: _rundis$elm_bootstrap$Bootstrap_Form_Select$attrs(
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$maxlength(10),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$style(
													{
														ctor: '::',
														_0: {
															ctor: '_Tuple2',
															_0: 'width',
															_1: _user$project$Common_Form$toFieldWidth(7)
														},
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}
										}),
									_1: {ctor: '[]'}
								},
								_1: {ctor: '[]'}
							}
						});
				case 'Mac':
					return _elm_lang$core$List$concat(
						{
							ctor: '::',
							_0: currentList,
							_1: {
								ctor: '::',
								_0: {
									ctor: '::',
									_0: _rundis$elm_bootstrap$Bootstrap_Form_Select$attrs(
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$maxlength(17),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$style(
													{
														ctor: '::',
														_0: {
															ctor: '_Tuple2',
															_0: 'width',
															_1: _user$project$Common_Form$toFieldWidth(10)
														},
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}
										}),
									_1: {ctor: '[]'}
								},
								_1: {ctor: '[]'}
							}
						});
				default:
					return currentList;
			}
		}
	};
	var onUpdateHandler = function (currentList) {
		var _p12 = field.onUpdate;
		if (_p12.ctor === 'Nothing') {
			return currentList;
		} else {
			return {
				ctor: '::',
				_0: _rundis$elm_bootstrap$Bootstrap_Form_Select$attrs(
					{
						ctor: '::',
						_0: _user$project$Util$onChange(_p12._0),
						_1: {ctor: '[]'}
					}),
				_1: currentList
			};
		}
	};
	var labelElement = function (currentList) {
		var _p13 = field.label;
		if (_p13.ctor === 'Nothing') {
			return currentList;
		} else {
			return _elm_lang$core$List$concat(
				{
					ctor: '::',
					_0: currentList,
					_1: {
						ctor: '::',
						_0: {
							ctor: '::',
							_0: A2(
								_rundis$elm_bootstrap$Bootstrap_Form$label,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(_p13._0),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						},
						_1: {ctor: '[]'}
					}
				});
		}
	};
	var validationText = function (currentList) {
		var _p14 = {ctor: '_Tuple2', _0: field.validation.isValid, _1: field.validation.message};
		if (_p14._1.ctor === 'Nothing') {
			return currentList;
		} else {
			if (_p14._0.ctor === 'Initial') {
				return currentList;
			} else {
				return _elm_lang$core$List$concat(
					{
						ctor: '::',
						_0: currentList,
						_1: {
							ctor: '::',
							_0: {
								ctor: '::',
								_0: A2(
									_rundis$elm_bootstrap$Bootstrap_Form$validationText,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text(_p14._1._0),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							},
							_1: {ctor: '[]'}
						}
					});
			}
		}
	};
	var _p15 = function () {
		var _p16 = field.validation.role;
		if (_p16.ctor === 'Nothing') {
			return A2(
				_user$project$Util_ops['=>'],
				{ctor: '[]'},
				{ctor: '[]'});
		} else {
			var _p17 = _p16._0;
			return A2(
				_user$project$Util_ops['=>'],
				_user$project$Common_Form$buildGroupConfig(_p17),
				_user$project$Common_Form$buildSelectRole(_p17));
		}
	}();
	var groupConfig = _p15._0;
	var selectRoleConfig = _p15._1;
	var fieldElement = function (currentList) {
		return _elm_lang$core$List$concat(
			{
				ctor: '::',
				_0: currentList,
				_1: {
					ctor: '::',
					_0: {
						ctor: '::',
						_0: A2(
							_rundis$elm_bootstrap$Bootstrap_Form_Select$select,
							_elm_lang$core$List$concat(
								{
									ctor: '::',
									_0: selectRoleConfig,
									_1: {
										ctor: '::',
										_0: maxAttr(
											onUpdateHandler(
												{
													ctor: '::',
													_0: _rundis$elm_bootstrap$Bootstrap_Form_Select$attrs(attrs),
													_1: {ctor: '[]'}
												})),
										_1: {
											ctor: '::',
											_0: {
												ctor: '::',
												_0: _rundis$elm_bootstrap$Bootstrap_Form_Select$small,
												_1: {ctor: '[]'}
											},
											_1: {ctor: '[]'}
										}
									}
								}),
							A2(
								_elm_lang$core$List$map,
								function (option) {
									return A2(
										_rundis$elm_bootstrap$Bootstrap_Form_Select$item,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$value(option.id),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$selected(
													_elm_lang$core$Native_Utils.eq(option.id, field.value)),
												_1: {ctor: '[]'}
											}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text(option.label),
											_1: {ctor: '[]'}
										});
								},
								fieldOptionsWithDefault)),
						_1: {
							ctor: '::',
							_0: fieldLoader,
							_1: {ctor: '[]'}
						}
					},
					_1: {ctor: '[]'}
				}
			});
	};
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Form$group,
		groupConfig,
		validationText(
			fieldElement(
				labelElement(
					{ctor: '[]'}))));
};
var _user$project$Common_Form$buildViewOnlyField = function (field) {
	var inputAttrs = _user$project$Util$justValues(
		{
			ctor: '::',
			_0: _elm_lang$core$Maybe$Just(
				_elm_lang$html$Html_Attributes$readonly(true)),
			_1: {ctor: '[]'}
		});
	var buildStyle = function (currentList) {
		var _p18 = field.max;
		if (_p18.ctor === 'Nothing') {
			return currentList;
		} else {
			return currentList;
		}
	};
	var maxAttr = function (currentList) {
		var _p19 = {ctor: '_Tuple2', _0: field.max, _1: field.dataType};
		if (_p19._0.ctor === 'Just') {
			return _elm_lang$core$List$concat(
				{
					ctor: '::',
					_0: currentList,
					_1: {
						ctor: '::',
						_0: {
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$attrs(
								buildStyle(
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$maxlength(_p19._0._0),
										_1: {ctor: '[]'}
									})),
							_1: {ctor: '[]'}
						},
						_1: {ctor: '[]'}
					}
				});
		} else {
			switch (_p19._1.ctor) {
				case 'IPv4Address':
					return _elm_lang$core$List$concat(
						{
							ctor: '::',
							_0: currentList,
							_1: {
								ctor: '::',
								_0: {
									ctor: '::',
									_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$attrs(
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$maxlength(15),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$style(
													{
														ctor: '::',
														_0: {
															ctor: '_Tuple2',
															_0: 'width',
															_1: _user$project$Common_Form$toFieldWidth(15)
														},
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}
										}),
									_1: {ctor: '[]'}
								},
								_1: {ctor: '[]'}
							}
						});
				case 'DateOnly':
					return _elm_lang$core$List$concat(
						{
							ctor: '::',
							_0: currentList,
							_1: {
								ctor: '::',
								_0: {
									ctor: '::',
									_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$attrs(
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$maxlength(10),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$style(
													{
														ctor: '::',
														_0: {
															ctor: '_Tuple2',
															_0: 'width',
															_1: _user$project$Common_Form$toFieldWidth(7)
														},
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}
										}),
									_1: {ctor: '[]'}
								},
								_1: {ctor: '[]'}
							}
						});
				case 'Mac':
					return _elm_lang$core$List$concat(
						{
							ctor: '::',
							_0: currentList,
							_1: {
								ctor: '::',
								_0: {
									ctor: '::',
									_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$attrs(
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$maxlength(17),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$style(
													{
														ctor: '::',
														_0: {
															ctor: '_Tuple2',
															_0: 'width',
															_1: _user$project$Common_Form$toFieldWidth(10)
														},
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}
										}),
									_1: {ctor: '[]'}
								},
								_1: {ctor: '[]'}
							}
						});
				default:
					return currentList;
			}
		}
	};
	var fieldElement = function (currentList) {
		return _elm_lang$core$List$concat(
			{
				ctor: '::',
				_0: currentList,
				_1: {
					ctor: '::',
					_0: {
						ctor: '::',
						_0: A3(
							_elm_lang$html$Html_Keyed$node,
							'div',
							{ctor: '[]'},
							{
								ctor: '::',
								_0: {
									ctor: '_Tuple2',
									_0: _elm_lang$core$Basics$toString(field.keyedId),
									_1: _rundis$elm_bootstrap$Bootstrap_Form_Input$text(
										_elm_lang$core$List$concat(
											{
												ctor: '::',
												_0: maxAttr(
													{
														ctor: '::',
														_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$attrs(inputAttrs),
														_1: {ctor: '[]'}
													}),
												_1: {
													ctor: '::',
													_0: {
														ctor: '::',
														_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$small,
														_1: {
															ctor: '::',
															_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$defaultValue(field.value),
															_1: {ctor: '[]'}
														}
													},
													_1: {ctor: '[]'}
												}
											}))
								},
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					},
					_1: {ctor: '[]'}
				}
			});
	};
	var labelElement = function (currentList) {
		var _p20 = field.label;
		if (_p20.ctor === 'Nothing') {
			return currentList;
		} else {
			return _elm_lang$core$List$concat(
				{
					ctor: '::',
					_0: currentList,
					_1: {
						ctor: '::',
						_0: {
							ctor: '::',
							_0: A2(
								_rundis$elm_bootstrap$Bootstrap_Form$label,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(_p20._0),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						},
						_1: {ctor: '[]'}
					}
				});
		}
	};
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Form$group,
		{ctor: '[]'},
		fieldElement(
			labelElement(
				{ctor: '[]'})));
};
var _user$project$Common_Form$buildTextField = function (field) {
	var inputType = function () {
		var _p21 = field.dataType;
		if (_p21.ctor === 'Password') {
			return _rundis$elm_bootstrap$Bootstrap_Form_Input$password;
		} else {
			return _rundis$elm_bootstrap$Bootstrap_Form_Input$text;
		}
	}();
	var buildStyle = function (currentList) {
		var _p22 = field.max;
		if (_p22.ctor === 'Nothing') {
			return currentList;
		} else {
			return currentList;
		}
	};
	var maxAttr = function (currentList) {
		var _p23 = {ctor: '_Tuple2', _0: field.max, _1: field.dataType};
		if (_p23._0.ctor === 'Just') {
			return _elm_lang$core$List$concat(
				{
					ctor: '::',
					_0: currentList,
					_1: {
						ctor: '::',
						_0: {
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$attrs(
								buildStyle(
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$maxlength(_p23._0._0),
										_1: {ctor: '[]'}
									})),
							_1: {ctor: '[]'}
						},
						_1: {ctor: '[]'}
					}
				});
		} else {
			switch (_p23._1.ctor) {
				case 'IPv4Address':
					return _elm_lang$core$List$concat(
						{
							ctor: '::',
							_0: currentList,
							_1: {
								ctor: '::',
								_0: {
									ctor: '::',
									_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$attrs(
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$maxlength(15),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$style(
													{
														ctor: '::',
														_0: {
															ctor: '_Tuple2',
															_0: 'width',
															_1: _user$project$Common_Form$toFieldWidth(15)
														},
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}
										}),
									_1: {ctor: '[]'}
								},
								_1: {ctor: '[]'}
							}
						});
				case 'DateOnly':
					return _elm_lang$core$List$concat(
						{
							ctor: '::',
							_0: currentList,
							_1: {
								ctor: '::',
								_0: {
									ctor: '::',
									_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$attrs(
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$maxlength(10),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$style(
													{
														ctor: '::',
														_0: {
															ctor: '_Tuple2',
															_0: 'width',
															_1: _user$project$Common_Form$toFieldWidth(7)
														},
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}
										}),
									_1: {ctor: '[]'}
								},
								_1: {ctor: '[]'}
							}
						});
				case 'Mac':
					return _elm_lang$core$List$concat(
						{
							ctor: '::',
							_0: currentList,
							_1: {
								ctor: '::',
								_0: {
									ctor: '::',
									_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$attrs(
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$maxlength(17),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$style(
													{
														ctor: '::',
														_0: {
															ctor: '_Tuple2',
															_0: 'width',
															_1: _user$project$Common_Form$toFieldWidth(10)
														},
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}
										}),
									_1: {ctor: '[]'}
								},
								_1: {ctor: '[]'}
							}
						});
				default:
					return currentList;
			}
		}
	};
	var onUpdateHandler = function (currentList) {
		var _p24 = {ctor: '_Tuple2', _0: field.onUpdate, _1: field.fieldType};
		if (_p24._0.ctor === 'Nothing') {
			return currentList;
		} else {
			return {
				ctor: '::',
				_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$attrs(
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onInput(_p24._0._0),
						_1: {ctor: '[]'}
					}),
				_1: currentList
			};
		}
	};
	var labelElement = function (currentList) {
		var _p25 = field.label;
		if (_p25.ctor === 'Nothing') {
			return currentList;
		} else {
			return _elm_lang$core$List$concat(
				{
					ctor: '::',
					_0: currentList,
					_1: {
						ctor: '::',
						_0: {
							ctor: '::',
							_0: A2(
								_rundis$elm_bootstrap$Bootstrap_Form$label,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(_p25._0),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						},
						_1: {ctor: '[]'}
					}
				});
		}
	};
	var validationText = function (currentList) {
		var _p26 = {ctor: '_Tuple2', _0: field.validation.isValid, _1: field.validation.message};
		if (_p26._1.ctor === 'Nothing') {
			return currentList;
		} else {
			if (_p26._0.ctor === 'Initial') {
				return currentList;
			} else {
				return _elm_lang$core$List$concat(
					{
						ctor: '::',
						_0: currentList,
						_1: {
							ctor: '::',
							_0: {
								ctor: '::',
								_0: A2(
									_rundis$elm_bootstrap$Bootstrap_Form$validationText,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text(_p26._1._0),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							},
							_1: {ctor: '[]'}
						}
					});
			}
		}
	};
	var _p27 = function () {
		var _p28 = field.validation.role;
		if (_p28.ctor === 'Nothing') {
			return A2(
				_user$project$Util_ops['=>'],
				{ctor: '[]'},
				{ctor: '[]'});
		} else {
			var _p29 = _p28._0;
			return A2(
				_user$project$Util_ops['=>'],
				_user$project$Common_Form$buildGroupConfig(_p29),
				_user$project$Common_Form$buildInputRole(_p29));
		}
	}();
	var groupConfig = _p27._0;
	var inputRoleConfig = _p27._1;
	var fieldElement = function (currentList) {
		return _elm_lang$core$List$concat(
			{
				ctor: '::',
				_0: currentList,
				_1: {
					ctor: '::',
					_0: {
						ctor: '::',
						_0: A3(
							_elm_lang$html$Html_Keyed$node,
							'div',
							{ctor: '[]'},
							{
								ctor: '::',
								_0: {
									ctor: '_Tuple2',
									_0: _elm_lang$core$Basics$toString(field.keyedId),
									_1: inputType(
										_elm_lang$core$List$concat(
											{
												ctor: '::',
												_0: inputRoleConfig,
												_1: {
													ctor: '::',
													_0: maxAttr(
														onUpdateHandler(
															{ctor: '[]'})),
													_1: {
														ctor: '::',
														_0: {
															ctor: '::',
															_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$small,
															_1: {
																ctor: '::',
																_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$defaultValue(field.value),
																_1: {ctor: '[]'}
															}
														},
														_1: {ctor: '[]'}
													}
												}
											}))
								},
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					},
					_1: {ctor: '[]'}
				}
			});
	};
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Form$group,
		groupConfig,
		validationText(
			fieldElement(
				labelElement(
					{ctor: '[]'}))));
};
var _user$project$Common_Form$buildButton = function (options) {
	var classes = 'ml-sm-2 my-2 pull-right';
	var attrs = function () {
		var _p30 = options.onClick;
		if (_p30.ctor === 'Nothing') {
			return {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class(classes),
				_1: {ctor: '[]'}
			};
		} else {
			return {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class(classes),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(_p30._0),
					_1: {ctor: '[]'}
				}
			};
		}
	}();
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Button$button,
		{
			ctor: '::',
			_0: options.typeStyle,
			_1: {
				ctor: '::',
				_0: _rundis$elm_bootstrap$Bootstrap_Button$small,
				_1: {
					ctor: '::',
					_0: _rundis$elm_bootstrap$Bootstrap_Button$attrs(attrs),
					_1: {ctor: '[]'}
				}
			}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(options.label),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html$text(_krisajenkins$elm_exts$Exts_Html$nbsp),
				_1: {
					ctor: '::',
					_0: A2(_user$project$Common_Icons$basicIcon, options.icon, false),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Common_Form$getViewMenu = F2(
	function (context, field) {
		return A2(
			_elm_lang$core$Maybe$withDefault,
			_elm_lang$html$Html$text(''),
			A2(
				_elm_lang$core$Maybe$map,
				_elm_lang$core$Tuple$second,
				A2(
					_krisajenkins$elm_exts$Exts_List$firstMatch,
					function (_p31) {
						var _p32 = _p31;
						return _elm_lang$core$Native_Utils.eq(_p32._0, field.id);
					},
					context.autocompleteMenus)));
	});
var _user$project$Common_Form$buildField = F2(
	function (context, field) {
		var _p33 = field.fieldType;
		switch (_p33.ctor) {
			case 'Text':
				return _user$project$Common_Form$buildTextField(field);
			case 'ViewOnly':
				return _user$project$Common_Form$buildViewOnlyField(field);
			case 'SelectList':
				return _user$project$Common_Form$buildSelectField(field);
			case 'Quantity':
				return _user$project$Common_Form$buildQuantityField(field);
			case 'Autocomplete':
				return A2(
					_user$project$Common_Form$buildAutocompleteField,
					A2(_user$project$Common_Form$getViewMenu, context, field),
					field);
			case 'Link':
				return _user$project$Common_Form$buildLinkField(field);
			case 'ControlGroup':
				return A3(_user$project$Common_Form$buildControlGroupField, field, _p33._0, _p33._1);
			default:
				return _user$project$Common_Form$buildTextField(field);
		}
	});
var _user$project$Common_Form$buildColumn = F2(
	function (context, field) {
		var colAttrs = function () {
			var _p34 = field.columnSizes;
			if (_p34.ctor === 'Nothing') {
				return {ctor: '[]'};
			} else {
				return {
					ctor: '::',
					_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$attrs(
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class(_p34._0),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				};
			}
		}();
		return A2(
			_rundis$elm_bootstrap$Bootstrap_Grid$col,
			colAttrs,
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$span,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(_user$project$Common_Form$buildField, context, field),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			});
	});
var _user$project$Common_Form$buildRow = F2(
	function (context, fields) {
		return A2(
			_rundis$elm_bootstrap$Bootstrap_Grid$row,
			{ctor: '[]'},
			A2(
				_elm_lang$core$List$map,
				_user$project$Common_Form$buildColumn(context),
				fields));
	});
var _user$project$Common_Form$buildFields = F2(
	function (context, form) {
		var fieldCount = _elm_lang$core$List$length(form.fields);
		var columns = function () {
			var _p35 = form.columnLayout;
			switch (_p35.ctor) {
				case 'OneColumn':
					return {
						ctor: '::',
						_0: form.fields,
						_1: {ctor: '[]'}
					};
				case 'TwoColumn':
					return A2(
						_krisajenkins$elm_exts$Exts_List$chunk,
						_elm_lang$core$Basics$round(
							_elm_lang$core$Basics$toFloat(fieldCount) / 2),
						form.fields);
				default:
					return A2(
						_krisajenkins$elm_exts$Exts_List$chunk,
						_elm_lang$core$Basics$round(
							_elm_lang$core$Basics$toFloat(fieldCount) / 3),
						form.fields);
			}
		}();
		var formOuter = function () {
			var _p36 = form.layoutType;
			if (_p36.ctor === 'Standard') {
				return _rundis$elm_bootstrap$Bootstrap_Form$form;
			} else {
				return _rundis$elm_bootstrap$Bootstrap_Form$formInline;
			}
		}();
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			_elm_lang$core$List$concat(
				{
					ctor: '::',
					_0: _elm_lang$core$List$singleton(
						A2(
							formOuter,
							{ctor: '[]'},
							A2(
								_elm_lang$core$List$map,
								_user$project$Common_Form$buildRow(context),
								form.fields))),
					_1: {
						ctor: '::',
						_0: {
							ctor: '::',
							_0: A2(
								_rundis$elm_bootstrap$Bootstrap_Grid$row,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: A2(
										_rundis$elm_bootstrap$Bootstrap_Grid$col,
										{ctor: '[]'},
										A2(_elm_lang$core$List$map, _user$project$Common_Form$buildButton, form.buttons)),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						},
						_1: {ctor: '[]'}
					}
				}));
	});
var _user$project$Common_Form$view = F2(
	function (context, form) {
		var formInner = A2(_user$project$Common_Form$buildFields, context, form);
		var messageWrapper = function (msg) {
			return A2(
				_elm_lang$core$Basics_ops['++'],
				_krisajenkins$elm_exts$Exts_Html$nbsp,
				A2(_elm_lang$core$Basics_ops['++'], ' ', msg));
		};
		var _p37 = form.validation;
		var isValid = _p37.isValid;
		var message = _p37.message;
		var role = _p37.role;
		var alert = function () {
			var _p38 = {ctor: '_Tuple3', _0: isValid, _1: message, _2: role};
			if (_p38._1.ctor === 'Just') {
				if (_p38._2.ctor === 'Nothing') {
					return A2(
						_user$project$Common_Form$alertType,
						_user$project$Common_Role$Info,
						{
							ctor: '::',
							_0: _user$project$Common_Form$alertIcon(_user$project$Common_Role$Info),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html$text(_krisajenkins$elm_exts$Exts_Html$nbsp),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html$text(
										messageWrapper(_p38._1._0)),
									_1: {ctor: '[]'}
								}
							}
						});
				} else {
					var _p39 = _p38._2._0;
					return A2(
						_user$project$Common_Form$alertType,
						_p39,
						{
							ctor: '::',
							_0: _user$project$Common_Form$alertIcon(_p39),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html$text(_krisajenkins$elm_exts$Exts_Html$nbsp),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html$text(
										messageWrapper(_p38._1._0)),
									_1: {ctor: '[]'}
								}
							}
						});
				}
			} else {
				return _elm_lang$html$Html$text('');
			}
		}();
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: alert,
				_1: {
					ctor: '::',
					_0: formInner,
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$Common_Form$emptyContext = {
	autocompleteMenus: {ctor: '[]'}
};
var _user$project$Common_Form$Data = F6(
	function (a, b, c, d, e, f) {
		return {validation: a, fields: b, buttons: c, layoutType: d, columnLayout: e, onSubmit: f};
	});
var _user$project$Common_Form$ValidationStatus = F3(
	function (a, b, c) {
		return {isValid: a, message: b, role: c};
	});
var _user$project$Common_Form$Context = function (a) {
	return {autocompleteMenus: a};
};
var _user$project$Common_Form$NotValid = {ctor: 'NotValid'};
var _user$project$Common_Form$Valid = {ctor: 'Valid'};
var _user$project$Common_Form$validateAll = function (form) {
	var validatedFields = A2(
		_elm_lang$core$List$map,
		_elm_lang$core$List$map(_user$project$Common_Form_Field$validate),
		form.fields);
	var formIsValid = function (isValid) {
		return isValid ? _user$project$Common_Form$Valid : _user$project$Common_Form$NotValid;
	}(
		function (count) {
			return _elm_lang$core$Native_Utils.eq(count, 0);
		}(
			_elm_lang$core$List$length(
				A2(
					_elm_lang$core$List$filter,
					function (field) {
						return _elm_lang$core$Native_Utils.eq(field.validation.isValid, _user$project$Common_Form_Field$NotValid);
					},
					_elm_lang$core$List$concat(validatedFields)))));
	var formValidation = form.validation;
	var _p40 = function () {
		var _p41 = formIsValid;
		if (_p41.ctor === 'NotValid') {
			return A2(
				_user$project$Util_ops['=>'],
				_elm_lang$core$Maybe$Just(_user$project$Common_Form$defaultInvalidMessage),
				_elm_lang$core$Maybe$Just(_user$project$Common_Role$Danger));
		} else {
			return A2(_user$project$Util_ops['=>'], formValidation.message, formValidation.role);
		}
	}();
	var validationMessage = _p40._0;
	var validationRole = _p40._1;
	var newForm = _elm_lang$core$Native_Utils.update(
		form,
		{
			fields: validatedFields,
			validation: _elm_lang$core$Native_Utils.update(
				formValidation,
				{isValid: formIsValid, message: validationMessage, role: validationRole})
		});
	return newForm;
};
var _user$project$Common_Form$Initial = {ctor: 'Initial'};
var _user$project$Common_Form$Inline = {ctor: 'Inline'};
var _user$project$Common_Form$Standard = {ctor: 'Standard'};
var _user$project$Common_Form$ThreeColumn = {ctor: 'ThreeColumn'};
var _user$project$Common_Form$TwoColumn = {ctor: 'TwoColumn'};
var _user$project$Common_Form$OneColumn = {ctor: 'OneColumn'};

var _user$project$Views_Assets$src = function (_p0) {
	var _p1 = _p0;
	return _elm_lang$html$Html_Attributes$src(_p1._0);
};
var _user$project$Views_Assets$Image = function (a) {
	return {ctor: 'Image', _0: a};
};
var _user$project$Views_Assets$error = _user$project$Views_Assets$Image('/assets/images/error.jpg');

var _user$project$Page_Demo_Form$defaultMessage = A2(
	_elm_lang$core$Basics_ops['++'],
	'A helpful message to display if necessary. ',
	A2(_elm_lang$core$Basics_ops['++'], 'This can provide the user insight on how to fill out the form or alert them of an overall', 'error with the form contents.'));
var _user$project$Page_Demo_Form$view = function (model) {
	var form = model.form;
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Grid$containerFluid,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('mainContainer'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_rundis$elm_bootstrap$Bootstrap_Grid$row,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_rundis$elm_bootstrap$Bootstrap_Grid$col,
						{
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs12,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(_krisajenkins$elm_exts$Exts_Html$nbsp),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_rundis$elm_bootstrap$Bootstrap_Grid$row,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_rundis$elm_bootstrap$Bootstrap_Grid$col,
							{
								ctor: '::',
								_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs12,
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Orders / Quotes / Form'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_rundis$elm_bootstrap$Bootstrap_Grid$row,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: A2(
								_rundis$elm_bootstrap$Bootstrap_Grid$col,
								{
									ctor: '::',
									_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs12,
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(_krisajenkins$elm_exts$Exts_Html$nbsp),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_rundis$elm_bootstrap$Bootstrap_Grid$row,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(
									_rundis$elm_bootstrap$Bootstrap_Grid$col,
									{
										ctor: '::',
										_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs12,
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: A2(_user$project$Common_Form$view, _user$project$Common_Form$emptyContext, form),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Page_Demo_Form$initialCmds = {ctor: '[]'};
var _user$project$Page_Demo_Form$Model = F2(
	function (a, b) {
		return {errors: a, form: b};
	});
var _user$project$Page_Demo_Form$NoOption = {ctor: 'NoOption'};
var _user$project$Page_Demo_Form$initialModel = {
	errors: {ctor: '[]'},
	form: {
		layoutType: _user$project$Common_Form$Standard,
		columnLayout: _user$project$Common_Form$ThreeColumn,
		validation: {
			isValid: _user$project$Common_Form$Initial,
			message: _elm_lang$core$Maybe$Just(_user$project$Page_Demo_Form$defaultMessage),
			role: _elm_lang$core$Maybe$Just(_user$project$Common_Role$Info)
		},
		onSubmit: _user$project$Page_Demo_Form$NoOption,
		fields: {ctor: '[]'},
		buttons: {
			ctor: '::',
			_0: {label: 'Save', icon: _Fresheyeball$elm_font_awesome$FontAwesome_Web$check, typeStyle: _rundis$elm_bootstrap$Bootstrap_Button$primary, onClick: _elm_lang$core$Maybe$Nothing},
			_1: {ctor: '[]'}
		}
	}
};
var _user$project$Page_Demo_Form$UpdateField = F2(
	function (a, b) {
		return {ctor: 'UpdateField', _0: a, _1: b};
	});
var _user$project$Page_Demo_Form$updateField = F2(
	function (field, value) {
		return A2(_user$project$Page_Demo_Form$UpdateField, field, value);
	});
var _user$project$Page_Demo_Form$NoOp = {ctor: 'NoOp'};
var _user$project$Page_Demo_Form$update = F2(
	function (msg, model) {
		var _p0 = msg;
		if (_p0.ctor === 'UpdateField') {
			var fields = model.form.fields;
			var updatedFields = A4(_user$project$Common_Form_Field$update, _user$project$Common_Form_Field$SetValue, fields, _p0._0, _p0._1);
			var form = model.form;
			var updatedForm = A2(_user$project$Common_Form$update, form, updatedFields);
			return A2(
				_user$project$Util_ops['=>'],
				A2(
					_user$project$Util_ops['=>'],
					_elm_lang$core$Native_Utils.update(
						model,
						{form: updatedForm}),
					_elm_lang$core$Platform_Cmd$none),
				_user$project$Page_Demo_Form$NoOp);
		} else {
			return A2(
				_user$project$Util_ops['=>'],
				A2(_user$project$Util_ops['=>'], model, _elm_lang$core$Platform_Cmd$none),
				_user$project$Page_Demo_Form$NoOp);
		}
	});
var _user$project$Page_Demo_Form$TestField8 = {ctor: 'TestField8'};
var _user$project$Page_Demo_Form$TestField7 = {ctor: 'TestField7'};
var _user$project$Page_Demo_Form$TestField6 = {ctor: 'TestField6'};
var _user$project$Page_Demo_Form$TestField5 = {ctor: 'TestField5'};
var _user$project$Page_Demo_Form$TestField4 = {ctor: 'TestField4'};
var _user$project$Page_Demo_Form$TestField3 = {ctor: 'TestField3'};
var _user$project$Page_Demo_Form$TestField2 = {ctor: 'TestField2'};
var _user$project$Page_Demo_Form$TestField1 = {ctor: 'TestField1'};

var _user$project$Route$routeToString = function (page) {
	var pieces = function () {
		var _p0 = page;
		switch (_p0.ctor) {
			case 'Main':
				return {
					ctor: '::',
					_0: '',
					_1: {ctor: '[]'}
				};
			case 'Link':
				return {
					ctor: '::',
					_0: 'link',
					_1: {
						ctor: '::',
						_0: _p0._0,
						_1: {ctor: '[]'}
					}
				};
			case 'Login':
				return {
					ctor: '::',
					_0: 'login',
					_1: {ctor: '[]'}
				};
			case 'Logout':
				return {
					ctor: '::',
					_0: 'logout',
					_1: {ctor: '[]'}
				};
			default:
				return {
					ctor: '::',
					_0: 'administration',
					_1: {
						ctor: '::',
						_0: 'security',
						_1: {ctor: '[]'}
					}
				};
		}
	}();
	return A2(
		_elm_lang$core$Basics_ops['++'],
		'#',
		A2(_elm_lang$core$String$join, '/', pieces));
};
var _user$project$Route$href = function (route) {
	return _elm_lang$html$Html_Attributes$href(
		_user$project$Route$routeToString(route));
};
var _user$project$Route$modifyUrl = function (_p1) {
	return _elm_lang$navigation$Navigation$modifyUrl(
		_user$project$Route$routeToString(_p1));
};
var _user$project$Route$AdministrationSecurity = {ctor: 'AdministrationSecurity'};
var _user$project$Route$Logout = {ctor: 'Logout'};
var _user$project$Route$Login = {ctor: 'Login'};
var _user$project$Route$Link = function (a) {
	return {ctor: 'Link', _0: a};
};
var _user$project$Route$Main = {ctor: 'Main'};
var _user$project$Route$route = _evancz$url_parser$UrlParser$oneOf(
	{
		ctor: '::',
		_0: A2(_evancz$url_parser$UrlParser$map, _user$project$Route$Main, _evancz$url_parser$UrlParser$top),
		_1: {
			ctor: '::',
			_0: A2(
				_evancz$url_parser$UrlParser$map,
				_user$project$Route$Link,
				A2(
					_evancz$url_parser$UrlParser_ops['</>'],
					_evancz$url_parser$UrlParser$s('link'),
					_evancz$url_parser$UrlParser$string)),
			_1: {
				ctor: '::',
				_0: A2(
					_evancz$url_parser$UrlParser$map,
					_user$project$Route$Login,
					_evancz$url_parser$UrlParser$s('login')),
				_1: {
					ctor: '::',
					_0: A2(
						_evancz$url_parser$UrlParser$map,
						_user$project$Route$Logout,
						_evancz$url_parser$UrlParser$s('logout')),
					_1: {
						ctor: '::',
						_0: A2(
							_evancz$url_parser$UrlParser$map,
							_user$project$Route$AdministrationSecurity,
							A2(
								_evancz$url_parser$UrlParser_ops['</>'],
								_evancz$url_parser$UrlParser$s('administration'),
								_evancz$url_parser$UrlParser$s('security'))),
						_1: {ctor: '[]'}
					}
				}
			}
		}
	});
var _user$project$Route$fromLocation = function (location) {
	var x = A2(_elm_lang$core$Debug$log, 'location', location);
	return _elm_lang$core$String$isEmpty(location.hash) ? _elm_lang$core$Maybe$Just(_user$project$Route$Main) : A2(
		_elm_lang$core$Debug$log,
		'parsed hash',
		A2(_evancz$url_parser$UrlParser$parseHash, _user$project$Route$route, location));
};

var _user$project$Common_Url$parseQuery = function (_p0) {
	return _elm_lang$core$Dict$fromList(
		_user$project$Util$justValues(
			A2(
				_elm_lang$core$List$map,
				function (pair) {
					var _p1 = pair;
					if (((_p1.ctor === '::') && (_p1._1.ctor === '::')) && (_p1._1._1.ctor === '[]')) {
						return _elm_lang$core$Maybe$Just(
							{ctor: '_Tuple2', _0: _p1._0, _1: _p1._1._0});
					} else {
						return _elm_lang$core$Maybe$Nothing;
					}
				},
				A2(
					_elm_lang$core$List$map,
					_elm_lang$core$String$split('='),
					A2(_elm_lang$core$String$split, '&', _p0)))));
};

var _user$project$Data_Link$default = {action: '', params: _elm_lang$core$Dict$empty};
var _user$project$Data_Link$Data = F2(
	function (a, b) {
		return {action: a, params: b};
	});
var _user$project$Data_Link$Unknown = {ctor: 'Unknown'};
var _user$project$Data_Link$OpenSupportTicket = function (a) {
	return {ctor: 'OpenSupportTicket', _0: a};
};
var _user$project$Data_Link$toAction = function (_p0) {
	var _p1 = _p0;
	var _p2 = {ctor: '_Tuple2', _0: _p1.action, _1: _p1.params};
	if (_p2._0 === 'viewSupportTicket') {
		return A2(
			_elm_lang$core$Result$withDefault,
			_user$project$Data_Link$Unknown,
			A2(
				_elm_lang$core$Result$map,
				function (id) {
					return _user$project$Data_Link$OpenSupportTicket(id);
				},
				A2(
					_elm_lang$core$Result$andThen,
					_elm_lang$core$String$toFloat,
					A2(
						_elm_lang$core$Result$fromMaybe,
						'No parameter `id` found in `params`',
						A2(_elm_lang$core$Dict$get, 'id', _p2._1)))));
	} else {
		return A2(
			_elm_lang$core$Debug$log,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'Data.Link.toAction | Cannot resolve action `',
				A2(_elm_lang$core$Basics_ops['++'], _p2._0, '`, returning default action')),
			_user$project$Data_Link$Unknown);
	}
};

var _user$project$Page_Link$parseOptions = function (options) {
	return A2(
		_elm_lang$core$Debug$log,
		'parsedOptions',
		function (opts) {
			var _p0 = opts;
			if (((_p0.ctor === '::') && (_p0._1.ctor === '::')) && (_p0._1._1.ctor === '[]')) {
				return {
					action: _p0._0,
					params: _user$project$Common_Url$parseQuery(_p0._1._0)
				};
			} else {
				return _user$project$Data_Link$default;
			}
		}(
			A2(_elm_lang$core$String$split, '?', options)));
};
var _user$project$Page_Link$view = function (model) {
	return _elm_lang$html$Html$text('');
};
var _user$project$Page_Link$initialModel = F2(
	function (user, options) {
		return {
			errors: {ctor: '[]'}
		};
	});
var _user$project$Page_Link$Model = function (a) {
	return {errors: a};
};
var _user$project$Page_Link$NoOption = {ctor: 'NoOption'};
var _user$project$Page_Link$Dispatch = function (a) {
	return {ctor: 'Dispatch', _0: a};
};
var _user$project$Page_Link$init = F2(
	function (user, options) {
		var action = _user$project$Data_Link$toAction(
			_user$project$Page_Link$parseOptions(options));
		var x = A2(
			_elm_lang$core$Debug$log,
			'Page.Link.init options',
			{options: options, action: action});
		var cmds = function () {
			var _p1 = action;
			if (_p1.ctor === 'OpenSupportTicket') {
				return _user$project$Util$send(
					_user$project$Page_Link$Dispatch(action));
			} else {
				return _elm_lang$core$Platform_Cmd$none;
			}
		}();
		return A2(
			_user$project$Util_ops['=>'],
			A2(_user$project$Page_Link$initialModel, user, options),
			cmds);
	});
var _user$project$Page_Link$NoOp = {ctor: 'NoOp'};
var _user$project$Page_Link$OpenSupportTicketView = function (a) {
	return {ctor: 'OpenSupportTicketView', _0: a};
};
var _user$project$Page_Link$update = F2(
	function (msg, model) {
		var _p2 = msg;
		if (_p2.ctor === 'Dispatch') {
			var _p3 = _p2._0;
			if (_p3.ctor === 'OpenSupportTicket') {
				return A2(
					_user$project$Util_ops['=>'],
					A2(_user$project$Util_ops['=>'], model, _elm_lang$core$Platform_Cmd$none),
					_user$project$Page_Link$OpenSupportTicketView(_p3._0));
			} else {
				return A2(
					_user$project$Util_ops['=>'],
					A2(_user$project$Util_ops['=>'], model, _elm_lang$core$Platform_Cmd$none),
					_user$project$Page_Link$NoOp);
			}
		} else {
			return A2(
				_user$project$Util_ops['=>'],
				A2(_user$project$Util_ops['=>'], model, _elm_lang$core$Platform_Cmd$none),
				_user$project$Page_Link$NoOp);
		}
	});

var _user$project$Common_Input$onBackspaceEvent = function (action) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'keydown',
		A2(
			_elm_lang$core$Json_Decode$andThen,
			function (keyCode) {
				return _elm_lang$core$Native_Utils.eq(keyCode, 8) ? _elm_lang$core$Json_Decode$succeed(action) : _elm_lang$core$Json_Decode$fail(
					_elm_lang$core$Basics$toString(keyCode));
			},
			_elm_lang$html$Html_Events$keyCode));
};
var _user$project$Common_Input$onBackspace = function (action) {
	return _rundis$elm_bootstrap$Bootstrap_Form_Input$attrs(
		{
			ctor: '::',
			_0: _user$project$Common_Input$onBackspaceEvent(action),
			_1: {ctor: '[]'}
		});
};
var _user$project$Common_Input$onEnterEvent = function (action) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'keyup',
		A2(
			_elm_lang$core$Json_Decode$andThen,
			function (keyCode) {
				return _elm_lang$core$Native_Utils.eq(keyCode, 13) ? _elm_lang$core$Json_Decode$succeed(action) : _elm_lang$core$Json_Decode$fail(
					_elm_lang$core$Basics$toString(keyCode));
			},
			_elm_lang$html$Html_Events$keyCode));
};
var _user$project$Common_Input$onEnter = function (action) {
	return _rundis$elm_bootstrap$Bootstrap_Form_Input$attrs(
		{
			ctor: '::',
			_0: _user$project$Common_Input$onEnterEvent(action),
			_1: {ctor: '[]'}
		});
};

var _user$project$Ports$setSecurityToken = _elm_lang$core$Native_Platform.outgoingPort(
	'setSecurityToken',
	function (v) {
		return v;
	});
var _user$project$Ports$getSecurityToken = _elm_lang$core$Native_Platform.outgoingPort(
	'getSecurityToken',
	function (v) {
		return v;
	});
var _user$project$Ports$sendSecurityToken = _elm_lang$core$Native_Platform.incomingPort(
	'sendSecurityToken',
	A2(
		_elm_lang$core$Json_Decode$andThen,
		function (guardian_token) {
			return _elm_lang$core$Json_Decode$succeed(
				{guardian_token: guardian_token});
		},
		A2(_elm_lang$core$Json_Decode$field, 'guardian_token', _elm_lang$core$Json_Decode$string)));
var _user$project$Ports$clearSecurityToken = _elm_lang$core$Native_Platform.outgoingPort(
	'clearSecurityToken',
	function (v) {
		return v;
	});
var _user$project$Ports$setUsernameCache = _elm_lang$core$Native_Platform.outgoingPort(
	'setUsernameCache',
	function (v) {
		return v;
	});
var _user$project$Ports$getUsernameCache = _elm_lang$core$Native_Platform.outgoingPort(
	'getUsernameCache',
	function (v) {
		return v;
	});
var _user$project$Ports$sendUsernameCache = _elm_lang$core$Native_Platform.incomingPort(
	'sendUsernameCache',
	A2(
		_elm_lang$core$Json_Decode$andThen,
		function (username) {
			return A2(
				_elm_lang$core$Json_Decode$andThen,
				function (cacheEnabled) {
					return _elm_lang$core$Json_Decode$succeed(
						{username: username, cacheEnabled: cacheEnabled});
				},
				A2(_elm_lang$core$Json_Decode$field, 'cacheEnabled', _elm_lang$core$Json_Decode$bool));
		},
		A2(_elm_lang$core$Json_Decode$field, 'username', _elm_lang$core$Json_Decode$string)));
var _user$project$Ports$clearUsernameCache = _elm_lang$core$Native_Platform.outgoingPort(
	'clearUsernameCache',
	function (v) {
		return v;
	});
var _user$project$Ports$setUserCache = _elm_lang$core$Native_Platform.outgoingPort(
	'setUserCache',
	function (v) {
		return v;
	});
var _user$project$Ports$clearUserCache = _elm_lang$core$Native_Platform.outgoingPort(
	'clearUserCache',
	function (v) {
		return v;
	});
var _user$project$Ports$sendWindowCommand = _elm_lang$core$Native_Platform.outgoingPort(
	'sendWindowCommand',
	function (v) {
		return v;
	});
var _user$project$Ports$receiveWindowCommand = _elm_lang$core$Native_Platform.incomingPort('receiveWindowCommand', _elm_lang$core$Json_Decode$value);
var _user$project$Ports$localStorageChanged = _elm_lang$core$Native_Platform.incomingPort('localStorageChanged', _elm_lang$core$Json_Decode$value);
var _user$project$Ports$sendToLocalStorage = _elm_lang$core$Native_Platform.outgoingPort(
	'sendToLocalStorage',
	function (v) {
		return v;
	});
var _user$project$Ports$selectedFile = _elm_lang$core$Native_Platform.incomingPort('selectedFile', _elm_lang$core$Json_Decode$value);
var _user$project$Ports$watchFileSelections = _elm_lang$core$Native_Platform.outgoingPort(
	'watchFileSelections',
	function (v) {
		return v;
	});
var _user$project$Ports$GuardianToken = function (a) {
	return {guardian_token: a};
};
var _user$project$Ports$CacheData = F2(
	function (a, b) {
		return {username: a, cacheEnabled: b};
	});

var _user$project$Page_Login$getAuthToken = function (model) {
	var _p0 = model.session.user;
	if (_p0.ctor === 'Nothing') {
		return _user$project$Data_AuthToken$AuthToken('');
	} else {
		return _p0._0.guardian_token;
	}
};
var _user$project$Page_Login$viewCardLoading = A2(
	_elm_lang$html$Html$div,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$style(
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
				_1: {ctor: '[]'}
			}),
		_1: {ctor: '[]'}
	},
	{
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$i,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('fa fa-spinner fa-pulse fa-3x fa-fw'),
				_1: {ctor: '[]'}
			},
			{ctor: '[]'}),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$span,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('sr-only'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Loading...'),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		}
	});
var _user$project$Page_Login$decodeGuardianToken = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'guardian_token',
	_elm_lang$core$Json_Decode$string,
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Ports$GuardianToken));
var _user$project$Page_Login$updateField = F3(
	function (field, value, form) {
		var _p1 = field;
		switch (_p1.ctor) {
			case 'Username':
				return _elm_lang$core$Native_Utils.update(
					form,
					{username: value});
			case 'CacheUsername':
				return _elm_lang$core$Native_Utils.update(
					form,
					{cacheUsername: !form.cacheUsername});
			case 'Password':
				return _elm_lang$core$Native_Utils.update(
					form,
					{password: value});
			default:
				return _elm_lang$core$Native_Utils.update(
					form,
					{pin: value});
		}
	});
var _user$project$Page_Login$initialModel = {
	errors: {ctor: '[]'},
	username: '',
	cacheUsername: false,
	password: '',
	pin: '',
	guardian_token: ''
};
var _user$project$Page_Login$Model = F6(
	function (a, b, c, d, e, f) {
		return {errors: a, username: b, cacheUsername: c, password: d, pin: e, guardian_token: f};
	});
var _user$project$Page_Login$Pin = {ctor: 'Pin'};
var _user$project$Page_Login$Password = {ctor: 'Password'};
var _user$project$Page_Login$CacheUsername = {ctor: 'CacheUsername'};
var _user$project$Page_Login$Username = {ctor: 'Username'};
var _user$project$Page_Login$JoinLogin = {ctor: 'JoinLogin'};
var _user$project$Page_Login$viewCardBottom = F2(
	function (showLoader, model) {
		var loginDisabled = (_elm_lang$core$Native_Utils.eq(
			_elm_lang$core$String$length(model.username),
			0) || _elm_lang$core$Native_Utils.eq(
			_elm_lang$core$String$length(model.password),
			0)) ? true : false;
		var buttonBlock = showLoader ? {ctor: '[]'} : {
			ctor: '::',
			_0: _rundis$elm_bootstrap$Bootstrap_Card$custom(
				A2(
					_rundis$elm_bootstrap$Bootstrap_Button$button,
					{
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Button$primary,
						_1: {
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Button$attrs(
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(_user$project$Page_Login$JoinLogin),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$disabled(loginDisabled),
										_1: {ctor: '[]'}
									}
								}),
							_1: {ctor: '[]'}
						}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Login'),
						_1: {ctor: '[]'}
					})),
			_1: {ctor: '[]'}
		};
		return A2(
			_rundis$elm_bootstrap$Bootstrap_Card$block,
			{
				ctor: '::',
				_0: _rundis$elm_bootstrap$Bootstrap_Card$blockAlign(_rundis$elm_bootstrap$Bootstrap_Text$alignXsRight),
				_1: {ctor: '[]'}
			},
			buttonBlock);
	});
var _user$project$Page_Login$ReceiveLogoutMessage = function (a) {
	return {ctor: 'ReceiveLogoutMessage', _0: a};
};
var _user$project$Page_Login$ReceiveUnauthorizedMessage = function (a) {
	return {ctor: 'ReceiveUnauthorizedMessage', _0: a};
};
var _user$project$Page_Login$ReceiveLoginMessage = function (a) {
	return {ctor: 'ReceiveLoginMessage', _0: a};
};
var _user$project$Page_Login$GetSecurityToken = function (a) {
	return {ctor: 'GetSecurityToken', _0: a};
};
var _user$project$Page_Login$GetCachedUsername = function (a) {
	return {ctor: 'GetCachedUsername', _0: a};
};
var _user$project$Page_Login$ToggleCacheUsername = {ctor: 'ToggleCacheUsername'};
var _user$project$Page_Login$UpdateFormData = F2(
	function (a, b) {
		return {ctor: 'UpdateFormData', _0: a, _1: b};
	});
var _user$project$Page_Login$viewCardForm = function (formData) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Form$form,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_rundis$elm_bootstrap$Bootstrap_Form$group,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_rundis$elm_bootstrap$Bootstrap_Form$label,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Username'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$text(
							{
								ctor: '::',
								_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$attrs(
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onInput(
											_user$project$Page_Login$UpdateFormData(_user$project$Page_Login$Username)),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$value(formData.username),
											_1: {ctor: '[]'}
										}
									}),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_rundis$elm_bootstrap$Bootstrap_Form$group,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_rundis$elm_bootstrap$Bootstrap_Form$label,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Password'),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$password(
								{
									ctor: '::',
									_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$attrs(
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onInput(
												_user$project$Page_Login$UpdateFormData(_user$project$Page_Login$Password)),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$value(formData.password),
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: _user$project$Common_Input$onEnter(_user$project$Page_Login$JoinLogin),
										_1: {ctor: '[]'}
									}
								}),
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Page_Login$viewCardMiddle = F2(
	function (showLoader, model) {
		var formBlock = showLoader ? {ctor: '[]'} : {
			ctor: '::',
			_0: A2(
				_rundis$elm_bootstrap$Bootstrap_Card$text,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _user$project$Page_Login$viewCardForm(model),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		};
		var loginText = showLoader ? 'Logging in...' : 'Login';
		var headerBlock = {
			ctor: '::',
			_0: A2(
				_rundis$elm_bootstrap$Bootstrap_Card$titleH4,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(loginText),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		};
		var rememberUsernameChecked = model.cacheUsername ? _elm_lang$html$Html_Attributes$checked(true) : _elm_lang$html$Html_Attributes$checked(false);
		var formBlock2 = showLoader ? {
			ctor: '::',
			_0: _rundis$elm_bootstrap$Bootstrap_Card$custom(_user$project$Page_Login$viewCardLoading),
			_1: {ctor: '[]'}
		} : {
			ctor: '::',
			_0: _rundis$elm_bootstrap$Bootstrap_Card$custom(
				A2(
					_rundis$elm_bootstrap$Bootstrap_Form_Checkbox$checkbox,
					{
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$attrs(
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(_user$project$Page_Login$ToggleCacheUsername),
								_1: {
									ctor: '::',
									_0: rememberUsernameChecked,
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					},
					'Remember Username?')),
			_1: {ctor: '[]'}
		};
		return A2(
			_rundis$elm_bootstrap$Bootstrap_Card$block,
			{ctor: '[]'},
			_elm_lang$core$List$concat(
				{
					ctor: '::',
					_0: headerBlock,
					_1: {
						ctor: '::',
						_0: formBlock,
						_1: {
							ctor: '::',
							_0: formBlock2,
							_1: {ctor: '[]'}
						}
					}
				}));
	});
var _user$project$Page_Login$viewCard = F2(
	function (showLoader, model) {
		return _rundis$elm_bootstrap$Bootstrap_Card$view(
			A3(
				_user$project$Page_Login$viewCardBottom,
				showLoader,
				model,
				A3(
					_user$project$Page_Login$viewCardMiddle,
					showLoader,
					model,
					A3(
						_rundis$elm_bootstrap$Bootstrap_Card$header,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('text-center'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$img,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$src('images/if_lock_60740.png'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('img-fluid'),
										_1: {ctor: '[]'}
									}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						},
						_rundis$elm_bootstrap$Bootstrap_Card$config(
							{
								ctor: '::',
								_0: _rundis$elm_bootstrap$Bootstrap_Card$attrs(
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$style(
											{
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'width', _1: '23rem'},
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							})))));
	});
var _user$project$Page_Login$view = function (model) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Grid$containerFluid,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('loginContainer'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_rundis$elm_bootstrap$Bootstrap_Grid$row,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_rundis$elm_bootstrap$Bootstrap_Grid$col,
						{
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs4,
							_1: {ctor: '[]'}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_rundis$elm_bootstrap$Bootstrap_Grid$col,
							{
								ctor: '::',
								_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs4,
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(_user$project$Page_Login$viewCard, false, model),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_rundis$elm_bootstrap$Bootstrap_Grid$col,
								{
									ctor: '::',
									_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs4,
									_1: {ctor: '[]'}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_rundis$elm_bootstrap$Bootstrap_Grid$row,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_rundis$elm_bootstrap$Bootstrap_Grid$col,
							{
								ctor: '::',
								_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs2,
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(''),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Page_Login$Unauthorized = {ctor: 'Unauthorized'};
var _user$project$Page_Login$InitUserData = function (a) {
	return {ctor: 'InitUserData', _0: a};
};
var _user$project$Page_Login$SetSocketConnect = function (a) {
	return {ctor: 'SetSocketConnect', _0: a};
};
var _user$project$Page_Login$NoOp = {ctor: 'NoOp'};
var _user$project$Page_Login$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'JoinLogin':
				var cmds = _elm_lang$core$Native_Utils.eq(model.cacheUsername, true) ? _user$project$Ports$setUsernameCache(model.username) : _elm_lang$core$Platform_Cmd$none;
				return A2(
					_user$project$Util_ops['=>'],
					A2(_user$project$Util_ops['=>'], model, cmds),
					_user$project$Page_Login$SetSocketConnect(true));
			case 'ReceiveLoginMessage':
				var _p5 = _p2._0;
				var _p3 = A2(_elm_lang$core$Json_Decode$decodeValue, _user$project$Data_User$decoder, _p5);
				if (_p3.ctor === 'Ok') {
					var _p4 = _p3._0;
					var token = _user$project$Data_AuthToken$authTokenToString(_p4.guardian_token);
					var newModel = _elm_lang$core$Native_Utils.update(
						model,
						{guardian_token: token, password: ''});
					return A2(
						_user$project$Util_ops['=>'],
						A2(
							_user$project$Util_ops['=>'],
							newModel,
							_elm_lang$core$Platform_Cmd$batch(
								{
									ctor: '::',
									_0: _user$project$Ports$setSecurityToken(token),
									_1: {
										ctor: '::',
										_0: _user$project$Ports$setUserCache(
											_user$project$Data_User$encode(_p4)),
										_1: {
											ctor: '::',
											_0: _elm_lang$navigation$Navigation$newUrl('#'),
											_1: {ctor: '[]'}
										}
									}
								})),
						_user$project$Page_Login$InitUserData(_p4));
				} else {
					var x = A2(_elm_lang$core$Debug$log, 'Login.ReceiveLoginMessage Error', _p5);
					return A2(
						_user$project$Util_ops['=>'],
						A2(_user$project$Util_ops['=>'], model, _elm_lang$core$Platform_Cmd$none),
						_user$project$Page_Login$NoOp);
				}
			case 'ReceiveUnauthorizedMessage':
				var _p7 = _p2._0;
				var _p6 = A2(_elm_lang$core$Json_Decode$decodeValue, _user$project$Data_User$decoder, _p7);
				if (_p6.ctor === 'Ok') {
					return A2(
						_user$project$Util_ops['=>'],
						A2(
							_user$project$Util_ops['=>'],
							_elm_lang$core$Native_Utils.update(
								model,
								{
									errors: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'Login Failed', _1: 'Username or password was incorrect'},
										_1: {ctor: '[]'}
									}
								}),
							_elm_lang$core$Platform_Cmd$none),
						_user$project$Page_Login$NoOp);
				} else {
					var x = A2(_elm_lang$core$Debug$log, 'Login.ReceiveUnauthorizedMessage Error', _p7);
					return A2(
						_user$project$Util_ops['=>'],
						A2(_user$project$Util_ops['=>'], model, _elm_lang$core$Platform_Cmd$none),
						_user$project$Page_Login$Unauthorized);
				}
			case 'ReceiveLogoutMessage':
				return A2(
					_user$project$Util_ops['=>'],
					A2(_user$project$Util_ops['=>'], model, _elm_lang$core$Platform_Cmd$none),
					_user$project$Page_Login$NoOp);
			case 'UpdateFormData':
				var newModel = A3(_user$project$Page_Login$updateField, _p2._0, _p2._1, model);
				return A2(
					_user$project$Util_ops['=>'],
					A2(_user$project$Util_ops['=>'], newModel, _elm_lang$core$Platform_Cmd$none),
					_user$project$Page_Login$NoOp);
			case 'ToggleCacheUsername':
				var newModel = A3(_user$project$Page_Login$updateField, _user$project$Page_Login$CacheUsername, '', model);
				var cmds = newModel.cacheUsername ? _elm_lang$core$Platform_Cmd$none : _user$project$Ports$clearUsernameCache('');
				return A2(
					_user$project$Util_ops['=>'],
					A2(_user$project$Util_ops['=>'], newModel, cmds),
					_user$project$Page_Login$NoOp);
			case 'GetCachedUsername':
				var _p8 = _p2._0;
				return A2(
					_user$project$Util_ops['=>'],
					A2(
						_user$project$Util_ops['=>'],
						_elm_lang$core$Native_Utils.update(
							model,
							{username: _p8.username, cacheUsername: _p8.cacheEnabled}),
						_elm_lang$core$Platform_Cmd$none),
					_user$project$Page_Login$NoOp);
			default:
				var _p10 = _p2._0;
				var _p9 = (_elm_lang$core$Native_Utils.cmp(
					_elm_lang$core$String$length(_p10.guardian_token),
					0) > 0) ? {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{guardian_token: _p10.guardian_token}),
					_1: _elm_lang$navigation$Navigation$newUrl('#')
				} : {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				var newModel = _p9._0;
				var cmds = _p9._1;
				return A2(
					_user$project$Util_ops['=>'],
					A2(_user$project$Util_ops['=>'], newModel, _elm_lang$core$Platform_Cmd$none),
					_user$project$Page_Login$NoOp);
		}
	});

var _user$project$Page_Main$view = function (model) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Grid$containerFluid,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('mainContainer'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_rundis$elm_bootstrap$Bootstrap_Grid$row,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_rundis$elm_bootstrap$Bootstrap_Grid$col,
						{
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs12,
							_1: {ctor: '[]'}
						},
						{ctor: '[]'}),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Page_Main$initialModel = {
	errors: {ctor: '[]'}
};
var _user$project$Page_Main$Model = function (a) {
	return {errors: a};
};
var _user$project$Page_Main$NoOption = {ctor: 'NoOption'};
var _user$project$Page_Main$NoOp = {ctor: 'NoOp'};
var _user$project$Page_Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		return A2(
			_user$project$Util_ops['=>'],
			A2(_user$project$Util_ops['=>'], model, _elm_lang$core$Platform_Cmd$none),
			_user$project$Page_Main$NoOp);
	});

var _user$project$Page_PermissionError$view = F2(
	function (session, _p0) {
		var _p1 = _p0;
		var msg = A2(
			_elm_lang$core$Basics_ops['++'],
			_krisajenkins$elm_exts$Exts_Html$nbsp,
			A2(_elm_lang$core$Basics_ops['++'], ' ', 'You do not have access to this feature in the system'));
		var alert = _rundis$elm_bootstrap$Bootstrap_Alert$danger(
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$p,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _Fresheyeball$elm_font_awesome$FontAwesome_Web$exclamation_triangle,
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html$text(msg),
							_1: {ctor: '[]'}
						}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_rundis$elm_bootstrap$Bootstrap_Alert$link,
						{
							ctor: '::',
							_0: _user$project$Route$href(_p1._0.routeToPrevious),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$i,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('fa fa-arrow-left'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$style(
											{
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'padding-right', _1: '10px'},
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html$text('Back to Previous Page'),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
		return A2(
			_elm_lang$html$Html$main_,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$id('content'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('container'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$tabindex(-1),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_rundis$elm_bootstrap$Bootstrap_Alert$h4,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Access Error'),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: alert,
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			});
	});
var _user$project$Page_PermissionError$Model = function (a) {
	return {routeToPrevious: a};
};
var _user$project$Page_PermissionError$PermissionError = function (a) {
	return {ctor: 'PermissionError', _0: a};
};
var _user$project$Page_PermissionError$permissionError = function (route) {
	return _user$project$Page_PermissionError$PermissionError(
		{routeToPrevious: route});
};

var _user$project$Types$Config = F2(
	function (a, b) {
		return {userData: a, currentTimestamp: b};
	});
var _user$project$Types$NoOp = {ctor: 'NoOp'};
var _user$project$Types$ChannelJoinError = function (a) {
	return {ctor: 'ChannelJoinError', _0: a};
};
var _user$project$Types$LocalStorageChanged = function (a) {
	return {ctor: 'LocalStorageChanged', _0: a};
};
var _user$project$Types$QueueAlert = function (a) {
	return {ctor: 'QueueAlert', _0: a};
};
var _user$project$Types$HideAlert = function (a) {
	return {ctor: 'HideAlert', _0: a};
};
var _user$project$Types$ShowAlert = F2(
	function (a, b) {
		return {ctor: 'ShowAlert', _0: a, _1: b};
	});
var _user$project$Types$WindowSize = function (a) {
	return {ctor: 'WindowSize', _0: a};
};
var _user$project$Types$WindowEvent = {ctor: 'WindowEvent'};
var _user$project$Types$ToDatePicker = {ctor: 'ToDatePicker'};
var _user$project$Types$GetCurrentDateTime = function (a) {
	return {ctor: 'GetCurrentDateTime', _0: a};
};
var _user$project$Types$NavbarMsg = function (a) {
	return {ctor: 'NavbarMsg', _0: a};
};
var _user$project$Types$SocketClosedAbnormally = {ctor: 'SocketClosedAbnormally'};
var _user$project$Types$SetSocketConnect = function (a) {
	return {ctor: 'SetSocketConnect', _0: a};
};
var _user$project$Types$DemoFormMsg = function (a) {
	return {ctor: 'DemoFormMsg', _0: a};
};
var _user$project$Types$AdministrationSecurityMsg = function (a) {
	return {ctor: 'AdministrationSecurityMsg', _0: a};
};
var _user$project$Types$MainMsg = function (a) {
	return {ctor: 'MainMsg', _0: a};
};
var _user$project$Types$LoginMsg = function (a) {
	return {ctor: 'LoginMsg', _0: a};
};
var _user$project$Types$LinkMsg = function (a) {
	return {ctor: 'LinkMsg', _0: a};
};
var _user$project$Types$Unauthorized = {ctor: 'Unauthorized'};
var _user$project$Types$InitUserData = function (a) {
	return {ctor: 'InitUserData', _0: a};
};
var _user$project$Types$SetRoute = function (a) {
	return {ctor: 'SetRoute', _0: a};
};

var _user$project$Views_Page$bodyId = 'page-body';
var _user$project$Views_Page$viewFooter = A2(
	_elm_lang$html$Html$div,
	{ctor: '[]'},
	{
		ctor: '::',
		_0: _elm_lang$html$Html$text('Footer'),
		_1: {ctor: '[]'}
	});
var _user$project$Views_Page$viewHeader = F3(
	function (page, user, isLoading) {
		return A2(
			_elm_lang$html$Html$nav,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('navbar navbar-light'),
				_1: {ctor: '[]'}
			},
			{ctor: '[]'});
	});
var _user$project$Views_Page$frame = F5(
	function (isLoading, session, user, page, content) {
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_rundis$elm_bootstrap$Bootstrap_Grid$containerFluid,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: content,
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_rundis$elm_bootstrap$Bootstrap_Grid$containerFluid,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(''),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$Views_Page$Login = {ctor: 'Login'};
var _user$project$Views_Page$Main = {ctor: 'Main'};
var _user$project$Views_Page$Other = {ctor: 'Other'};

var _user$project$Page_Errored$view = F2(
	function (session, _p0) {
		var _p1 = _p0;
		return A2(
			_elm_lang$html$Html$main_,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$id('content'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('container'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$tabindex(-1),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$h1,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Error Loading Page'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('row'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$p,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(_p1._0.errorMessage),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$Page_Errored$Model = F2(
	function (a, b) {
		return {activePage: a, errorMessage: b};
	});
var _user$project$Page_Errored$PageLoadError = function (a) {
	return {ctor: 'PageLoadError', _0: a};
};
var _user$project$Page_Errored$pageLoadError = F2(
	function (activePage, errorMessage) {
		return _user$project$Page_Errored$PageLoadError(
			{activePage: activePage, errorMessage: errorMessage});
	});

var _user$project$Page_NotFound$viewNotFoundCard = function (model) {
	return _rundis$elm_bootstrap$Bootstrap_Card$view(
		A3(
			_rundis$elm_bootstrap$Bootstrap_Card$block,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_rundis$elm_bootstrap$Bootstrap_Card$titleH4,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Page Not Found'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_rundis$elm_bootstrap$Bootstrap_Card$text,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('The page you are looking for was not found'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			},
			A3(
				_rundis$elm_bootstrap$Bootstrap_Card$header,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('text-center'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$img,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$src('images/if_lock_60740.png'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('img-fluid'),
								_1: {ctor: '[]'}
							}
						},
						{ctor: '[]'}),
					_1: {ctor: '[]'}
				},
				_rundis$elm_bootstrap$Bootstrap_Card$config(
					{
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Card$attrs(
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$style(
									{
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'width', _1: '23rem'},
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}))));
};
var _user$project$Page_NotFound$view = function (model) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Grid$containerFluid,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('loginContainer'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_rundis$elm_bootstrap$Bootstrap_Grid$row,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_rundis$elm_bootstrap$Bootstrap_Grid$col,
						{
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs4,
							_1: {ctor: '[]'}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_rundis$elm_bootstrap$Bootstrap_Grid$col,
							{
								ctor: '::',
								_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs4,
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _user$project$Page_NotFound$viewNotFoundCard(model),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_rundis$elm_bootstrap$Bootstrap_Grid$col,
								{
									ctor: '::',
									_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs4,
									_1: {ctor: '[]'}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {ctor: '[]'}
		});
};

var _user$project$Request_LocalStorage$encodeKey = function (key) {
	return {
		ctor: '_Tuple2',
		_0: 'key',
		_1: _elm_lang$core$Json_Encode$string(key)
	};
};
var _user$project$Request_LocalStorage$removeItem = function (key) {
	var item = _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: _user$project$Request_LocalStorage$encodeKey(key),
			_1: {
				ctor: '::',
				_0: A2(
					_user$project$Util_ops['=>'],
					'action',
					_elm_lang$core$Json_Encode$string('remove')),
				_1: {ctor: '[]'}
			}
		});
	return _user$project$Ports$sendToLocalStorage(item);
};
var _user$project$Request_LocalStorage$saveItem = F2(
	function (key, value) {
		var item = _elm_lang$core$Json_Encode$object(
			{
				ctor: '::',
				_0: _user$project$Request_LocalStorage$encodeKey(key),
				_1: {
					ctor: '::',
					_0: A2(
						_user$project$Util_ops['=>'],
						'value',
						_elm_lang$core$Json_Encode$string(value)),
					_1: {
						ctor: '::',
						_0: A2(
							_user$project$Util_ops['=>'],
							'action',
							_elm_lang$core$Json_Encode$string('set')),
						_1: {ctor: '[]'}
					}
				}
			});
		return _user$project$Ports$sendToLocalStorage(item);
	});

var _user$project$Request_Window$positionWithDefault = F2(
	function (x, d) {
		return (_elm_lang$core$Native_Utils.cmp(x, 0) > -1) ? _elm_lang$core$Basics$toString(x) : _elm_lang$core$Basics$toString(d);
	});
var _user$project$Request_Window$optionValue = function (_p0) {
	var _p1 = _p0;
	return _p1._0;
};
var _user$project$Request_Window$collectOptions = function (options) {
	var x = A2(
		_elm_lang$core$Debug$log,
		'collectOptions',
		A2(
			_elm_lang$core$String$join,
			',',
			A2(_elm_lang$core$List$map, _user$project$Request_Window$optionValue, options)));
	return A2(
		_elm_lang$core$String$join,
		',',
		A2(_elm_lang$core$List$map, _user$project$Request_Window$optionValue, options));
};
var _user$project$Request_Window$close = function (url) {
	var parameter = _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: A2(
				_user$project$Util_ops['=>'],
				'url',
				_elm_lang$core$Json_Encode$string(url)),
			_1: {
				ctor: '::',
				_0: A2(
					_user$project$Util_ops['=>'],
					'action',
					_elm_lang$core$Json_Encode$string('close')),
				_1: {ctor: '[]'}
			}
		});
	return _user$project$Ports$sendWindowCommand(parameter);
};
var _user$project$Request_Window$sizeEncoder = function (size) {
	var _p2 = size;
	if (_p2.ctor === 'Pixel') {
		return _elm_lang$core$Json_Encode$object(
			{
				ctor: '::',
				_0: A2(
					_user$project$Util_ops['=>'],
					'type',
					_elm_lang$core$Json_Encode$int(0)),
				_1: {
					ctor: '::',
					_0: A2(
						_user$project$Util_ops['=>'],
						'value',
						_elm_lang$core$Json_Encode$float(_p2._0)),
					_1: {ctor: '[]'}
				}
			});
	} else {
		return _elm_lang$core$Json_Encode$object(
			{
				ctor: '::',
				_0: A2(
					_user$project$Util_ops['=>'],
					'type',
					_elm_lang$core$Json_Encode$int(1)),
				_1: {
					ctor: '::',
					_0: A2(
						_user$project$Util_ops['=>'],
						'value',
						_elm_lang$core$Json_Encode$float(_p2._0)),
					_1: {ctor: '[]'}
				}
			});
	}
};
var _user$project$Request_Window$open = F5(
	function (url, windowName, width, height, options) {
		var windowOptions = _user$project$Request_Window$collectOptions(options);
		var parameters = _elm_lang$core$Json_Encode$object(
			{
				ctor: '::',
				_0: A2(
					_user$project$Util_ops['=>'],
					'url',
					_elm_lang$core$Json_Encode$string(url)),
				_1: {
					ctor: '::',
					_0: A2(
						_user$project$Util_ops['=>'],
						'name',
						_elm_lang$core$Json_Encode$string(windowName)),
					_1: {
						ctor: '::',
						_0: A2(
							_user$project$Util_ops['=>'],
							'action',
							_elm_lang$core$Json_Encode$string('open')),
						_1: {
							ctor: '::',
							_0: A2(
								_user$project$Util_ops['=>'],
								'options',
								_elm_lang$core$Json_Encode$string(windowOptions)),
							_1: {
								ctor: '::',
								_0: A2(
									_user$project$Util_ops['=>'],
									'width',
									_user$project$Request_Window$sizeEncoder(width)),
								_1: {
									ctor: '::',
									_0: A2(
										_user$project$Util_ops['=>'],
										'height',
										_user$project$Request_Window$sizeEncoder(height)),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			});
		return _user$project$Ports$sendWindowCommand(parameters);
	});
var _user$project$Request_Window$openNewWindow = function (url) {
	return A2(_user$project$Request_Window$open, url, '_blank');
};
var _user$project$Request_Window$Option = function (a) {
	return {ctor: 'Option', _0: a};
};
var _user$project$Request_Window$resizable = _user$project$Request_Window$Option('resizable=true');
var _user$project$Request_Window$dependent = _user$project$Request_Window$Option('dependent=true');
var _user$project$Request_Window$showLocationBar = function (show) {
	return _user$project$Request_Window$Option(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'location=',
			_elm_lang$core$String$toLower(
				_elm_lang$core$Basics$toString(show))));
};
var _user$project$Request_Window$Pixel = function (a) {
	return {ctor: 'Pixel', _0: a};
};
var _user$project$Request_Window$Percent = function (a) {
	return {ctor: 'Percent', _0: a};
};

var _user$project$Views_Alert$defaultToastClasses = 'toast display-and-fade ';
var _user$project$Views_Alert$view = function (alert) {
	var exclamationIconClass = 'exclamation-triangle';
	var infoCircleIconClass = 'info-circle';
	var checkIconClass = 'check';
	var _p0 = function () {
		var _p1 = alert.alertType;
		switch (_p1.ctor) {
			case 'Basic':
				return {ctor: '_Tuple3', _0: _elm_lang$core$Maybe$Nothing, _1: 'info', _2: _p1._0};
			case 'Success':
				return {
					ctor: '_Tuple3',
					_0: _elm_lang$core$Maybe$Just(checkIconClass),
					_1: 'success',
					_2: _p1._0
				};
			case 'Info':
				return {
					ctor: '_Tuple3',
					_0: _elm_lang$core$Maybe$Just(infoCircleIconClass),
					_1: 'info',
					_2: _p1._0
				};
			case 'Warning':
				return {
					ctor: '_Tuple3',
					_0: _elm_lang$core$Maybe$Just(exclamationIconClass),
					_1: 'warning',
					_2: _p1._0
				};
			case 'Danger':
				return {
					ctor: '_Tuple3',
					_0: _elm_lang$core$Maybe$Just(exclamationIconClass),
					_1: 'danger',
					_2: _p1._0
				};
			default:
				return {
					ctor: '_Tuple3',
					_0: _elm_lang$core$Maybe$Just(exclamationIconClass),
					_1: 'danger',
					_2: _p1._0
				};
		}
	}();
	var iconClass = _p0._0;
	var toastRoleClass = _p0._1;
	var text = _p0._2;
	var icon = function () {
		var _p2 = iconClass;
		if (_p2.ctor === 'Nothing') {
			return _elm_lang$html$Html$text('');
		} else {
			return A2(
				_elm_lang$html$Html$i,
				{
					ctor: '::',
					_0: A2(_elm_lang$html$Html_Attributes$attribute, 'aria-hidden', 'true'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class(
							A2(_elm_lang$core$Basics_ops['++'], 'fa fa-', _p2._0)),
						_1: {ctor: '[]'}
					}
				},
				{ctor: '[]'});
		}
	}();
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class(
				A2(_elm_lang$core$Basics_ops['++'], _user$project$Views_Alert$defaultToastClasses, toastRoleClass)),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: icon,
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html$text(text),
				_1: {ctor: '[]'}
			}
		});
};

var _user$project$Views_Autocomplete$simpleMenuViewConfig = _thebritican$elm_autocomplete$Autocomplete$viewConfig(
	{
		toId: function (item) {
			return _elm_lang$core$Basics$toString(item.id);
		},
		ul: {
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('autocomplete-list'),
			_1: {ctor: '[]'}
		},
		li: F3(
			function (keySelected, mouseSelected, item) {
				return {
					attributes: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$classList(
							{
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'autocomplete-item', _1: true},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'bg-info text-white', _1: keySelected || mouseSelected},
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					},
					children: {
						ctor: '::',
						_0: _elm_lang$html$Html$text(item.label),
						_1: {ctor: '[]'}
					}
				};
			})
	});
var _user$project$Views_Autocomplete$matchingItems = F2(
	function (query, availableItems) {
		var filterText = function () {
			var _p0 = query;
			switch (_p0.ctor) {
				case 'UserInput':
					return _p0._0;
				case 'None':
					return '';
				default:
					return _p0._0;
			}
		}();
		var lowerQuery = _elm_lang$core$String$trim(
			_elm_lang$core$String$toLower(filterText));
		var queryPattern = function () {
			var parts = _elm_lang$core$String$words(lowerQuery);
			var joined = A2(_elm_lang$core$String$join, '(.{0,})', parts);
			return A2(_elm_lang$core$Basics_ops['++'], joined, '(.{0,})');
		}();
		var filteredList = A2(
			_elm_lang$core$List$filter,
			function (item) {
				return (!_elm_lang$core$Native_Utils.eq(item.label, '')) && ((!_elm_lang$core$Native_Utils.eq(
					item.label,
					_elm_lang$core$String$trim(filterText))) && A2(
					_elm_lang$core$Regex$contains,
					_elm_lang$core$Regex$regex(queryPattern),
					_elm_lang$core$String$toLower(item.label)));
			},
			availableItems);
		return _elm_lang$core$String$isEmpty(lowerQuery) ? A2(
			_elm_lang$core$List$filter,
			function (item) {
				return !_elm_lang$core$String$isEmpty(item.label);
			},
			availableItems) : filteredList;
	});
var _user$project$Views_Autocomplete$shouldShowMenu = F2(
	function (query, items) {
		return !_elm_lang$core$List$isEmpty(
			A2(_user$project$Views_Autocomplete$matchingItems, query, items));
	});
var _user$project$Views_Autocomplete$getLabelById = F2(
	function (id, items) {
		return A2(
			_elm_lang$core$Result$andThen,
			function (id) {
				return A2(
					_elm_lang$core$Result$map,
					function (_) {
						return _.label;
					},
					A2(
						_elm_lang$core$Result$fromMaybe,
						'couldn\'t find selected item',
						A2(
							_krisajenkins$elm_exts$Exts_List$firstMatch,
							function (item) {
								return _elm_lang$core$Native_Utils.eq(item.id, id);
							},
							items)));
			},
			_elm_lang$core$String$toFloat(id));
	});
var _user$project$Views_Autocomplete$text = function (_p1) {
	var _p2 = _p1;
	var _p3 = _p2._0.query;
	switch (_p3.ctor) {
		case 'None':
			return '';
		case 'UserInput':
			return _p3._0;
		default:
			return _p3._1;
	}
};
var _user$project$Views_Autocomplete$AutoState = F6(
	function (a, b, c, d, e, f) {
		return {autoState: a, showMenu: b, query: c, isFocused: d, howManyToShow: e, debounce: f};
	});
var _user$project$Views_Autocomplete$ViewConfig = F3(
	function (a, b, c) {
		return {menuConfig: a, options: b, tagger: c};
	});
var _user$project$Views_Autocomplete$State = function (a) {
	return {ctor: 'State', _0: a};
};
var _user$project$Views_Autocomplete$updateIfFocused = F2(
	function (originalState, newState) {
		return originalState.isFocused ? newState : A2(
			_user$project$Util_ops['=>'],
			_user$project$Views_Autocomplete$State(originalState),
			_elm_lang$core$Platform_Cmd$none);
	});
var _user$project$Views_Autocomplete$None = {ctor: 'None'};
var _user$project$Views_Autocomplete$PreviewInput = F2(
	function (a, b) {
		return {ctor: 'PreviewInput', _0: a, _1: b};
	});
var _user$project$Views_Autocomplete$UserInput = function (a) {
	return {ctor: 'UserInput', _0: a};
};
var _user$project$Views_Autocomplete$init = F2(
	function (howManyToShow, query) {
		return _user$project$Views_Autocomplete$State(
			{
				autoState: _thebritican$elm_autocomplete$Autocomplete$empty,
				showMenu: false,
				query: _user$project$Views_Autocomplete$UserInput(query),
				isFocused: false,
				howManyToShow: howManyToShow,
				debounce: _mpizenberg$elm_debounce$Control$initialState
			});
	});
var _user$project$Views_Autocomplete$RefreshMenu = {ctor: 'RefreshMenu'};
var _user$project$Views_Autocomplete$Deb = function (a) {
	return {ctor: 'Deb', _0: a};
};
var _user$project$Views_Autocomplete$debounce = function (seconds) {
	return A2(_mpizenberg$elm_debounce$Control_Debounce$trailing, _user$project$Views_Autocomplete$Deb, seconds * _elm_lang$core$Time$second);
};
var _user$project$Views_Autocomplete$ItemSelected = function (a) {
	return {ctor: 'ItemSelected', _0: a};
};
var _user$project$Views_Autocomplete$ShowMenu = function (a) {
	return {ctor: 'ShowMenu', _0: a};
};
var _user$project$Views_Autocomplete$updateWithConfig = F4(
	function (msg, config, items, _p4) {
		var _p5 = _p4;
		var _p23 = _p5._0;
		var _p6 = msg;
		switch (_p6.ctor) {
			case 'Wrap':
				var _p8 = _p6._0;
				var autoState = _p23.autoState;
				var howManyToShow = _p23.howManyToShow;
				var filteredItems = A2(_user$project$Views_Autocomplete$matchingItems, _p23.query, items);
				var newAutoState = _p8 ? A4(_thebritican$elm_autocomplete$Autocomplete$resetToLastItem, config, filteredItems, howManyToShow, autoState) : A4(_thebritican$elm_autocomplete$Autocomplete$resetToFirstItem, config, filteredItems, howManyToShow, autoState);
				var text = _p8 ? A2(
					_elm_lang$core$Maybe$withDefault,
					'',
					A2(
						_elm_lang$core$Maybe$map,
						function (_) {
							return _.label;
						},
						_elm_lang$core$List$head(
							_elm_lang$core$List$reverse(filteredItems)))) : A2(
					_elm_lang$core$Maybe$withDefault,
					'',
					A2(
						_elm_lang$core$Maybe$map,
						function (_) {
							return _.label;
						},
						_elm_lang$core$List$head(filteredItems)));
				var query = function () {
					var _p7 = _p23.query;
					switch (_p7.ctor) {
						case 'None':
							return A2(_user$project$Views_Autocomplete$PreviewInput, '', text);
						case 'UserInput':
							return A2(_user$project$Views_Autocomplete$PreviewInput, _p7._0, text);
						default:
							return A2(_user$project$Views_Autocomplete$PreviewInput, _p7._0, text);
					}
				}();
				return A2(
					_user$project$Views_Autocomplete$updateIfFocused,
					_p23,
					A2(
						_user$project$Util_ops['=>'],
						_user$project$Views_Autocomplete$State(
							_elm_lang$core$Native_Utils.update(
								_p23,
								{autoState: newAutoState, query: query})),
						_elm_lang$core$Platform_Cmd$none));
			case 'ResetMenu':
				return A2(
					_user$project$Views_Autocomplete$updateIfFocused,
					_p23,
					A2(
						_user$project$Util_ops['=>'],
						_user$project$Views_Autocomplete$State(
							_elm_lang$core$Native_Utils.update(
								_p23,
								{
									autoState: A2(_thebritican$elm_autocomplete$Autocomplete$reset, config, _p23.autoState)
								})),
						_elm_lang$core$Platform_Cmd$none));
			case 'ItemSelected':
				var _p9 = A2(_user$project$Views_Autocomplete$getLabelById, _p6._0, items);
				if (_p9.ctor === 'Ok') {
					return A2(
						_user$project$Views_Autocomplete$updateIfFocused,
						_p23,
						A2(
							_user$project$Util_ops['=>'],
							_user$project$Views_Autocomplete$State(
								_elm_lang$core$Native_Utils.update(
									_p23,
									{
										query: _user$project$Views_Autocomplete$UserInput(_p9._0)
									})),
							_elm_lang$core$Platform_Cmd$none));
				} else {
					return A2(
						_elm_lang$core$Debug$log,
						_p9._0,
						A2(
							_user$project$Util_ops['=>'],
							_user$project$Views_Autocomplete$State(_p23),
							_elm_lang$core$Platform_Cmd$none));
				}
			case 'PreviewItem':
				var _p10 = A2(_user$project$Views_Autocomplete$getLabelById, _p6._0, items);
				if (_p10.ctor === 'Ok') {
					var _p12 = _p10._0;
					var query = function () {
						var _p11 = _p23.query;
						switch (_p11.ctor) {
							case 'None':
								return A2(_user$project$Views_Autocomplete$PreviewInput, '', _p12);
							case 'UserInput':
								return A2(_user$project$Views_Autocomplete$PreviewInput, _p11._0, _p12);
							default:
								return A2(_user$project$Views_Autocomplete$PreviewInput, _p11._0, _p12);
						}
					}();
					return A2(
						_user$project$Views_Autocomplete$updateIfFocused,
						_p23,
						A2(
							_user$project$Util_ops['=>'],
							_user$project$Views_Autocomplete$State(
								_elm_lang$core$Native_Utils.update(
									_p23,
									{query: query})),
							_elm_lang$core$Platform_Cmd$none));
				} else {
					return A2(
						_elm_lang$core$Debug$log,
						_p10._0,
						A2(
							_user$project$Util_ops['=>'],
							_user$project$Views_Autocomplete$State(_p23),
							_elm_lang$core$Platform_Cmd$none));
				}
			case 'UpdateAutocomplete':
				if (_p23.isFocused) {
					var _p13 = A5(
						_thebritican$elm_autocomplete$Autocomplete$update,
						config,
						_p6._0,
						_p23.howManyToShow,
						_p23.autoState,
						A2(_user$project$Views_Autocomplete$matchingItems, _p23.query, items));
					var autoState = _p13._0;
					var nextAutoMsg = _p13._1;
					var newState = _user$project$Views_Autocomplete$State(
						_elm_lang$core$Native_Utils.update(
							_p23,
							{autoState: autoState}));
					var _p14 = nextAutoMsg;
					if (_p14.ctor === 'Nothing') {
						return A2(_user$project$Util_ops['=>'], newState, _elm_lang$core$Platform_Cmd$none);
					} else {
						return A2(
							_user$project$Util_ops['=>'],
							newState,
							A2(
								_elm_lang$core$Task$perform,
								function (_p15) {
									return _p14._0;
								},
								_elm_lang$core$Task$succeed(
									{ctor: '_Tuple0'})));
					}
				} else {
					return A2(
						_user$project$Util_ops['=>'],
						_user$project$Views_Autocomplete$State(_p23),
						_elm_lang$core$Platform_Cmd$none);
				}
			case 'SetText':
				return A2(
					_user$project$Util_ops['=>'],
					_user$project$Views_Autocomplete$State(
						_elm_lang$core$Native_Utils.update(
							_p23,
							{
								query: _user$project$Views_Autocomplete$UserInput(_p6._0)
							})),
					_elm_lang$core$Platform_Cmd$none);
			case 'InputChanged':
				var _p18 = _p6._0;
				var query = function () {
					var _p16 = _p23.query;
					switch (_p16.ctor) {
						case 'UserInput':
							return _user$project$Views_Autocomplete$UserInput(_p18);
						case 'None':
							return _user$project$Views_Autocomplete$UserInput(_p18);
						default:
							var _p17 = _p16._1;
							return _elm_lang$core$Native_Utils.eq(_p17, _p18) ? A2(_user$project$Views_Autocomplete$PreviewInput, _p16._0, _p17) : _user$project$Views_Autocomplete$UserInput(_p18);
					}
				}();
				var autocompleteResults = A2(_user$project$Views_Autocomplete$matchingItems, query, items);
				return A2(
					_user$project$Util_ops['=>'],
					_user$project$Views_Autocomplete$State(
						_elm_lang$core$Native_Utils.update(
							_p23,
							{
								query: query,
								showMenu: A2(_user$project$Views_Autocomplete$shouldShowMenu, query, items),
								isFocused: true
							})),
					_elm_lang$core$Platform_Cmd$none);
			case 'Focused':
				var _p20 = _p6._0;
				var delay = _p20 ? 0 : (0.3 * _elm_lang$core$Time$second);
				var showMenu = _p20 ? A2(_user$project$Views_Autocomplete$shouldShowMenu, _p23.query, items) : false;
				var cmd = A2(
					_elm_lang$core$Task$perform,
					function (_p19) {
						return _user$project$Views_Autocomplete$ShowMenu(showMenu);
					},
					_elm_lang$core$Process$sleep(delay));
				return A2(
					_user$project$Util_ops['=>'],
					_user$project$Views_Autocomplete$State(_p23),
					cmd);
			case 'ShowMenu':
				var _p22 = _p6._0;
				var query = function () {
					var _p21 = _p23.query;
					if (_p21.ctor === 'PreviewInput') {
						return _user$project$Views_Autocomplete$UserInput(_p21._0);
					} else {
						return _p23.query;
					}
				}();
				return A2(
					_user$project$Util_ops['=>'],
					_user$project$Views_Autocomplete$State(
						_elm_lang$core$Native_Utils.update(
							_p23,
							{showMenu: _p22, query: query, isFocused: _p22})),
					_elm_lang$core$Platform_Cmd$none);
			case 'Deb':
				return A3(
					_mpizenberg$elm_debounce$Control$update,
					function (s) {
						return _user$project$Views_Autocomplete$State(
							_elm_lang$core$Native_Utils.update(
								_p23,
								{debounce: s}));
					},
					_p23.debounce,
					_p6._0);
			default:
				return A2(
					_user$project$Util_ops['=>'],
					_user$project$Views_Autocomplete$State(
						_elm_lang$core$Native_Utils.update(
							_p23,
							{
								showMenu: _p23.isFocused && A2(_user$project$Views_Autocomplete$shouldShowMenu, _p23.query, items)
							})),
					_elm_lang$core$Platform_Cmd$none);
		}
	});
var _user$project$Views_Autocomplete$PreviewItem = function (a) {
	return {ctor: 'PreviewItem', _0: a};
};
var _user$project$Views_Autocomplete$Focused = function (a) {
	return {ctor: 'Focused', _0: a};
};
var _user$project$Views_Autocomplete$Wrap = function (a) {
	return {ctor: 'Wrap', _0: a};
};
var _user$project$Views_Autocomplete$ResetMenu = {ctor: 'ResetMenu'};
var _user$project$Views_Autocomplete$simpleUpdateConfig = _thebritican$elm_autocomplete$Autocomplete$updateConfig(
	{
		toId: function (item) {
			return _elm_lang$core$Basics$toString(item.id);
		},
		onKeyDown: F2(
			function (code, maybeId) {
				return (_elm_lang$core$Native_Utils.eq(code, 38) || _elm_lang$core$Native_Utils.eq(code, 40)) ? A2(_elm_lang$core$Maybe$map, _user$project$Views_Autocomplete$PreviewItem, maybeId) : (_elm_lang$core$Native_Utils.eq(code, 13) ? A2(_elm_lang$core$Maybe$map, _user$project$Views_Autocomplete$ItemSelected, maybeId) : _elm_lang$core$Maybe$Just(_user$project$Views_Autocomplete$ResetMenu));
			}),
		onTooLow: _elm_lang$core$Maybe$Just(
			_user$project$Views_Autocomplete$Wrap(false)),
		onTooHigh: _elm_lang$core$Maybe$Just(
			_user$project$Views_Autocomplete$Wrap(true)),
		onMouseEnter: function (id) {
			return _elm_lang$core$Maybe$Just(
				_user$project$Views_Autocomplete$PreviewItem(id));
		},
		onMouseLeave: function (_p24) {
			return _elm_lang$core$Maybe$Nothing;
		},
		onMouseClick: function (id) {
			return _elm_lang$core$Maybe$Just(
				_user$project$Views_Autocomplete$ItemSelected(id));
		},
		separateSelections: false
	});
var _user$project$Views_Autocomplete$simpleUpdate = F3(
	function (msg, items, state) {
		return A4(_user$project$Views_Autocomplete$updateWithConfig, msg, _user$project$Views_Autocomplete$simpleUpdateConfig, items, state);
	});
var _user$project$Views_Autocomplete$InputChanged = function (a) {
	return {ctor: 'InputChanged', _0: a};
};
var _user$project$Views_Autocomplete$inputView = F3(
	function (tagger, options, text) {
		return _rundis$elm_bootstrap$Bootstrap_Form_Input$text(
			_elm_lang$core$List$concat(
				{
					ctor: '::',
					_0: options,
					_1: {
						ctor: '::',
						_0: {
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$onInput(
								function (_p25) {
									return tagger(
										_user$project$Views_Autocomplete$InputChanged(_p25));
								}),
							_1: {
								ctor: '::',
								_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$value(text),
								_1: {
									ctor: '::',
									_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$attrs(
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onFocus(
												tagger(
													A2(
														_user$project$Views_Autocomplete$debounce,
														0.3,
														_user$project$Views_Autocomplete$Focused(true)))),
											_1: {
												ctor: '::',
												_0: A3(
													_elm_lang$html$Html_Events$onWithOptions,
													'blur',
													{stopPropagation: true, preventDefault: true},
													_elm_lang$core$Json_Decode$succeed(
														tagger(
															A2(
																_user$project$Views_Autocomplete$debounce,
																0.3,
																_user$project$Views_Autocomplete$Focused(false))))),
												_1: {ctor: '[]'}
											}
										}),
									_1: {ctor: '[]'}
								}
							}
						},
						_1: {ctor: '[]'}
					}
				}));
	});
var _user$project$Views_Autocomplete$SetText = function (a) {
	return {ctor: 'SetText', _0: a};
};
var _user$project$Views_Autocomplete$UpdateAutocomplete = function (a) {
	return {ctor: 'UpdateAutocomplete', _0: a};
};
var _user$project$Views_Autocomplete$splitView = F3(
	function (config, items, _p26) {
		var _p27 = _p26;
		var _p30 = _p27._0;
		var textValue = function () {
			var _p28 = _p30.query;
			switch (_p28.ctor) {
				case 'UserInput':
					return _p28._0;
				case 'None':
					return '';
				default:
					return _p28._1;
			}
		}();
		var inputField = A3(_user$project$Views_Autocomplete$inputView, config.tagger, config.options, textValue);
		if (!_p30.showMenu) {
			return {ctor: '_Tuple2', _0: inputField, _1: _elm_lang$core$Maybe$Nothing};
		} else {
			var filteredItems = A2(_user$project$Views_Autocomplete$matchingItems, _p30.query, items);
			var autocompleteMenu = A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('autocomplete-menu'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$map,
						function (_p29) {
							return config.tagger(
								_user$project$Views_Autocomplete$UpdateAutocomplete(_p29));
						},
						A4(_thebritican$elm_autocomplete$Autocomplete$view, config.menuConfig, _p30.howManyToShow, _p30.autoState, filteredItems)),
					_1: {ctor: '[]'}
				});
			return {
				ctor: '_Tuple2',
				_0: inputField,
				_1: _elm_lang$core$Maybe$Just(autocompleteMenu)
			};
		}
	});
var _user$project$Views_Autocomplete$viewWithConfig = F3(
	function (config, items, state) {
		var _p31 = A3(_user$project$Views_Autocomplete$splitView, config, items, state);
		if (_p31._1.ctor === 'Nothing') {
			return A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _p31._0,
					_1: {ctor: '[]'}
				});
		} else {
			return A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _p31._0,
					_1: {
						ctor: '::',
						_0: _p31._1._0,
						_1: {ctor: '[]'}
					}
				});
		}
	});
var _user$project$Views_Autocomplete$simpleView = F3(
	function (tagger, items, state) {
		var config = {
			menuConfig: _user$project$Views_Autocomplete$simpleMenuViewConfig,
			options: {
				ctor: '::',
				_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$small,
				_1: {ctor: '[]'}
			},
			tagger: tagger
		};
		return A3(_user$project$Views_Autocomplete$viewWithConfig, config, items, state);
	});
var _user$project$Views_Autocomplete$subscription = function (tagger) {
	return A2(
		_elm_lang$core$Platform_Sub$map,
		function (_p32) {
			return tagger(
				_user$project$Views_Autocomplete$UpdateAutocomplete(_p32));
		},
		_thebritican$elm_autocomplete$Autocomplete$subscription);
};

var _user$project$Views_LoaderTop$addAnimationType = F2(
	function (state, props) {
		var display = function () {
			var _p0 = state;
			if (_p0.ctor === 'Error') {
				return {ctor: '[]'};
			} else {
				return {
					ctor: '::',
					_0: _rundis$elm_bootstrap$Bootstrap_Progress$animated,
					_1: {
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Progress$striped,
						_1: {ctor: '[]'}
					}
				};
			}
		}();
		return _elm_lang$core$List$concat(
			{
				ctor: '::',
				_0: display,
				_1: {
					ctor: '::',
					_0: props,
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$Views_LoaderTop$addRole = F2(
	function (state, props) {
		var display = function () {
			var _p1 = state;
			switch (_p1.ctor) {
				case 'Info':
					return {
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Progress$info,
						_1: {ctor: '[]'}
					};
				case 'Warning':
					return {
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Progress$warning,
						_1: {ctor: '[]'}
					};
				case 'Success':
					return {
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Progress$success,
						_1: {ctor: '[]'}
					};
				default:
					return {
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Progress$danger,
						_1: {ctor: '[]'}
					};
			}
		}();
		return _elm_lang$core$List$concat(
			{
				ctor: '::',
				_0: display,
				_1: {
					ctor: '::',
					_0: props,
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$Views_LoaderTop$initialProps = {
	ctor: '::',
	_0: _rundis$elm_bootstrap$Bootstrap_Progress$height(6),
	_1: {
		ctor: '::',
		_0: _rundis$elm_bootstrap$Bootstrap_Progress$value(100),
		_1: {ctor: '[]'}
	}
};
var _user$project$Views_LoaderTop$view = function (page) {
	var loader = function () {
		var _p2 = page.globalState.loaderStatus;
		if (_p2.ctor === 'Nothing') {
			return _elm_lang$html$Html$text('');
		} else {
			var _p3 = _p2._0;
			return A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('loader-top'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _rundis$elm_bootstrap$Bootstrap_Progress$progress(
						A2(
							_user$project$Views_LoaderTop$addAnimationType,
							_p3,
							A2(_user$project$Views_LoaderTop$addRole, _p3, _user$project$Views_LoaderTop$initialProps))),
					_1: {ctor: '[]'}
				});
		}
	}();
	return loader;
};

var _user$project$Views_Modal$view = function (config) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Modal$view,
		config.modal,
		A3(
			_rundis$elm_bootstrap$Bootstrap_Modal$footer,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_rundis$elm_bootstrap$Bootstrap_Button$button,
					{
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Button$secondary,
						_1: {
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Button$small,
							_1: {
								ctor: '::',
								_0: _rundis$elm_bootstrap$Bootstrap_Button$onClick(
									config.tagger(_rundis$elm_bootstrap$Bootstrap_Modal$hiddenState)),
								_1: {ctor: '[]'}
							}
						}
					},
					{
						ctor: '::',
						_0: _Fresheyeball$elm_font_awesome$FontAwesome_Web$times_circle,
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html$text(' Close'),
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			},
			A3(
				_rundis$elm_bootstrap$Bootstrap_Modal$body,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('list-modal'),
					_1: {ctor: '[]'}
				},
				{ctor: '[]'},
				A3(
					_rundis$elm_bootstrap$Bootstrap_Modal$h3,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(config.title),
						_1: {ctor: '[]'}
					},
					_rundis$elm_bootstrap$Bootstrap_Modal$large(
						_rundis$elm_bootstrap$Bootstrap_Modal$config(config.tagger))))));
};
var _user$project$Views_Modal$buttonClose = function (clickHandler) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Button$button,
		{
			ctor: '::',
			_0: _rundis$elm_bootstrap$Bootstrap_Button$secondary,
			_1: {
				ctor: '::',
				_0: _rundis$elm_bootstrap$Bootstrap_Button$small,
				_1: {
					ctor: '::',
					_0: _rundis$elm_bootstrap$Bootstrap_Button$attrs(
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(clickHandler),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}
		},
		{
			ctor: '::',
			_0: _Fresheyeball$elm_font_awesome$FontAwesome_Web$times_circle,
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html$text(_krisajenkins$elm_exts$Exts_Html$nbsp),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html$text('Close'),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Views_Modal$Config = F2(
	function (a, b) {
		return {title: a, tagger: b};
	});

var _user$project$Views_NavigationTop$navbarDropdownItem = function (config) {
	var buttonAttrs = function () {
		var _p0 = config.clickAction;
		if (_p0.ctor === 'Just') {
			return {
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(_p0._0),
				_1: {ctor: '[]'}
			};
		} else {
			return {
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(_user$project$Types$NoOp),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$href(
						A2(_elm_lang$core$Basics_ops['++'], '#', config.link)),
					_1: {ctor: '[]'}
				}
			};
		}
	}();
	var buttonElement = A2(
		_rundis$elm_bootstrap$Bootstrap_Navbar$dropdownItem,
		buttonAttrs,
		{
			ctor: '::',
			_0: config.icon,
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html$text(config.label),
				_1: {ctor: '[]'}
			}
		});
	return buttonElement;
};
var _user$project$Views_NavigationTop$navbarItem = function (config) {
	var buttonAttrs = function () {
		var _p1 = config.clickAction;
		if (_p1.ctor === 'Just') {
			return {
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(_p1._0),
				_1: {ctor: '[]'}
			};
		} else {
			return {
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(_user$project$Types$NoOp),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$href(
						A2(_elm_lang$core$Basics_ops['++'], '#', config.link)),
					_1: {ctor: '[]'}
				}
			};
		}
	}();
	var buttonElement = A2(
		_rundis$elm_bootstrap$Bootstrap_Navbar$itemLink,
		buttonAttrs,
		{
			ctor: '::',
			_0: config.icon,
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html$text(config.label),
				_1: {ctor: '[]'}
			}
		});
	return buttonElement;
};
var _user$project$Views_NavigationTop$subItemToList = function (_p2) {
	var _p3 = _p2;
	return _p3._0;
};
var _user$project$Views_NavigationTop$getChildren = function (_p4) {
	return _user$project$Views_NavigationTop$subItemToList(
		function (_) {
			return _.children;
		}(_p4));
};
var _user$project$Views_NavigationTop$navbarDropdownList = function (config) {
	return _rundis$elm_bootstrap$Bootstrap_Navbar$dropdown(
		{
			id: config.id,
			toggle: A2(
				_rundis$elm_bootstrap$Bootstrap_Navbar$dropdownToggle,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: config.icon,
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html$text(config.label),
						_1: {ctor: '[]'}
					}
				}),
			items: A2(
				_elm_lang$core$List$map,
				_user$project$Views_NavigationTop$navbarDropdownItem,
				_user$project$Views_NavigationTop$getChildren(config))
		});
};
var _user$project$Views_NavigationTop$drawNavigationItems = F2(
	function (itemList, top) {
		var nodes = A2(
			_elm_lang$core$List$map,
			function (item) {
				var _p5 = _user$project$Views_NavigationTop$getChildren(item);
				if (_p5.ctor === '[]') {
					return _user$project$Views_NavigationTop$navbarItem(item);
				} else {
					return _user$project$Views_NavigationTop$navbarDropdownList(item);
				}
			},
			itemList);
		return nodes;
	});
var _user$project$Views_NavigationTop$Item = F7(
	function (a, b, c, d, e, f, g) {
		return {id: a, label: b, link: c, icon: d, enabled: e, children: f, clickAction: g};
	});
var _user$project$Views_NavigationTop$SubItem = function (a) {
	return {ctor: 'SubItem', _0: a};
};
var _user$project$Views_NavigationTop$items = function (session) {
	return {
		ctor: '::',
		_0: {
			id: 'administration',
			label: 'Administration',
			link: 'administration',
			icon: _Fresheyeball$elm_font_awesome$FontAwesome_Web$bars,
			enabled: false,
			children: _user$project$Views_NavigationTop$SubItem(
				{
					ctor: '::',
					_0: {
						id: 'security',
						label: 'Security',
						link: 'administration/security',
						icon: _Fresheyeball$elm_font_awesome$FontAwesome_Web$lock,
						enabled: true,
						children: _user$project$Views_NavigationTop$SubItem(
							{ctor: '[]'}),
						clickAction: _elm_lang$core$Maybe$Nothing
					},
					_1: {ctor: '[]'}
				}),
			clickAction: _elm_lang$core$Maybe$Nothing
		},
		_1: {
			ctor: '::',
			_0: {
				id: 'myProfile',
				label: 'My Profile',
				link: 'myProfile',
				icon: _Fresheyeball$elm_font_awesome$FontAwesome_Web$user,
				enabled: false,
				children: _user$project$Views_NavigationTop$SubItem(
					{ctor: '[]'}),
				clickAction: _elm_lang$core$Maybe$Nothing
			},
			_1: {
				ctor: '::',
				_0: {
					id: 'logout',
					label: 'Logout',
					link: 'logout',
					icon: _Fresheyeball$elm_font_awesome$FontAwesome_Web$key,
					enabled: true,
					children: _user$project$Views_NavigationTop$SubItem(
						{ctor: '[]'}),
					clickAction: _elm_lang$core$Maybe$Nothing
				},
				_1: {ctor: '[]'}
			}
		}
	};
};
var _user$project$Views_NavigationTop$view = function (session) {
	var navItems = _user$project$Views_NavigationTop$items(session);
	var filteredItems = A2(
		_elm_lang$core$List$filter,
		function (_) {
			return _.enabled;
		},
		navItems);
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Navbar$view,
		session.navbarState,
		A2(
			_rundis$elm_bootstrap$Bootstrap_Navbar$items,
			A2(_user$project$Views_NavigationTop$drawNavigationItems, filteredItems, true),
			A3(
				_rundis$elm_bootstrap$Bootstrap_Navbar$brand,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$href('#'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$img,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$src('images/if_lock_60740.png'),
							_1: {ctor: '[]'}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html$text('My Awesomely Secured Application '),
						_1: {ctor: '[]'}
					}
				},
				_rundis$elm_bootstrap$Bootstrap_Navbar$primary(
					_rundis$elm_bootstrap$Bootstrap_Navbar$withAnimation(
						_rundis$elm_bootstrap$Bootstrap_Navbar$config(_user$project$Types$NavbarMsg))))));
};

var _user$project$App$clearUser = function (model) {
	var session = model.session;
	var newModel = _elm_lang$core$Native_Utils.update(
		model,
		{
			session: _elm_lang$core$Native_Utils.update(
				session,
				{user: _elm_lang$core$Maybe$Nothing})
		});
	return newModel;
};
var _user$project$App$setConnectionStatus = F2(
	function (enabled, model) {
		var globalState = model.globalState;
		var newModel = _elm_lang$core$Native_Utils.update(
			model,
			{
				globalState: _elm_lang$core$Native_Utils.update(
					globalState,
					{connected: enabled})
			});
		return newModel;
	});
var _user$project$App$getAuthToken = function (model) {
	var _p0 = model.session.user;
	if (_p0.ctor === 'Nothing') {
		return _user$project$Data_AuthToken$AuthToken('');
	} else {
		return _p0._0.guardian_token;
	}
};
var _user$project$App$getGuardianToken = function (model) {
	var _p1 = model.session.user;
	if (_p1.ctor === 'Nothing') {
		return '';
	} else {
		return _user$project$Data_AuthToken$authTokenToString(_p1._0.guardian_token);
	}
};
var _user$project$App$updateNavbar = F2(
	function (state, model) {
		var session = model.session;
		var newSession = _elm_lang$core$Native_Utils.update(
			session,
			{navbarState: state});
		var newModel = _elm_lang$core$Native_Utils.update(
			model,
			{session: newSession});
		return A2(_user$project$Util_ops['=>'], newModel, _elm_lang$core$Platform_Cmd$none);
	});
var _user$project$App$updateAlert = F2(
	function (state, alert) {
		return _elm_lang$core$Native_Utils.update(
			state,
			{alert: alert});
	});
var _user$project$App$getRoute = function (model) {
	var _p2 = model.pageState;
	_v2_3:
	do {
		if (_p2.ctor === 'Loaded') {
			switch (_p2._0.ctor) {
				case 'Main':
					return _user$project$Route$Main;
				case 'Login':
					return _user$project$Route$Login;
				case 'AdministrationSecurity':
					return _user$project$Route$AdministrationSecurity;
				default:
					break _v2_3;
			}
		} else {
			break _v2_3;
		}
	} while(false);
	return _user$project$Route$Main;
};
var _user$project$App$receiveAppPermissionSetsAccordion = function (accordionState) {
	return _user$project$Types$AdministrationSecurityMsg(
		_user$project$Page_Administration_Security$AccordionMsg(accordionState));
};
var _user$project$App$receiveAppPermissionSets = function (appPermissionsSet) {
	return _user$project$Types$AdministrationSecurityMsg(
		_user$project$Page_Administration_Security$ReceiveAppPermissionSets(appPermissionsSet));
};
var _user$project$App$receiveAppRoles = function (appRoles) {
	return _user$project$Types$AdministrationSecurityMsg(
		_user$project$Page_Administration_Security$ReceiveAppRoles(appRoles));
};
var _user$project$App$receiveToken = function (guardian_token) {
	return _user$project$Types$LoginMsg(
		_user$project$Page_Login$GetSecurityToken(guardian_token));
};
var _user$project$App$receiveUsernameCache = function (cacheData) {
	return _user$project$Types$LoginMsg(
		_user$project$Page_Login$GetCachedUsername(cacheData));
};
var _user$project$App$receiveUnauthorizedMsg = function (subMsg) {
	return _user$project$Types$LoginMsg(
		_user$project$Page_Login$ReceiveUnauthorizedMessage(subMsg));
};
var _user$project$App$receiveLogoutMsg = function (subMsg) {
	return _user$project$Types$LoginMsg(
		_user$project$Page_Login$ReceiveLoginMessage(subMsg));
};
var _user$project$App$receiveLoginMsg = function (subMsg) {
	return _user$project$Types$LoginMsg(
		_user$project$Page_Login$ReceiveLoginMessage(subMsg));
};
var _user$project$App$navbarSubscriptions = function (model) {
	return {
		ctor: '::',
		_0: A2(_rundis$elm_bootstrap$Bootstrap_Navbar$subscriptions, model.session.navbarState, _user$project$Types$NavbarMsg),
		_1: {ctor: '[]'}
	};
};
var _user$project$App$portSubscriptions = {
	ctor: '::',
	_0: _user$project$Ports$sendUsernameCache(_user$project$App$receiveUsernameCache),
	_1: {
		ctor: '::',
		_0: _user$project$Ports$sendSecurityToken(_user$project$App$receiveToken),
		_1: {ctor: '[]'}
	}
};
var _user$project$App$pageSubscriptions = F2(
	function (auth, page) {
		var subs = function () {
			var _p3 = page;
			switch (_p3.ctor) {
				case 'Main':
					return _elm_lang$core$Platform_Sub$none;
				case 'Link':
					return _elm_lang$core$Platform_Sub$none;
				case 'AdministrationSecurity':
					return _elm_lang$core$Platform_Sub$none;
				case 'Blank':
					return _elm_lang$core$Platform_Sub$none;
				case 'Errored':
					return _elm_lang$core$Platform_Sub$none;
				case 'PermissionError':
					return _elm_lang$core$Platform_Sub$none;
				case 'NotFound':
					return _elm_lang$core$Platform_Sub$none;
				default:
					return _elm_lang$core$Platform_Sub$none;
			}
		}();
		return {
			ctor: '::',
			_0: subs,
			_1: {ctor: '[]'}
		};
	});
var _user$project$App$getPage = function (pageState) {
	var _p4 = pageState;
	if (_p4.ctor === 'Loaded') {
		return _p4._0;
	} else {
		return _p4._0;
	}
};
var _user$project$App$localStorageChangeSub = _user$project$Ports$localStorageChanged(
	_elm_lang$core$Json_Decode$decodeValue(_user$project$Data_LocalStorageChange$decoder));
var _user$project$App$channels = function (username) {
	return A3(
		_saschatimme$elm_phoenix$Phoenix_Channel$on,
		'login:unauthorized',
		_user$project$App$receiveUnauthorizedMsg,
		A3(
			_saschatimme$elm_phoenix$Phoenix_Channel$on,
			'user:guardian_token',
			_user$project$App$receiveLoginMsg,
			A2(
				_saschatimme$elm_phoenix$Phoenix_Channel$withPayload,
				_elm_lang$core$Json_Encode$object(
					{
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'username',
							_1: _elm_lang$core$Json_Encode$string(username)
						},
						_1: {ctor: '[]'}
					}),
				_saschatimme$elm_phoenix$Phoenix_Channel$init(
					A2(_elm_lang$core$Basics_ops['++'], 'login:', username)))));
};
var _user$project$App$initPhxLogin = function (model) {
	var guardianToken = _user$project$App$getGuardianToken(model);
	var loginData = function () {
		var _p5 = model.pageState;
		if ((_p5.ctor === 'Loaded') && (_p5._0.ctor === 'Login')) {
			return _p5._0._0;
		} else {
			return _user$project$Page_Login$initialModel;
		}
	}();
	var auth = (_elm_lang$core$Native_Utils.cmp(
		_elm_lang$core$String$length(guardianToken),
		0) > 0) ? {
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'jwt', _1: guardianToken},
		_1: {ctor: '[]'}
	} : {
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'username', _1: loginData.username},
		_1: {
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'password',
				_1: _elm_lang$http$Http$encodeUri(loginData.password)
			},
			_1: {ctor: '[]'}
		}
	};
	return A2(
		_saschatimme$elm_phoenix$Phoenix_Socket$onAbnormalClose,
		_user$project$Types$SocketClosedAbnormally,
		A2(
			_saschatimme$elm_phoenix$Phoenix_Socket$withParams,
			_elm_lang$core$List$concat(
				{
					ctor: '::',
					_0: auth,
					_1: {ctor: '[]'}
				}),
			_saschatimme$elm_phoenix$Phoenix_Socket$withDebug(
				_saschatimme$elm_phoenix$Phoenix_Socket$init(_user$project$Common_Connection$socketUrl))));
};
var _user$project$App$phoenixSubscriptions = function (model) {
	var token = _user$project$App$getGuardianToken(model);
	var username = _user$project$Data_User$getUsername(model.session.user);
	var auth = {username: username, token: token};
	var channelList = function () {
		var pageChannels = A2(
			_elm_lang$core$List$map,
			function (channel) {
				return A2(_saschatimme$elm_phoenix$Phoenix_Channel$onJoinError, _user$project$Types$ChannelJoinError, channel);
			},
			function () {
				var _p6 = model.pageState;
				if ((_p6.ctor === 'Loaded') && (_p6._0.ctor === 'AdministrationSecurity')) {
					return {
						ctor: '::',
						_0: A2(
							_user$project$Page_Administration_Security$channels,
							auth,
							{onAppPermissionsSet: _user$project$App$receiveAppPermissionSets, onAppRoles: _user$project$App$receiveAppRoles}),
						_1: {ctor: '[]'}
					};
				} else {
					var x = A2(_elm_lang$core$Debug$log, 'UNHANDLED CHANNELS FOR PAGE: ', model.pageState);
					return {ctor: '[]'};
				}
			}());
		return ((_elm_lang$core$Native_Utils.cmp(
			_elm_lang$core$String$length(username),
			0) > 0) && (_elm_lang$core$Native_Utils.cmp(
			_elm_lang$core$String$length(token),
			0) > 0)) ? _elm_lang$core$List$concat(
			{
				ctor: '::',
				_0: {
					ctor: '::',
					_0: _user$project$App$channels(username),
					_1: {ctor: '[]'}
				},
				_1: {
					ctor: '::',
					_0: _elm_lang$core$List$concat(
						{
							ctor: '::',
							_0: pageChannels,
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}) : {
			ctor: '::',
			_0: _user$project$App$channels(username),
			_1: {ctor: '[]'}
		};
	}();
	return model.globalState.connected ? {
		ctor: '::',
		_0: A2(
			_saschatimme$elm_phoenix$Phoenix$connect,
			_user$project$App$initPhxLogin(model),
			channelList),
		_1: {ctor: '[]'}
	} : {ctor: '[]'};
};
var _user$project$App$loader = function (page) {
	return _user$project$Views_LoaderTop$view(page);
};
var _user$project$App$navbar = function (session) {
	return _user$project$Views_NavigationTop$view(session);
};
var _user$project$App$navbarPage = function (page) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('page-frame'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _user$project$App$loader(page),
			_1: {
				ctor: '::',
				_0: _user$project$App$navbar(page.session),
				_1: {
					ctor: '::',
					_0: page.content,
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$App$screenPopsPage = function (page) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('page-frame gray-background'),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'height', _1: '100vh'},
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: _user$project$App$loader(page),
			_1: {
				ctor: '::',
				_0: page.content,
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$App$pageWithoutNavbar = function (page) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('page-frame'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _user$project$App$loader(page),
			_1: {
				ctor: '::',
				_0: page.content,
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$App$decodeTokenFromJson = function (json) {
	return A2(
		_elm_lang$core$Maybe$andThen,
		function (_p7) {
			return _elm_lang$core$Result$toMaybe(
				A2(_elm_lang$core$Json_Decode$decodeString, _user$project$Data_AuthToken$decoder, _p7));
		},
		_elm_lang$core$Result$toMaybe(
			A2(_elm_lang$core$Json_Decode$decodeValue, _elm_lang$core$Json_Decode$string, json)));
};
var _user$project$App$decodeUserFromJson = function (json) {
	return A2(
		_elm_lang$core$Maybe$andThen,
		function (_p8) {
			return _elm_lang$core$Result$toMaybe(
				A2(_elm_lang$core$Json_Decode$decodeString, _user$project$Data_User$decoder, _p8));
		},
		_elm_lang$core$Result$toMaybe(
			A2(_elm_lang$core$Json_Decode$decodeValue, _elm_lang$core$Json_Decode$string, json)));
};
var _user$project$App$windowSize = A2(_elm_lang$core$Task$perform, _user$project$Types$WindowSize, _elm_lang$window$Window$size);
var _user$project$App$Model = F3(
	function (a, b, c) {
		return {session: a, pageState: b, globalState: c};
	});
var _user$project$App$GlobalState = F7(
	function (a, b, c, d, e, f, g) {
		return {connected: a, loaderStatus: b, currentDatetime: c, alert: d, debugLevel: e, windowSize: f, lastRoute: g};
	});
var _user$project$App$PageInputs = F3(
	function (a, b, c) {
		return {globalState: a, session: b, content: c};
	});
var _user$project$App$viewPage = F4(
	function (globalState, session, isLoading, page) {
		var frame = A3(_user$project$Views_Page$frame, isLoading, session, session.user);
		var content = function () {
			var _p9 = page;
			switch (_p9.ctor) {
				case 'NotFound':
					return A2(
						frame,
						_user$project$Views_Page$Other,
						_user$project$Page_NotFound$view(session));
				case 'Main':
					return A2(
						_elm_lang$html$Html$map,
						_user$project$Types$MainMsg,
						A2(
							frame,
							_user$project$Views_Page$Other,
							_user$project$Page_Main$view(session)));
				case 'Link':
					return A2(
						_elm_lang$html$Html$map,
						_user$project$Types$LinkMsg,
						A2(
							frame,
							_user$project$Views_Page$Other,
							_user$project$Page_Link$view(_p9._0)));
				case 'Blank':
					return A2(
						frame,
						_user$project$Views_Page$Other,
						_elm_lang$html$Html$text(''));
				case 'Errored':
					return A2(
						frame,
						_user$project$Views_Page$Other,
						A2(_user$project$Page_Errored$view, session, _p9._0));
				case 'PermissionError':
					return A2(
						frame,
						_user$project$Views_Page$Other,
						A2(_user$project$Page_PermissionError$view, session, _p9._0));
				case 'Login':
					return A2(
						_elm_lang$html$Html$map,
						_user$project$Types$LoginMsg,
						A2(
							frame,
							_user$project$Views_Page$Other,
							_user$project$Page_Login$view(_p9._0)));
				default:
					return A2(
						_elm_lang$html$Html$map,
						_user$project$Types$AdministrationSecurityMsg,
						A2(
							frame,
							_user$project$Views_Page$Other,
							_user$project$Page_Administration_Security$view(_p9._0)));
			}
		}();
		var pageInputs = A3(_user$project$App$PageInputs, globalState, session, content);
		var pageWithWrapper = function () {
			var _p10 = {ctor: '_Tuple2', _0: session.user, _1: page};
			if (_p10._0.ctor === 'Just') {
				if (_p10._1.ctor === 'Login') {
					return _user$project$App$pageWithoutNavbar(pageInputs);
				} else {
					return _user$project$App$navbarPage(pageInputs);
				}
			} else {
				return _user$project$App$pageWithoutNavbar(pageInputs);
			}
		}();
		var pageWithAlertWrapper = function () {
			var _p11 = globalState.alert;
			if (_p11.ctor === 'Nothing') {
				return pageWithWrapper;
			} else {
				return A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: pageWithWrapper,
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('toast-container'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _user$project$Views_Alert$view(_p11._0),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					});
			}
		}();
		return pageWithAlertWrapper;
	});
var _user$project$App$view = function (model) {
	var _p12 = model.pageState;
	if (_p12.ctor === 'Loaded') {
		return A4(_user$project$App$viewPage, model.globalState, model.session, false, _p12._0);
	} else {
		return A4(_user$project$App$viewPage, model.globalState, model.session, true, _p12._0);
	}
};
var _user$project$App$ChannelAuth = F2(
	function (a, b) {
		return {username: a, token: b};
	});
var _user$project$App$subscriptions = function (model) {
	var channelAuth = A2(
		_user$project$App$ChannelAuth,
		_user$project$Data_User$getUsername(model.session.user),
		_user$project$App$getGuardianToken(model));
	var token = _user$project$App$getGuardianToken(model);
	var username = _user$project$Data_User$getUsername(model.session.user);
	var auth = {username: username, token: token};
	return _elm_lang$core$Platform_Sub$batch(
		_elm_lang$core$List$concat(
			{
				ctor: '::',
				_0: A2(
					_user$project$App$pageSubscriptions,
					auth,
					_user$project$App$getPage(model.pageState)),
				_1: {
					ctor: '::',
					_0: _user$project$App$phoenixSubscriptions(model),
					_1: {
						ctor: '::',
						_0: _user$project$App$portSubscriptions,
						_1: {
							ctor: '::',
							_0: _user$project$App$navbarSubscriptions(model),
							_1: {
								ctor: '::',
								_0: {
									ctor: '::',
									_0: _elm_lang$window$Window$resizes(_user$project$Types$WindowSize),
									_1: {ctor: '[]'}
								},
								_1: {
									ctor: '::',
									_0: {
										ctor: '::',
										_0: A2(_elm_lang$core$Platform_Sub$map, _user$project$Types$LocalStorageChanged, _user$project$App$localStorageChangeSub),
										_1: {ctor: '[]'}
									},
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}));
};
var _user$project$App$NotFound = {ctor: 'NotFound'};
var _user$project$App$Blank = {ctor: 'Blank'};
var _user$project$App$PermissionError = function (a) {
	return {ctor: 'PermissionError', _0: a};
};
var _user$project$App$Errored = function (a) {
	return {ctor: 'Errored', _0: a};
};
var _user$project$App$AdministrationSecurity = function (a) {
	return {ctor: 'AdministrationSecurity', _0: a};
};
var _user$project$App$Login = function (a) {
	return {ctor: 'Login', _0: a};
};
var _user$project$App$Link = function (a) {
	return {ctor: 'Link', _0: a};
};
var _user$project$App$Main = function (a) {
	return {ctor: 'Main', _0: a};
};
var _user$project$App$initialPage = _user$project$App$Main(_user$project$Page_Main$initialModel);
var _user$project$App$TransitioningFrom = function (a) {
	return {ctor: 'TransitioningFrom', _0: a};
};
var _user$project$App$Loaded = function (a) {
	return {ctor: 'Loaded', _0: a};
};
var _user$project$App$pageErrored = F3(
	function (model, activePage, errorMessage) {
		var error = A2(_user$project$Page_Errored$pageLoadError, activePage, errorMessage);
		return A2(
			_user$project$Util_ops['=>'],
			_elm_lang$core$Native_Utils.update(
				model,
				{
					pageState: _user$project$App$Loaded(
						_user$project$App$Errored(error))
				}),
			_elm_lang$core$Platform_Cmd$none);
	});
var _user$project$App$setRoute = F2(
	function (maybeRoute, currentModel) {
		var currentGlobalState = currentModel.globalState;
		var currentValidRoute = _user$project$App$getRoute(currentModel);
		var updatedGlobalState = _elm_lang$core$Native_Utils.update(
			currentGlobalState,
			{
				lastRoute: _elm_lang$core$Maybe$Just(currentValidRoute)
			});
		var model = _elm_lang$core$Native_Utils.update(
			currentModel,
			{globalState: updatedGlobalState});
		var errored = _user$project$App$pageErrored(currentModel);
		var transition = F2(
			function (toMsg, task) {
				return A2(
					_user$project$Util_ops['=>'],
					_elm_lang$core$Native_Utils.update(
						currentModel,
						{
							pageState: _user$project$App$TransitioningFrom(
								_user$project$App$getPage(currentModel.pageState))
						}),
					A2(_elm_lang$core$Task$attempt, toMsg, task));
			});
		var _p13 = maybeRoute;
		if (_p13.ctor === 'Nothing') {
			return A2(
				_user$project$Util_ops['=>'],
				_elm_lang$core$Native_Utils.update(
					model,
					{
						pageState: _user$project$App$Loaded(_user$project$App$NotFound)
					}),
				_elm_lang$core$Platform_Cmd$none);
		} else {
			switch (_p13._0.ctor) {
				case 'Main':
					return A2(
						_user$project$Util_ops['=>'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								pageState: _user$project$App$Loaded(
									_user$project$App$Main(_user$project$Page_Main$initialModel))
							}),
						_elm_lang$core$Platform_Cmd$none);
				case 'Link':
					var user = model.session.user;
					var _p14 = A2(_user$project$Page_Link$init, user, _p13._0._0);
					var newPage = _p14._0;
					var newCmd = _p14._1;
					return A2(
						_user$project$Util_ops['=>'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								pageState: _user$project$App$Loaded(
									_user$project$App$Link(newPage))
							}),
						A2(_elm_lang$core$Platform_Cmd$map, _user$project$Types$LinkMsg, newCmd));
				case 'AdministrationSecurity':
					var _p15 = _user$project$Page_Administration_Security$init(model.session.user);
					var newPage = _p15._0;
					var newCmd = _p15._1;
					return A2(
						_user$project$Util_ops['=>'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								pageState: _user$project$App$Loaded(
									_user$project$App$AdministrationSecurity(newPage))
							}),
						A2(_elm_lang$core$Platform_Cmd$map, _user$project$Types$AdministrationSecurityMsg, newCmd));
				case 'Login':
					var newModel = _user$project$App$clearUser(
						A2(_user$project$App$setConnectionStatus, false, model));
					return A2(
						_user$project$Util_ops['=>'],
						_elm_lang$core$Native_Utils.update(
							newModel,
							{
								pageState: _user$project$App$Loaded(
									_user$project$App$Login(_user$project$Page_Login$initialModel))
							}),
						_elm_lang$core$Platform_Cmd$batch(
							{
								ctor: '::',
								_0: _user$project$Ports$getUsernameCache(''),
								_1: {
									ctor: '::',
									_0: _user$project$Ports$clearSecurityToken(''),
									_1: {
										ctor: '::',
										_0: _user$project$Ports$clearUserCache(''),
										_1: {ctor: '[]'}
									}
								}
							}));
				default:
					var newModel = model;
					var session = model.session;
					return A2(
						_user$project$Util_ops['=>'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								session: _elm_lang$core$Native_Utils.update(
									session,
									{user: _elm_lang$core$Maybe$Nothing})
							}),
						_elm_lang$core$Platform_Cmd$batch(
							{
								ctor: '::',
								_0: _user$project$Route$modifyUrl(_user$project$Route$Login),
								_1: {ctor: '[]'}
							}));
			}
		}
	});
var _user$project$App$init = F2(
	function (_p16, location) {
		var _p17 = _p16;
		var _p18 = _rundis$elm_bootstrap$Bootstrap_Navbar$initialState(_user$project$Types$NavbarMsg);
		var navbarState = _p18._0;
		var navbarCmd = _p18._1;
		var user = _user$project$App$decodeUserFromJson(_p17.userData);
		var _p19 = _user$project$App$getAuthToken(
			{
				session: {user: user}
			});
		var authToken = _p19._0;
		var hasToken = (_elm_lang$core$Native_Utils.cmp(
			_elm_lang$core$String$length(authToken),
			0) > 0) ? true : false;
		var _p20 = A2(
			_user$project$App$setRoute,
			_user$project$Route$fromLocation(location),
			{
				pageState: _user$project$App$Loaded(_user$project$App$initialPage),
				session: {user: user, navbarState: navbarState},
				globalState: {
					connected: hasToken,
					loaderStatus: _elm_lang$core$Maybe$Nothing,
					currentDatetime: _elm_lang$core$Maybe$Just(
						_elm_lang$core$Date$fromTime(_p17.currentTimestamp)),
					alert: _elm_lang$core$Maybe$Nothing,
					debugLevel: _user$project$Common_LocalDebug$Production,
					windowSize: {height: 1920, width: 1080},
					lastRoute: _elm_lang$core$Maybe$Nothing
				}
			});
		var routeState = _p20._0;
		var routeCmd = _p20._1;
		var cmds = hasToken ? {
			ctor: '::',
			_0: _user$project$App$windowSize,
			_1: {
				ctor: '::',
				_0: navbarCmd,
				_1: {
					ctor: '::',
					_0: routeCmd,
					_1: {
						ctor: '::',
						_0: A2(_elm_lang$core$Task$perform, _user$project$Types$GetCurrentDateTime, _elm_lang$core$Date$now),
						_1: {ctor: '[]'}
					}
				}
			}
		} : {
			ctor: '::',
			_0: _user$project$App$windowSize,
			_1: {
				ctor: '::',
				_0: navbarCmd,
				_1: {
					ctor: '::',
					_0: _elm_lang$navigation$Navigation$newUrl('#login'),
					_1: {
						ctor: '::',
						_0: A2(_elm_lang$core$Task$perform, _user$project$Types$GetCurrentDateTime, _elm_lang$core$Date$now),
						_1: {ctor: '[]'}
					}
				}
			}
		};
		return {
			ctor: '_Tuple2',
			_0: routeState,
			_1: _elm_lang$core$Platform_Cmd$batch(cmds)
		};
	});
var _user$project$App$permissionErrored = function (model) {
	var currentRoute = A2(_elm_lang$core$Maybe$withDefault, _user$project$Route$Main, model.globalState.lastRoute);
	var error = _user$project$Page_PermissionError$permissionError(currentRoute);
	return A2(
		_user$project$Util_ops['=>'],
		_elm_lang$core$Native_Utils.update(
			model,
			{
				pageState: _user$project$App$Loaded(
					_user$project$App$PermissionError(error))
			}),
		_elm_lang$core$Platform_Cmd$none);
};
var _user$project$App$updatePage = F3(
	function (page, msg, model) {
		var errored = _user$project$App$pageErrored(model);
		var toPage = F5(
			function (toModel, toMsg, subUpdate, subMsg, subModel) {
				var _p21 = A2(subUpdate, subMsg, subModel);
				var newModel = _p21._0;
				var newCmd = _p21._1;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							pageState: _user$project$App$Loaded(
								toModel(newModel))
						}),
					_1: A2(_elm_lang$core$Platform_Cmd$map, toMsg, newCmd)
				};
			});
		var session = model.session;
		var _p22 = {ctor: '_Tuple2', _0: msg, _1: page};
		_v13_5:
		do {
			_v13_4:
			do {
				switch (_p22._0.ctor) {
					case 'SetRoute':
						return A2(_user$project$App$setRoute, _p22._0._0, model);
					case 'LinkMsg':
						switch (_p22._1.ctor) {
							case 'Link':
								var _p23 = A2(_user$project$Util_ops['=>'], model, _elm_lang$core$Platform_Cmd$none);
								var newModel = _p23._0;
								var newCmds = _p23._1;
								var _p24 = A2(_user$project$Page_Link$update, _p22._0._0, _p22._1._0);
								var pageModel = _p24._0._0;
								var cmd = _p24._0._1;
								var msgFromPage = _p24._1;
								return A2(
									_user$project$Util_ops['=>'],
									_elm_lang$core$Native_Utils.update(
										model,
										{
											pageState: _user$project$App$Loaded(
												_user$project$App$Link(pageModel))
										}),
									_elm_lang$core$Platform_Cmd$batch(
										{
											ctor: '::',
											_0: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Types$LinkMsg, cmd),
											_1: {
												ctor: '::',
												_0: newCmds,
												_1: {ctor: '[]'}
											}
										}));
							case 'NotFound':
								break _v13_4;
							default:
								break _v13_5;
						}
					case 'LoginMsg':
						switch (_p22._1.ctor) {
							case 'Login':
								var _p25 = A2(_user$project$Page_Login$update, _p22._0._0, _p22._1._0);
								var pageModel = _p25._0._0;
								var cmd = _p25._0._1;
								var msgFromPage = _p25._1;
								var newModel = function () {
									var _p26 = msgFromPage;
									switch (_p26.ctor) {
										case 'NoOp':
											return model;
										case 'SetSocketConnect':
											var globalState = model.globalState;
											return _elm_lang$core$Native_Utils.update(
												model,
												{
													globalState: _elm_lang$core$Native_Utils.update(
														globalState,
														{
															connected: _p26._0,
															loaderStatus: _elm_lang$core$Maybe$Just(_user$project$Data_Loader$Info),
															currentDatetime: model.globalState.currentDatetime,
															alert: model.globalState.alert,
															debugLevel: model.globalState.debugLevel,
															windowSize: model.globalState.windowSize
														})
												});
										case 'Unauthorized':
											var globalState = model.globalState;
											return _elm_lang$core$Native_Utils.update(
												model,
												{
													globalState: _elm_lang$core$Native_Utils.update(
														globalState,
														{
															connected: false,
															loaderStatus: _elm_lang$core$Maybe$Just(_user$project$Data_Loader$Error),
															currentDatetime: model.globalState.currentDatetime,
															alert: model.globalState.alert,
															debugLevel: model.globalState.debugLevel,
															windowSize: model.globalState.windowSize
														})
												});
										default:
											var globalState = model.globalState;
											var newGlobalState = _elm_lang$core$Native_Utils.update(
												globalState,
												{loaderStatus: _elm_lang$core$Maybe$Nothing});
											var session = model.session;
											var newSession = _elm_lang$core$Native_Utils.update(
												session,
												{
													user: _elm_lang$core$Maybe$Just(_p26._0)
												});
											return function (m) {
												return _elm_lang$core$Native_Utils.update(
													m,
													{globalState: newGlobalState});
											}(
												function (m) {
													return _elm_lang$core$Native_Utils.update(
														m,
														{session: newSession});
												}(model));
									}
								}();
								return A2(
									_user$project$Util_ops['=>'],
									_elm_lang$core$Native_Utils.update(
										newModel,
										{
											pageState: _user$project$App$Loaded(
												_user$project$App$Login(pageModel))
										}),
									_elm_lang$core$Platform_Cmd$batch(
										{
											ctor: '::',
											_0: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Types$LoginMsg, cmd),
											_1: {ctor: '[]'}
										}));
							case 'NotFound':
								break _v13_4;
							default:
								break _v13_5;
						}
					case 'AdministrationSecurityMsg':
						switch (_p22._1.ctor) {
							case 'AdministrationSecurity':
								var _p27 = A2(_user$project$Page_Administration_Security$update, _p22._0._0, _p22._1._0);
								var pageModel = _p27._0._0;
								var cmd = _p27._0._1;
								var msgFromPage = _p27._1;
								return A2(
									_user$project$Util_ops['=>'],
									_elm_lang$core$Native_Utils.update(
										model,
										{
											pageState: _user$project$App$Loaded(
												_user$project$App$AdministrationSecurity(pageModel))
										}),
									_elm_lang$core$Platform_Cmd$batch(
										{
											ctor: '::',
											_0: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Types$AdministrationSecurityMsg, cmd),
											_1: {ctor: '[]'}
										}));
							case 'NotFound':
								break _v13_4;
							default:
								break _v13_5;
						}
					default:
						if (_p22._1.ctor === 'NotFound') {
							break _v13_4;
						} else {
							break _v13_5;
						}
				}
			} while(false);
			return A2(_user$project$Util_ops['=>'], model, _elm_lang$core$Platform_Cmd$none);
		} while(false);
		return A2(_user$project$Util_ops['=>'], model, _elm_lang$core$Platform_Cmd$none);
	});
var _user$project$App$update = F2(
	function (msg, model) {
		var _p28 = msg;
		_v15_11:
		do {
			switch (_p28.ctor) {
				case 'GetCurrentDateTime':
					var currentGlobalState = model.globalState;
					var updatedGlobalState = _elm_lang$core$Native_Utils.update(
						currentGlobalState,
						{
							currentDatetime: _elm_lang$core$Maybe$Just(_p28._0)
						});
					return A2(
						_user$project$Util_ops['=>'],
						_elm_lang$core$Native_Utils.update(
							model,
							{globalState: updatedGlobalState}),
						_elm_lang$core$Platform_Cmd$none);
				case 'NavbarMsg':
					return A2(_user$project$App$updateNavbar, _p28._0, model);
				case 'WindowSize':
					var currentGlobalState = model.globalState;
					var updatedGlobalState = _elm_lang$core$Native_Utils.update(
						currentGlobalState,
						{windowSize: _p28._0});
					return A2(
						_user$project$Util_ops['=>'],
						_elm_lang$core$Native_Utils.update(
							model,
							{globalState: updatedGlobalState}),
						_elm_lang$core$Platform_Cmd$none);
				case 'SocketClosedAbnormally':
					return A2(_user$project$Util_ops['=>'], model, _elm_lang$core$Platform_Cmd$none);
				case 'ShowAlert':
					var _p30 = _p28._0;
					var time = 10 * _elm_lang$core$Time$second;
					var alertDissmissCmd = A2(
						_elm_lang$core$Task$perform,
						function (_p29) {
							return _user$project$Types$HideAlert(_p30);
						},
						_elm_lang$core$Process$sleep(time));
					return A2(
						_user$project$Util_ops['=>'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								globalState: A2(
									_user$project$App$updateAlert,
									model.globalState,
									_elm_lang$core$Maybe$Just(
										A2(_user$project$Data_Alert$Alert, _p30, _p28._1)))
							}),
						alertDissmissCmd);
				case 'HideAlert':
					var alert = A2(
						_elm_lang$core$Maybe$andThen,
						function (alert) {
							return _elm_lang$core$Native_Utils.eq(_p28._0, alert.id) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(alert);
						},
						model.globalState.alert);
					return A2(
						_user$project$Util_ops['=>'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								globalState: A2(_user$project$App$updateAlert, model.globalState, alert)
							}),
						_elm_lang$core$Platform_Cmd$none);
				case 'QueueAlert':
					var _p34 = _p28._0;
					var postDelayed = A2(
						_elm_lang$core$Task$perform,
						function (_p31) {
							return _user$project$Types$QueueAlert(_p34);
						},
						_elm_lang$core$Process$sleep(0.5 * _elm_lang$core$Time$second));
					var showAlert = A2(
						_elm_lang$core$Random$generate,
						function (newId) {
							return A2(_user$project$Types$ShowAlert, newId, _p34);
						},
						A2(_elm_lang$core$Random$int, _elm_lang$core$Random$minInt, _elm_lang$core$Random$maxInt));
					var _p32 = function () {
						var _p33 = model.globalState.alert;
						if (_p33.ctor === 'Nothing') {
							return A2(_user$project$Util_ops['=>'], model, showAlert);
						} else {
							return A2(
								_user$project$Util_ops['=>'],
								_elm_lang$core$Tuple$first(
									A2(
										_user$project$App$update,
										_user$project$Types$HideAlert(_p33._0.id),
										model)),
								postDelayed);
						}
					}();
					var newModel = _p32._0;
					var alertCommands = _p32._1;
					return A2(_user$project$Util_ops['=>'], newModel, alertCommands);
				case 'LoginMsg':
					if (_p28._0.ctor === 'ReceiveUnauthorizedMessage') {
						var _p35 = model.pageState;
						if ((_p35.ctor === 'Loaded') && (_p35._0.ctor === 'Login')) {
							return A3(_user$project$App$updatePage, _p35._0, msg, model);
						} else {
							return A2(
								_user$project$Util_ops['=>'],
								model,
								_elm_lang$navigation$Navigation$modifyUrl('#logout'));
						}
					} else {
						break _v15_11;
					}
				case 'LocalStorageChanged':
					if (_p28._0.ctor === 'Ok') {
						return A2(_user$project$Util_ops['=>'], model, _elm_lang$core$Platform_Cmd$none);
					} else {
						return A2(_user$project$Util_ops['=>'], model, _elm_lang$core$Platform_Cmd$none);
					}
				case 'ChannelJoinError':
					return _user$project$App$permissionErrored(model);
				default:
					break _v15_11;
			}
		} while(false);
		return A3(
			_user$project$App$updatePage,
			_user$project$App$getPage(model.pageState),
			msg,
			model);
	});
var _user$project$App$main = A2(
	_elm_lang$navigation$Navigation$programWithFlags,
	function (_p36) {
		return _user$project$Types$SetRoute(
			_user$project$Route$fromLocation(_p36));
	},
	{init: _user$project$App$init, view: _user$project$App$view, update: _user$project$App$update, subscriptions: _user$project$App$subscriptions})(
	A2(
		_elm_lang$core$Json_Decode$andThen,
		function (currentTimestamp) {
			return A2(
				_elm_lang$core$Json_Decode$andThen,
				function (userData) {
					return _elm_lang$core$Json_Decode$succeed(
						{currentTimestamp: currentTimestamp, userData: userData});
				},
				A2(_elm_lang$core$Json_Decode$field, 'userData', _elm_lang$core$Json_Decode$value));
		},
		A2(_elm_lang$core$Json_Decode$field, 'currentTimestamp', _elm_lang$core$Json_Decode$float)));

var Elm = {};
Elm['App'] = Elm['App'] || {};
if (typeof _user$project$App$main !== 'undefined') {
    _user$project$App$main(Elm['App'], 'App', {"types":{"unions":{"Page.Administration.Security.Msg":{"args":[],"tags":{"AddSetBit":["Page.Administration.Security.SetName"],"AddSetToRole":["Page.Administration.Security.SetName","Page.Administration.Security.RoleName"],"RemoveAppPermSet":["Page.Administration.Security.SetName"],"RemoveAppPermBit":["String","Data.Security.ApplicationPermissions.Permission"],"SearchRoleName":["Page.Administration.Security.RoleName"],"DeleteRole":["Page.Administration.Security.RoleName"],"AddBit":["Page.Administration.Security.RoleName","Page.Administration.Security.SetName","Page.Administration.Security.BitName"],"SearchBitName":["Page.Administration.Security.SetName","Page.Administration.Security.BitName"],"Debounce":["Control.Control Page.Administration.Security.Msg"],"NoOption":[],"ReceiveAppRoles":["Json.Decode.Value"],"AddRole":["Page.Administration.Security.RoleName"],"AddAppPermSet":["Page.Administration.Security.SetName"],"SearchRoleSet":["Page.Administration.Security.RoleName","Page.Administration.Security.SetName"],"ReceiveAppPermissionSets":["Json.Decode.Value"],"SaveAppPermSets":[],"SearchSetName":["Page.Administration.Security.SetName"],"TabMsg":["Bootstrap.Tab.State"],"SaveRoles":[],"DropSetFromRole":["Page.Administration.Security.RoleName","Page.Administration.Security.SetName"],"AccordionMsg":["Bootstrap.Accordion.State"],"RemoveBit":["Page.Administration.Security.RoleName","Page.Administration.Security.SetName","Page.Administration.Security.BitName"]}},"Bootstrap.Navbar.Visibility":{"args":[],"tags":{"AnimatingDown":[],"StartDown":[],"StartUp":[],"AnimatingUp":[],"Hidden":[],"Shown":[]}},"Dict.LeafColor":{"args":[],"tags":{"LBBlack":[],"LBlack":[]}},"Data.User.Username":{"args":[],"tags":{"Username":["String"]}},"Platform.Cmd.Cmd":{"args":["msg"],"tags":{"Cmd":[]}},"Bootstrap.Tab.State":{"args":[],"tags":{"State":["{ activeTab : Maybe.Maybe String , visibility : Bootstrap.Tab.Visibility }"]}},"Bootstrap.Accordion.State":{"args":[],"tags":{"State":["Dict.Dict String Bootstrap.Accordion.CardState"]}},"Json.Encode.Value":{"args":[],"tags":{"Value":[]}},"Page.Login.FormInput":{"args":[],"tags":{"CacheUsername":[],"Username":[],"Pin":[],"Password":[]}},"Data.AuthToken.AuthToken":{"args":[],"tags":{"AuthToken":["String"]}},"Bootstrap.Tab.Visibility":{"args":[],"tags":{"Start":[],"Showing":[],"Hidden":[]}},"Dict.Dict":{"args":["k","v"],"tags":{"RBNode_elm_builtin":["Dict.NColor","k","v","Dict.Dict k v","Dict.Dict k v"],"RBEmpty_elm_builtin":["Dict.LeafColor"]}},"Date.Date":{"args":[],"tags":{"Date":[]}},"Route.Route":{"args":[],"tags":{"Logout":[],"Link":["String"],"Main":[],"AdministrationSecurity":[],"Login":[]}},"Data.Link.Action":{"args":[],"tags":{"OpenSupportTicket":["Float"],"Unknown":[]}},"Maybe.Maybe":{"args":["a"],"tags":{"Just":["a"],"Nothing":[]}},"State.State":{"args":["msg"],"tags":{"State":["Int","Maybe.Maybe msg"]}},"Page.Demo.Form.Msg":{"args":[],"tags":{"UpdateField":["Page.Demo.Form.FieldId","String"],"NoOption":[]}},"Types.Msg":{"args":[],"tags":{"QueueAlert":["Data.Alert.AlertType"],"LoginMsg":["Page.Login.Msg"],"WindowEvent":[],"SetRoute":["Maybe.Maybe Route.Route"],"InitUserData":["Data.User.User"],"HideAlert":["Int"],"LocalStorageChanged":["Result.Result String Data.LocalStorageChange.Change"],"NavbarMsg":["Bootstrap.Navbar.State"],"SetSocketConnect":["Bool"],"LinkMsg":["Page.Link.Msg"],"WindowSize":["Window.Size"],"DemoFormMsg":["Page.Demo.Form.Msg"],"Unauthorized":[],"SocketClosedAbnormally":[],"MainMsg":["Page.Main.Msg"],"ShowAlert":["Int","Data.Alert.AlertType"],"GetCurrentDateTime":["Date.Date"],"NoOp":[],"ChannelJoinError":["Json.Decode.Value"],"ToDatePicker":[],"AdministrationSecurityMsg":["Page.Administration.Security.Msg"]}},"Bootstrap.Accordion.Visibility":{"args":[],"tags":{"AnimatingDown":[],"StartDown":[],"StartUp":[],"AnimatingUp":[],"Hidden":[],"Shown":[]}},"Page.Demo.Form.FieldId":{"args":[],"tags":{"TestField8":[],"TestField3":[],"TestField4":[],"TestField5":[],"TestField6":[],"TestField1":[],"TestField7":[],"TestField2":[]}},"Dict.NColor":{"args":[],"tags":{"BBlack":[],"Red":[],"NBlack":[],"Black":[]}},"Page.Link.Msg":{"args":[],"tags":{"NoOption":[],"Dispatch":["Data.Link.Action"]}},"Bootstrap.Navbar.DropdownStatus":{"args":[],"tags":{"ListenClicks":[],"Closed":[],"Open":[]}},"Bootstrap.Navbar.State":{"args":[],"tags":{"State":["Bootstrap.Navbar.VisibilityState"]}},"Data.Alert.AlertType":{"args":[],"tags":{"Basic":["String"],"Error":["String"],"Success":["String"],"Warning":["String"],"Danger":["String"],"Info":["String"]}},"Result.Result":{"args":["error","value"],"tags":{"Ok":["value"],"Err":["error"]}},"Page.Main.Msg":{"args":[],"tags":{"NoOption":[]}},"Page.Login.Msg":{"args":[],"tags":{"ReceiveLogoutMessage":["Json.Decode.Value"],"GetCachedUsername":["Ports.CacheData"],"ToggleCacheUsername":[],"ReceiveUnauthorizedMessage":["Json.Decode.Value"],"UpdateFormData":["Page.Login.FormInput","String"],"GetSecurityToken":["Ports.GuardianToken"],"ReceiveLoginMessage":["Json.Decode.Value"],"JoinLogin":[]}}},"aliases":{"Bootstrap.Navbar.VisibilityState":{"args":[],"type":"{ visibility : Bootstrap.Navbar.Visibility , height : Maybe.Maybe Float , windowSize : Maybe.Maybe Window.Size , dropdowns : Dict.Dict String Bootstrap.Navbar.DropdownStatus }"},"Control.State":{"args":["msg"],"type":"State.State msg"},"Control.Control":{"args":["msg"],"type":"Control.State msg -> ( Control.State msg, Platform.Cmd.Cmd msg )"},"Page.Administration.Security.RoleName":{"args":[],"type":"String"},"Bootstrap.Accordion.CardState":{"args":[],"type":"{ visibility : Bootstrap.Accordion.Visibility , height : Maybe.Maybe Float }"},"Data.LocalStorageChange.Change":{"args":[],"type":"{ key : Maybe.Maybe String , newValue : Maybe.Maybe String , oldValue : Maybe.Maybe String , url : String }"},"Ports.GuardianToken":{"args":[],"type":"{ guardian_token : String }"},"Window.Size":{"args":[],"type":"{ width : Int, height : Int }"},"Json.Decode.Value":{"args":[],"type":"Json.Encode.Value"},"Page.Administration.Security.BitName":{"args":[],"type":"String"},"Data.User.User":{"args":[],"type":"{ id : Float , email : String , guardian_token : Data.AuthToken.AuthToken , username : Data.User.Username }"},"Page.Administration.Security.SetName":{"args":[],"type":"String"},"Ports.CacheData":{"args":[],"type":"{ username : String, cacheEnabled : Bool }"},"Data.Security.ApplicationPermissions.Permission":{"args":[],"type":"String"}},"message":"Types.Msg"},"versions":{"elm":"0.18.0"}});
}

if (typeof define === "function" && define['amd'])
{
  define([], function() { return Elm; });
  return;
}

if (typeof module === "object")
{
  module['exports'] = Elm;
  return;
}

var globalElm = this['Elm'];
if (typeof globalElm === "undefined")
{
  this['Elm'] = Elm;
  return;
}

for (var publicModule in Elm)
{
  if (publicModule in globalElm)
  {
    throw new Error('There are two Elm modules called `' + publicModule + '` on this page! Rename one of them.');
  }
  globalElm[publicModule] = Elm[publicModule];
}

}).call(this);

